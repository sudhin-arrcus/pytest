#
# ** Do not edit this file ** 
# This file was generated by the HAG
#

#R End of relative type declaration(s)

#? master type "::hag::ixnmeta::/vport/protocolStack/ptpOptions"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ptpOptions
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ptpOptions]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ptpOptions'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ptpOptions {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 0
    -ancestor-include-level-for-create 1
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name ptp_options
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands config
    -type-for-command ptpOptions
    -use-settings-for typical_stackmanager_portgroupdata_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ptpOptions
  variable AncestorIncludeLevelForCreate  1
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kOptional
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  # No control layer for this command so these methods are no-ops
  method abort        {} {}
  method abort_async  {} {}
  method start        {} {}
  method stop         {} {}
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -teardown_rate \
    -cgetmethod _g_teardown_rate -configuremethod _c_teardown_rate -validatemethod _v_teardown_rate \
    -default "" \
    -readonly false
  method _c_teardown_rate {t v} { $self _configure_basic $t $v }
  method _v_teardown_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_teardown_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_teardown_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -teardown_rate }
  
  option -override_global_rate_options \
    -cgetmethod _g_override_global_rate_options -configuremethod _c_override_global_rate_options -validatemethod _v_override_global_rate_options \
    -default "" \
    -readonly false
  method _c_override_global_rate_options {t v} { $self _configure_basic $t $v }
  method _v_override_global_rate_options {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_override_global_rate_options {t} { $self _cget_kBool $t }
  option -setup_rate \
    -cgetmethod _g_setup_rate -configuremethod _c_setup_rate -validatemethod _v_setup_rate \
    -default "" \
    -readonly false
  method _c_setup_rate {t v} { $self _configure_basic $t $v }
  method _v_setup_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_setup_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_setup_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -setup_rate }
  
  option -role \
    -cgetmethod _g_role -configuremethod _c_role -validatemethod _v_role \
    -default "" \
    -readonly false
  method _c_role {t v} { $self _configure_basic $t $v }
  method _v_role {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_role {t} { $self _cget_basic $t }
  # multiplier 
  method _m_role {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -role }
  
  option -max_outstanding \
    -cgetmethod _g_max_outstanding -configuremethod _c_max_outstanding -validatemethod _v_max_outstanding \
    -default "" \
    -readonly false
  method _c_max_outstanding {t v} { $self _configure_basic $t $v }
  method _v_max_outstanding {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_max_outstanding {t} { $self _cget_basic $t }
  # multiplier 
  method _m_max_outstanding {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -max_outstanding }
  
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -object_id objectId
    -teardown_rate teardownRate
    -override_global_rate_options overrideGlobalRateOptions
    -setup_rate setupRate
    -role role
    -max_outstanding maxOutstanding
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_teardown_rate {-teardown_rate_base -teardown_rate_incr}
    _m_setup_rate {-setup_rate_base -setup_rate_incr}
    _m_role {-role_format -role_base -role_incr}
    _m_max_outstanding {-max_outstanding_base -max_outstanding_incr}
  }
}

#@ ancestors for ::hag::ixnmeta::/vport/protocolStack/ptpOptions
#@@ ancestor "::hag::ixnmeta::/vport/protocolStack"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 0
    -ancestor-include-level-for-create 1
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name ptp_options
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands config
    -type-for-command ptpOptions
    -use-settings-for typical_stackmanager_portgroupdata_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  # No control layer for this command so these methods are no-ops
  method abort        {} {}
  method abort_async  {} {}
  method start        {} {}
  method stop         {} {}
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -fcoe_client_options_object_id \
    -configuremethod _c_./fcoeClientOptions/objectId \
    -cgetmethod _g_./fcoeClientOptions/objectId \
    -readonly false
  method _c_./fcoeClientOptions/objectId {t v} { $self _configure_relative ./fcoeClientOptions -object_id $v }
  method _g_./fcoeClientOptions/objectId {t} { $self _cget_relative ./fcoeClientOptions -object_id }
  # multiplier 
  method _m_fcoe_client_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_options_object_id }
  
  option -fcoe_client_options_max_packets_per_second \
    -configuremethod _c_./fcoeClientOptions/maxPacketsPerSecond \
    -cgetmethod _g_./fcoeClientOptions/maxPacketsPerSecond \
    -readonly false
  method _c_./fcoeClientOptions/maxPacketsPerSecond {t v} { $self _configure_relative ./fcoeClientOptions -max_packets_per_second $v }
  method _g_./fcoeClientOptions/maxPacketsPerSecond {t} { $self _cget_relative ./fcoeClientOptions -max_packets_per_second }
  # multiplier 
  method _m_fcoe_client_options_max_packets_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fcoe_client_options_max_packets_per_second }
  
  option -fcoe_client_options_teardown_rate \
    -configuremethod _c_./fcoeClientOptions/teardownRate \
    -cgetmethod _g_./fcoeClientOptions/teardownRate \
    -readonly false
  method _c_./fcoeClientOptions/teardownRate {t v} { $self _configure_relative ./fcoeClientOptions -teardown_rate $v }
  method _g_./fcoeClientOptions/teardownRate {t} { $self _cget_relative ./fcoeClientOptions -teardown_rate }
  # multiplier 
  method _m_fcoe_client_options_teardown_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fcoe_client_options_teardown_rate }
  
  option -fcoe_client_options_setup_rate \
    -configuremethod _c_./fcoeClientOptions/setupRate \
    -cgetmethod _g_./fcoeClientOptions/setupRate \
    -readonly false
  method _c_./fcoeClientOptions/setupRate {t v} { $self _configure_relative ./fcoeClientOptions -setup_rate $v }
  method _g_./fcoeClientOptions/setupRate {t} { $self _cget_relative ./fcoeClientOptions -setup_rate }
  # multiplier 
  method _m_fcoe_client_options_setup_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fcoe_client_options_setup_rate }
  
  option -fcoe_client_options_override_global_rate \
    -configuremethod _c_./fcoeClientOptions/overrideGlobalRate \
    -cgetmethod _g_./fcoeClientOptions/overrideGlobalRate \
    -readonly false
  method _c_./fcoeClientOptions/overrideGlobalRate {t v} { $self _configure_relative ./fcoeClientOptions -override_global_rate $v }
  method _g_./fcoeClientOptions/overrideGlobalRate {t} { $self _cget_relative ./fcoeClientOptions -override_global_rate }
  option -fcoe_client_options_associates \
    -configuremethod _c_./fcoeClientOptions/associates \
    -cgetmethod _g_./fcoeClientOptions/associates \
    -readonly false
  method _c_./fcoeClientOptions/associates {t v} { $self _configure_relative ./fcoeClientOptions -associates $v }
  method _g_./fcoeClientOptions/associates {t} { $self _cget_relative ./fcoeClientOptions -associates }
  option -ptp_options_object_id \
    -configuremethod _c_./ptpOptions/objectId \
    -cgetmethod _g_./ptpOptions/objectId \
    -readonly false
  method _c_./ptpOptions/objectId {t v} { $self _configure_relative ./ptpOptions -object_id $v }
  method _g_./ptpOptions/objectId {t} { $self _cget_relative ./ptpOptions -object_id }
  # multiplier 
  method _m_ptp_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_options_object_id }
  
  option -ptp_options_teardown_rate \
    -configuremethod _c_./ptpOptions/teardownRate \
    -cgetmethod _g_./ptpOptions/teardownRate \
    -readonly false
  method _c_./ptpOptions/teardownRate {t v} { $self _configure_relative ./ptpOptions -teardown_rate $v }
  method _g_./ptpOptions/teardownRate {t} { $self _cget_relative ./ptpOptions -teardown_rate }
  # multiplier 
  method _m_ptp_options_teardown_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_options_teardown_rate }
  
  option -ptp_options_override_global_rate_options \
    -configuremethod _c_./ptpOptions/overrideGlobalRateOptions \
    -cgetmethod _g_./ptpOptions/overrideGlobalRateOptions \
    -readonly false
  method _c_./ptpOptions/overrideGlobalRateOptions {t v} { $self _configure_relative ./ptpOptions -override_global_rate_options $v }
  method _g_./ptpOptions/overrideGlobalRateOptions {t} { $self _cget_relative ./ptpOptions -override_global_rate_options }
  option -ptp_options_setup_rate \
    -configuremethod _c_./ptpOptions/setupRate \
    -cgetmethod _g_./ptpOptions/setupRate \
    -readonly false
  method _c_./ptpOptions/setupRate {t v} { $self _configure_relative ./ptpOptions -setup_rate $v }
  method _g_./ptpOptions/setupRate {t} { $self _cget_relative ./ptpOptions -setup_rate }
  # multiplier 
  method _m_ptp_options_setup_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_options_setup_rate }
  
  option -ptp_options_role \
    -configuremethod _c_./ptpOptions/role \
    -cgetmethod _g_./ptpOptions/role \
    -readonly false
  method _c_./ptpOptions/role {t v} { $self _configure_relative ./ptpOptions -role $v }
  method _g_./ptpOptions/role {t} { $self _cget_relative ./ptpOptions -role }
  # multiplier 
  method _m_ptp_options_role {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_options_role }
  
  option -ptp_options_max_outstanding \
    -configuremethod _c_./ptpOptions/maxOutstanding \
    -cgetmethod _g_./ptpOptions/maxOutstanding \
    -readonly false
  method _c_./ptpOptions/maxOutstanding {t v} { $self _configure_relative ./ptpOptions -max_outstanding $v }
  method _g_./ptpOptions/maxOutstanding {t} { $self _cget_relative ./ptpOptions -max_outstanding }
  # multiplier 
  method _m_ptp_options_max_outstanding {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_options_max_outstanding }
  
  option -sm_dns_options_object_id \
    -configuremethod _c_./smDnsOptions/objectId \
    -cgetmethod _g_./smDnsOptions/objectId \
    -readonly false
  method _c_./smDnsOptions/objectId {t v} { $self _configure_relative ./smDnsOptions -object_id $v }
  method _g_./smDnsOptions/objectId {t} { $self _cget_relative ./smDnsOptions -object_id }
  # multiplier 
  method _m_sm_dns_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -sm_dns_options_object_id }
  
  option -sm_dns_options_pcpu_log_level \
    -configuremethod _c_./smDnsOptions/pcpuLogLevel \
    -cgetmethod _g_./smDnsOptions/pcpuLogLevel \
    -readonly false
  method _c_./smDnsOptions/pcpuLogLevel {t v} { $self _configure_relative ./smDnsOptions -pcpu_log_level $v }
  method _g_./smDnsOptions/pcpuLogLevel {t} { $self _cget_relative ./smDnsOptions -pcpu_log_level }
  # multiplier 
  method _m_sm_dns_options_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -sm_dns_options_pcpu_log_level }
  
  option -igmp_options_object_id \
    -configuremethod _c_./igmpOptions/objectId \
    -cgetmethod _g_./igmpOptions/objectId \
    -readonly false
  method _c_./igmpOptions/objectId {t v} { $self _configure_relative ./igmpOptions -object_id $v }
  method _g_./igmpOptions/objectId {t} { $self _cget_relative ./igmpOptions -object_id }
  # multiplier 
  method _m_igmp_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_options_object_id }
  
  option -igmp_options_max_packets_per_second \
    -configuremethod _c_./igmpOptions/maxPacketsPerSecond \
    -cgetmethod _g_./igmpOptions/maxPacketsPerSecond \
    -readonly false
  method _c_./igmpOptions/maxPacketsPerSecond {t v} { $self _configure_relative ./igmpOptions -max_packets_per_second $v }
  method _g_./igmpOptions/maxPacketsPerSecond {t} { $self _cget_relative ./igmpOptions -max_packets_per_second }
  # multiplier 
  method _m_igmp_options_max_packets_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_options_max_packets_per_second }
  
  option -igmp_options_override_global_rate \
    -configuremethod _c_./igmpOptions/overrideGlobalRate \
    -cgetmethod _g_./igmpOptions/overrideGlobalRate \
    -readonly false
  method _c_./igmpOptions/overrideGlobalRate {t v} { $self _configure_relative ./igmpOptions -override_global_rate $v }
  method _g_./igmpOptions/overrideGlobalRate {t} { $self _cget_relative ./igmpOptions -override_global_rate }
  option -igmp_options_associates \
    -configuremethod _c_./igmpOptions/associates \
    -cgetmethod _g_./igmpOptions/associates \
    -readonly false
  method _c_./igmpOptions/associates {t v} { $self _configure_relative ./igmpOptions -associates $v }
  method _g_./igmpOptions/associates {t} { $self _cget_relative ./igmpOptions -associates }
  option -fcoe_fwd_options_object_id \
    -configuremethod _c_./fcoeFwdOptions/objectId \
    -cgetmethod _g_./fcoeFwdOptions/objectId \
    -readonly false
  method _c_./fcoeFwdOptions/objectId {t v} { $self _configure_relative ./fcoeFwdOptions -object_id $v }
  method _g_./fcoeFwdOptions/objectId {t} { $self _cget_relative ./fcoeFwdOptions -object_id }
  # multiplier 
  method _m_fcoe_fwd_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_fwd_options_object_id }
  
  option -fcoe_fwd_options_max_packets_per_second \
    -configuremethod _c_./fcoeFwdOptions/maxPacketsPerSecond \
    -cgetmethod _g_./fcoeFwdOptions/maxPacketsPerSecond \
    -readonly false
  method _c_./fcoeFwdOptions/maxPacketsPerSecond {t v} { $self _configure_relative ./fcoeFwdOptions -max_packets_per_second $v }
  method _g_./fcoeFwdOptions/maxPacketsPerSecond {t} { $self _cget_relative ./fcoeFwdOptions -max_packets_per_second }
  # multiplier 
  method _m_fcoe_fwd_options_max_packets_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fcoe_fwd_options_max_packets_per_second }
  
  option -fcoe_fwd_options_override_global_rate \
    -configuremethod _c_./fcoeFwdOptions/overrideGlobalRate \
    -cgetmethod _g_./fcoeFwdOptions/overrideGlobalRate \
    -readonly false
  method _c_./fcoeFwdOptions/overrideGlobalRate {t v} { $self _configure_relative ./fcoeFwdOptions -override_global_rate $v }
  method _g_./fcoeFwdOptions/overrideGlobalRate {t} { $self _cget_relative ./fcoeFwdOptions -override_global_rate }
  option -fcoe_fwd_options_unsol_discovery_tpid \
    -configuremethod _c_./fcoeFwdOptions/unsolDiscoveryTpid \
    -cgetmethod _g_./fcoeFwdOptions/unsolDiscoveryTpid \
    -readonly false
  method _c_./fcoeFwdOptions/unsolDiscoveryTpid {t v} { $self _configure_relative ./fcoeFwdOptions -unsol_discovery_tpid $v }
  method _g_./fcoeFwdOptions/unsolDiscoveryTpid {t} { $self _cget_relative ./fcoeFwdOptions -unsol_discovery_tpid }
  # multiplier 
  method _m_fcoe_fwd_options_unsol_discovery_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_fwd_options_unsol_discovery_tpid }
  
  option -ip_range_options_object_id \
    -configuremethod _c_./ipRangeOptions/objectId \
    -cgetmethod _g_./ipRangeOptions/objectId \
    -readonly false
  method _c_./ipRangeOptions/objectId {t v} { $self _configure_relative ./ipRangeOptions -object_id $v }
  method _g_./ipRangeOptions/objectId {t} { $self _cget_relative ./ipRangeOptions -object_id }
  # multiplier 
  method _m_ip_range_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_options_object_id }
  
  option -ip_range_options_ipv6_address_mode \
    -configuremethod _c_./ipRangeOptions/ipv6AddressMode \
    -cgetmethod _g_./ipRangeOptions/ipv6AddressMode \
    -readonly false
  method _c_./ipRangeOptions/ipv6AddressMode {t v} { $self _configure_relative ./ipRangeOptions -ipv6_address_mode $v }
  method _g_./ipRangeOptions/ipv6AddressMode {t} { $self _cget_relative ./ipRangeOptions -ipv6_address_mode }
  # multiplier 
  method _m_ip_range_options_ipv6_address_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_options_ipv6_address_mode }
  
  option -ip_range_options_ipv6_config_rate_enable \
    -configuremethod _c_./ipRangeOptions/ipv6ConfigRateEnable \
    -cgetmethod _g_./ipRangeOptions/ipv6ConfigRateEnable \
    -readonly false
  method _c_./ipRangeOptions/ipv6ConfigRateEnable {t v} { $self _configure_relative ./ipRangeOptions -ipv6_config_rate_enable $v }
  method _g_./ipRangeOptions/ipv6ConfigRateEnable {t} { $self _cget_relative ./ipRangeOptions -ipv6_config_rate_enable }
  option -ip_range_options_icmpv6_discard_router_advertisements \
    -configuremethod _c_./ipRangeOptions/icmpv6DiscardRouterAdvertisements \
    -cgetmethod _g_./ipRangeOptions/icmpv6DiscardRouterAdvertisements \
    -readonly false
  method _c_./ipRangeOptions/icmpv6DiscardRouterAdvertisements {t v} { $self _configure_relative ./ipRangeOptions -icmpv6_discard_router_advertisements $v }
  method _g_./ipRangeOptions/icmpv6DiscardRouterAdvertisements {t} { $self _cget_relative ./ipRangeOptions -icmpv6_discard_router_advertisements }
  option -ip_range_options_gateway_arp_request_rate \
    -configuremethod _c_./ipRangeOptions/gatewayArpRequestRate \
    -cgetmethod _g_./ipRangeOptions/gatewayArpRequestRate \
    -readonly false
  method _c_./ipRangeOptions/gatewayArpRequestRate {t v} { $self _configure_relative ./ipRangeOptions -gateway_arp_request_rate $v }
  method _g_./ipRangeOptions/gatewayArpRequestRate {t} { $self _cget_relative ./ipRangeOptions -gateway_arp_request_rate }
  # multiplier 
  method _m_ip_range_options_gateway_arp_request_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_options_gateway_arp_request_rate }
  
  option -ip_range_options_ipv6_config_rate \
    -configuremethod _c_./ipRangeOptions/ipv6ConfigRate \
    -cgetmethod _g_./ipRangeOptions/ipv6ConfigRate \
    -readonly false
  method _c_./ipRangeOptions/ipv6ConfigRate {t v} { $self _configure_relative ./ipRangeOptions -ipv6_config_rate $v }
  method _g_./ipRangeOptions/ipv6ConfigRate {t} { $self _cget_relative ./ipRangeOptions -ipv6_config_rate }
  # multiplier 
  method _m_ip_range_options_ipv6_config_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_options_ipv6_config_rate }
  
  option -ip_range_options_max_outstanding_gateway_arp_requests \
    -configuremethod _c_./ipRangeOptions/maxOutstandingGatewayArpRequests \
    -cgetmethod _g_./ipRangeOptions/maxOutstandingGatewayArpRequests \
    -readonly false
  method _c_./ipRangeOptions/maxOutstandingGatewayArpRequests {t v} { $self _configure_relative ./ipRangeOptions -max_outstanding_gateway_arp_requests $v }
  method _g_./ipRangeOptions/maxOutstandingGatewayArpRequests {t} { $self _cget_relative ./ipRangeOptions -max_outstanding_gateway_arp_requests }
  # multiplier 
  method _m_ip_range_options_max_outstanding_gateway_arp_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_options_max_outstanding_gateway_arp_requests }
  
  option -dhcpv6_pd_client_options_setup_rate_increment \
    -configuremethod _c_./dhcpv6PdClientOptions/setupRateIncrement \
    -cgetmethod _g_./dhcpv6PdClientOptions/setupRateIncrement \
    -readonly false
  method _c_./dhcpv6PdClientOptions/setupRateIncrement {t v} { $self _configure_relative ./dhcpv6PdClientOptions -setup_rate_increment $v }
  method _g_./dhcpv6PdClientOptions/setupRateIncrement {t} { $self _cget_relative ./dhcpv6PdClientOptions -setup_rate_increment }
  # multiplier 
  method _m_dhcpv6_pd_client_options_setup_rate_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_setup_rate_increment }
  
  option -dhcpv6_pd_client_options_max_outstanding_requests \
    -configuremethod _c_./dhcpv6PdClientOptions/maxOutstandingRequests \
    -cgetmethod _g_./dhcpv6PdClientOptions/maxOutstandingRequests \
    -readonly false
  method _c_./dhcpv6PdClientOptions/maxOutstandingRequests {t v} { $self _configure_relative ./dhcpv6PdClientOptions -max_outstanding_requests $v }
  method _g_./dhcpv6PdClientOptions/maxOutstandingRequests {t} { $self _cget_relative ./dhcpv6PdClientOptions -max_outstanding_requests }
  # multiplier 
  method _m_dhcpv6_pd_client_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_max_outstanding_requests }
  
  option -dhcpv6_pd_client_options_teardown_rate_initial \
    -configuremethod _c_./dhcpv6PdClientOptions/teardownRateInitial \
    -cgetmethod _g_./dhcpv6PdClientOptions/teardownRateInitial \
    -readonly false
  method _c_./dhcpv6PdClientOptions/teardownRateInitial {t v} { $self _configure_relative ./dhcpv6PdClientOptions -teardown_rate_initial $v }
  method _g_./dhcpv6PdClientOptions/teardownRateInitial {t} { $self _cget_relative ./dhcpv6PdClientOptions -teardown_rate_initial }
  # multiplier 
  method _m_dhcpv6_pd_client_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_teardown_rate_initial }
  
  option -dhcpv6_pd_client_options_setup_rate_max \
    -configuremethod _c_./dhcpv6PdClientOptions/setupRateMax \
    -cgetmethod _g_./dhcpv6PdClientOptions/setupRateMax \
    -readonly false
  method _c_./dhcpv6PdClientOptions/setupRateMax {t v} { $self _configure_relative ./dhcpv6PdClientOptions -setup_rate_max $v }
  method _g_./dhcpv6PdClientOptions/setupRateMax {t} { $self _cget_relative ./dhcpv6PdClientOptions -setup_rate_max }
  # multiplier 
  method _m_dhcpv6_pd_client_options_setup_rate_max {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_setup_rate_max }
  
  option -dhcpv6_pd_client_options_setup_rate_initial \
    -configuremethod _c_./dhcpv6PdClientOptions/setupRateInitial \
    -cgetmethod _g_./dhcpv6PdClientOptions/setupRateInitial \
    -readonly false
  method _c_./dhcpv6PdClientOptions/setupRateInitial {t v} { $self _configure_relative ./dhcpv6PdClientOptions -setup_rate_initial $v }
  method _g_./dhcpv6PdClientOptions/setupRateInitial {t} { $self _cget_relative ./dhcpv6PdClientOptions -setup_rate_initial }
  # multiplier 
  method _m_dhcpv6_pd_client_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_setup_rate_initial }
  
  option -dhcpv6_pd_client_options_associates \
    -configuremethod _c_./dhcpv6PdClientOptions/associates \
    -cgetmethod _g_./dhcpv6PdClientOptions/associates \
    -readonly false
  method _c_./dhcpv6PdClientOptions/associates {t v} { $self _configure_relative ./dhcpv6PdClientOptions -associates $v }
  method _g_./dhcpv6PdClientOptions/associates {t} { $self _cget_relative ./dhcpv6PdClientOptions -associates }
  option -dhcpv6_pd_client_options_override_global_teardown_rate \
    -configuremethod _c_./dhcpv6PdClientOptions/overrideGlobalTeardownRate \
    -cgetmethod _g_./dhcpv6PdClientOptions/overrideGlobalTeardownRate \
    -readonly false
  method _c_./dhcpv6PdClientOptions/overrideGlobalTeardownRate {t v} { $self _configure_relative ./dhcpv6PdClientOptions -override_global_teardown_rate $v }
  method _g_./dhcpv6PdClientOptions/overrideGlobalTeardownRate {t} { $self _cget_relative ./dhcpv6PdClientOptions -override_global_teardown_rate }
  option -dhcpv6_pd_client_options_max_outstanding_releases \
    -configuremethod _c_./dhcpv6PdClientOptions/maxOutstandingReleases \
    -cgetmethod _g_./dhcpv6PdClientOptions/maxOutstandingReleases \
    -readonly false
  method _c_./dhcpv6PdClientOptions/maxOutstandingReleases {t v} { $self _configure_relative ./dhcpv6PdClientOptions -max_outstanding_releases $v }
  method _g_./dhcpv6PdClientOptions/maxOutstandingReleases {t} { $self _cget_relative ./dhcpv6PdClientOptions -max_outstanding_releases }
  # multiplier 
  method _m_dhcpv6_pd_client_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_max_outstanding_releases }
  
  option -dhcpv6_pd_client_options_object_id \
    -configuremethod _c_./dhcpv6PdClientOptions/objectId \
    -cgetmethod _g_./dhcpv6PdClientOptions/objectId \
    -readonly false
  method _c_./dhcpv6PdClientOptions/objectId {t v} { $self _configure_relative ./dhcpv6PdClientOptions -object_id $v }
  method _g_./dhcpv6PdClientOptions/objectId {t} { $self _cget_relative ./dhcpv6PdClientOptions -object_id }
  # multiplier 
  method _m_dhcpv6_pd_client_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_object_id }
  
  option -dhcpv6_pd_client_options_teardown_rate_increment \
    -configuremethod _c_./dhcpv6PdClientOptions/teardownRateIncrement \
    -cgetmethod _g_./dhcpv6PdClientOptions/teardownRateIncrement \
    -readonly false
  method _c_./dhcpv6PdClientOptions/teardownRateIncrement {t v} { $self _configure_relative ./dhcpv6PdClientOptions -teardown_rate_increment $v }
  method _g_./dhcpv6PdClientOptions/teardownRateIncrement {t} { $self _cget_relative ./dhcpv6PdClientOptions -teardown_rate_increment }
  # multiplier 
  method _m_dhcpv6_pd_client_options_teardown_rate_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_teardown_rate_increment }
  
  option -dhcpv6_pd_client_options_override_global_setup_rate \
    -configuremethod _c_./dhcpv6PdClientOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./dhcpv6PdClientOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./dhcpv6PdClientOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./dhcpv6PdClientOptions -override_global_setup_rate $v }
  method _g_./dhcpv6PdClientOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./dhcpv6PdClientOptions -override_global_setup_rate }
  option -dhcpv6_pd_client_options_teardown_rate_max \
    -configuremethod _c_./dhcpv6PdClientOptions/teardownRateMax \
    -cgetmethod _g_./dhcpv6PdClientOptions/teardownRateMax \
    -readonly false
  method _c_./dhcpv6PdClientOptions/teardownRateMax {t v} { $self _configure_relative ./dhcpv6PdClientOptions -teardown_rate_max $v }
  method _g_./dhcpv6PdClientOptions/teardownRateMax {t} { $self _cget_relative ./dhcpv6PdClientOptions -teardown_rate_max }
  # multiplier 
  method _m_dhcpv6_pd_client_options_teardown_rate_max {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_pd_client_options_teardown_rate_max }
  
  option -egtp_mme_options_enable_ipdefragmentation \
    -configuremethod _c_./egtpMmeOptions/enableIPDefragmentation \
    -cgetmethod _g_./egtpMmeOptions/enableIPDefragmentation \
    -readonly false
  method _c_./egtpMmeOptions/enableIPDefragmentation {t v} { $self _configure_relative ./egtpMmeOptions -enable_ipdefragmentation $v }
  method _g_./egtpMmeOptions/enableIPDefragmentation {t} { $self _cget_relative ./egtpMmeOptions -enable_ipdefragmentation }
  option -egtp_mme_options_enable_different_teid_per_enode_b \
    -configuremethod _c_./egtpMmeOptions/enableDifferentTeidPerENodeB \
    -cgetmethod _g_./egtpMmeOptions/enableDifferentTeidPerENodeB \
    -readonly false
  method _c_./egtpMmeOptions/enableDifferentTeidPerENodeB {t v} { $self _configure_relative ./egtpMmeOptions -enable_different_teid_per_enode_b $v }
  method _g_./egtpMmeOptions/enableDifferentTeidPerENodeB {t} { $self _cget_relative ./egtpMmeOptions -enable_different_teid_per_enode_b }
  option -egtp_mme_options_override_global_rate_controls \
    -configuremethod _c_./egtpMmeOptions/overrideGlobalRateControls \
    -cgetmethod _g_./egtpMmeOptions/overrideGlobalRateControls \
    -readonly false
  method _c_./egtpMmeOptions/overrideGlobalRateControls {t v} { $self _configure_relative ./egtpMmeOptions -override_global_rate_controls $v }
  method _g_./egtpMmeOptions/overrideGlobalRateControls {t} { $self _cget_relative ./egtpMmeOptions -override_global_rate_controls }
  option -egtp_mme_options_max_outstanding_requests \
    -configuremethod _c_./egtpMmeOptions/maxOutstandingRequests \
    -cgetmethod _g_./egtpMmeOptions/maxOutstandingRequests \
    -readonly false
  method _c_./egtpMmeOptions/maxOutstandingRequests {t v} { $self _configure_relative ./egtpMmeOptions -max_outstanding_requests $v }
  method _g_./egtpMmeOptions/maxOutstandingRequests {t} { $self _cget_relative ./egtpMmeOptions -max_outstanding_requests }
  # multiplier 
  method _m_egtp_mme_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_mme_options_max_outstanding_requests }
  
  option -egtp_mme_options_teardown_rate_initial \
    -configuremethod _c_./egtpMmeOptions/teardownRateInitial \
    -cgetmethod _g_./egtpMmeOptions/teardownRateInitial \
    -readonly false
  method _c_./egtpMmeOptions/teardownRateInitial {t v} { $self _configure_relative ./egtpMmeOptions -teardown_rate_initial $v }
  method _g_./egtpMmeOptions/teardownRateInitial {t} { $self _cget_relative ./egtpMmeOptions -teardown_rate_initial }
  # multiplier 
  method _m_egtp_mme_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_mme_options_teardown_rate_initial }
  
  option -egtp_mme_options_always_include_recovery_ie \
    -configuremethod _c_./egtpMmeOptions/alwaysIncludeRecoveryIe \
    -cgetmethod _g_./egtpMmeOptions/alwaysIncludeRecoveryIe \
    -readonly false
  method _c_./egtpMmeOptions/alwaysIncludeRecoveryIe {t v} { $self _configure_relative ./egtpMmeOptions -always_include_recovery_ie $v }
  method _g_./egtpMmeOptions/alwaysIncludeRecoveryIe {t} { $self _cget_relative ./egtpMmeOptions -always_include_recovery_ie }
  option -egtp_mme_options_setup_rate_initial \
    -configuremethod _c_./egtpMmeOptions/setupRateInitial \
    -cgetmethod _g_./egtpMmeOptions/setupRateInitial \
    -readonly false
  method _c_./egtpMmeOptions/setupRateInitial {t v} { $self _configure_relative ./egtpMmeOptions -setup_rate_initial $v }
  method _g_./egtpMmeOptions/setupRateInitial {t} { $self _cget_relative ./egtpMmeOptions -setup_rate_initial }
  # multiplier 
  method _m_egtp_mme_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_mme_options_setup_rate_initial }
  
  option -egtp_mme_options_associates \
    -configuremethod _c_./egtpMmeOptions/associates \
    -cgetmethod _g_./egtpMmeOptions/associates \
    -readonly false
  method _c_./egtpMmeOptions/associates {t v} { $self _configure_relative ./egtpMmeOptions -associates $v }
  method _g_./egtpMmeOptions/associates {t} { $self _cget_relative ./egtpMmeOptions -associates }
  option -egtp_mme_options_max_outstanding_releases \
    -configuremethod _c_./egtpMmeOptions/maxOutstandingReleases \
    -cgetmethod _g_./egtpMmeOptions/maxOutstandingReleases \
    -readonly false
  method _c_./egtpMmeOptions/maxOutstandingReleases {t v} { $self _configure_relative ./egtpMmeOptions -max_outstanding_releases $v }
  method _g_./egtpMmeOptions/maxOutstandingReleases {t} { $self _cget_relative ./egtpMmeOptions -max_outstanding_releases }
  # multiplier 
  method _m_egtp_mme_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_mme_options_max_outstanding_releases }
  
  option -egtp_mme_options_pcpu_log_level \
    -configuremethod _c_./egtpMmeOptions/pcpuLogLevel \
    -cgetmethod _g_./egtpMmeOptions/pcpuLogLevel \
    -readonly false
  method _c_./egtpMmeOptions/pcpuLogLevel {t v} { $self _configure_relative ./egtpMmeOptions -pcpu_log_level $v }
  method _g_./egtpMmeOptions/pcpuLogLevel {t} { $self _cget_relative ./egtpMmeOptions -pcpu_log_level }
  # multiplier 
  method _m_egtp_mme_options_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_mme_options_pcpu_log_level }
  
  option -egtp_mme_options_object_id \
    -configuremethod _c_./egtpMmeOptions/objectId \
    -cgetmethod _g_./egtpMmeOptions/objectId \
    -readonly false
  method _c_./egtpMmeOptions/objectId {t v} { $self _configure_relative ./egtpMmeOptions -object_id $v }
  method _g_./egtpMmeOptions/objectId {t} { $self _cget_relative ./egtpMmeOptions -object_id }
  # multiplier 
  method _m_egtp_mme_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_mme_options_object_id }
  
  option -egtp_mme_options_delete_idle_bearers \
    -configuremethod _c_./egtpMmeOptions/deleteIdleBearers \
    -cgetmethod _g_./egtpMmeOptions/deleteIdleBearers \
    -readonly false
  method _c_./egtpMmeOptions/deleteIdleBearers {t v} { $self _configure_relative ./egtpMmeOptions -delete_idle_bearers $v }
  method _g_./egtpMmeOptions/deleteIdleBearers {t} { $self _cget_relative ./egtpMmeOptions -delete_idle_bearers }
  option -egtp_mme_options_s5s8_interface_type \
    -configuremethod _c_./egtpMmeOptions/s5s8InterfaceType \
    -cgetmethod _g_./egtpMmeOptions/s5s8InterfaceType \
    -readonly false
  method _c_./egtpMmeOptions/s5s8InterfaceType {t v} { $self _configure_relative ./egtpMmeOptions -s5s8_interface_type $v }
  method _g_./egtpMmeOptions/s5s8InterfaceType {t} { $self _cget_relative ./egtpMmeOptions -s5s8_interface_type }
  # multiplier 
  method _m_egtp_mme_options_s5s8_interface_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_mme_options_s5s8_interface_type }
  
  option -egtp_server_options_object_id \
    -configuremethod _c_./egtpServerOptions/objectId \
    -cgetmethod _g_./egtpServerOptions/objectId \
    -readonly false
  method _c_./egtpServerOptions/objectId {t v} { $self _configure_relative ./egtpServerOptions -object_id $v }
  method _g_./egtpServerOptions/objectId {t} { $self _cget_relative ./egtpServerOptions -object_id }
  # multiplier 
  method _m_egtp_server_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_server_options_object_id }
  
  option -egtp_server_options_enable_create_bearer_tfthack \
    -configuremethod _c_./egtpServerOptions/enableCreateBearerTFTHack \
    -cgetmethod _g_./egtpServerOptions/enableCreateBearerTFTHack \
    -readonly false
  method _c_./egtpServerOptions/enableCreateBearerTFTHack {t v} { $self _configure_relative ./egtpServerOptions -enable_create_bearer_tfthack $v }
  method _g_./egtpServerOptions/enableCreateBearerTFTHack {t} { $self _cget_relative ./egtpServerOptions -enable_create_bearer_tfthack }
  option -egtp_server_options_pcpu_log_level \
    -configuremethod _c_./egtpServerOptions/pcpuLogLevel \
    -cgetmethod _g_./egtpServerOptions/pcpuLogLevel \
    -readonly false
  method _c_./egtpServerOptions/pcpuLogLevel {t v} { $self _configure_relative ./egtpServerOptions -pcpu_log_level $v }
  method _g_./egtpServerOptions/pcpuLogLevel {t} { $self _cget_relative ./egtpServerOptions -pcpu_log_level }
  # multiplier 
  method _m_egtp_server_options_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_server_options_pcpu_log_level }
  
  option -egtp_server_options_distribute_user_plane_ips \
    -configuremethod _c_./egtpServerOptions/distributeUserPlaneIps \
    -cgetmethod _g_./egtpServerOptions/distributeUserPlaneIps \
    -readonly false
  method _c_./egtpServerOptions/distributeUserPlaneIps {t v} { $self _configure_relative ./egtpServerOptions -distribute_user_plane_ips $v }
  method _g_./egtpServerOptions/distributeUserPlaneIps {t} { $self _cget_relative ./egtpServerOptions -distribute_user_plane_ips }
  option -egtp_server_options_enable_dynamic_allocation \
    -configuremethod _c_./egtpServerOptions/enableDynamicAllocation \
    -cgetmethod _g_./egtpServerOptions/enableDynamicAllocation \
    -readonly false
  method _c_./egtpServerOptions/enableDynamicAllocation {t v} { $self _configure_relative ./egtpServerOptions -enable_dynamic_allocation $v }
  method _g_./egtpServerOptions/enableDynamicAllocation {t} { $self _cget_relative ./egtpServerOptions -enable_dynamic_allocation }
  option -egtp_server_options_publish_statistics \
    -configuremethod _c_./egtpServerOptions/publishStatistics \
    -cgetmethod _g_./egtpServerOptions/publishStatistics \
    -readonly false
  method _c_./egtpServerOptions/publishStatistics {t v} { $self _configure_relative ./egtpServerOptions -publish_statistics $v }
  method _g_./egtpServerOptions/publishStatistics {t} { $self _cget_relative ./egtpServerOptions -publish_statistics }
  option -ethernet_options_object_id \
    -configuremethod _c_./ethernetOptions/objectId \
    -cgetmethod _g_./ethernetOptions/objectId \
    -readonly false
  method _c_./ethernetOptions/objectId {t v} { $self _configure_relative ./ethernetOptions -object_id $v }
  method _g_./ethernetOptions/objectId {t} { $self _cget_relative ./ethernetOptions -object_id }
  # multiplier 
  method _m_ethernet_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ethernet_options_object_id }
  
  option -pppox_options_ipv6_global_address_mode \
    -configuremethod _c_./pppoxOptions/ipv6GlobalAddressMode \
    -cgetmethod _g_./pppoxOptions/ipv6GlobalAddressMode \
    -readonly false
  method _c_./pppoxOptions/ipv6GlobalAddressMode {t v} { $self _configure_relative ./pppoxOptions -ipv6_global_address_mode $v }
  method _g_./pppoxOptions/ipv6GlobalAddressMode {t} { $self _cget_relative ./pppoxOptions -ipv6_global_address_mode }
  # multiplier 
  method _m_pppox_options_ipv6_global_address_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pppox_options_ipv6_global_address_mode }
  
  option -pppox_options_override_global_rate_controls \
    -configuremethod _c_./pppoxOptions/overrideGlobalRateControls \
    -cgetmethod _g_./pppoxOptions/overrideGlobalRateControls \
    -readonly false
  method _c_./pppoxOptions/overrideGlobalRateControls {t v} { $self _configure_relative ./pppoxOptions -override_global_rate_controls $v }
  method _g_./pppoxOptions/overrideGlobalRateControls {t} { $self _cget_relative ./pppoxOptions -override_global_rate_controls }
  option -pppox_options_enable_per_session_stat_generation \
    -configuremethod _c_./pppoxOptions/enablePerSessionStatGeneration \
    -cgetmethod _g_./pppoxOptions/enablePerSessionStatGeneration \
    -readonly false
  method _c_./pppoxOptions/enablePerSessionStatGeneration {t v} { $self _configure_relative ./pppoxOptions -enable_per_session_stat_generation $v }
  method _g_./pppoxOptions/enablePerSessionStatGeneration {t} { $self _cget_relative ./pppoxOptions -enable_per_session_stat_generation }
  option -pppox_options_role \
    -configuremethod _c_./pppoxOptions/role \
    -cgetmethod _g_./pppoxOptions/role \
    -readonly false
  method _c_./pppoxOptions/role {t v} { $self _configure_relative ./pppoxOptions -role $v }
  method _g_./pppoxOptions/role {t} { $self _cget_relative ./pppoxOptions -role }
  # multiplier 
  method _m_pppox_options_role {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pppox_options_role }
  
  option -pppox_options_max_outstanding_requests \
    -configuremethod _c_./pppoxOptions/maxOutstandingRequests \
    -cgetmethod _g_./pppoxOptions/maxOutstandingRequests \
    -readonly false
  method _c_./pppoxOptions/maxOutstandingRequests {t v} { $self _configure_relative ./pppoxOptions -max_outstanding_requests $v }
  method _g_./pppoxOptions/maxOutstandingRequests {t} { $self _cget_relative ./pppoxOptions -max_outstanding_requests }
  # multiplier 
  method _m_pppox_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pppox_options_max_outstanding_requests }
  
  option -pppox_options_teardown_rate_initial \
    -configuremethod _c_./pppoxOptions/teardownRateInitial \
    -cgetmethod _g_./pppoxOptions/teardownRateInitial \
    -readonly false
  method _c_./pppoxOptions/teardownRateInitial {t v} { $self _configure_relative ./pppoxOptions -teardown_rate_initial $v }
  method _g_./pppoxOptions/teardownRateInitial {t} { $self _cget_relative ./pppoxOptions -teardown_rate_initial }
  # multiplier 
  method _m_pppox_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pppox_options_teardown_rate_initial }
  
  option -pppox_options_use_wait_for_completion_timeout \
    -configuremethod _c_./pppoxOptions/useWaitForCompletionTimeout \
    -cgetmethod _g_./pppoxOptions/useWaitForCompletionTimeout \
    -readonly false
  method _c_./pppoxOptions/useWaitForCompletionTimeout {t v} { $self _configure_relative ./pppoxOptions -use_wait_for_completion_timeout $v }
  method _g_./pppoxOptions/useWaitForCompletionTimeout {t} { $self _cget_relative ./pppoxOptions -use_wait_for_completion_timeout }
  option -pppox_options_associates \
    -configuremethod _c_./pppoxOptions/associates \
    -cgetmethod _g_./pppoxOptions/associates \
    -readonly false
  method _c_./pppoxOptions/associates {t v} { $self _configure_relative ./pppoxOptions -associates $v }
  method _g_./pppoxOptions/associates {t} { $self _cget_relative ./pppoxOptions -associates }
  option -pppox_options_setup_rate_initial \
    -configuremethod _c_./pppoxOptions/setupRateInitial \
    -cgetmethod _g_./pppoxOptions/setupRateInitial \
    -readonly false
  method _c_./pppoxOptions/setupRateInitial {t v} { $self _configure_relative ./pppoxOptions -setup_rate_initial $v }
  method _g_./pppoxOptions/setupRateInitial {t} { $self _cget_relative ./pppoxOptions -setup_rate_initial }
  # multiplier 
  method _m_pppox_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pppox_options_setup_rate_initial }
  
  option -pppox_options_re_connect_on_link_up \
    -configuremethod _c_./pppoxOptions/reConnectOnLinkUp \
    -cgetmethod _g_./pppoxOptions/reConnectOnLinkUp \
    -readonly false
  method _c_./pppoxOptions/reConnectOnLinkUp {t v} { $self _configure_relative ./pppoxOptions -re_connect_on_link_up $v }
  method _g_./pppoxOptions/reConnectOnLinkUp {t} { $self _cget_relative ./pppoxOptions -re_connect_on_link_up }
  option -pppox_options_max_outstanding_releases \
    -configuremethod _c_./pppoxOptions/maxOutstandingReleases \
    -cgetmethod _g_./pppoxOptions/maxOutstandingReleases \
    -readonly false
  method _c_./pppoxOptions/maxOutstandingReleases {t v} { $self _configure_relative ./pppoxOptions -max_outstanding_releases $v }
  method _g_./pppoxOptions/maxOutstandingReleases {t} { $self _cget_relative ./pppoxOptions -max_outstanding_releases }
  # multiplier 
  method _m_pppox_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pppox_options_max_outstanding_releases }
  
  option -pppox_options_ra_timeout \
    -configuremethod _c_./pppoxOptions/raTimeout \
    -cgetmethod _g_./pppoxOptions/raTimeout \
    -readonly false
  method _c_./pppoxOptions/raTimeout {t v} { $self _configure_relative ./pppoxOptions -ra_timeout $v }
  method _g_./pppoxOptions/raTimeout {t} { $self _cget_relative ./pppoxOptions -ra_timeout }
  # multiplier 
  method _m_pppox_options_ra_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pppox_options_ra_timeout }
  
  option -pppox_options_object_id \
    -configuremethod _c_./pppoxOptions/objectId \
    -cgetmethod _g_./pppoxOptions/objectId \
    -readonly false
  method _c_./pppoxOptions/objectId {t v} { $self _configure_relative ./pppoxOptions -object_id $v }
  method _g_./pppoxOptions/objectId {t} { $self _cget_relative ./pppoxOptions -object_id }
  # multiplier 
  method _m_pppox_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pppox_options_object_id }
  
  option -pppox_options_per_session_stat_file_prefix \
    -configuremethod _c_./pppoxOptions/perSessionStatFilePrefix \
    -cgetmethod _g_./pppoxOptions/perSessionStatFilePrefix \
    -readonly false
  method _c_./pppoxOptions/perSessionStatFilePrefix {t v} { $self _configure_relative ./pppoxOptions -per_session_stat_file_prefix $v }
  method _g_./pppoxOptions/perSessionStatFilePrefix {t} { $self _cget_relative ./pppoxOptions -per_session_stat_file_prefix }
  # multiplier 
  method _m_pppox_options_per_session_stat_file_prefix {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pppox_options_per_session_stat_file_prefix }
  
  option -pppox_options_wait_for_completion_timeout \
    -configuremethod _c_./pppoxOptions/waitForCompletionTimeout \
    -cgetmethod _g_./pppoxOptions/waitForCompletionTimeout \
    -readonly false
  method _c_./pppoxOptions/waitForCompletionTimeout {t v} { $self _configure_relative ./pppoxOptions -wait_for_completion_timeout $v }
  method _g_./pppoxOptions/waitForCompletionTimeout {t} { $self _cget_relative ./pppoxOptions -wait_for_completion_timeout }
  # multiplier 
  method _m_pppox_options_wait_for_completion_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pppox_options_wait_for_completion_timeout }
  
  option -pppox_options_filter_data_plane_before_l7 \
    -configuremethod _c_./pppoxOptions/filterDataPlaneBeforeL7 \
    -cgetmethod _g_./pppoxOptions/filterDataPlaneBeforeL7 \
    -readonly false
  method _c_./pppoxOptions/filterDataPlaneBeforeL7 {t v} { $self _configure_relative ./pppoxOptions -filter_data_plane_before_l7 $v }
  method _g_./pppoxOptions/filterDataPlaneBeforeL7 {t} { $self _cget_relative ./pppoxOptions -filter_data_plane_before_l7 }
  option -pppox_options_waiting_time_until_reconnect \
    -configuremethod _c_./pppoxOptions/waitingTimeUntilReconnect \
    -cgetmethod _g_./pppoxOptions/waitingTimeUntilReconnect \
    -readonly false
  method _c_./pppoxOptions/waitingTimeUntilReconnect {t v} { $self _configure_relative ./pppoxOptions -waiting_time_until_reconnect $v }
  method _g_./pppoxOptions/waitingTimeUntilReconnect {t} { $self _cget_relative ./pppoxOptions -waiting_time_until_reconnect }
  # multiplier 
  method _m_pppox_options_waiting_time_until_reconnect {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pppox_options_waiting_time_until_reconnect }
  
  option -fc_client_options_teardown_rate \
    -configuremethod _c_./fcClientOptions/teardownRate \
    -cgetmethod _g_./fcClientOptions/teardownRate \
    -readonly false
  method _c_./fcClientOptions/teardownRate {t v} { $self _configure_relative ./fcClientOptions -teardown_rate $v }
  method _g_./fcClientOptions/teardownRate {t} { $self _cget_relative ./fcClientOptions -teardown_rate }
  # multiplier 
  method _m_fc_client_options_teardown_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_client_options_teardown_rate }
  
  option -fc_client_options_b2b_rx_size \
    -configuremethod _c_./fcClientOptions/b2bRxSize \
    -cgetmethod _g_./fcClientOptions/b2bRxSize \
    -readonly false
  method _c_./fcClientOptions/b2bRxSize {t v} { $self _configure_relative ./fcClientOptions -b2b_rx_size $v }
  method _g_./fcClientOptions/b2bRxSize {t} { $self _cget_relative ./fcClientOptions -b2b_rx_size }
  # multiplier 
  method _m_fc_client_options_b2b_rx_size {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_client_options_b2b_rx_size }
  
  option -fc_client_options_rt_tov_mode \
    -configuremethod _c_./fcClientOptions/rtTovMode \
    -cgetmethod _g_./fcClientOptions/rtTovMode \
    -readonly false
  method _c_./fcClientOptions/rtTovMode {t v} { $self _configure_relative ./fcClientOptions -rt_tov_mode $v }
  method _g_./fcClientOptions/rtTovMode {t} { $self _cget_relative ./fcClientOptions -rt_tov_mode }
  # multiplier 
  method _m_fc_client_options_rt_tov_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fc_client_options_rt_tov_mode }
  
  option -fc_client_options_override_global_rate \
    -configuremethod _c_./fcClientOptions/overrideGlobalRate \
    -cgetmethod _g_./fcClientOptions/overrideGlobalRate \
    -readonly false
  method _c_./fcClientOptions/overrideGlobalRate {t v} { $self _configure_relative ./fcClientOptions -override_global_rate $v }
  method _g_./fcClientOptions/overrideGlobalRate {t} { $self _cget_relative ./fcClientOptions -override_global_rate }
  option -fc_client_options_ed_tov_mode \
    -configuremethod _c_./fcClientOptions/edTovMode \
    -cgetmethod _g_./fcClientOptions/edTovMode \
    -readonly false
  method _c_./fcClientOptions/edTovMode {t v} { $self _configure_relative ./fcClientOptions -ed_tov_mode $v }
  method _g_./fcClientOptions/edTovMode {t} { $self _cget_relative ./fcClientOptions -ed_tov_mode }
  # multiplier 
  method _m_fc_client_options_ed_tov_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fc_client_options_ed_tov_mode }
  
  option -fc_client_options_rt_tov \
    -configuremethod _c_./fcClientOptions/rtTov \
    -cgetmethod _g_./fcClientOptions/rtTov \
    -readonly false
  method _c_./fcClientOptions/rtTov {t v} { $self _configure_relative ./fcClientOptions -rt_tov $v }
  method _g_./fcClientOptions/rtTov {t} { $self _cget_relative ./fcClientOptions -rt_tov }
  # multiplier 
  method _m_fc_client_options_rt_tov {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_client_options_rt_tov }
  
  option -fc_client_options_associates \
    -configuremethod _c_./fcClientOptions/associates \
    -cgetmethod _g_./fcClientOptions/associates \
    -readonly false
  method _c_./fcClientOptions/associates {t v} { $self _configure_relative ./fcClientOptions -associates $v }
  method _g_./fcClientOptions/associates {t} { $self _cget_relative ./fcClientOptions -associates }
  option -fc_client_options_b2b_credit \
    -configuremethod _c_./fcClientOptions/b2bCredit \
    -cgetmethod _g_./fcClientOptions/b2bCredit \
    -readonly false
  method _c_./fcClientOptions/b2bCredit {t v} { $self _configure_relative ./fcClientOptions -b2b_credit $v }
  method _g_./fcClientOptions/b2bCredit {t} { $self _cget_relative ./fcClientOptions -b2b_credit }
  # multiplier 
  method _m_fc_client_options_b2b_credit {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_client_options_b2b_credit }
  
  option -fc_client_options_ed_tov \
    -configuremethod _c_./fcClientOptions/edTov \
    -cgetmethod _g_./fcClientOptions/edTov \
    -readonly false
  method _c_./fcClientOptions/edTov {t v} { $self _configure_relative ./fcClientOptions -ed_tov $v }
  method _g_./fcClientOptions/edTov {t} { $self _cget_relative ./fcClientOptions -ed_tov }
  # multiplier 
  method _m_fc_client_options_ed_tov {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_client_options_ed_tov }
  
  option -fc_client_options_max_packets_per_second \
    -configuremethod _c_./fcClientOptions/maxPacketsPerSecond \
    -cgetmethod _g_./fcClientOptions/maxPacketsPerSecond \
    -readonly false
  method _c_./fcClientOptions/maxPacketsPerSecond {t v} { $self _configure_relative ./fcClientOptions -max_packets_per_second $v }
  method _g_./fcClientOptions/maxPacketsPerSecond {t} { $self _cget_relative ./fcClientOptions -max_packets_per_second }
  # multiplier 
  method _m_fc_client_options_max_packets_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_client_options_max_packets_per_second }
  
  option -fc_client_options_object_id \
    -configuremethod _c_./fcClientOptions/objectId \
    -cgetmethod _g_./fcClientOptions/objectId \
    -readonly false
  method _c_./fcClientOptions/objectId {t v} { $self _configure_relative ./fcClientOptions -object_id $v }
  method _g_./fcClientOptions/objectId {t} { $self _cget_relative ./fcClientOptions -object_id }
  # multiplier 
  method _m_fc_client_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fc_client_options_object_id }
  
  option -fc_client_options_setup_rate \
    -configuremethod _c_./fcClientOptions/setupRate \
    -cgetmethod _g_./fcClientOptions/setupRate \
    -readonly false
  method _c_./fcClientOptions/setupRate {t v} { $self _configure_relative ./fcClientOptions -setup_rate $v }
  method _g_./fcClientOptions/setupRate {t} { $self _cget_relative ./fcClientOptions -setup_rate }
  # multiplier 
  method _m_fc_client_options_setup_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_client_options_setup_rate }
  
  option -dhcp_hosts_options_object_id \
    -configuremethod _c_./dhcpHostsOptions/objectId \
    -cgetmethod _g_./dhcpHostsOptions/objectId \
    -readonly false
  method _c_./dhcpHostsOptions/objectId {t v} { $self _configure_relative ./dhcpHostsOptions -object_id $v }
  method _g_./dhcpHostsOptions/objectId {t} { $self _cget_relative ./dhcpHostsOptions -object_id }
  # multiplier 
  method _m_dhcp_hosts_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dhcp_hosts_options_object_id }
  
  option -egtp_sgw_options_object_id \
    -configuremethod _c_./egtpSgwOptions/objectId \
    -cgetmethod _g_./egtpSgwOptions/objectId \
    -readonly false
  method _c_./egtpSgwOptions/objectId {t v} { $self _configure_relative ./egtpSgwOptions -object_id $v }
  method _g_./egtpSgwOptions/objectId {t} { $self _cget_relative ./egtpSgwOptions -object_id }
  # multiplier 
  method _m_egtp_sgw_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_sgw_options_object_id }
  
  option -egtp_sgw_options_enable_create_bearer_tfthack \
    -configuremethod _c_./egtpSgwOptions/enableCreateBearerTFTHack \
    -cgetmethod _g_./egtpSgwOptions/enableCreateBearerTFTHack \
    -readonly false
  method _c_./egtpSgwOptions/enableCreateBearerTFTHack {t v} { $self _configure_relative ./egtpSgwOptions -enable_create_bearer_tfthack $v }
  method _g_./egtpSgwOptions/enableCreateBearerTFTHack {t} { $self _cget_relative ./egtpSgwOptions -enable_create_bearer_tfthack }
  option -egtp_sgw_options_pcpu_log_level \
    -configuremethod _c_./egtpSgwOptions/pcpuLogLevel \
    -cgetmethod _g_./egtpSgwOptions/pcpuLogLevel \
    -readonly false
  method _c_./egtpSgwOptions/pcpuLogLevel {t v} { $self _configure_relative ./egtpSgwOptions -pcpu_log_level $v }
  method _g_./egtpSgwOptions/pcpuLogLevel {t} { $self _cget_relative ./egtpSgwOptions -pcpu_log_level }
  # multiplier 
  method _m_egtp_sgw_options_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_sgw_options_pcpu_log_level }
  
  option -egtp_sgw_options_distribute_user_plane_ips \
    -configuremethod _c_./egtpSgwOptions/distributeUserPlaneIps \
    -cgetmethod _g_./egtpSgwOptions/distributeUserPlaneIps \
    -readonly false
  method _c_./egtpSgwOptions/distributeUserPlaneIps {t v} { $self _configure_relative ./egtpSgwOptions -distribute_user_plane_ips $v }
  method _g_./egtpSgwOptions/distributeUserPlaneIps {t} { $self _cget_relative ./egtpSgwOptions -distribute_user_plane_ips }
  option -egtp_sgw_options_enable_dynamic_allocation \
    -configuremethod _c_./egtpSgwOptions/enableDynamicAllocation \
    -cgetmethod _g_./egtpSgwOptions/enableDynamicAllocation \
    -readonly false
  method _c_./egtpSgwOptions/enableDynamicAllocation {t v} { $self _configure_relative ./egtpSgwOptions -enable_dynamic_allocation $v }
  method _g_./egtpSgwOptions/enableDynamicAllocation {t} { $self _cget_relative ./egtpSgwOptions -enable_dynamic_allocation }
  option -egtp_sgw_options_publish_statistics \
    -configuremethod _c_./egtpSgwOptions/publishStatistics \
    -cgetmethod _g_./egtpSgwOptions/publishStatistics \
    -readonly false
  method _c_./egtpSgwOptions/publishStatistics {t v} { $self _configure_relative ./egtpSgwOptions -publish_statistics $v }
  method _g_./egtpSgwOptions/publishStatistics {t} { $self _cget_relative ./egtpSgwOptions -publish_statistics }
  option -egtp_sgw_options_fake_dual_stack \
    -configuremethod _c_./egtpSgwOptions/fakeDualStack \
    -cgetmethod _g_./egtpSgwOptions/fakeDualStack \
    -readonly false
  method _c_./egtpSgwOptions/fakeDualStack {t v} { $self _configure_relative ./egtpSgwOptions -fake_dual_stack $v }
  method _g_./egtpSgwOptions/fakeDualStack {t} { $self _cget_relative ./egtpSgwOptions -fake_dual_stack }
  option -amt_options_object_id \
    -configuremethod _c_./amtOptions/objectId \
    -cgetmethod _g_./amtOptions/objectId \
    -readonly false
  method _c_./amtOptions/objectId {t v} { $self _configure_relative ./amtOptions -object_id $v }
  method _g_./amtOptions/objectId {t} { $self _cget_relative ./amtOptions -object_id }
  # multiplier 
  method _m_amt_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_options_object_id }
  
  option -amt_options_teardown_rate \
    -configuremethod _c_./amtOptions/teardownRate \
    -cgetmethod _g_./amtOptions/teardownRate \
    -readonly false
  method _c_./amtOptions/teardownRate {t v} { $self _configure_relative ./amtOptions -teardown_rate $v }
  method _g_./amtOptions/teardownRate {t} { $self _cget_relative ./amtOptions -teardown_rate }
  # multiplier 
  method _m_amt_options_teardown_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_options_teardown_rate }
  
  option -amt_options_tunnel_originate \
    -configuremethod _c_./amtOptions/tunnelOriginate \
    -cgetmethod _g_./amtOptions/tunnelOriginate \
    -readonly false
  method _c_./amtOptions/tunnelOriginate {t v} { $self _configure_relative ./amtOptions -tunnel_originate $v }
  method _g_./amtOptions/tunnelOriginate {t} { $self _cget_relative ./amtOptions -tunnel_originate }
  # multiplier 
  method _m_amt_options_tunnel_originate {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_options_tunnel_originate }
  
  option -amt_options_override_global_teardown_rate \
    -configuremethod _c_./amtOptions/overrideGlobalTeardownRate \
    -cgetmethod _g_./amtOptions/overrideGlobalTeardownRate \
    -readonly false
  method _c_./amtOptions/overrideGlobalTeardownRate {t v} { $self _configure_relative ./amtOptions -override_global_teardown_rate $v }
  method _g_./amtOptions/overrideGlobalTeardownRate {t} { $self _cget_relative ./amtOptions -override_global_teardown_rate }
  option -amt_options_max_outstanding_sessions \
    -configuremethod _c_./amtOptions/maxOutstandingSessions \
    -cgetmethod _g_./amtOptions/maxOutstandingSessions \
    -readonly false
  method _c_./amtOptions/maxOutstandingSessions {t v} { $self _configure_relative ./amtOptions -max_outstanding_sessions $v }
  method _g_./amtOptions/maxOutstandingSessions {t} { $self _cget_relative ./amtOptions -max_outstanding_sessions }
  # multiplier 
  method _m_amt_options_max_outstanding_sessions {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_options_max_outstanding_sessions }
  
  option -amt_options_setup_rate \
    -configuremethod _c_./amtOptions/setupRate \
    -cgetmethod _g_./amtOptions/setupRate \
    -readonly false
  method _c_./amtOptions/setupRate {t v} { $self _configure_relative ./amtOptions -setup_rate $v }
  method _g_./amtOptions/setupRate {t} { $self _cget_relative ./amtOptions -setup_rate }
  # multiplier 
  method _m_amt_options_setup_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_options_setup_rate }
  
  option -amt_options_override_global_setup_rate \
    -configuremethod _c_./amtOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./amtOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./amtOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./amtOptions -override_global_setup_rate $v }
  method _g_./amtOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./amtOptions -override_global_setup_rate }
  option -dhcpv6_server_options_object_id \
    -configuremethod _c_./dhcpv6ServerOptions/objectId \
    -cgetmethod _g_./dhcpv6ServerOptions/objectId \
    -readonly false
  method _c_./dhcpv6ServerOptions/objectId {t v} { $self _configure_relative ./dhcpv6ServerOptions -object_id $v }
  method _g_./dhcpv6ServerOptions/objectId {t} { $self _cget_relative ./dhcpv6ServerOptions -object_id }
  # multiplier 
  method _m_dhcpv6_server_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dhcpv6_server_options_object_id }
  
  option -dhcpv6_server_options_teardown_rate_increment \
    -configuremethod _c_./dhcpv6ServerOptions/teardownRateIncrement \
    -cgetmethod _g_./dhcpv6ServerOptions/teardownRateIncrement \
    -readonly false
  method _c_./dhcpv6ServerOptions/teardownRateIncrement {t v} { $self _configure_relative ./dhcpv6ServerOptions -teardown_rate_increment $v }
  method _g_./dhcpv6ServerOptions/teardownRateIncrement {t} { $self _cget_relative ./dhcpv6ServerOptions -teardown_rate_increment }
  # multiplier 
  method _m_dhcpv6_server_options_teardown_rate_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_teardown_rate_increment }
  
  option -dhcpv6_server_options_override_global_teardown_rate \
    -configuremethod _c_./dhcpv6ServerOptions/overrideGlobalTeardownRate \
    -cgetmethod _g_./dhcpv6ServerOptions/overrideGlobalTeardownRate \
    -readonly false
  method _c_./dhcpv6ServerOptions/overrideGlobalTeardownRate {t v} { $self _configure_relative ./dhcpv6ServerOptions -override_global_teardown_rate $v }
  method _g_./dhcpv6ServerOptions/overrideGlobalTeardownRate {t} { $self _cget_relative ./dhcpv6ServerOptions -override_global_teardown_rate }
  option -dhcpv6_server_options_max_outstanding_releases \
    -configuremethod _c_./dhcpv6ServerOptions/maxOutstandingReleases \
    -cgetmethod _g_./dhcpv6ServerOptions/maxOutstandingReleases \
    -readonly false
  method _c_./dhcpv6ServerOptions/maxOutstandingReleases {t v} { $self _configure_relative ./dhcpv6ServerOptions -max_outstanding_releases $v }
  method _g_./dhcpv6ServerOptions/maxOutstandingReleases {t} { $self _cget_relative ./dhcpv6ServerOptions -max_outstanding_releases }
  # multiplier 
  method _m_dhcpv6_server_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_max_outstanding_releases }
  
  option -dhcpv6_server_options_teardown_rate_max \
    -configuremethod _c_./dhcpv6ServerOptions/teardownRateMax \
    -cgetmethod _g_./dhcpv6ServerOptions/teardownRateMax \
    -readonly false
  method _c_./dhcpv6ServerOptions/teardownRateMax {t v} { $self _configure_relative ./dhcpv6ServerOptions -teardown_rate_max $v }
  method _g_./dhcpv6ServerOptions/teardownRateMax {t} { $self _cget_relative ./dhcpv6ServerOptions -teardown_rate_max }
  # multiplier 
  method _m_dhcpv6_server_options_teardown_rate_max {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_teardown_rate_max }
  
  option -dhcpv6_server_options_teardown_rate_initial \
    -configuremethod _c_./dhcpv6ServerOptions/teardownRateInitial \
    -cgetmethod _g_./dhcpv6ServerOptions/teardownRateInitial \
    -readonly false
  method _c_./dhcpv6ServerOptions/teardownRateInitial {t v} { $self _configure_relative ./dhcpv6ServerOptions -teardown_rate_initial $v }
  method _g_./dhcpv6ServerOptions/teardownRateInitial {t} { $self _cget_relative ./dhcpv6ServerOptions -teardown_rate_initial }
  # multiplier 
  method _m_dhcpv6_server_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_teardown_rate_initial }
  
  option -dhcpv6_server_options_max_outstanding_requests \
    -configuremethod _c_./dhcpv6ServerOptions/maxOutstandingRequests \
    -cgetmethod _g_./dhcpv6ServerOptions/maxOutstandingRequests \
    -readonly false
  method _c_./dhcpv6ServerOptions/maxOutstandingRequests {t v} { $self _configure_relative ./dhcpv6ServerOptions -max_outstanding_requests $v }
  method _g_./dhcpv6ServerOptions/maxOutstandingRequests {t} { $self _cget_relative ./dhcpv6ServerOptions -max_outstanding_requests }
  # multiplier 
  method _m_dhcpv6_server_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_max_outstanding_requests }
  
  option -dhcpv6_server_options_setup_rate_increment \
    -configuremethod _c_./dhcpv6ServerOptions/setupRateIncrement \
    -cgetmethod _g_./dhcpv6ServerOptions/setupRateIncrement \
    -readonly false
  method _c_./dhcpv6ServerOptions/setupRateIncrement {t v} { $self _configure_relative ./dhcpv6ServerOptions -setup_rate_increment $v }
  method _g_./dhcpv6ServerOptions/setupRateIncrement {t} { $self _cget_relative ./dhcpv6ServerOptions -setup_rate_increment }
  # multiplier 
  method _m_dhcpv6_server_options_setup_rate_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_setup_rate_increment }
  
  option -dhcpv6_server_options_override_global_setup_rate \
    -configuremethod _c_./dhcpv6ServerOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./dhcpv6ServerOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./dhcpv6ServerOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./dhcpv6ServerOptions -override_global_setup_rate $v }
  method _g_./dhcpv6ServerOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./dhcpv6ServerOptions -override_global_setup_rate }
  option -dhcpv6_server_options_setup_rate_max \
    -configuremethod _c_./dhcpv6ServerOptions/setupRateMax \
    -cgetmethod _g_./dhcpv6ServerOptions/setupRateMax \
    -readonly false
  method _c_./dhcpv6ServerOptions/setupRateMax {t v} { $self _configure_relative ./dhcpv6ServerOptions -setup_rate_max $v }
  method _g_./dhcpv6ServerOptions/setupRateMax {t} { $self _cget_relative ./dhcpv6ServerOptions -setup_rate_max }
  # multiplier 
  method _m_dhcpv6_server_options_setup_rate_max {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_setup_rate_max }
  
  option -dhcpv6_server_options_setup_rate_initial \
    -configuremethod _c_./dhcpv6ServerOptions/setupRateInitial \
    -cgetmethod _g_./dhcpv6ServerOptions/setupRateInitial \
    -readonly false
  method _c_./dhcpv6ServerOptions/setupRateInitial {t v} { $self _configure_relative ./dhcpv6ServerOptions -setup_rate_initial $v }
  method _g_./dhcpv6ServerOptions/setupRateInitial {t} { $self _cget_relative ./dhcpv6ServerOptions -setup_rate_initial }
  # multiplier 
  method _m_dhcpv6_server_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_server_options_setup_rate_initial }
  
  option -egtp_options_base_object_id \
    -configuremethod _c_./egtpOptionsBase/objectId \
    -cgetmethod _g_./egtpOptionsBase/objectId \
    -readonly false
  method _c_./egtpOptionsBase/objectId {t v} { $self _configure_relative ./egtpOptionsBase -object_id $v }
  method _g_./egtpOptionsBase/objectId {t} { $self _cget_relative ./egtpOptionsBase -object_id }
  # multiplier 
  method _m_egtp_options_base_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_options_base_object_id }
  
  option -egtp_options_base_pcpu_log_level \
    -configuremethod _c_./egtpOptionsBase/pcpuLogLevel \
    -cgetmethod _g_./egtpOptionsBase/pcpuLogLevel \
    -readonly false
  method _c_./egtpOptionsBase/pcpuLogLevel {t v} { $self _configure_relative ./egtpOptionsBase -pcpu_log_level $v }
  method _g_./egtpOptionsBase/pcpuLogLevel {t} { $self _cget_relative ./egtpOptionsBase -pcpu_log_level }
  # multiplier 
  method _m_egtp_options_base_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_options_base_pcpu_log_level }
  
  option -egtp_s5_s8_sgw_options_object_id \
    -configuremethod _c_./egtpS5S8SgwOptions/objectId \
    -cgetmethod _g_./egtpS5S8SgwOptions/objectId \
    -readonly false
  method _c_./egtpS5S8SgwOptions/objectId {t v} { $self _configure_relative ./egtpS5S8SgwOptions -object_id $v }
  method _g_./egtpS5S8SgwOptions/objectId {t} { $self _cget_relative ./egtpS5S8SgwOptions -object_id }
  # multiplier 
  method _m_egtp_s5_s8_sgw_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_s5_s8_sgw_options_object_id }
  
  option -egtp_s5_s8_sgw_options_delete_idle_bearers \
    -configuremethod _c_./egtpS5S8SgwOptions/deleteIdleBearers \
    -cgetmethod _g_./egtpS5S8SgwOptions/deleteIdleBearers \
    -readonly false
  method _c_./egtpS5S8SgwOptions/deleteIdleBearers {t v} { $self _configure_relative ./egtpS5S8SgwOptions -delete_idle_bearers $v }
  method _g_./egtpS5S8SgwOptions/deleteIdleBearers {t} { $self _cget_relative ./egtpS5S8SgwOptions -delete_idle_bearers }
  option -egtp_s5_s8_sgw_options_override_global_rate_controls \
    -configuremethod _c_./egtpS5S8SgwOptions/overrideGlobalRateControls \
    -cgetmethod _g_./egtpS5S8SgwOptions/overrideGlobalRateControls \
    -readonly false
  method _c_./egtpS5S8SgwOptions/overrideGlobalRateControls {t v} { $self _configure_relative ./egtpS5S8SgwOptions -override_global_rate_controls $v }
  method _g_./egtpS5S8SgwOptions/overrideGlobalRateControls {t} { $self _cget_relative ./egtpS5S8SgwOptions -override_global_rate_controls }
  option -egtp_s5_s8_sgw_options_pcpu_log_level \
    -configuremethod _c_./egtpS5S8SgwOptions/pcpuLogLevel \
    -cgetmethod _g_./egtpS5S8SgwOptions/pcpuLogLevel \
    -readonly false
  method _c_./egtpS5S8SgwOptions/pcpuLogLevel {t v} { $self _configure_relative ./egtpS5S8SgwOptions -pcpu_log_level $v }
  method _g_./egtpS5S8SgwOptions/pcpuLogLevel {t} { $self _cget_relative ./egtpS5S8SgwOptions -pcpu_log_level }
  # multiplier 
  method _m_egtp_s5_s8_sgw_options_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_s5_s8_sgw_options_pcpu_log_level }
  
  option -egtp_s5_s8_sgw_options_always_include_recovery_ie \
    -configuremethod _c_./egtpS5S8SgwOptions/alwaysIncludeRecoveryIE \
    -cgetmethod _g_./egtpS5S8SgwOptions/alwaysIncludeRecoveryIE \
    -readonly false
  method _c_./egtpS5S8SgwOptions/alwaysIncludeRecoveryIE {t v} { $self _configure_relative ./egtpS5S8SgwOptions -always_include_recovery_ie $v }
  method _g_./egtpS5S8SgwOptions/alwaysIncludeRecoveryIE {t} { $self _cget_relative ./egtpS5S8SgwOptions -always_include_recovery_ie }
  option -egtp_s5_s8_sgw_options_max_outstanding_releases \
    -configuremethod _c_./egtpS5S8SgwOptions/maxOutstandingReleases \
    -cgetmethod _g_./egtpS5S8SgwOptions/maxOutstandingReleases \
    -readonly false
  method _c_./egtpS5S8SgwOptions/maxOutstandingReleases {t v} { $self _configure_relative ./egtpS5S8SgwOptions -max_outstanding_releases $v }
  method _g_./egtpS5S8SgwOptions/maxOutstandingReleases {t} { $self _cget_relative ./egtpS5S8SgwOptions -max_outstanding_releases }
  # multiplier 
  method _m_egtp_s5_s8_sgw_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_s5_s8_sgw_options_max_outstanding_releases }
  
  option -egtp_s5_s8_sgw_options_teardown_rate_initial \
    -configuremethod _c_./egtpS5S8SgwOptions/teardownRateInitial \
    -cgetmethod _g_./egtpS5S8SgwOptions/teardownRateInitial \
    -readonly false
  method _c_./egtpS5S8SgwOptions/teardownRateInitial {t v} { $self _configure_relative ./egtpS5S8SgwOptions -teardown_rate_initial $v }
  method _g_./egtpS5S8SgwOptions/teardownRateInitial {t} { $self _cget_relative ./egtpS5S8SgwOptions -teardown_rate_initial }
  # multiplier 
  method _m_egtp_s5_s8_sgw_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_s5_s8_sgw_options_teardown_rate_initial }
  
  option -egtp_s5_s8_sgw_options_max_outstanding_requests \
    -configuremethod _c_./egtpS5S8SgwOptions/maxOutstandingRequests \
    -cgetmethod _g_./egtpS5S8SgwOptions/maxOutstandingRequests \
    -readonly false
  method _c_./egtpS5S8SgwOptions/maxOutstandingRequests {t v} { $self _configure_relative ./egtpS5S8SgwOptions -max_outstanding_requests $v }
  method _g_./egtpS5S8SgwOptions/maxOutstandingRequests {t} { $self _cget_relative ./egtpS5S8SgwOptions -max_outstanding_requests }
  # multiplier 
  method _m_egtp_s5_s8_sgw_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_s5_s8_sgw_options_max_outstanding_requests }
  
  option -egtp_s5_s8_sgw_options_associates \
    -configuremethod _c_./egtpS5S8SgwOptions/associates \
    -cgetmethod _g_./egtpS5S8SgwOptions/associates \
    -readonly false
  method _c_./egtpS5S8SgwOptions/associates {t v} { $self _configure_relative ./egtpS5S8SgwOptions -associates $v }
  method _g_./egtpS5S8SgwOptions/associates {t} { $self _cget_relative ./egtpS5S8SgwOptions -associates }
  option -egtp_s5_s8_sgw_options_setup_rate_initial \
    -configuremethod _c_./egtpS5S8SgwOptions/setupRateInitial \
    -cgetmethod _g_./egtpS5S8SgwOptions/setupRateInitial \
    -readonly false
  method _c_./egtpS5S8SgwOptions/setupRateInitial {t v} { $self _configure_relative ./egtpS5S8SgwOptions -setup_rate_initial $v }
  method _g_./egtpS5S8SgwOptions/setupRateInitial {t} { $self _cget_relative ./egtpS5S8SgwOptions -setup_rate_initial }
  # multiplier 
  method _m_egtp_s5_s8_sgw_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_s5_s8_sgw_options_setup_rate_initial }
  
  option -vepa_options_object_id \
    -configuremethod _c_./vepaOptions/objectId \
    -cgetmethod _g_./vepaOptions/objectId \
    -readonly false
  method _c_./vepaOptions/objectId {t v} { $self _configure_relative ./vepaOptions -object_id $v }
  method _g_./vepaOptions/objectId {t} { $self _cget_relative ./vepaOptions -object_id }
  # multiplier 
  method _m_vepa_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vepa_options_object_id }
  
  option -vepa_options_teardown_rate \
    -configuremethod _c_./vepaOptions/teardownRate \
    -cgetmethod _g_./vepaOptions/teardownRate \
    -readonly false
  method _c_./vepaOptions/teardownRate {t v} { $self _configure_relative ./vepaOptions -teardown_rate $v }
  method _g_./vepaOptions/teardownRate {t} { $self _cget_relative ./vepaOptions -teardown_rate }
  # multiplier 
  method _m_vepa_options_teardown_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vepa_options_teardown_rate }
  
  option -vepa_options_override_global_vsi_rate_control \
    -configuremethod _c_./vepaOptions/overrideGlobalVsiRateControl \
    -cgetmethod _g_./vepaOptions/overrideGlobalVsiRateControl \
    -readonly false
  method _c_./vepaOptions/overrideGlobalVsiRateControl {t v} { $self _configure_relative ./vepaOptions -override_global_vsi_rate_control $v }
  method _g_./vepaOptions/overrideGlobalVsiRateControl {t} { $self _cget_relative ./vepaOptions -override_global_vsi_rate_control }
  option -vepa_options_lldp_evb_destination_mac \
    -configuremethod _c_./vepaOptions/lldpEvbDestinationMac \
    -cgetmethod _g_./vepaOptions/lldpEvbDestinationMac \
    -readonly false
  method _c_./vepaOptions/lldpEvbDestinationMac {t v} { $self _configure_relative ./vepaOptions -lldp_evb_destination_mac $v }
  method _g_./vepaOptions/lldpEvbDestinationMac {t} { $self _cget_relative ./vepaOptions -lldp_evb_destination_mac }
  # multiplier 
  method _m_vepa_options_lldp_evb_destination_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vepa_options_lldp_evb_destination_mac }
  
  option -vepa_options_setup_rate \
    -configuremethod _c_./vepaOptions/setupRate \
    -cgetmethod _g_./vepaOptions/setupRate \
    -readonly false
  method _c_./vepaOptions/setupRate {t v} { $self _configure_relative ./vepaOptions -setup_rate $v }
  method _g_./vepaOptions/setupRate {t} { $self _cget_relative ./vepaOptions -setup_rate }
  # multiplier 
  method _m_vepa_options_setup_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vepa_options_setup_rate }
  
  option -vepa_options_lldp_cdcp_destination_mac \
    -configuremethod _c_./vepaOptions/lldpCdcpDestinationMac \
    -cgetmethod _g_./vepaOptions/lldpCdcpDestinationMac \
    -readonly false
  method _c_./vepaOptions/lldpCdcpDestinationMac {t v} { $self _configure_relative ./vepaOptions -lldp_cdcp_destination_mac $v }
  method _g_./vepaOptions/lldpCdcpDestinationMac {t} { $self _cget_relative ./vepaOptions -lldp_cdcp_destination_mac }
  # multiplier 
  method _m_vepa_options_lldp_cdcp_destination_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vepa_options_lldp_cdcp_destination_mac }
  
  option -vepa_options_max_vdp_commands \
    -configuremethod _c_./vepaOptions/maxVdpCommands \
    -cgetmethod _g_./vepaOptions/maxVdpCommands \
    -readonly false
  method _c_./vepaOptions/maxVdpCommands {t v} { $self _configure_relative ./vepaOptions -max_vdp_commands $v }
  method _g_./vepaOptions/maxVdpCommands {t} { $self _cget_relative ./vepaOptions -max_vdp_commands }
  # multiplier 
  method _m_vepa_options_max_vdp_commands {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vepa_options_max_vdp_commands }
  
  option -vepa_options_ecp_ethertype \
    -configuremethod _c_./vepaOptions/ecpEthertype \
    -cgetmethod _g_./vepaOptions/ecpEthertype \
    -readonly false
  method _c_./vepaOptions/ecpEthertype {t v} { $self _configure_relative ./vepaOptions -ecp_ethertype $v }
  method _g_./vepaOptions/ecpEthertype {t} { $self _cget_relative ./vepaOptions -ecp_ethertype }
  # multiplier 
  method _m_vepa_options_ecp_ethertype {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vepa_options_ecp_ethertype }
  
  option -vepa_options_ecp_destination_mac \
    -configuremethod _c_./vepaOptions/ecpDestinationMac \
    -cgetmethod _g_./vepaOptions/ecpDestinationMac \
    -readonly false
  method _c_./vepaOptions/ecpDestinationMac {t v} { $self _configure_relative ./vepaOptions -ecp_destination_mac $v }
  method _g_./vepaOptions/ecpDestinationMac {t} { $self _cget_relative ./vepaOptions -ecp_destination_mac }
  # multiplier 
  method _m_vepa_options_ecp_destination_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vepa_options_ecp_destination_mac }
  
  option -fc_fport_options_object_id \
    -configuremethod _c_./fcFportOptions/objectId \
    -cgetmethod _g_./fcFportOptions/objectId \
    -readonly false
  method _c_./fcFportOptions/objectId {t v} { $self _configure_relative ./fcFportOptions -object_id $v }
  method _g_./fcFportOptions/objectId {t} { $self _cget_relative ./fcFportOptions -object_id }
  # multiplier 
  method _m_fc_fport_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fc_fport_options_object_id }
  
  option -fc_fport_options_max_packets_per_second \
    -configuremethod _c_./fcFportOptions/maxPacketsPerSecond \
    -cgetmethod _g_./fcFportOptions/maxPacketsPerSecond \
    -readonly false
  method _c_./fcFportOptions/maxPacketsPerSecond {t v} { $self _configure_relative ./fcFportOptions -max_packets_per_second $v }
  method _g_./fcFportOptions/maxPacketsPerSecond {t} { $self _cget_relative ./fcFportOptions -max_packets_per_second }
  # multiplier 
  method _m_fc_fport_options_max_packets_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_fport_options_max_packets_per_second }
  
  option -fc_fport_options_override_global_rate \
    -configuremethod _c_./fcFportOptions/overrideGlobalRate \
    -cgetmethod _g_./fcFportOptions/overrideGlobalRate \
    -readonly false
  method _c_./fcFportOptions/overrideGlobalRate {t v} { $self _configure_relative ./fcFportOptions -override_global_rate $v }
  method _g_./fcFportOptions/overrideGlobalRate {t} { $self _cget_relative ./fcFportOptions -override_global_rate }
  option -fc_fport_options_b2b_credit \
    -configuremethod _c_./fcFportOptions/b2bCredit \
    -cgetmethod _g_./fcFportOptions/b2bCredit \
    -readonly false
  method _c_./fcFportOptions/b2bCredit {t v} { $self _configure_relative ./fcFportOptions -b2b_credit $v }
  method _g_./fcFportOptions/b2bCredit {t} { $self _cget_relative ./fcFportOptions -b2b_credit }
  # multiplier 
  method _m_fc_fport_options_b2b_credit {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_fport_options_b2b_credit }
  
  option -fc_fport_options_ed_tov \
    -configuremethod _c_./fcFportOptions/edTov \
    -cgetmethod _g_./fcFportOptions/edTov \
    -readonly false
  method _c_./fcFportOptions/edTov {t v} { $self _configure_relative ./fcFportOptions -ed_tov $v }
  method _g_./fcFportOptions/edTov {t} { $self _cget_relative ./fcFportOptions -ed_tov }
  # multiplier 
  method _m_fc_fport_options_ed_tov {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_fport_options_ed_tov }
  
  option -fc_fport_options_rt_tov \
    -configuremethod _c_./fcFportOptions/rtTov \
    -cgetmethod _g_./fcFportOptions/rtTov \
    -readonly false
  method _c_./fcFportOptions/rtTov {t v} { $self _configure_relative ./fcFportOptions -rt_tov $v }
  method _g_./fcFportOptions/rtTov {t} { $self _cget_relative ./fcFportOptions -rt_tov }
  # multiplier 
  method _m_fc_fport_options_rt_tov {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fc_fport_options_rt_tov }
  
  option -eapo_udp_options_object_id \
    -configuremethod _c_./eapoUdpOptions/objectId \
    -cgetmethod _g_./eapoUdpOptions/objectId \
    -readonly false
  method _c_./eapoUdpOptions/objectId {t v} { $self _configure_relative ./eapoUdpOptions -object_id $v }
  method _g_./eapoUdpOptions/objectId {t} { $self _cget_relative ./eapoUdpOptions -object_id }
  # multiplier 
  method _m_eapo_udp_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_options_object_id }
  
  option -eapo_udp_options_max_outstanding_requests \
    -configuremethod _c_./eapoUdpOptions/maxOutstandingRequests \
    -cgetmethod _g_./eapoUdpOptions/maxOutstandingRequests \
    -readonly false
  method _c_./eapoUdpOptions/maxOutstandingRequests {t v} { $self _configure_relative ./eapoUdpOptions -max_outstanding_requests $v }
  method _g_./eapoUdpOptions/maxOutstandingRequests {t} { $self _cget_relative ./eapoUdpOptions -max_outstanding_requests }
  # multiplier 
  method _m_eapo_udp_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -eapo_udp_options_max_outstanding_requests }
  
  option -eapo_udp_options_override_global_setup_rate \
    -configuremethod _c_./eapoUdpOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./eapoUdpOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./eapoUdpOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./eapoUdpOptions -override_global_setup_rate $v }
  method _g_./eapoUdpOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./eapoUdpOptions -override_global_setup_rate }
  option -eapo_udp_options_dut_mac \
    -configuremethod _c_./eapoUdpOptions/dutMac \
    -cgetmethod _g_./eapoUdpOptions/dutMac \
    -readonly false
  method _c_./eapoUdpOptions/dutMac {t v} { $self _configure_relative ./eapoUdpOptions -dut_mac $v }
  method _g_./eapoUdpOptions/dutMac {t} { $self _cget_relative ./eapoUdpOptions -dut_mac }
  # multiplier 
  method _m_eapo_udp_options_dut_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_options_dut_mac }
  
  option -eapo_udp_options_icmp_trigger_target_address \
    -configuremethod _c_./eapoUdpOptions/icmpTriggerTargetAddress \
    -cgetmethod _g_./eapoUdpOptions/icmpTriggerTargetAddress \
    -readonly false
  method _c_./eapoUdpOptions/icmpTriggerTargetAddress {t v} { $self _configure_relative ./eapoUdpOptions -icmp_trigger_target_address $v }
  method _g_./eapoUdpOptions/icmpTriggerTargetAddress {t} { $self _cget_relative ./eapoUdpOptions -icmp_trigger_target_address }
  # multiplier 
  method _m_eapo_udp_options_icmp_trigger_target_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_options_icmp_trigger_target_address }
  
  option -eapo_udp_options_max_clients_per_second \
    -configuremethod _c_./eapoUdpOptions/maxClientsPerSecond \
    -cgetmethod _g_./eapoUdpOptions/maxClientsPerSecond \
    -readonly false
  method _c_./eapoUdpOptions/maxClientsPerSecond {t v} { $self _configure_relative ./eapoUdpOptions -max_clients_per_second $v }
  method _g_./eapoUdpOptions/maxClientsPerSecond {t} { $self _cget_relative ./eapoUdpOptions -max_clients_per_second }
  # multiplier 
  method _m_eapo_udp_options_max_clients_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -eapo_udp_options_max_clients_per_second }
  
  option -egtp_client_options_object_id \
    -configuremethod _c_./egtpClientOptions/objectId \
    -cgetmethod _g_./egtpClientOptions/objectId \
    -readonly false
  method _c_./egtpClientOptions/objectId {t v} { $self _configure_relative ./egtpClientOptions -object_id $v }
  method _g_./egtpClientOptions/objectId {t} { $self _cget_relative ./egtpClientOptions -object_id }
  # multiplier 
  method _m_egtp_client_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_client_options_object_id }
  
  option -egtp_client_options_delete_idle_bearers \
    -configuremethod _c_./egtpClientOptions/deleteIdleBearers \
    -cgetmethod _g_./egtpClientOptions/deleteIdleBearers \
    -readonly false
  method _c_./egtpClientOptions/deleteIdleBearers {t v} { $self _configure_relative ./egtpClientOptions -delete_idle_bearers $v }
  method _g_./egtpClientOptions/deleteIdleBearers {t} { $self _cget_relative ./egtpClientOptions -delete_idle_bearers }
  option -egtp_client_options_override_global_rate_controls \
    -configuremethod _c_./egtpClientOptions/overrideGlobalRateControls \
    -cgetmethod _g_./egtpClientOptions/overrideGlobalRateControls \
    -readonly false
  method _c_./egtpClientOptions/overrideGlobalRateControls {t v} { $self _configure_relative ./egtpClientOptions -override_global_rate_controls $v }
  method _g_./egtpClientOptions/overrideGlobalRateControls {t} { $self _cget_relative ./egtpClientOptions -override_global_rate_controls }
  option -egtp_client_options_pcpu_log_level \
    -configuremethod _c_./egtpClientOptions/pcpuLogLevel \
    -cgetmethod _g_./egtpClientOptions/pcpuLogLevel \
    -readonly false
  method _c_./egtpClientOptions/pcpuLogLevel {t v} { $self _configure_relative ./egtpClientOptions -pcpu_log_level $v }
  method _g_./egtpClientOptions/pcpuLogLevel {t} { $self _cget_relative ./egtpClientOptions -pcpu_log_level }
  # multiplier 
  method _m_egtp_client_options_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_client_options_pcpu_log_level }
  
  option -egtp_client_options_always_include_recovery_ie \
    -configuremethod _c_./egtpClientOptions/alwaysIncludeRecoveryIE \
    -cgetmethod _g_./egtpClientOptions/alwaysIncludeRecoveryIE \
    -readonly false
  method _c_./egtpClientOptions/alwaysIncludeRecoveryIE {t v} { $self _configure_relative ./egtpClientOptions -always_include_recovery_ie $v }
  method _g_./egtpClientOptions/alwaysIncludeRecoveryIE {t} { $self _cget_relative ./egtpClientOptions -always_include_recovery_ie }
  option -egtp_client_options_max_outstanding_releases \
    -configuremethod _c_./egtpClientOptions/maxOutstandingReleases \
    -cgetmethod _g_./egtpClientOptions/maxOutstandingReleases \
    -readonly false
  method _c_./egtpClientOptions/maxOutstandingReleases {t v} { $self _configure_relative ./egtpClientOptions -max_outstanding_releases $v }
  method _g_./egtpClientOptions/maxOutstandingReleases {t} { $self _cget_relative ./egtpClientOptions -max_outstanding_releases }
  # multiplier 
  method _m_egtp_client_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_client_options_max_outstanding_releases }
  
  option -egtp_client_options_teardown_rate_initial \
    -configuremethod _c_./egtpClientOptions/teardownRateInitial \
    -cgetmethod _g_./egtpClientOptions/teardownRateInitial \
    -readonly false
  method _c_./egtpClientOptions/teardownRateInitial {t v} { $self _configure_relative ./egtpClientOptions -teardown_rate_initial $v }
  method _g_./egtpClientOptions/teardownRateInitial {t} { $self _cget_relative ./egtpClientOptions -teardown_rate_initial }
  # multiplier 
  method _m_egtp_client_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_client_options_teardown_rate_initial }
  
  option -egtp_client_options_max_outstanding_requests \
    -configuremethod _c_./egtpClientOptions/maxOutstandingRequests \
    -cgetmethod _g_./egtpClientOptions/maxOutstandingRequests \
    -readonly false
  method _c_./egtpClientOptions/maxOutstandingRequests {t v} { $self _configure_relative ./egtpClientOptions -max_outstanding_requests $v }
  method _g_./egtpClientOptions/maxOutstandingRequests {t} { $self _cget_relative ./egtpClientOptions -max_outstanding_requests }
  # multiplier 
  method _m_egtp_client_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_client_options_max_outstanding_requests }
  
  option -egtp_client_options_setup_rate_initial \
    -configuremethod _c_./egtpClientOptions/setupRateInitial \
    -cgetmethod _g_./egtpClientOptions/setupRateInitial \
    -readonly false
  method _c_./egtpClientOptions/setupRateInitial {t v} { $self _configure_relative ./egtpClientOptions -setup_rate_initial $v }
  method _g_./egtpClientOptions/setupRateInitial {t} { $self _cget_relative ./egtpClientOptions -setup_rate_initial }
  # multiplier 
  method _m_egtp_client_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -egtp_client_options_setup_rate_initial }
  
  option -dhcp_options_setup_rate_increment \
    -configuremethod _c_./dhcpOptions/setupRateIncrement \
    -cgetmethod _g_./dhcpOptions/setupRateIncrement \
    -readonly false
  method _c_./dhcpOptions/setupRateIncrement {t v} { $self _configure_relative ./dhcpOptions -setup_rate_increment $v }
  method _g_./dhcpOptions/setupRateIncrement {t} { $self _cget_relative ./dhcpOptions -setup_rate_increment }
  # multiplier 
  method _m_dhcp_options_setup_rate_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_setup_rate_increment }
  
  option -dhcp_options_max_outstanding_requests \
    -configuremethod _c_./dhcpOptions/maxOutstandingRequests \
    -cgetmethod _g_./dhcpOptions/maxOutstandingRequests \
    -readonly false
  method _c_./dhcpOptions/maxOutstandingRequests {t v} { $self _configure_relative ./dhcpOptions -max_outstanding_requests $v }
  method _g_./dhcpOptions/maxOutstandingRequests {t} { $self _cget_relative ./dhcpOptions -max_outstanding_requests }
  # multiplier 
  method _m_dhcp_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_max_outstanding_requests }
  
  option -dhcp_options_teardown_rate_initial \
    -configuremethod _c_./dhcpOptions/teardownRateInitial \
    -cgetmethod _g_./dhcpOptions/teardownRateInitial \
    -readonly false
  method _c_./dhcpOptions/teardownRateInitial {t v} { $self _configure_relative ./dhcpOptions -teardown_rate_initial $v }
  method _g_./dhcpOptions/teardownRateInitial {t} { $self _cget_relative ./dhcpOptions -teardown_rate_initial }
  # multiplier 
  method _m_dhcp_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_teardown_rate_initial }
  
  option -dhcp_options_setup_rate_max \
    -configuremethod _c_./dhcpOptions/setupRateMax \
    -cgetmethod _g_./dhcpOptions/setupRateMax \
    -readonly false
  method _c_./dhcpOptions/setupRateMax {t v} { $self _configure_relative ./dhcpOptions -setup_rate_max $v }
  method _g_./dhcpOptions/setupRateMax {t} { $self _cget_relative ./dhcpOptions -setup_rate_max }
  # multiplier 
  method _m_dhcp_options_setup_rate_max {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_setup_rate_max }
  
  option -dhcp_options_setup_rate_initial \
    -configuremethod _c_./dhcpOptions/setupRateInitial \
    -cgetmethod _g_./dhcpOptions/setupRateInitial \
    -readonly false
  method _c_./dhcpOptions/setupRateInitial {t v} { $self _configure_relative ./dhcpOptions -setup_rate_initial $v }
  method _g_./dhcpOptions/setupRateInitial {t} { $self _cget_relative ./dhcpOptions -setup_rate_initial }
  # multiplier 
  method _m_dhcp_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_setup_rate_initial }
  
  option -dhcp_options_associates \
    -configuremethod _c_./dhcpOptions/associates \
    -cgetmethod _g_./dhcpOptions/associates \
    -readonly false
  method _c_./dhcpOptions/associates {t v} { $self _configure_relative ./dhcpOptions -associates $v }
  method _g_./dhcpOptions/associates {t} { $self _cget_relative ./dhcpOptions -associates }
  option -dhcp_options_override_global_teardown_rate \
    -configuremethod _c_./dhcpOptions/overrideGlobalTeardownRate \
    -cgetmethod _g_./dhcpOptions/overrideGlobalTeardownRate \
    -readonly false
  method _c_./dhcpOptions/overrideGlobalTeardownRate {t v} { $self _configure_relative ./dhcpOptions -override_global_teardown_rate $v }
  method _g_./dhcpOptions/overrideGlobalTeardownRate {t} { $self _cget_relative ./dhcpOptions -override_global_teardown_rate }
  option -dhcp_options_max_outstanding_releases \
    -configuremethod _c_./dhcpOptions/maxOutstandingReleases \
    -cgetmethod _g_./dhcpOptions/maxOutstandingReleases \
    -readonly false
  method _c_./dhcpOptions/maxOutstandingReleases {t v} { $self _configure_relative ./dhcpOptions -max_outstanding_releases $v }
  method _g_./dhcpOptions/maxOutstandingReleases {t} { $self _cget_relative ./dhcpOptions -max_outstanding_releases }
  # multiplier 
  method _m_dhcp_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_max_outstanding_releases }
  
  option -dhcp_options_object_id \
    -configuremethod _c_./dhcpOptions/objectId \
    -cgetmethod _g_./dhcpOptions/objectId \
    -readonly false
  method _c_./dhcpOptions/objectId {t v} { $self _configure_relative ./dhcpOptions -object_id $v }
  method _g_./dhcpOptions/objectId {t} { $self _cget_relative ./dhcpOptions -object_id }
  # multiplier 
  method _m_dhcp_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dhcp_options_object_id }
  
  option -dhcp_options_teardown_rate_increment \
    -configuremethod _c_./dhcpOptions/teardownRateIncrement \
    -cgetmethod _g_./dhcpOptions/teardownRateIncrement \
    -readonly false
  method _c_./dhcpOptions/teardownRateIncrement {t v} { $self _configure_relative ./dhcpOptions -teardown_rate_increment $v }
  method _g_./dhcpOptions/teardownRateIncrement {t} { $self _cget_relative ./dhcpOptions -teardown_rate_increment }
  # multiplier 
  method _m_dhcp_options_teardown_rate_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_teardown_rate_increment }
  
  option -dhcp_options_override_global_setup_rate \
    -configuremethod _c_./dhcpOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./dhcpOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./dhcpOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./dhcpOptions -override_global_setup_rate $v }
  method _g_./dhcpOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./dhcpOptions -override_global_setup_rate }
  option -dhcp_options_teardown_rate_max \
    -configuremethod _c_./dhcpOptions/teardownRateMax \
    -cgetmethod _g_./dhcpOptions/teardownRateMax \
    -readonly false
  method _c_./dhcpOptions/teardownRateMax {t v} { $self _configure_relative ./dhcpOptions -teardown_rate_max $v }
  method _g_./dhcpOptions/teardownRateMax {t} { $self _cget_relative ./dhcpOptions -teardown_rate_max }
  # multiplier 
  method _m_dhcp_options_teardown_rate_max {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcp_options_teardown_rate_max }
  
  option -twamp_server_options_object_id \
    -configuremethod _c_./twampServerOptions/objectId \
    -cgetmethod _g_./twampServerOptions/objectId \
    -readonly false
  method _c_./twampServerOptions/objectId {t v} { $self _configure_relative ./twampServerOptions -object_id $v }
  method _g_./twampServerOptions/objectId {t} { $self _cget_relative ./twampServerOptions -object_id }
  # multiplier 
  method _m_twamp_server_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_options_object_id }
  
  option -twamp_server_options_error_estimate_multiplier \
    -configuremethod _c_./twampServerOptions/errorEstimateMultiplier \
    -cgetmethod _g_./twampServerOptions/errorEstimateMultiplier \
    -readonly false
  method _c_./twampServerOptions/errorEstimateMultiplier {t v} { $self _configure_relative ./twampServerOptions -error_estimate_multiplier $v }
  method _g_./twampServerOptions/errorEstimateMultiplier {t} { $self _cget_relative ./twampServerOptions -error_estimate_multiplier }
  # multiplier 
  method _m_twamp_server_options_error_estimate_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_options_error_estimate_multiplier }
  
  option -twamp_server_options_error_estimate_scale \
    -configuremethod _c_./twampServerOptions/errorEstimateScale \
    -cgetmethod _g_./twampServerOptions/errorEstimateScale \
    -readonly false
  method _c_./twampServerOptions/errorEstimateScale {t v} { $self _configure_relative ./twampServerOptions -error_estimate_scale $v }
  method _g_./twampServerOptions/errorEstimateScale {t} { $self _cget_relative ./twampServerOptions -error_estimate_scale }
  # multiplier 
  method _m_twamp_server_options_error_estimate_scale {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_options_error_estimate_scale }
  
  option -web_auth_options_object_id \
    -configuremethod _c_./webAuthOptions/objectId \
    -cgetmethod _g_./webAuthOptions/objectId \
    -readonly false
  method _c_./webAuthOptions/objectId {t v} { $self _configure_relative ./webAuthOptions -object_id $v }
  method _g_./webAuthOptions/objectId {t} { $self _cget_relative ./webAuthOptions -object_id }
  # multiplier 
  method _m_web_auth_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_options_object_id }
  
  option -web_auth_options_max_outstanding_requests \
    -configuremethod _c_./webAuthOptions/maxOutstandingRequests \
    -cgetmethod _g_./webAuthOptions/maxOutstandingRequests \
    -readonly false
  method _c_./webAuthOptions/maxOutstandingRequests {t v} { $self _configure_relative ./webAuthOptions -max_outstanding_requests $v }
  method _g_./webAuthOptions/maxOutstandingRequests {t} { $self _cget_relative ./webAuthOptions -max_outstanding_requests }
  # multiplier 
  method _m_web_auth_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -web_auth_options_max_outstanding_requests }
  
  option -web_auth_options_override_global_setup_rate \
    -configuremethod _c_./webAuthOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./webAuthOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./webAuthOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./webAuthOptions -override_global_setup_rate $v }
  method _g_./webAuthOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./webAuthOptions -override_global_setup_rate }
  option -web_auth_options_max_clients_per_second \
    -configuremethod _c_./webAuthOptions/maxClientsPerSecond \
    -cgetmethod _g_./webAuthOptions/maxClientsPerSecond \
    -readonly false
  method _c_./webAuthOptions/maxClientsPerSecond {t v} { $self _configure_relative ./webAuthOptions -max_clients_per_second $v }
  method _g_./webAuthOptions/maxClientsPerSecond {t} { $self _cget_relative ./webAuthOptions -max_clients_per_second }
  # multiplier 
  method _m_web_auth_options_max_clients_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -web_auth_options_max_clients_per_second }
  
  option -web_auth_options_override_global_arp_response \
    -configuremethod _c_./webAuthOptions/overrideGlobalArpResponse \
    -cgetmethod _g_./webAuthOptions/overrideGlobalArpResponse \
    -readonly false
  method _c_./webAuthOptions/overrideGlobalArpResponse {t v} { $self _configure_relative ./webAuthOptions -override_global_arp_response $v }
  method _g_./webAuthOptions/overrideGlobalArpResponse {t} { $self _cget_relative ./webAuthOptions -override_global_arp_response }
  option -dot1x_options_object_id \
    -configuremethod _c_./dot1xOptions/objectId \
    -cgetmethod _g_./dot1xOptions/objectId \
    -readonly false
  method _c_./dot1xOptions/objectId {t v} { $self _configure_relative ./dot1xOptions -object_id $v }
  method _g_./dot1xOptions/objectId {t} { $self _cget_relative ./dot1xOptions -object_id }
  # multiplier 
  method _m_dot1x_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_options_object_id }
  
  option -dot1x_options_logoff_max_clients_per_second \
    -configuremethod _c_./dot1xOptions/logoffMaxClientsPerSecond \
    -cgetmethod _g_./dot1xOptions/logoffMaxClientsPerSecond \
    -readonly false
  method _c_./dot1xOptions/logoffMaxClientsPerSecond {t v} { $self _configure_relative ./dot1xOptions -logoff_max_clients_per_second $v }
  method _g_./dot1xOptions/logoffMaxClientsPerSecond {t} { $self _cget_relative ./dot1xOptions -logoff_max_clients_per_second }
  # multiplier 
  method _m_dot1x_options_logoff_max_clients_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dot1x_options_logoff_max_clients_per_second }
  
  option -dot1x_options_max_outstanding_requests \
    -configuremethod _c_./dot1xOptions/maxOutstandingRequests \
    -cgetmethod _g_./dot1xOptions/maxOutstandingRequests \
    -readonly false
  method _c_./dot1xOptions/maxOutstandingRequests {t v} { $self _configure_relative ./dot1xOptions -max_outstanding_requests $v }
  method _g_./dot1xOptions/maxOutstandingRequests {t} { $self _cget_relative ./dot1xOptions -max_outstanding_requests }
  # multiplier 
  method _m_dot1x_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dot1x_options_max_outstanding_requests }
  
  option -dot1x_options_override_global_setup_rate \
    -configuremethod _c_./dot1xOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./dot1xOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./dot1xOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./dot1xOptions -override_global_setup_rate $v }
  method _g_./dot1xOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./dot1xOptions -override_global_setup_rate }
  option -dot1x_options_max_clients_per_second \
    -configuremethod _c_./dot1xOptions/maxClientsPerSecond \
    -cgetmethod _g_./dot1xOptions/maxClientsPerSecond \
    -readonly false
  method _c_./dot1xOptions/maxClientsPerSecond {t v} { $self _configure_relative ./dot1xOptions -max_clients_per_second $v }
  method _g_./dot1xOptions/maxClientsPerSecond {t} { $self _cget_relative ./dot1xOptions -max_clients_per_second }
  # multiplier 
  method _m_dot1x_options_max_clients_per_second {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dot1x_options_max_clients_per_second }
  
  option -options_object_id \
    -configuremethod _c_./options/objectId \
    -cgetmethod _g_./options/objectId \
    -readonly false
  method _c_./options/objectId {t v} { $self _configure_relative ./options -object_id $v }
  method _g_./options/objectId {t} { $self _cget_relative ./options -object_id }
  # multiplier 
  method _m_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -options_object_id }
  
  option -options_dad_enabled \
    -configuremethod _c_./options/dadEnabled \
    -cgetmethod _g_./options/dadEnabled \
    -readonly false
  method _c_./options/dadEnabled {t v} { $self _configure_relative ./options -dad_enabled $v }
  method _g_./options/dadEnabled {t} { $self _cget_relative ./options -dad_enabled }
  option -options_router_solicitation_interval \
    -configuremethod _c_./options/routerSolicitationInterval \
    -cgetmethod _g_./options/routerSolicitationInterval \
    -readonly false
  method _c_./options/routerSolicitationInterval {t v} { $self _configure_relative ./options -router_solicitation_interval $v }
  method _g_./options/routerSolicitationInterval {t} { $self _cget_relative ./options -router_solicitation_interval }
  # multiplier 
  method _m_options_router_solicitation_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_router_solicitation_interval }
  
  option -options_ipv4_retrans_time \
    -configuremethod _c_./options/ipv4RetransTime \
    -cgetmethod _g_./options/ipv4RetransTime \
    -readonly false
  method _c_./options/ipv4RetransTime {t v} { $self _configure_relative ./options -ipv4_retrans_time $v }
  method _g_./options/ipv4RetransTime {t} { $self _cget_relative ./options -ipv4_retrans_time }
  # multiplier 
  method _m_options_ipv4_retrans_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_ipv4_retrans_time }
  
  option -options_ipv4_mcast_solicit \
    -configuremethod _c_./options/ipv4McastSolicit \
    -cgetmethod _g_./options/ipv4McastSolicit \
    -readonly false
  method _c_./options/ipv4McastSolicit {t v} { $self _configure_relative ./options -ipv4_mcast_solicit $v }
  method _g_./options/ipv4McastSolicit {t} { $self _cget_relative ./options -ipv4_mcast_solicit }
  # multiplier 
  method _m_options_ipv4_mcast_solicit {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_ipv4_mcast_solicit }
  
  option -options_dad_transmits \
    -configuremethod _c_./options/dadTransmits \
    -cgetmethod _g_./options/dadTransmits \
    -readonly false
  method _c_./options/dadTransmits {t v} { $self _configure_relative ./options -dad_transmits $v }
  method _g_./options/dadTransmits {t} { $self _cget_relative ./options -dad_transmits }
  # multiplier 
  method _m_options_dad_transmits {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_dad_transmits }
  
  option -options_mcast_solicit \
    -configuremethod _c_./options/mcast_solicit \
    -cgetmethod _g_./options/mcast_solicit \
    -readonly false
  method _c_./options/mcast_solicit {t v} { $self _configure_relative ./options -mcast_solicit $v }
  method _g_./options/mcast_solicit {t} { $self _cget_relative ./options -mcast_solicit }
  # multiplier 
  method _m_options_mcast_solicit {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_mcast_solicit }
  
  option -options_retrans_time \
    -configuremethod _c_./options/retransTime \
    -cgetmethod _g_./options/retransTime \
    -readonly false
  method _c_./options/retransTime {t v} { $self _configure_relative ./options -retrans_time $v }
  method _g_./options/retransTime {t} { $self _cget_relative ./options -retrans_time }
  # multiplier 
  method _m_options_retrans_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_retrans_time }
  
  option -options_router_solicitations \
    -configuremethod _c_./options/routerSolicitations \
    -cgetmethod _g_./options/routerSolicitations \
    -readonly false
  method _c_./options/routerSolicitations {t v} { $self _configure_relative ./options -router_solicitations $v }
  method _g_./options/routerSolicitations {t} { $self _cget_relative ./options -router_solicitations }
  # multiplier 
  method _m_options_router_solicitations {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_router_solicitations }
  
  option -options_router_solicitation_delay \
    -configuremethod _c_./options/routerSolicitationDelay \
    -cgetmethod _g_./options/routerSolicitationDelay \
    -readonly false
  method _c_./options/routerSolicitationDelay {t v} { $self _configure_relative ./options -router_solicitation_delay $v }
  method _g_./options/routerSolicitationDelay {t} { $self _cget_relative ./options -router_solicitation_delay }
  # multiplier 
  method _m_options_router_solicitation_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -options_router_solicitation_delay }
  
  option -egtp_s5_s8_pgw_options_object_id \
    -configuremethod _c_./egtpS5S8PgwOptions/objectId \
    -cgetmethod _g_./egtpS5S8PgwOptions/objectId \
    -readonly false
  method _c_./egtpS5S8PgwOptions/objectId {t v} { $self _configure_relative ./egtpS5S8PgwOptions -object_id $v }
  method _g_./egtpS5S8PgwOptions/objectId {t} { $self _cget_relative ./egtpS5S8PgwOptions -object_id }
  # multiplier 
  method _m_egtp_s5_s8_pgw_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_s5_s8_pgw_options_object_id }
  
  option -egtp_s5_s8_pgw_options_enable_create_bearer_tfthack \
    -configuremethod _c_./egtpS5S8PgwOptions/enableCreateBearerTFTHack \
    -cgetmethod _g_./egtpS5S8PgwOptions/enableCreateBearerTFTHack \
    -readonly false
  method _c_./egtpS5S8PgwOptions/enableCreateBearerTFTHack {t v} { $self _configure_relative ./egtpS5S8PgwOptions -enable_create_bearer_tfthack $v }
  method _g_./egtpS5S8PgwOptions/enableCreateBearerTFTHack {t} { $self _cget_relative ./egtpS5S8PgwOptions -enable_create_bearer_tfthack }
  option -egtp_s5_s8_pgw_options_pcpu_log_level \
    -configuremethod _c_./egtpS5S8PgwOptions/pcpuLogLevel \
    -cgetmethod _g_./egtpS5S8PgwOptions/pcpuLogLevel \
    -readonly false
  method _c_./egtpS5S8PgwOptions/pcpuLogLevel {t v} { $self _configure_relative ./egtpS5S8PgwOptions -pcpu_log_level $v }
  method _g_./egtpS5S8PgwOptions/pcpuLogLevel {t} { $self _cget_relative ./egtpS5S8PgwOptions -pcpu_log_level }
  # multiplier 
  method _m_egtp_s5_s8_pgw_options_pcpu_log_level {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -egtp_s5_s8_pgw_options_pcpu_log_level }
  
  option -egtp_s5_s8_pgw_options_distribute_user_plane_ips \
    -configuremethod _c_./egtpS5S8PgwOptions/distributeUserPlaneIps \
    -cgetmethod _g_./egtpS5S8PgwOptions/distributeUserPlaneIps \
    -readonly false
  method _c_./egtpS5S8PgwOptions/distributeUserPlaneIps {t v} { $self _configure_relative ./egtpS5S8PgwOptions -distribute_user_plane_ips $v }
  method _g_./egtpS5S8PgwOptions/distributeUserPlaneIps {t} { $self _cget_relative ./egtpS5S8PgwOptions -distribute_user_plane_ips }
  option -egtp_s5_s8_pgw_options_enable_dynamic_allocation \
    -configuremethod _c_./egtpS5S8PgwOptions/enableDynamicAllocation \
    -cgetmethod _g_./egtpS5S8PgwOptions/enableDynamicAllocation \
    -readonly false
  method _c_./egtpS5S8PgwOptions/enableDynamicAllocation {t v} { $self _configure_relative ./egtpS5S8PgwOptions -enable_dynamic_allocation $v }
  method _g_./egtpS5S8PgwOptions/enableDynamicAllocation {t} { $self _cget_relative ./egtpS5S8PgwOptions -enable_dynamic_allocation }
  option -egtp_s5_s8_pgw_options_publish_statistics \
    -configuremethod _c_./egtpS5S8PgwOptions/publishStatistics \
    -cgetmethod _g_./egtpS5S8PgwOptions/publishStatistics \
    -readonly false
  method _c_./egtpS5S8PgwOptions/publishStatistics {t v} { $self _configure_relative ./egtpS5S8PgwOptions -publish_statistics $v }
  method _g_./egtpS5S8PgwOptions/publishStatistics {t} { $self _cget_relative ./egtpS5S8PgwOptions -publish_statistics }
  option -twamp_options_object_id \
    -configuremethod _c_./twampOptions/objectId \
    -cgetmethod _g_./twampOptions/objectId \
    -readonly false
  method _c_./twampOptions/objectId {t v} { $self _configure_relative ./twampOptions -object_id $v }
  method _g_./twampOptions/objectId {t} { $self _cget_relative ./twampOptions -object_id }
  # multiplier 
  method _m_twamp_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_options_object_id }
  
  option -twamp_options_teardown_rate \
    -configuremethod _c_./twampOptions/teardownRate \
    -cgetmethod _g_./twampOptions/teardownRate \
    -readonly false
  method _c_./twampOptions/teardownRate {t v} { $self _configure_relative ./twampOptions -teardown_rate $v }
  method _g_./twampOptions/teardownRate {t} { $self _cget_relative ./twampOptions -teardown_rate }
  # multiplier 
  method _m_twamp_options_teardown_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_options_teardown_rate }
  
  option -twamp_options_error_estimate_multiplier \
    -configuremethod _c_./twampOptions/errorEstimateMultiplier \
    -cgetmethod _g_./twampOptions/errorEstimateMultiplier \
    -readonly false
  method _c_./twampOptions/errorEstimateMultiplier {t v} { $self _configure_relative ./twampOptions -error_estimate_multiplier $v }
  method _g_./twampOptions/errorEstimateMultiplier {t} { $self _cget_relative ./twampOptions -error_estimate_multiplier }
  # multiplier 
  method _m_twamp_options_error_estimate_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_options_error_estimate_multiplier }
  
  option -twamp_options_override_global_rate_options \
    -configuremethod _c_./twampOptions/overrideGlobalRateOptions \
    -cgetmethod _g_./twampOptions/overrideGlobalRateOptions \
    -readonly false
  method _c_./twampOptions/overrideGlobalRateOptions {t v} { $self _configure_relative ./twampOptions -override_global_rate_options $v }
  method _g_./twampOptions/overrideGlobalRateOptions {t} { $self _cget_relative ./twampOptions -override_global_rate_options }
  option -twamp_options_setup_rate \
    -configuremethod _c_./twampOptions/setupRate \
    -cgetmethod _g_./twampOptions/setupRate \
    -readonly false
  method _c_./twampOptions/setupRate {t v} { $self _configure_relative ./twampOptions -setup_rate $v }
  method _g_./twampOptions/setupRate {t} { $self _cget_relative ./twampOptions -setup_rate }
  # multiplier 
  method _m_twamp_options_setup_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_options_setup_rate }
  
  option -twamp_options_error_estimate_scale \
    -configuremethod _c_./twampOptions/errorEstimateScale \
    -cgetmethod _g_./twampOptions/errorEstimateScale \
    -readonly false
  method _c_./twampOptions/errorEstimateScale {t v} { $self _configure_relative ./twampOptions -error_estimate_scale $v }
  method _g_./twampOptions/errorEstimateScale {t} { $self _cget_relative ./twampOptions -error_estimate_scale }
  # multiplier 
  method _m_twamp_options_error_estimate_scale {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_options_error_estimate_scale }
  
  option -twamp_options_max_outstanding \
    -configuremethod _c_./twampOptions/maxOutstanding \
    -cgetmethod _g_./twampOptions/maxOutstanding \
    -readonly false
  method _c_./twampOptions/maxOutstanding {t v} { $self _configure_relative ./twampOptions -max_outstanding $v }
  method _g_./twampOptions/maxOutstanding {t} { $self _cget_relative ./twampOptions -max_outstanding }
  # multiplier 
  method _m_twamp_options_max_outstanding {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_options_max_outstanding }
  
  option -twamp_options_session_timeout \
    -configuremethod _c_./twampOptions/sessionTimeout \
    -cgetmethod _g_./twampOptions/sessionTimeout \
    -readonly false
  method _c_./twampOptions/sessionTimeout {t v} { $self _configure_relative ./twampOptions -session_timeout $v }
  method _g_./twampOptions/sessionTimeout {t} { $self _cget_relative ./twampOptions -session_timeout }
  # multiplier 
  method _m_twamp_options_session_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_options_session_timeout }
  
  option -static_hosts_options_object_id \
    -configuremethod _c_./staticHostsOptions/objectId \
    -cgetmethod _g_./staticHostsOptions/objectId \
    -readonly false
  method _c_./staticHostsOptions/objectId {t v} { $self _configure_relative ./staticHostsOptions -object_id $v }
  method _g_./staticHostsOptions/objectId {t} { $self _cget_relative ./staticHostsOptions -object_id }
  # multiplier 
  method _m_static_hosts_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -static_hosts_options_object_id }
  
  option -ancp_options_object_id \
    -configuremethod _c_./ancpOptions/objectId \
    -cgetmethod _g_./ancpOptions/objectId \
    -readonly false
  method _c_./ancpOptions/objectId {t v} { $self _configure_relative ./ancpOptions -object_id $v }
  method _g_./ancpOptions/objectId {t} { $self _cget_relative ./ancpOptions -object_id }
  # multiplier 
  method _m_ancp_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_options_object_id }
  
  option -ancp_options_resync_rate \
    -configuremethod _c_./ancpOptions/resyncRate \
    -cgetmethod _g_./ancpOptions/resyncRate \
    -readonly false
  method _c_./ancpOptions/resyncRate {t v} { $self _configure_relative ./ancpOptions -resync_rate $v }
  method _g_./ancpOptions/resyncRate {t} { $self _cget_relative ./ancpOptions -resync_rate }
  # multiplier 
  method _m_ancp_options_resync_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_options_resync_rate }
  
  option -ancp_options_port_down_rate \
    -configuremethod _c_./ancpOptions/portDownRate \
    -cgetmethod _g_./ancpOptions/portDownRate \
    -readonly false
  method _c_./ancpOptions/portDownRate {t v} { $self _configure_relative ./ancpOptions -port_down_rate $v }
  method _g_./ancpOptions/portDownRate {t} { $self _cget_relative ./ancpOptions -port_down_rate }
  # multiplier 
  method _m_ancp_options_port_down_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_options_port_down_rate }
  
  option -ancp_options_override_global_rate \
    -configuremethod _c_./ancpOptions/overrideGlobalRate \
    -cgetmethod _g_./ancpOptions/overrideGlobalRate \
    -readonly false
  method _c_./ancpOptions/overrideGlobalRate {t v} { $self _configure_relative ./ancpOptions -override_global_rate $v }
  method _g_./ancpOptions/overrideGlobalRate {t} { $self _cget_relative ./ancpOptions -override_global_rate }
  option -ancp_options_port_up_rate \
    -configuremethod _c_./ancpOptions/portUpRate \
    -cgetmethod _g_./ancpOptions/portUpRate \
    -readonly false
  method _c_./ancpOptions/portUpRate {t v} { $self _configure_relative ./ancpOptions -port_up_rate $v }
  method _g_./ancpOptions/portUpRate {t} { $self _cget_relative ./ancpOptions -port_up_rate }
  # multiplier 
  method _m_ancp_options_port_up_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_options_port_up_rate }
  
  option -l2tp_options_override_global_rate_controls \
    -configuremethod _c_./l2tpOptions/overrideGlobalRateControls \
    -cgetmethod _g_./l2tpOptions/overrideGlobalRateControls \
    -readonly false
  method _c_./l2tpOptions/overrideGlobalRateControls {t v} { $self _configure_relative ./l2tpOptions -override_global_rate_controls $v }
  method _g_./l2tpOptions/overrideGlobalRateControls {t} { $self _cget_relative ./l2tpOptions -override_global_rate_controls }
  option -l2tp_options_ipv6_global_address_mode \
    -configuremethod _c_./l2tpOptions/ipv6GlobalAddressMode \
    -cgetmethod _g_./l2tpOptions/ipv6GlobalAddressMode \
    -readonly false
  method _c_./l2tpOptions/ipv6GlobalAddressMode {t v} { $self _configure_relative ./l2tpOptions -ipv6_global_address_mode $v }
  method _g_./l2tpOptions/ipv6GlobalAddressMode {t} { $self _cget_relative ./l2tpOptions -ipv6_global_address_mode }
  # multiplier 
  method _m_l2tp_options_ipv6_global_address_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -l2tp_options_ipv6_global_address_mode }
  
  option -l2tp_options_role \
    -configuremethod _c_./l2tpOptions/role \
    -cgetmethod _g_./l2tpOptions/role \
    -readonly false
  method _c_./l2tpOptions/role {t v} { $self _configure_relative ./l2tpOptions -role $v }
  method _g_./l2tpOptions/role {t} { $self _cget_relative ./l2tpOptions -role }
  # multiplier 
  method _m_l2tp_options_role {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -l2tp_options_role }
  
  option -l2tp_options_max_outstanding_requests \
    -configuremethod _c_./l2tpOptions/maxOutstandingRequests \
    -cgetmethod _g_./l2tpOptions/maxOutstandingRequests \
    -readonly false
  method _c_./l2tpOptions/maxOutstandingRequests {t v} { $self _configure_relative ./l2tpOptions -max_outstanding_requests $v }
  method _g_./l2tpOptions/maxOutstandingRequests {t} { $self _cget_relative ./l2tpOptions -max_outstanding_requests }
  # multiplier 
  method _m_l2tp_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -l2tp_options_max_outstanding_requests }
  
  option -l2tp_options_teardown_rate_initial \
    -configuremethod _c_./l2tpOptions/teardownRateInitial \
    -cgetmethod _g_./l2tpOptions/teardownRateInitial \
    -readonly false
  method _c_./l2tpOptions/teardownRateInitial {t v} { $self _configure_relative ./l2tpOptions -teardown_rate_initial $v }
  method _g_./l2tpOptions/teardownRateInitial {t} { $self _cget_relative ./l2tpOptions -teardown_rate_initial }
  # multiplier 
  method _m_l2tp_options_teardown_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -l2tp_options_teardown_rate_initial }
  
  option -l2tp_options_use_wait_for_completion_timeout \
    -configuremethod _c_./l2tpOptions/useWaitForCompletionTimeout \
    -cgetmethod _g_./l2tpOptions/useWaitForCompletionTimeout \
    -readonly false
  method _c_./l2tpOptions/useWaitForCompletionTimeout {t v} { $self _configure_relative ./l2tpOptions -use_wait_for_completion_timeout $v }
  method _g_./l2tpOptions/useWaitForCompletionTimeout {t} { $self _cget_relative ./l2tpOptions -use_wait_for_completion_timeout }
  option -l2tp_options_enable_per_session_stat_generation \
    -configuremethod _c_./l2tpOptions/enablePerSessionStatGeneration \
    -cgetmethod _g_./l2tpOptions/enablePerSessionStatGeneration \
    -readonly false
  method _c_./l2tpOptions/enablePerSessionStatGeneration {t v} { $self _configure_relative ./l2tpOptions -enable_per_session_stat_generation $v }
  method _g_./l2tpOptions/enablePerSessionStatGeneration {t} { $self _cget_relative ./l2tpOptions -enable_per_session_stat_generation }
  option -l2tp_options_associates \
    -configuremethod _c_./l2tpOptions/associates \
    -cgetmethod _g_./l2tpOptions/associates \
    -readonly false
  method _c_./l2tpOptions/associates {t v} { $self _configure_relative ./l2tpOptions -associates $v }
  method _g_./l2tpOptions/associates {t} { $self _cget_relative ./l2tpOptions -associates }
  option -l2tp_options_setup_rate_initial \
    -configuremethod _c_./l2tpOptions/setupRateInitial \
    -cgetmethod _g_./l2tpOptions/setupRateInitial \
    -readonly false
  method _c_./l2tpOptions/setupRateInitial {t v} { $self _configure_relative ./l2tpOptions -setup_rate_initial $v }
  method _g_./l2tpOptions/setupRateInitial {t} { $self _cget_relative ./l2tpOptions -setup_rate_initial }
  # multiplier 
  method _m_l2tp_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -l2tp_options_setup_rate_initial }
  
  option -l2tp_options_max_outstanding_releases \
    -configuremethod _c_./l2tpOptions/maxOutstandingReleases \
    -cgetmethod _g_./l2tpOptions/maxOutstandingReleases \
    -readonly false
  method _c_./l2tpOptions/maxOutstandingReleases {t v} { $self _configure_relative ./l2tpOptions -max_outstanding_releases $v }
  method _g_./l2tpOptions/maxOutstandingReleases {t} { $self _cget_relative ./l2tpOptions -max_outstanding_releases }
  # multiplier 
  method _m_l2tp_options_max_outstanding_releases {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -l2tp_options_max_outstanding_releases }
  
  option -l2tp_options_ra_timeout \
    -configuremethod _c_./l2tpOptions/raTimeout \
    -cgetmethod _g_./l2tpOptions/raTimeout \
    -readonly false
  method _c_./l2tpOptions/raTimeout {t v} { $self _configure_relative ./l2tpOptions -ra_timeout $v }
  method _g_./l2tpOptions/raTimeout {t} { $self _cget_relative ./l2tpOptions -ra_timeout }
  # multiplier 
  method _m_l2tp_options_ra_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -l2tp_options_ra_timeout }
  
  option -l2tp_options_object_id \
    -configuremethod _c_./l2tpOptions/objectId \
    -cgetmethod _g_./l2tpOptions/objectId \
    -readonly false
  method _c_./l2tpOptions/objectId {t v} { $self _configure_relative ./l2tpOptions -object_id $v }
  method _g_./l2tpOptions/objectId {t} { $self _cget_relative ./l2tpOptions -object_id }
  # multiplier 
  method _m_l2tp_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -l2tp_options_object_id }
  
  option -l2tp_options_wait_for_completion_timeout \
    -configuremethod _c_./l2tpOptions/waitForCompletionTimeout \
    -cgetmethod _g_./l2tpOptions/waitForCompletionTimeout \
    -readonly false
  method _c_./l2tpOptions/waitForCompletionTimeout {t v} { $self _configure_relative ./l2tpOptions -wait_for_completion_timeout $v }
  method _g_./l2tpOptions/waitForCompletionTimeout {t} { $self _cget_relative ./l2tpOptions -wait_for_completion_timeout }
  # multiplier 
  method _m_l2tp_options_wait_for_completion_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -l2tp_options_wait_for_completion_timeout }
  
  option -l2tp_options_per_session_stat_file_prefix \
    -configuremethod _c_./l2tpOptions/perSessionStatFilePrefix \
    -cgetmethod _g_./l2tpOptions/perSessionStatFilePrefix \
    -readonly false
  method _c_./l2tpOptions/perSessionStatFilePrefix {t v} { $self _configure_relative ./l2tpOptions -per_session_stat_file_prefix $v }
  method _g_./l2tpOptions/perSessionStatFilePrefix {t} { $self _cget_relative ./l2tpOptions -per_session_stat_file_prefix }
  # multiplier 
  method _m_l2tp_options_per_session_stat_file_prefix {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -l2tp_options_per_session_stat_file_prefix }
  
  option -dhcpv6_client_options_object_id \
    -configuremethod _c_./dhcpv6ClientOptions/objectId \
    -cgetmethod _g_./dhcpv6ClientOptions/objectId \
    -readonly false
  method _c_./dhcpv6ClientOptions/objectId {t v} { $self _configure_relative ./dhcpv6ClientOptions -object_id $v }
  method _g_./dhcpv6ClientOptions/objectId {t} { $self _cget_relative ./dhcpv6ClientOptions -object_id }
  # multiplier 
  method _m_dhcpv6_client_options_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dhcpv6_client_options_object_id }
  
  option -dhcpv6_client_options_max_outstanding_requests \
    -configuremethod _c_./dhcpv6ClientOptions/maxOutstandingRequests \
    -cgetmethod _g_./dhcpv6ClientOptions/maxOutstandingRequests \
    -readonly false
  method _c_./dhcpv6ClientOptions/maxOutstandingRequests {t v} { $self _configure_relative ./dhcpv6ClientOptions -max_outstanding_requests $v }
  method _g_./dhcpv6ClientOptions/maxOutstandingRequests {t} { $self _cget_relative ./dhcpv6ClientOptions -max_outstanding_requests }
  # multiplier 
  method _m_dhcpv6_client_options_max_outstanding_requests {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_client_options_max_outstanding_requests }
  
  option -dhcpv6_client_options_setup_rate_increment \
    -configuremethod _c_./dhcpv6ClientOptions/setupRateIncrement \
    -cgetmethod _g_./dhcpv6ClientOptions/setupRateIncrement \
    -readonly false
  method _c_./dhcpv6ClientOptions/setupRateIncrement {t v} { $self _configure_relative ./dhcpv6ClientOptions -setup_rate_increment $v }
  method _g_./dhcpv6ClientOptions/setupRateIncrement {t} { $self _cget_relative ./dhcpv6ClientOptions -setup_rate_increment }
  # multiplier 
  method _m_dhcpv6_client_options_setup_rate_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_client_options_setup_rate_increment }
  
  option -dhcpv6_client_options_override_global_setup_rate \
    -configuremethod _c_./dhcpv6ClientOptions/overrideGlobalSetupRate \
    -cgetmethod _g_./dhcpv6ClientOptions/overrideGlobalSetupRate \
    -readonly false
  method _c_./dhcpv6ClientOptions/overrideGlobalSetupRate {t v} { $self _configure_relative ./dhcpv6ClientOptions -override_global_setup_rate $v }
  method _g_./dhcpv6ClientOptions/overrideGlobalSetupRate {t} { $self _cget_relative ./dhcpv6ClientOptions -override_global_setup_rate }
  option -dhcpv6_client_options_associates \
    -configuremethod _c_./dhcpv6ClientOptions/associates \
    -cgetmethod _g_./dhcpv6ClientOptions/associates \
    -readonly false
  method _c_./dhcpv6ClientOptions/associates {t v} { $self _configure_relative ./dhcpv6ClientOptions -associates $v }
  method _g_./dhcpv6ClientOptions/associates {t} { $self _cget_relative ./dhcpv6ClientOptions -associates }
  option -dhcpv6_client_options_setup_rate_max \
    -configuremethod _c_./dhcpv6ClientOptions/setupRateMax \
    -cgetmethod _g_./dhcpv6ClientOptions/setupRateMax \
    -readonly false
  method _c_./dhcpv6ClientOptions/setupRateMax {t v} { $self _configure_relative ./dhcpv6ClientOptions -setup_rate_max $v }
  method _g_./dhcpv6ClientOptions/setupRateMax {t} { $self _cget_relative ./dhcpv6ClientOptions -setup_rate_max }
  # multiplier 
  method _m_dhcpv6_client_options_setup_rate_max {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_client_options_setup_rate_max }
  
  option -dhcpv6_client_options_setup_rate_initial \
    -configuremethod _c_./dhcpv6ClientOptions/setupRateInitial \
    -cgetmethod _g_./dhcpv6ClientOptions/setupRateInitial \
    -readonly false
  method _c_./dhcpv6ClientOptions/setupRateInitial {t v} { $self _configure_relative ./dhcpv6ClientOptions -setup_rate_initial $v }
  method _g_./dhcpv6ClientOptions/setupRateInitial {t} { $self _cget_relative ./dhcpv6ClientOptions -setup_rate_initial }
  # multiplier 
  method _m_dhcpv6_client_options_setup_rate_initial {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -dhcpv6_client_options_setup_rate_initial }
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -fcoe_client_options_object_id ./fcoeClientOptions/objectId
    -fcoe_client_options_max_packets_per_second ./fcoeClientOptions/maxPacketsPerSecond
    -fcoe_client_options_teardown_rate ./fcoeClientOptions/teardownRate
    -fcoe_client_options_setup_rate ./fcoeClientOptions/setupRate
    -fcoe_client_options_override_global_rate ./fcoeClientOptions/overrideGlobalRate
    -fcoe_client_options_associates ./fcoeClientOptions/associates
    -ptp_options_object_id ./ptpOptions/objectId
    -ptp_options_teardown_rate ./ptpOptions/teardownRate
    -ptp_options_override_global_rate_options ./ptpOptions/overrideGlobalRateOptions
    -ptp_options_setup_rate ./ptpOptions/setupRate
    -ptp_options_role ./ptpOptions/role
    -ptp_options_max_outstanding ./ptpOptions/maxOutstanding
    -sm_dns_options_object_id ./smDnsOptions/objectId
    -sm_dns_options_pcpu_log_level ./smDnsOptions/pcpuLogLevel
    -igmp_options_object_id ./igmpOptions/objectId
    -igmp_options_max_packets_per_second ./igmpOptions/maxPacketsPerSecond
    -igmp_options_override_global_rate ./igmpOptions/overrideGlobalRate
    -igmp_options_associates ./igmpOptions/associates
    -fcoe_fwd_options_object_id ./fcoeFwdOptions/objectId
    -fcoe_fwd_options_max_packets_per_second ./fcoeFwdOptions/maxPacketsPerSecond
    -fcoe_fwd_options_override_global_rate ./fcoeFwdOptions/overrideGlobalRate
    -fcoe_fwd_options_unsol_discovery_tpid ./fcoeFwdOptions/unsolDiscoveryTpid
    -ip_range_options_object_id ./ipRangeOptions/objectId
    -ip_range_options_ipv6_address_mode ./ipRangeOptions/ipv6AddressMode
    -ip_range_options_ipv6_config_rate_enable ./ipRangeOptions/ipv6ConfigRateEnable
    -ip_range_options_icmpv6_discard_router_advertisements ./ipRangeOptions/icmpv6DiscardRouterAdvertisements
    -ip_range_options_gateway_arp_request_rate ./ipRangeOptions/gatewayArpRequestRate
    -ip_range_options_ipv6_config_rate ./ipRangeOptions/ipv6ConfigRate
    -ip_range_options_max_outstanding_gateway_arp_requests ./ipRangeOptions/maxOutstandingGatewayArpRequests
    -dhcpv6_pd_client_options_setup_rate_increment ./dhcpv6PdClientOptions/setupRateIncrement
    -dhcpv6_pd_client_options_max_outstanding_requests ./dhcpv6PdClientOptions/maxOutstandingRequests
    -dhcpv6_pd_client_options_teardown_rate_initial ./dhcpv6PdClientOptions/teardownRateInitial
    -dhcpv6_pd_client_options_setup_rate_max ./dhcpv6PdClientOptions/setupRateMax
    -dhcpv6_pd_client_options_setup_rate_initial ./dhcpv6PdClientOptions/setupRateInitial
    -dhcpv6_pd_client_options_associates ./dhcpv6PdClientOptions/associates
    -dhcpv6_pd_client_options_override_global_teardown_rate ./dhcpv6PdClientOptions/overrideGlobalTeardownRate
    -dhcpv6_pd_client_options_max_outstanding_releases ./dhcpv6PdClientOptions/maxOutstandingReleases
    -dhcpv6_pd_client_options_object_id ./dhcpv6PdClientOptions/objectId
    -dhcpv6_pd_client_options_teardown_rate_increment ./dhcpv6PdClientOptions/teardownRateIncrement
    -dhcpv6_pd_client_options_override_global_setup_rate ./dhcpv6PdClientOptions/overrideGlobalSetupRate
    -dhcpv6_pd_client_options_teardown_rate_max ./dhcpv6PdClientOptions/teardownRateMax
    -egtp_mme_options_enable_ipdefragmentation ./egtpMmeOptions/enableIPDefragmentation
    -egtp_mme_options_enable_different_teid_per_enode_b ./egtpMmeOptions/enableDifferentTeidPerENodeB
    -egtp_mme_options_override_global_rate_controls ./egtpMmeOptions/overrideGlobalRateControls
    -egtp_mme_options_max_outstanding_requests ./egtpMmeOptions/maxOutstandingRequests
    -egtp_mme_options_teardown_rate_initial ./egtpMmeOptions/teardownRateInitial
    -egtp_mme_options_always_include_recovery_ie ./egtpMmeOptions/alwaysIncludeRecoveryIe
    -egtp_mme_options_setup_rate_initial ./egtpMmeOptions/setupRateInitial
    -egtp_mme_options_associates ./egtpMmeOptions/associates
    -egtp_mme_options_max_outstanding_releases ./egtpMmeOptions/maxOutstandingReleases
    -egtp_mme_options_pcpu_log_level ./egtpMmeOptions/pcpuLogLevel
    -egtp_mme_options_object_id ./egtpMmeOptions/objectId
    -egtp_mme_options_delete_idle_bearers ./egtpMmeOptions/deleteIdleBearers
    -egtp_mme_options_s5s8_interface_type ./egtpMmeOptions/s5s8InterfaceType
    -egtp_server_options_object_id ./egtpServerOptions/objectId
    -egtp_server_options_enable_create_bearer_tfthack ./egtpServerOptions/enableCreateBearerTFTHack
    -egtp_server_options_pcpu_log_level ./egtpServerOptions/pcpuLogLevel
    -egtp_server_options_distribute_user_plane_ips ./egtpServerOptions/distributeUserPlaneIps
    -egtp_server_options_enable_dynamic_allocation ./egtpServerOptions/enableDynamicAllocation
    -egtp_server_options_publish_statistics ./egtpServerOptions/publishStatistics
    -ethernet_options_object_id ./ethernetOptions/objectId
    -pppox_options_ipv6_global_address_mode ./pppoxOptions/ipv6GlobalAddressMode
    -pppox_options_override_global_rate_controls ./pppoxOptions/overrideGlobalRateControls
    -pppox_options_enable_per_session_stat_generation ./pppoxOptions/enablePerSessionStatGeneration
    -pppox_options_role ./pppoxOptions/role
    -pppox_options_max_outstanding_requests ./pppoxOptions/maxOutstandingRequests
    -pppox_options_teardown_rate_initial ./pppoxOptions/teardownRateInitial
    -pppox_options_use_wait_for_completion_timeout ./pppoxOptions/useWaitForCompletionTimeout
    -pppox_options_associates ./pppoxOptions/associates
    -pppox_options_setup_rate_initial ./pppoxOptions/setupRateInitial
    -pppox_options_re_connect_on_link_up ./pppoxOptions/reConnectOnLinkUp
    -pppox_options_max_outstanding_releases ./pppoxOptions/maxOutstandingReleases
    -pppox_options_ra_timeout ./pppoxOptions/raTimeout
    -pppox_options_object_id ./pppoxOptions/objectId
    -pppox_options_per_session_stat_file_prefix ./pppoxOptions/perSessionStatFilePrefix
    -pppox_options_wait_for_completion_timeout ./pppoxOptions/waitForCompletionTimeout
    -pppox_options_filter_data_plane_before_l7 ./pppoxOptions/filterDataPlaneBeforeL7
    -pppox_options_waiting_time_until_reconnect ./pppoxOptions/waitingTimeUntilReconnect
    -fc_client_options_teardown_rate ./fcClientOptions/teardownRate
    -fc_client_options_b2b_rx_size ./fcClientOptions/b2bRxSize
    -fc_client_options_rt_tov_mode ./fcClientOptions/rtTovMode
    -fc_client_options_override_global_rate ./fcClientOptions/overrideGlobalRate
    -fc_client_options_ed_tov_mode ./fcClientOptions/edTovMode
    -fc_client_options_rt_tov ./fcClientOptions/rtTov
    -fc_client_options_associates ./fcClientOptions/associates
    -fc_client_options_b2b_credit ./fcClientOptions/b2bCredit
    -fc_client_options_ed_tov ./fcClientOptions/edTov
    -fc_client_options_max_packets_per_second ./fcClientOptions/maxPacketsPerSecond
    -fc_client_options_object_id ./fcClientOptions/objectId
    -fc_client_options_setup_rate ./fcClientOptions/setupRate
    -dhcp_hosts_options_object_id ./dhcpHostsOptions/objectId
    -egtp_sgw_options_object_id ./egtpSgwOptions/objectId
    -egtp_sgw_options_enable_create_bearer_tfthack ./egtpSgwOptions/enableCreateBearerTFTHack
    -egtp_sgw_options_pcpu_log_level ./egtpSgwOptions/pcpuLogLevel
    -egtp_sgw_options_distribute_user_plane_ips ./egtpSgwOptions/distributeUserPlaneIps
    -egtp_sgw_options_enable_dynamic_allocation ./egtpSgwOptions/enableDynamicAllocation
    -egtp_sgw_options_publish_statistics ./egtpSgwOptions/publishStatistics
    -egtp_sgw_options_fake_dual_stack ./egtpSgwOptions/fakeDualStack
    -amt_options_object_id ./amtOptions/objectId
    -amt_options_teardown_rate ./amtOptions/teardownRate
    -amt_options_tunnel_originate ./amtOptions/tunnelOriginate
    -amt_options_override_global_teardown_rate ./amtOptions/overrideGlobalTeardownRate
    -amt_options_max_outstanding_sessions ./amtOptions/maxOutstandingSessions
    -amt_options_setup_rate ./amtOptions/setupRate
    -amt_options_override_global_setup_rate ./amtOptions/overrideGlobalSetupRate
    -dhcpv6_server_options_object_id ./dhcpv6ServerOptions/objectId
    -dhcpv6_server_options_teardown_rate_increment ./dhcpv6ServerOptions/teardownRateIncrement
    -dhcpv6_server_options_override_global_teardown_rate ./dhcpv6ServerOptions/overrideGlobalTeardownRate
    -dhcpv6_server_options_max_outstanding_releases ./dhcpv6ServerOptions/maxOutstandingReleases
    -dhcpv6_server_options_teardown_rate_max ./dhcpv6ServerOptions/teardownRateMax
    -dhcpv6_server_options_teardown_rate_initial ./dhcpv6ServerOptions/teardownRateInitial
    -dhcpv6_server_options_max_outstanding_requests ./dhcpv6ServerOptions/maxOutstandingRequests
    -dhcpv6_server_options_setup_rate_increment ./dhcpv6ServerOptions/setupRateIncrement
    -dhcpv6_server_options_override_global_setup_rate ./dhcpv6ServerOptions/overrideGlobalSetupRate
    -dhcpv6_server_options_setup_rate_max ./dhcpv6ServerOptions/setupRateMax
    -dhcpv6_server_options_setup_rate_initial ./dhcpv6ServerOptions/setupRateInitial
    -egtp_options_base_object_id ./egtpOptionsBase/objectId
    -egtp_options_base_pcpu_log_level ./egtpOptionsBase/pcpuLogLevel
    -egtp_s5_s8_sgw_options_object_id ./egtpS5S8SgwOptions/objectId
    -egtp_s5_s8_sgw_options_delete_idle_bearers ./egtpS5S8SgwOptions/deleteIdleBearers
    -egtp_s5_s8_sgw_options_override_global_rate_controls ./egtpS5S8SgwOptions/overrideGlobalRateControls
    -egtp_s5_s8_sgw_options_pcpu_log_level ./egtpS5S8SgwOptions/pcpuLogLevel
    -egtp_s5_s8_sgw_options_always_include_recovery_ie ./egtpS5S8SgwOptions/alwaysIncludeRecoveryIE
    -egtp_s5_s8_sgw_options_max_outstanding_releases ./egtpS5S8SgwOptions/maxOutstandingReleases
    -egtp_s5_s8_sgw_options_teardown_rate_initial ./egtpS5S8SgwOptions/teardownRateInitial
    -egtp_s5_s8_sgw_options_max_outstanding_requests ./egtpS5S8SgwOptions/maxOutstandingRequests
    -egtp_s5_s8_sgw_options_associates ./egtpS5S8SgwOptions/associates
    -egtp_s5_s8_sgw_options_setup_rate_initial ./egtpS5S8SgwOptions/setupRateInitial
    -vepa_options_object_id ./vepaOptions/objectId
    -vepa_options_teardown_rate ./vepaOptions/teardownRate
    -vepa_options_override_global_vsi_rate_control ./vepaOptions/overrideGlobalVsiRateControl
    -vepa_options_lldp_evb_destination_mac ./vepaOptions/lldpEvbDestinationMac
    -vepa_options_setup_rate ./vepaOptions/setupRate
    -vepa_options_lldp_cdcp_destination_mac ./vepaOptions/lldpCdcpDestinationMac
    -vepa_options_max_vdp_commands ./vepaOptions/maxVdpCommands
    -vepa_options_ecp_ethertype ./vepaOptions/ecpEthertype
    -vepa_options_ecp_destination_mac ./vepaOptions/ecpDestinationMac
    -fc_fport_options_object_id ./fcFportOptions/objectId
    -fc_fport_options_max_packets_per_second ./fcFportOptions/maxPacketsPerSecond
    -fc_fport_options_override_global_rate ./fcFportOptions/overrideGlobalRate
    -fc_fport_options_b2b_credit ./fcFportOptions/b2bCredit
    -fc_fport_options_ed_tov ./fcFportOptions/edTov
    -fc_fport_options_rt_tov ./fcFportOptions/rtTov
    -eapo_udp_options_object_id ./eapoUdpOptions/objectId
    -eapo_udp_options_max_outstanding_requests ./eapoUdpOptions/maxOutstandingRequests
    -eapo_udp_options_override_global_setup_rate ./eapoUdpOptions/overrideGlobalSetupRate
    -eapo_udp_options_dut_mac ./eapoUdpOptions/dutMac
    -eapo_udp_options_icmp_trigger_target_address ./eapoUdpOptions/icmpTriggerTargetAddress
    -eapo_udp_options_max_clients_per_second ./eapoUdpOptions/maxClientsPerSecond
    -egtp_client_options_object_id ./egtpClientOptions/objectId
    -egtp_client_options_delete_idle_bearers ./egtpClientOptions/deleteIdleBearers
    -egtp_client_options_override_global_rate_controls ./egtpClientOptions/overrideGlobalRateControls
    -egtp_client_options_pcpu_log_level ./egtpClientOptions/pcpuLogLevel
    -egtp_client_options_always_include_recovery_ie ./egtpClientOptions/alwaysIncludeRecoveryIE
    -egtp_client_options_max_outstanding_releases ./egtpClientOptions/maxOutstandingReleases
    -egtp_client_options_teardown_rate_initial ./egtpClientOptions/teardownRateInitial
    -egtp_client_options_max_outstanding_requests ./egtpClientOptions/maxOutstandingRequests
    -egtp_client_options_setup_rate_initial ./egtpClientOptions/setupRateInitial
    -dhcp_options_setup_rate_increment ./dhcpOptions/setupRateIncrement
    -dhcp_options_max_outstanding_requests ./dhcpOptions/maxOutstandingRequests
    -dhcp_options_teardown_rate_initial ./dhcpOptions/teardownRateInitial
    -dhcp_options_setup_rate_max ./dhcpOptions/setupRateMax
    -dhcp_options_setup_rate_initial ./dhcpOptions/setupRateInitial
    -dhcp_options_associates ./dhcpOptions/associates
    -dhcp_options_override_global_teardown_rate ./dhcpOptions/overrideGlobalTeardownRate
    -dhcp_options_max_outstanding_releases ./dhcpOptions/maxOutstandingReleases
    -dhcp_options_object_id ./dhcpOptions/objectId
    -dhcp_options_teardown_rate_increment ./dhcpOptions/teardownRateIncrement
    -dhcp_options_override_global_setup_rate ./dhcpOptions/overrideGlobalSetupRate
    -dhcp_options_teardown_rate_max ./dhcpOptions/teardownRateMax
    -twamp_server_options_object_id ./twampServerOptions/objectId
    -twamp_server_options_error_estimate_multiplier ./twampServerOptions/errorEstimateMultiplier
    -twamp_server_options_error_estimate_scale ./twampServerOptions/errorEstimateScale
    -web_auth_options_object_id ./webAuthOptions/objectId
    -web_auth_options_max_outstanding_requests ./webAuthOptions/maxOutstandingRequests
    -web_auth_options_override_global_setup_rate ./webAuthOptions/overrideGlobalSetupRate
    -web_auth_options_max_clients_per_second ./webAuthOptions/maxClientsPerSecond
    -web_auth_options_override_global_arp_response ./webAuthOptions/overrideGlobalArpResponse
    -dot1x_options_object_id ./dot1xOptions/objectId
    -dot1x_options_logoff_max_clients_per_second ./dot1xOptions/logoffMaxClientsPerSecond
    -dot1x_options_max_outstanding_requests ./dot1xOptions/maxOutstandingRequests
    -dot1x_options_override_global_setup_rate ./dot1xOptions/overrideGlobalSetupRate
    -dot1x_options_max_clients_per_second ./dot1xOptions/maxClientsPerSecond
    -options_object_id ./options/objectId
    -options_dad_enabled ./options/dadEnabled
    -options_router_solicitation_interval ./options/routerSolicitationInterval
    -options_ipv4_retrans_time ./options/ipv4RetransTime
    -options_ipv4_mcast_solicit ./options/ipv4McastSolicit
    -options_dad_transmits ./options/dadTransmits
    -options_mcast_solicit ./options/mcast_solicit
    -options_retrans_time ./options/retransTime
    -options_router_solicitations ./options/routerSolicitations
    -options_router_solicitation_delay ./options/routerSolicitationDelay
    -egtp_s5_s8_pgw_options_object_id ./egtpS5S8PgwOptions/objectId
    -egtp_s5_s8_pgw_options_enable_create_bearer_tfthack ./egtpS5S8PgwOptions/enableCreateBearerTFTHack
    -egtp_s5_s8_pgw_options_pcpu_log_level ./egtpS5S8PgwOptions/pcpuLogLevel
    -egtp_s5_s8_pgw_options_distribute_user_plane_ips ./egtpS5S8PgwOptions/distributeUserPlaneIps
    -egtp_s5_s8_pgw_options_enable_dynamic_allocation ./egtpS5S8PgwOptions/enableDynamicAllocation
    -egtp_s5_s8_pgw_options_publish_statistics ./egtpS5S8PgwOptions/publishStatistics
    -twamp_options_object_id ./twampOptions/objectId
    -twamp_options_teardown_rate ./twampOptions/teardownRate
    -twamp_options_error_estimate_multiplier ./twampOptions/errorEstimateMultiplier
    -twamp_options_override_global_rate_options ./twampOptions/overrideGlobalRateOptions
    -twamp_options_setup_rate ./twampOptions/setupRate
    -twamp_options_error_estimate_scale ./twampOptions/errorEstimateScale
    -twamp_options_max_outstanding ./twampOptions/maxOutstanding
    -twamp_options_session_timeout ./twampOptions/sessionTimeout
    -static_hosts_options_object_id ./staticHostsOptions/objectId
    -ancp_options_object_id ./ancpOptions/objectId
    -ancp_options_resync_rate ./ancpOptions/resyncRate
    -ancp_options_port_down_rate ./ancpOptions/portDownRate
    -ancp_options_override_global_rate ./ancpOptions/overrideGlobalRate
    -ancp_options_port_up_rate ./ancpOptions/portUpRate
    -l2tp_options_override_global_rate_controls ./l2tpOptions/overrideGlobalRateControls
    -l2tp_options_ipv6_global_address_mode ./l2tpOptions/ipv6GlobalAddressMode
    -l2tp_options_role ./l2tpOptions/role
    -l2tp_options_max_outstanding_requests ./l2tpOptions/maxOutstandingRequests
    -l2tp_options_teardown_rate_initial ./l2tpOptions/teardownRateInitial
    -l2tp_options_use_wait_for_completion_timeout ./l2tpOptions/useWaitForCompletionTimeout
    -l2tp_options_enable_per_session_stat_generation ./l2tpOptions/enablePerSessionStatGeneration
    -l2tp_options_associates ./l2tpOptions/associates
    -l2tp_options_setup_rate_initial ./l2tpOptions/setupRateInitial
    -l2tp_options_max_outstanding_releases ./l2tpOptions/maxOutstandingReleases
    -l2tp_options_ra_timeout ./l2tpOptions/raTimeout
    -l2tp_options_object_id ./l2tpOptions/objectId
    -l2tp_options_wait_for_completion_timeout ./l2tpOptions/waitForCompletionTimeout
    -l2tp_options_per_session_stat_file_prefix ./l2tpOptions/perSessionStatFilePrefix
    -dhcpv6_client_options_object_id ./dhcpv6ClientOptions/objectId
    -dhcpv6_client_options_max_outstanding_requests ./dhcpv6ClientOptions/maxOutstandingRequests
    -dhcpv6_client_options_setup_rate_increment ./dhcpv6ClientOptions/setupRateIncrement
    -dhcpv6_client_options_override_global_setup_rate ./dhcpv6ClientOptions/overrideGlobalSetupRate
    -dhcpv6_client_options_associates ./dhcpv6ClientOptions/associates
    -dhcpv6_client_options_setup_rate_max ./dhcpv6ClientOptions/setupRateMax
    -dhcpv6_client_options_setup_rate_initial ./dhcpv6ClientOptions/setupRateInitial
    -object_id objectId
  }
  #
  variable MultiplierOptionGroups {
    _m_fcoe_client_options_object_id {-fcoe_client_options_object_id_format -fcoe_client_options_object_id_base -fcoe_client_options_object_id_incr}
    _m_fcoe_client_options_max_packets_per_second {-fcoe_client_options_max_packets_per_second_base -fcoe_client_options_max_packets_per_second_incr}
    _m_fcoe_client_options_teardown_rate {-fcoe_client_options_teardown_rate_base -fcoe_client_options_teardown_rate_incr}
    _m_fcoe_client_options_setup_rate {-fcoe_client_options_setup_rate_base -fcoe_client_options_setup_rate_incr}
    _m_ptp_options_object_id {-ptp_options_object_id_format -ptp_options_object_id_base -ptp_options_object_id_incr}
    _m_ptp_options_teardown_rate {-ptp_options_teardown_rate_base -ptp_options_teardown_rate_incr}
    _m_ptp_options_setup_rate {-ptp_options_setup_rate_base -ptp_options_setup_rate_incr}
    _m_ptp_options_role {-ptp_options_role_format -ptp_options_role_base -ptp_options_role_incr}
    _m_ptp_options_max_outstanding {-ptp_options_max_outstanding_base -ptp_options_max_outstanding_incr}
    _m_sm_dns_options_object_id {-sm_dns_options_object_id_format -sm_dns_options_object_id_base -sm_dns_options_object_id_incr}
    _m_sm_dns_options_pcpu_log_level {-sm_dns_options_pcpu_log_level_format -sm_dns_options_pcpu_log_level_base -sm_dns_options_pcpu_log_level_incr}
    _m_igmp_options_object_id {-igmp_options_object_id_format -igmp_options_object_id_base -igmp_options_object_id_incr}
    _m_igmp_options_max_packets_per_second {-igmp_options_max_packets_per_second_base -igmp_options_max_packets_per_second_incr}
    _m_fcoe_fwd_options_object_id {-fcoe_fwd_options_object_id_format -fcoe_fwd_options_object_id_base -fcoe_fwd_options_object_id_incr}
    _m_fcoe_fwd_options_max_packets_per_second {-fcoe_fwd_options_max_packets_per_second_base -fcoe_fwd_options_max_packets_per_second_incr}
    _m_fcoe_fwd_options_unsol_discovery_tpid {-fcoe_fwd_options_unsol_discovery_tpid_format -fcoe_fwd_options_unsol_discovery_tpid_base -fcoe_fwd_options_unsol_discovery_tpid_incr}
    _m_ip_range_options_object_id {-ip_range_options_object_id_format -ip_range_options_object_id_base -ip_range_options_object_id_incr}
    _m_ip_range_options_ipv6_address_mode {-ip_range_options_ipv6_address_mode_format -ip_range_options_ipv6_address_mode_base -ip_range_options_ipv6_address_mode_incr}
    _m_ip_range_options_gateway_arp_request_rate {-ip_range_options_gateway_arp_request_rate_base -ip_range_options_gateway_arp_request_rate_incr}
    _m_ip_range_options_ipv6_config_rate {-ip_range_options_ipv6_config_rate_base -ip_range_options_ipv6_config_rate_incr}
    _m_ip_range_options_max_outstanding_gateway_arp_requests {-ip_range_options_max_outstanding_gateway_arp_requests_base -ip_range_options_max_outstanding_gateway_arp_requests_incr}
    _m_dhcpv6_pd_client_options_setup_rate_increment {-dhcpv6_pd_client_options_setup_rate_increment_base -dhcpv6_pd_client_options_setup_rate_increment_incr}
    _m_dhcpv6_pd_client_options_max_outstanding_requests {-dhcpv6_pd_client_options_max_outstanding_requests_base -dhcpv6_pd_client_options_max_outstanding_requests_incr}
    _m_dhcpv6_pd_client_options_teardown_rate_initial {-dhcpv6_pd_client_options_teardown_rate_initial_base -dhcpv6_pd_client_options_teardown_rate_initial_incr}
    _m_dhcpv6_pd_client_options_setup_rate_max {-dhcpv6_pd_client_options_setup_rate_max_base -dhcpv6_pd_client_options_setup_rate_max_incr}
    _m_dhcpv6_pd_client_options_setup_rate_initial {-dhcpv6_pd_client_options_setup_rate_initial_base -dhcpv6_pd_client_options_setup_rate_initial_incr}
    _m_dhcpv6_pd_client_options_max_outstanding_releases {-dhcpv6_pd_client_options_max_outstanding_releases_base -dhcpv6_pd_client_options_max_outstanding_releases_incr}
    _m_dhcpv6_pd_client_options_object_id {-dhcpv6_pd_client_options_object_id_format -dhcpv6_pd_client_options_object_id_base -dhcpv6_pd_client_options_object_id_incr}
    _m_dhcpv6_pd_client_options_teardown_rate_increment {-dhcpv6_pd_client_options_teardown_rate_increment_base -dhcpv6_pd_client_options_teardown_rate_increment_incr}
    _m_dhcpv6_pd_client_options_teardown_rate_max {-dhcpv6_pd_client_options_teardown_rate_max_base -dhcpv6_pd_client_options_teardown_rate_max_incr}
    _m_egtp_mme_options_max_outstanding_requests {-egtp_mme_options_max_outstanding_requests_base -egtp_mme_options_max_outstanding_requests_incr}
    _m_egtp_mme_options_teardown_rate_initial {-egtp_mme_options_teardown_rate_initial_base -egtp_mme_options_teardown_rate_initial_incr}
    _m_egtp_mme_options_setup_rate_initial {-egtp_mme_options_setup_rate_initial_base -egtp_mme_options_setup_rate_initial_incr}
    _m_egtp_mme_options_max_outstanding_releases {-egtp_mme_options_max_outstanding_releases_base -egtp_mme_options_max_outstanding_releases_incr}
    _m_egtp_mme_options_pcpu_log_level {-egtp_mme_options_pcpu_log_level_format -egtp_mme_options_pcpu_log_level_base -egtp_mme_options_pcpu_log_level_incr}
    _m_egtp_mme_options_object_id {-egtp_mme_options_object_id_format -egtp_mme_options_object_id_base -egtp_mme_options_object_id_incr}
    _m_egtp_mme_options_s5s8_interface_type {-egtp_mme_options_s5s8_interface_type_format -egtp_mme_options_s5s8_interface_type_base -egtp_mme_options_s5s8_interface_type_incr}
    _m_egtp_server_options_object_id {-egtp_server_options_object_id_format -egtp_server_options_object_id_base -egtp_server_options_object_id_incr}
    _m_egtp_server_options_pcpu_log_level {-egtp_server_options_pcpu_log_level_format -egtp_server_options_pcpu_log_level_base -egtp_server_options_pcpu_log_level_incr}
    _m_ethernet_options_object_id {-ethernet_options_object_id_format -ethernet_options_object_id_base -ethernet_options_object_id_incr}
    _m_pppox_options_ipv6_global_address_mode {-pppox_options_ipv6_global_address_mode_format -pppox_options_ipv6_global_address_mode_base -pppox_options_ipv6_global_address_mode_incr}
    _m_pppox_options_role {-pppox_options_role_format -pppox_options_role_base -pppox_options_role_incr}
    _m_pppox_options_max_outstanding_requests {-pppox_options_max_outstanding_requests_base -pppox_options_max_outstanding_requests_incr}
    _m_pppox_options_teardown_rate_initial {-pppox_options_teardown_rate_initial_base -pppox_options_teardown_rate_initial_incr}
    _m_pppox_options_setup_rate_initial {-pppox_options_setup_rate_initial_base -pppox_options_setup_rate_initial_incr}
    _m_pppox_options_max_outstanding_releases {-pppox_options_max_outstanding_releases_base -pppox_options_max_outstanding_releases_incr}
    _m_pppox_options_ra_timeout {-pppox_options_ra_timeout_base -pppox_options_ra_timeout_incr}
    _m_pppox_options_object_id {-pppox_options_object_id_format -pppox_options_object_id_base -pppox_options_object_id_incr}
    _m_pppox_options_per_session_stat_file_prefix {-pppox_options_per_session_stat_file_prefix_format -pppox_options_per_session_stat_file_prefix_base -pppox_options_per_session_stat_file_prefix_incr}
    _m_pppox_options_wait_for_completion_timeout {-pppox_options_wait_for_completion_timeout_base -pppox_options_wait_for_completion_timeout_incr}
    _m_pppox_options_waiting_time_until_reconnect {-pppox_options_waiting_time_until_reconnect_base -pppox_options_waiting_time_until_reconnect_incr}
    _m_fc_client_options_teardown_rate {-fc_client_options_teardown_rate_base -fc_client_options_teardown_rate_incr}
    _m_fc_client_options_b2b_rx_size {-fc_client_options_b2b_rx_size_base -fc_client_options_b2b_rx_size_incr}
    _m_fc_client_options_rt_tov_mode {-fc_client_options_rt_tov_mode_format -fc_client_options_rt_tov_mode_base -fc_client_options_rt_tov_mode_incr}
    _m_fc_client_options_ed_tov_mode {-fc_client_options_ed_tov_mode_format -fc_client_options_ed_tov_mode_base -fc_client_options_ed_tov_mode_incr}
    _m_fc_client_options_rt_tov {-fc_client_options_rt_tov_base -fc_client_options_rt_tov_incr}
    _m_fc_client_options_b2b_credit {-fc_client_options_b2b_credit_base -fc_client_options_b2b_credit_incr}
    _m_fc_client_options_ed_tov {-fc_client_options_ed_tov_base -fc_client_options_ed_tov_incr}
    _m_fc_client_options_max_packets_per_second {-fc_client_options_max_packets_per_second_base -fc_client_options_max_packets_per_second_incr}
    _m_fc_client_options_object_id {-fc_client_options_object_id_format -fc_client_options_object_id_base -fc_client_options_object_id_incr}
    _m_fc_client_options_setup_rate {-fc_client_options_setup_rate_base -fc_client_options_setup_rate_incr}
    _m_dhcp_hosts_options_object_id {-dhcp_hosts_options_object_id_format -dhcp_hosts_options_object_id_base -dhcp_hosts_options_object_id_incr}
    _m_egtp_sgw_options_object_id {-egtp_sgw_options_object_id_format -egtp_sgw_options_object_id_base -egtp_sgw_options_object_id_incr}
    _m_egtp_sgw_options_pcpu_log_level {-egtp_sgw_options_pcpu_log_level_format -egtp_sgw_options_pcpu_log_level_base -egtp_sgw_options_pcpu_log_level_incr}
    _m_amt_options_object_id {-amt_options_object_id_format -amt_options_object_id_base -amt_options_object_id_incr}
    _m_amt_options_teardown_rate {-amt_options_teardown_rate_base -amt_options_teardown_rate_incr}
    _m_amt_options_tunnel_originate {-amt_options_tunnel_originate_format -amt_options_tunnel_originate_base -amt_options_tunnel_originate_incr}
    _m_amt_options_max_outstanding_sessions {-amt_options_max_outstanding_sessions_base -amt_options_max_outstanding_sessions_incr}
    _m_amt_options_setup_rate {-amt_options_setup_rate_base -amt_options_setup_rate_incr}
    _m_dhcpv6_server_options_object_id {-dhcpv6_server_options_object_id_format -dhcpv6_server_options_object_id_base -dhcpv6_server_options_object_id_incr}
    _m_dhcpv6_server_options_teardown_rate_increment {-dhcpv6_server_options_teardown_rate_increment_base -dhcpv6_server_options_teardown_rate_increment_incr}
    _m_dhcpv6_server_options_max_outstanding_releases {-dhcpv6_server_options_max_outstanding_releases_base -dhcpv6_server_options_max_outstanding_releases_incr}
    _m_dhcpv6_server_options_teardown_rate_max {-dhcpv6_server_options_teardown_rate_max_base -dhcpv6_server_options_teardown_rate_max_incr}
    _m_dhcpv6_server_options_teardown_rate_initial {-dhcpv6_server_options_teardown_rate_initial_base -dhcpv6_server_options_teardown_rate_initial_incr}
    _m_dhcpv6_server_options_max_outstanding_requests {-dhcpv6_server_options_max_outstanding_requests_base -dhcpv6_server_options_max_outstanding_requests_incr}
    _m_dhcpv6_server_options_setup_rate_increment {-dhcpv6_server_options_setup_rate_increment_base -dhcpv6_server_options_setup_rate_increment_incr}
    _m_dhcpv6_server_options_setup_rate_max {-dhcpv6_server_options_setup_rate_max_base -dhcpv6_server_options_setup_rate_max_incr}
    _m_dhcpv6_server_options_setup_rate_initial {-dhcpv6_server_options_setup_rate_initial_base -dhcpv6_server_options_setup_rate_initial_incr}
    _m_egtp_options_base_object_id {-egtp_options_base_object_id_format -egtp_options_base_object_id_base -egtp_options_base_object_id_incr}
    _m_egtp_options_base_pcpu_log_level {-egtp_options_base_pcpu_log_level_format -egtp_options_base_pcpu_log_level_base -egtp_options_base_pcpu_log_level_incr}
    _m_egtp_s5_s8_sgw_options_object_id {-egtp_s5_s8_sgw_options_object_id_format -egtp_s5_s8_sgw_options_object_id_base -egtp_s5_s8_sgw_options_object_id_incr}
    _m_egtp_s5_s8_sgw_options_pcpu_log_level {-egtp_s5_s8_sgw_options_pcpu_log_level_format -egtp_s5_s8_sgw_options_pcpu_log_level_base -egtp_s5_s8_sgw_options_pcpu_log_level_incr}
    _m_egtp_s5_s8_sgw_options_max_outstanding_releases {-egtp_s5_s8_sgw_options_max_outstanding_releases_base -egtp_s5_s8_sgw_options_max_outstanding_releases_incr}
    _m_egtp_s5_s8_sgw_options_teardown_rate_initial {-egtp_s5_s8_sgw_options_teardown_rate_initial_base -egtp_s5_s8_sgw_options_teardown_rate_initial_incr}
    _m_egtp_s5_s8_sgw_options_max_outstanding_requests {-egtp_s5_s8_sgw_options_max_outstanding_requests_base -egtp_s5_s8_sgw_options_max_outstanding_requests_incr}
    _m_egtp_s5_s8_sgw_options_setup_rate_initial {-egtp_s5_s8_sgw_options_setup_rate_initial_base -egtp_s5_s8_sgw_options_setup_rate_initial_incr}
    _m_vepa_options_object_id {-vepa_options_object_id_format -vepa_options_object_id_base -vepa_options_object_id_incr}
    _m_vepa_options_teardown_rate {-vepa_options_teardown_rate_base -vepa_options_teardown_rate_incr}
    _m_vepa_options_lldp_evb_destination_mac {-vepa_options_lldp_evb_destination_mac_format -vepa_options_lldp_evb_destination_mac_base -vepa_options_lldp_evb_destination_mac_incr}
    _m_vepa_options_setup_rate {-vepa_options_setup_rate_base -vepa_options_setup_rate_incr}
    _m_vepa_options_lldp_cdcp_destination_mac {-vepa_options_lldp_cdcp_destination_mac_format -vepa_options_lldp_cdcp_destination_mac_base -vepa_options_lldp_cdcp_destination_mac_incr}
    _m_vepa_options_max_vdp_commands {-vepa_options_max_vdp_commands_base -vepa_options_max_vdp_commands_incr}
    _m_vepa_options_ecp_ethertype {-vepa_options_ecp_ethertype_format -vepa_options_ecp_ethertype_base -vepa_options_ecp_ethertype_incr}
    _m_vepa_options_ecp_destination_mac {-vepa_options_ecp_destination_mac_format -vepa_options_ecp_destination_mac_base -vepa_options_ecp_destination_mac_incr}
    _m_fc_fport_options_object_id {-fc_fport_options_object_id_format -fc_fport_options_object_id_base -fc_fport_options_object_id_incr}
    _m_fc_fport_options_max_packets_per_second {-fc_fport_options_max_packets_per_second_base -fc_fport_options_max_packets_per_second_incr}
    _m_fc_fport_options_b2b_credit {-fc_fport_options_b2b_credit_base -fc_fport_options_b2b_credit_incr}
    _m_fc_fport_options_ed_tov {-fc_fport_options_ed_tov_base -fc_fport_options_ed_tov_incr}
    _m_fc_fport_options_rt_tov {-fc_fport_options_rt_tov_base -fc_fport_options_rt_tov_incr}
    _m_eapo_udp_options_object_id {-eapo_udp_options_object_id_format -eapo_udp_options_object_id_base -eapo_udp_options_object_id_incr}
    _m_eapo_udp_options_max_outstanding_requests {-eapo_udp_options_max_outstanding_requests_base -eapo_udp_options_max_outstanding_requests_incr}
    _m_eapo_udp_options_dut_mac {-eapo_udp_options_dut_mac_format -eapo_udp_options_dut_mac_base -eapo_udp_options_dut_mac_incr}
    _m_eapo_udp_options_icmp_trigger_target_address {-eapo_udp_options_icmp_trigger_target_address_format -eapo_udp_options_icmp_trigger_target_address_base -eapo_udp_options_icmp_trigger_target_address_incr}
    _m_eapo_udp_options_max_clients_per_second {-eapo_udp_options_max_clients_per_second_base -eapo_udp_options_max_clients_per_second_incr}
    _m_egtp_client_options_object_id {-egtp_client_options_object_id_format -egtp_client_options_object_id_base -egtp_client_options_object_id_incr}
    _m_egtp_client_options_pcpu_log_level {-egtp_client_options_pcpu_log_level_format -egtp_client_options_pcpu_log_level_base -egtp_client_options_pcpu_log_level_incr}
    _m_egtp_client_options_max_outstanding_releases {-egtp_client_options_max_outstanding_releases_base -egtp_client_options_max_outstanding_releases_incr}
    _m_egtp_client_options_teardown_rate_initial {-egtp_client_options_teardown_rate_initial_base -egtp_client_options_teardown_rate_initial_incr}
    _m_egtp_client_options_max_outstanding_requests {-egtp_client_options_max_outstanding_requests_base -egtp_client_options_max_outstanding_requests_incr}
    _m_egtp_client_options_setup_rate_initial {-egtp_client_options_setup_rate_initial_base -egtp_client_options_setup_rate_initial_incr}
    _m_dhcp_options_setup_rate_increment {-dhcp_options_setup_rate_increment_base -dhcp_options_setup_rate_increment_incr}
    _m_dhcp_options_max_outstanding_requests {-dhcp_options_max_outstanding_requests_base -dhcp_options_max_outstanding_requests_incr}
    _m_dhcp_options_teardown_rate_initial {-dhcp_options_teardown_rate_initial_base -dhcp_options_teardown_rate_initial_incr}
    _m_dhcp_options_setup_rate_max {-dhcp_options_setup_rate_max_base -dhcp_options_setup_rate_max_incr}
    _m_dhcp_options_setup_rate_initial {-dhcp_options_setup_rate_initial_base -dhcp_options_setup_rate_initial_incr}
    _m_dhcp_options_max_outstanding_releases {-dhcp_options_max_outstanding_releases_base -dhcp_options_max_outstanding_releases_incr}
    _m_dhcp_options_object_id {-dhcp_options_object_id_format -dhcp_options_object_id_base -dhcp_options_object_id_incr}
    _m_dhcp_options_teardown_rate_increment {-dhcp_options_teardown_rate_increment_base -dhcp_options_teardown_rate_increment_incr}
    _m_dhcp_options_teardown_rate_max {-dhcp_options_teardown_rate_max_base -dhcp_options_teardown_rate_max_incr}
    _m_twamp_server_options_object_id {-twamp_server_options_object_id_format -twamp_server_options_object_id_base -twamp_server_options_object_id_incr}
    _m_twamp_server_options_error_estimate_multiplier {-twamp_server_options_error_estimate_multiplier_base -twamp_server_options_error_estimate_multiplier_incr}
    _m_twamp_server_options_error_estimate_scale {-twamp_server_options_error_estimate_scale_base -twamp_server_options_error_estimate_scale_incr}
    _m_web_auth_options_object_id {-web_auth_options_object_id_format -web_auth_options_object_id_base -web_auth_options_object_id_incr}
    _m_web_auth_options_max_outstanding_requests {-web_auth_options_max_outstanding_requests_base -web_auth_options_max_outstanding_requests_incr}
    _m_web_auth_options_max_clients_per_second {-web_auth_options_max_clients_per_second_base -web_auth_options_max_clients_per_second_incr}
    _m_dot1x_options_object_id {-dot1x_options_object_id_format -dot1x_options_object_id_base -dot1x_options_object_id_incr}
    _m_dot1x_options_logoff_max_clients_per_second {-dot1x_options_logoff_max_clients_per_second_base -dot1x_options_logoff_max_clients_per_second_incr}
    _m_dot1x_options_max_outstanding_requests {-dot1x_options_max_outstanding_requests_base -dot1x_options_max_outstanding_requests_incr}
    _m_dot1x_options_max_clients_per_second {-dot1x_options_max_clients_per_second_base -dot1x_options_max_clients_per_second_incr}
    _m_options_object_id {-options_object_id_format -options_object_id_base -options_object_id_incr}
    _m_options_router_solicitation_interval {-options_router_solicitation_interval_base -options_router_solicitation_interval_incr}
    _m_options_ipv4_retrans_time {-options_ipv4_retrans_time_base -options_ipv4_retrans_time_incr}
    _m_options_ipv4_mcast_solicit {-options_ipv4_mcast_solicit_base -options_ipv4_mcast_solicit_incr}
    _m_options_dad_transmits {-options_dad_transmits_base -options_dad_transmits_incr}
    _m_options_mcast_solicit {-options_mcast_solicit_base -options_mcast_solicit_incr}
    _m_options_retrans_time {-options_retrans_time_base -options_retrans_time_incr}
    _m_options_router_solicitations {-options_router_solicitations_base -options_router_solicitations_incr}
    _m_options_router_solicitation_delay {-options_router_solicitation_delay_base -options_router_solicitation_delay_incr}
    _m_egtp_s5_s8_pgw_options_object_id {-egtp_s5_s8_pgw_options_object_id_format -egtp_s5_s8_pgw_options_object_id_base -egtp_s5_s8_pgw_options_object_id_incr}
    _m_egtp_s5_s8_pgw_options_pcpu_log_level {-egtp_s5_s8_pgw_options_pcpu_log_level_format -egtp_s5_s8_pgw_options_pcpu_log_level_base -egtp_s5_s8_pgw_options_pcpu_log_level_incr}
    _m_twamp_options_object_id {-twamp_options_object_id_format -twamp_options_object_id_base -twamp_options_object_id_incr}
    _m_twamp_options_teardown_rate {-twamp_options_teardown_rate_base -twamp_options_teardown_rate_incr}
    _m_twamp_options_error_estimate_multiplier {-twamp_options_error_estimate_multiplier_base -twamp_options_error_estimate_multiplier_incr}
    _m_twamp_options_setup_rate {-twamp_options_setup_rate_base -twamp_options_setup_rate_incr}
    _m_twamp_options_error_estimate_scale {-twamp_options_error_estimate_scale_base -twamp_options_error_estimate_scale_incr}
    _m_twamp_options_max_outstanding {-twamp_options_max_outstanding_base -twamp_options_max_outstanding_incr}
    _m_twamp_options_session_timeout {-twamp_options_session_timeout_base -twamp_options_session_timeout_incr}
    _m_static_hosts_options_object_id {-static_hosts_options_object_id_format -static_hosts_options_object_id_base -static_hosts_options_object_id_incr}
    _m_ancp_options_object_id {-ancp_options_object_id_format -ancp_options_object_id_base -ancp_options_object_id_incr}
    _m_ancp_options_resync_rate {-ancp_options_resync_rate_base -ancp_options_resync_rate_incr}
    _m_ancp_options_port_down_rate {-ancp_options_port_down_rate_base -ancp_options_port_down_rate_incr}
    _m_ancp_options_port_up_rate {-ancp_options_port_up_rate_base -ancp_options_port_up_rate_incr}
    _m_l2tp_options_ipv6_global_address_mode {-l2tp_options_ipv6_global_address_mode_format -l2tp_options_ipv6_global_address_mode_base -l2tp_options_ipv6_global_address_mode_incr}
    _m_l2tp_options_role {-l2tp_options_role_format -l2tp_options_role_base -l2tp_options_role_incr}
    _m_l2tp_options_max_outstanding_requests {-l2tp_options_max_outstanding_requests_base -l2tp_options_max_outstanding_requests_incr}
    _m_l2tp_options_teardown_rate_initial {-l2tp_options_teardown_rate_initial_base -l2tp_options_teardown_rate_initial_incr}
    _m_l2tp_options_setup_rate_initial {-l2tp_options_setup_rate_initial_base -l2tp_options_setup_rate_initial_incr}
    _m_l2tp_options_max_outstanding_releases {-l2tp_options_max_outstanding_releases_base -l2tp_options_max_outstanding_releases_incr}
    _m_l2tp_options_ra_timeout {-l2tp_options_ra_timeout_base -l2tp_options_ra_timeout_incr}
    _m_l2tp_options_object_id {-l2tp_options_object_id_format -l2tp_options_object_id_base -l2tp_options_object_id_incr}
    _m_l2tp_options_wait_for_completion_timeout {-l2tp_options_wait_for_completion_timeout_base -l2tp_options_wait_for_completion_timeout_incr}
    _m_l2tp_options_per_session_stat_file_prefix {-l2tp_options_per_session_stat_file_prefix_format -l2tp_options_per_session_stat_file_prefix_base -l2tp_options_per_session_stat_file_prefix_incr}
    _m_dhcpv6_client_options_object_id {-dhcpv6_client_options_object_id_format -dhcpv6_client_options_object_id_base -dhcpv6_client_options_object_id_incr}
    _m_dhcpv6_client_options_max_outstanding_requests {-dhcpv6_client_options_max_outstanding_requests_base -dhcpv6_client_options_max_outstanding_requests_incr}
    _m_dhcpv6_client_options_setup_rate_increment {-dhcpv6_client_options_setup_rate_increment_base -dhcpv6_client_options_setup_rate_increment_incr}
    _m_dhcpv6_client_options_setup_rate_max {-dhcpv6_client_options_setup_rate_max_base -dhcpv6_client_options_setup_rate_max_incr}
    _m_dhcpv6_client_options_setup_rate_initial {-dhcpv6_client_options_setup_rate_initial_base -dhcpv6_client_options_setup_rate_initial_incr}
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
  }
}

#@ end of ancestors for ::hag::ixnmeta::/vport/protocolStack/ptpOptions

#
# Source in an optional tailor file that allows
# customization for the generated snit objects
#
set file_found 0
set dir [file normalize [file dirname [info script]]]
if {[file exists [set dir]/tailor_ptpOptions.tcl]} {
    set fn [set dir]/tailor_ptpOptions.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
} elseif {[file exists [set dir]/../tailor_ptpOptions.tcl]} {
    set fn [set dir]/../tailor_ptpOptions.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
}
# if -input-tailor-file-mandatory
if 0 { 
    if {![set file_found]} {
      return -code error  "Could not find required tailorfile 'tailor_ptpOptions.tcl'"
    }
}

#-------------------------------------------------------------
# Generated by the hag on 
#     Fri Aug 07 13:40:39 PDT 2020
#-------------------------------------------------------------
# package requires, etc.
package require snit
#-------------------------------------------------------------

if {[llength [info commands ::ixia::ptp_options]]} {
    rename ::ixia::ptp_options ""
}
::ixia::hag::ixn::types::shell ::ixia::ptp_options  -config-multiplier-option-groups 1  -config-typepathways  [list /vport/protocolStack/ptpOptions]
#
# Shell level commands
# - XXX_config
# - XXX_control
# - XXX_stats
#

proc ::ixia::ptp_options_config {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail [catch  [concat ::ixia::ptp_options config [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [list [list status 1] [list handles $r] [list log ""]]
    }
  } else {
    eval [concat {::ixia::ptp_options config} [set args]]
  }
}

proc ::ixia::ptp_options_control {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
      return [list [list status 0] [list log "ptp_options: control not supported"]]
  } else {
      return -code error "ptp_options: control not supported"
  }
}

proc ::ixia::ptp_options_stats {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
      return [list [list status 0] [list log "ptp_options: stats not supported"]]
  } else {
      return -code error "ptp_options: stats not supported"
  }
}

