#
# ** Do not edit this file ** 
# This file was generated by the HAG
#

#R End of relative type declaration(s)

#? master type "::hag::ixnmeta::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range/ipRange"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/atm/emulatedRouter/ipEndpoint/range/ipRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range/ipRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range/ipRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range/ipRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/atm/emulatedRouter/ipEndpoint/range/ipRange
  variable AncestorIncludeLevelForCreate  2
  variable AncestorIncludeLevelForAdd  1
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -count \
    -cgetmethod _g_count -configuremethod _c_count -validatemethod _v_count \
    -default "" \
    -readonly false
  method _c_count {t v} { $self _configure_basic $t $v }
  method _v_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -count }
  
  option -ip_type \
    -cgetmethod _g_ip_type -configuremethod _c_ip_type -validatemethod _v_ip_type \
    -default "" \
    -readonly false
  method _c_ip_type {t v} { $self _configure_basic $t $v }
  method _v_ip_type {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_type {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_type }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  option -gateway_increment_mode \
    -cgetmethod _g_gateway_increment_mode -configuremethod _c_gateway_increment_mode -validatemethod _v_gateway_increment_mode \
    -default "" \
    -readonly false
  method _c_gateway_increment_mode {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment_mode }
  
  option -enable_gateway_arp \
    -cgetmethod _g_enable_gateway_arp -configuremethod _c_enable_gateway_arp -validatemethod _v_enable_gateway_arp \
    -default "" \
    -readonly false
  method _c_enable_gateway_arp {t v} { $self _configure_basic $t $v }
  method _v_enable_gateway_arp {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enable_gateway_arp {t} { $self _cget_kBool $t }
  option -ip_address \
    -cgetmethod _g_ip_address -configuremethod _c_ip_address -validatemethod _v_ip_address \
    -default "" \
    -readonly false
  method _c_ip_address {t v} { $self _configure_basic $t $v }
  method _v_ip_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_address }
  
  option -gateway_increment \
    -cgetmethod _g_gateway_increment -configuremethod _c_gateway_increment -validatemethod _v_gateway_increment \
    -default "" \
    -readonly false
  method _c_gateway_increment {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment }
  
  option -increment_by \
    -cgetmethod _g_increment_by -configuremethod _c_increment_by -validatemethod _v_increment_by \
    -default "" \
    -readonly false
  method _c_increment_by {t v} { $self _configure_basic $t $v }
  method _v_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -increment_by }
  
  option -gateway_address \
    -cgetmethod _g_gateway_address -configuremethod _c_gateway_address -validatemethod _v_gateway_address \
    -default "" \
    -readonly false
  method _c_gateway_address {t v} { $self _configure_basic $t $v }
  method _v_gateway_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_address }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -mss \
    -cgetmethod _g_mss -configuremethod _c_mss -validatemethod _v_mss \
    -default "" \
    -readonly false
  method _c_mss {t v} { $self _configure_basic $t $v }
  method _v_mss {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_mss {t} { $self _cget_basic $t }
  # multiplier 
  method _m_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mss }
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -prefix \
    -cgetmethod _g_prefix -configuremethod _c_prefix -validatemethod _v_prefix \
    -default "" \
    -readonly false
  method _c_prefix {t v} { $self _configure_basic $t $v }
  method _v_prefix {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_prefix {t} { $self _cget_basic $t }
  # multiplier 
  method _m_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -prefix }
  
  option -auto_mac_generation \
    -cgetmethod _g_auto_mac_generation -configuremethod _c_auto_mac_generation -validatemethod _v_auto_mac_generation \
    -default "" \
    -readonly false
  method _c_auto_mac_generation {t v} { $self _configure_basic $t $v }
  method _v_auto_mac_generation {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_auto_mac_generation {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -count count
    -ip_type ipType
    -enabled enabled
    -gateway_increment_mode gatewayIncrementMode
    -enable_gateway_arp enableGatewayArp
    -ip_address ipAddress
    -gateway_increment gatewayIncrement
    -increment_by incrementBy
    -gateway_address gatewayAddress
    -name name
    -mss mss
    -object_id objectId
    -prefix prefix
    -auto_mac_generation autoMacGeneration
  }
  #
  variable MultiplierOptionGroups {
    _m_count {-count_base -count_incr}
    _m_ip_type {-ip_type_format -ip_type_base -ip_type_incr}
    _m_gateway_increment_mode {-gateway_increment_mode_format -gateway_increment_mode_base -gateway_increment_mode_incr}
    _m_ip_address {-ip_address_format -ip_address_base -ip_address_incr}
    _m_gateway_increment {-gateway_increment_format -gateway_increment_base -gateway_increment_incr}
    _m_increment_by {-increment_by_format -increment_by_base -increment_by_incr}
    _m_gateway_address {-gateway_address_format -gateway_address_base -gateway_address_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_mss {-mss_base -mss_incr}
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_prefix {-prefix_base -prefix_incr}
  }
}

#? master type "::hag::ixnmeta::/vport/protocolStack/atm/ipEndpoint/range/ipRange"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/atm/ipEndpoint/range/ipRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint/range/ipRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint/range/ipRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint/range/ipRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/atm/ipEndpoint/range/ipRange
  variable AncestorIncludeLevelForCreate  2
  variable AncestorIncludeLevelForAdd  1
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -count \
    -cgetmethod _g_count -configuremethod _c_count -validatemethod _v_count \
    -default "" \
    -readonly false
  method _c_count {t v} { $self _configure_basic $t $v }
  method _v_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -count }
  
  option -ip_type \
    -cgetmethod _g_ip_type -configuremethod _c_ip_type -validatemethod _v_ip_type \
    -default "" \
    -readonly false
  method _c_ip_type {t v} { $self _configure_basic $t $v }
  method _v_ip_type {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_type {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_type }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  option -gateway_increment_mode \
    -cgetmethod _g_gateway_increment_mode -configuremethod _c_gateway_increment_mode -validatemethod _v_gateway_increment_mode \
    -default "" \
    -readonly false
  method _c_gateway_increment_mode {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment_mode }
  
  option -enable_gateway_arp \
    -cgetmethod _g_enable_gateway_arp -configuremethod _c_enable_gateway_arp -validatemethod _v_enable_gateway_arp \
    -default "" \
    -readonly false
  method _c_enable_gateway_arp {t v} { $self _configure_basic $t $v }
  method _v_enable_gateway_arp {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enable_gateway_arp {t} { $self _cget_kBool $t }
  option -ip_address \
    -cgetmethod _g_ip_address -configuremethod _c_ip_address -validatemethod _v_ip_address \
    -default "" \
    -readonly false
  method _c_ip_address {t v} { $self _configure_basic $t $v }
  method _v_ip_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_address }
  
  option -gateway_increment \
    -cgetmethod _g_gateway_increment -configuremethod _c_gateway_increment -validatemethod _v_gateway_increment \
    -default "" \
    -readonly false
  method _c_gateway_increment {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment }
  
  option -increment_by \
    -cgetmethod _g_increment_by -configuremethod _c_increment_by -validatemethod _v_increment_by \
    -default "" \
    -readonly false
  method _c_increment_by {t v} { $self _configure_basic $t $v }
  method _v_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -increment_by }
  
  option -gateway_address \
    -cgetmethod _g_gateway_address -configuremethod _c_gateway_address -validatemethod _v_gateway_address \
    -default "" \
    -readonly false
  method _c_gateway_address {t v} { $self _configure_basic $t $v }
  method _v_gateway_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_address }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -mss \
    -cgetmethod _g_mss -configuremethod _c_mss -validatemethod _v_mss \
    -default "" \
    -readonly false
  method _c_mss {t v} { $self _configure_basic $t $v }
  method _v_mss {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_mss {t} { $self _cget_basic $t }
  # multiplier 
  method _m_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mss }
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -prefix \
    -cgetmethod _g_prefix -configuremethod _c_prefix -validatemethod _v_prefix \
    -default "" \
    -readonly false
  method _c_prefix {t v} { $self _configure_basic $t $v }
  method _v_prefix {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_prefix {t} { $self _cget_basic $t }
  # multiplier 
  method _m_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -prefix }
  
  option -auto_mac_generation \
    -cgetmethod _g_auto_mac_generation -configuremethod _c_auto_mac_generation -validatemethod _v_auto_mac_generation \
    -default "" \
    -readonly false
  method _c_auto_mac_generation {t v} { $self _configure_basic $t $v }
  method _v_auto_mac_generation {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_auto_mac_generation {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -count count
    -ip_type ipType
    -enabled enabled
    -gateway_increment_mode gatewayIncrementMode
    -enable_gateway_arp enableGatewayArp
    -ip_address ipAddress
    -gateway_increment gatewayIncrement
    -increment_by incrementBy
    -gateway_address gatewayAddress
    -name name
    -mss mss
    -object_id objectId
    -prefix prefix
    -auto_mac_generation autoMacGeneration
  }
  #
  variable MultiplierOptionGroups {
    _m_count {-count_base -count_incr}
    _m_ip_type {-ip_type_format -ip_type_base -ip_type_incr}
    _m_gateway_increment_mode {-gateway_increment_mode_format -gateway_increment_mode_base -gateway_increment_mode_incr}
    _m_ip_address {-ip_address_format -ip_address_base -ip_address_incr}
    _m_gateway_increment {-gateway_increment_format -gateway_increment_base -gateway_increment_incr}
    _m_increment_by {-increment_by_format -increment_by_base -increment_by_incr}
    _m_gateway_address {-gateway_address_format -gateway_address_base -gateway_address_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_mss {-mss_base -mss_incr}
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_prefix {-prefix_base -prefix_incr}
  }
}

#? master type "::hag::ixnmeta::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range/ipRange"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range/ipRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range/ipRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range/ipRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range/ipRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range/ipRange
  variable AncestorIncludeLevelForCreate  2
  variable AncestorIncludeLevelForAdd  1
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -count \
    -cgetmethod _g_count -configuremethod _c_count -validatemethod _v_count \
    -default "" \
    -readonly false
  method _c_count {t v} { $self _configure_basic $t $v }
  method _v_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -count }
  
  option -ip_type \
    -cgetmethod _g_ip_type -configuremethod _c_ip_type -validatemethod _v_ip_type \
    -default "" \
    -readonly false
  method _c_ip_type {t v} { $self _configure_basic $t $v }
  method _v_ip_type {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_type {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_type }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  option -gateway_increment_mode \
    -cgetmethod _g_gateway_increment_mode -configuremethod _c_gateway_increment_mode -validatemethod _v_gateway_increment_mode \
    -default "" \
    -readonly false
  method _c_gateway_increment_mode {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment_mode }
  
  option -enable_gateway_arp \
    -cgetmethod _g_enable_gateway_arp -configuremethod _c_enable_gateway_arp -validatemethod _v_enable_gateway_arp \
    -default "" \
    -readonly false
  method _c_enable_gateway_arp {t v} { $self _configure_basic $t $v }
  method _v_enable_gateway_arp {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enable_gateway_arp {t} { $self _cget_kBool $t }
  option -ip_address \
    -cgetmethod _g_ip_address -configuremethod _c_ip_address -validatemethod _v_ip_address \
    -default "" \
    -readonly false
  method _c_ip_address {t v} { $self _configure_basic $t $v }
  method _v_ip_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_address }
  
  option -gateway_increment \
    -cgetmethod _g_gateway_increment -configuremethod _c_gateway_increment -validatemethod _v_gateway_increment \
    -default "" \
    -readonly false
  method _c_gateway_increment {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment }
  
  option -increment_by \
    -cgetmethod _g_increment_by -configuremethod _c_increment_by -validatemethod _v_increment_by \
    -default "" \
    -readonly false
  method _c_increment_by {t v} { $self _configure_basic $t $v }
  method _v_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -increment_by }
  
  option -gateway_address \
    -cgetmethod _g_gateway_address -configuremethod _c_gateway_address -validatemethod _v_gateway_address \
    -default "" \
    -readonly false
  method _c_gateway_address {t v} { $self _configure_basic $t $v }
  method _v_gateway_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_address }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -mss \
    -cgetmethod _g_mss -configuremethod _c_mss -validatemethod _v_mss \
    -default "" \
    -readonly false
  method _c_mss {t v} { $self _configure_basic $t $v }
  method _v_mss {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_mss {t} { $self _cget_basic $t }
  # multiplier 
  method _m_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mss }
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -prefix \
    -cgetmethod _g_prefix -configuremethod _c_prefix -validatemethod _v_prefix \
    -default "" \
    -readonly false
  method _c_prefix {t v} { $self _configure_basic $t $v }
  method _v_prefix {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_prefix {t} { $self _cget_basic $t }
  # multiplier 
  method _m_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -prefix }
  
  option -auto_mac_generation \
    -cgetmethod _g_auto_mac_generation -configuremethod _c_auto_mac_generation -validatemethod _v_auto_mac_generation \
    -default "" \
    -readonly false
  method _c_auto_mac_generation {t v} { $self _configure_basic $t $v }
  method _v_auto_mac_generation {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_auto_mac_generation {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -count count
    -ip_type ipType
    -enabled enabled
    -gateway_increment_mode gatewayIncrementMode
    -enable_gateway_arp enableGatewayArp
    -ip_address ipAddress
    -gateway_increment gatewayIncrement
    -increment_by incrementBy
    -gateway_address gatewayAddress
    -name name
    -mss mss
    -object_id objectId
    -prefix prefix
    -auto_mac_generation autoMacGeneration
  }
  #
  variable MultiplierOptionGroups {
    _m_count {-count_base -count_incr}
    _m_ip_type {-ip_type_format -ip_type_base -ip_type_incr}
    _m_gateway_increment_mode {-gateway_increment_mode_format -gateway_increment_mode_base -gateway_increment_mode_incr}
    _m_ip_address {-ip_address_format -ip_address_base -ip_address_incr}
    _m_gateway_increment {-gateway_increment_format -gateway_increment_base -gateway_increment_incr}
    _m_increment_by {-increment_by_format -increment_by_base -increment_by_incr}
    _m_gateway_address {-gateway_address_format -gateway_address_base -gateway_address_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_mss {-mss_base -mss_incr}
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_prefix {-prefix_base -prefix_incr}
  }
}

#? master type "::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint/range/ipRange"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/ipEndpoint/range/ipRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range/ipRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range/ipRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range/ipRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/ipEndpoint/range/ipRange
  variable AncestorIncludeLevelForCreate  2
  variable AncestorIncludeLevelForAdd  1
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -count \
    -cgetmethod _g_count -configuremethod _c_count -validatemethod _v_count \
    -default "" \
    -readonly false
  method _c_count {t v} { $self _configure_basic $t $v }
  method _v_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -count }
  
  option -ip_type \
    -cgetmethod _g_ip_type -configuremethod _c_ip_type -validatemethod _v_ip_type \
    -default "" \
    -readonly false
  method _c_ip_type {t v} { $self _configure_basic $t $v }
  method _v_ip_type {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_type {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_type }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  option -gateway_increment_mode \
    -cgetmethod _g_gateway_increment_mode -configuremethod _c_gateway_increment_mode -validatemethod _v_gateway_increment_mode \
    -default "" \
    -readonly false
  method _c_gateway_increment_mode {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment_mode }
  
  option -enable_gateway_arp \
    -cgetmethod _g_enable_gateway_arp -configuremethod _c_enable_gateway_arp -validatemethod _v_enable_gateway_arp \
    -default "" \
    -readonly false
  method _c_enable_gateway_arp {t v} { $self _configure_basic $t $v }
  method _v_enable_gateway_arp {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enable_gateway_arp {t} { $self _cget_kBool $t }
  option -ip_address \
    -cgetmethod _g_ip_address -configuremethod _c_ip_address -validatemethod _v_ip_address \
    -default "" \
    -readonly false
  method _c_ip_address {t v} { $self _configure_basic $t $v }
  method _v_ip_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_ip_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_address }
  
  option -gateway_increment \
    -cgetmethod _g_gateway_increment -configuremethod _c_gateway_increment -validatemethod _v_gateway_increment \
    -default "" \
    -readonly false
  method _c_gateway_increment {t v} { $self _configure_basic $t $v }
  method _v_gateway_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_increment }
  
  option -increment_by \
    -cgetmethod _g_increment_by -configuremethod _c_increment_by -validatemethod _v_increment_by \
    -default "" \
    -readonly false
  method _c_increment_by {t v} { $self _configure_basic $t $v }
  method _v_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -increment_by }
  
  option -gateway_address \
    -cgetmethod _g_gateway_address -configuremethod _c_gateway_address -validatemethod _v_gateway_address \
    -default "" \
    -readonly false
  method _c_gateway_address {t v} { $self _configure_basic $t $v }
  method _v_gateway_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_gateway_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -gateway_address }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -mss \
    -cgetmethod _g_mss -configuremethod _c_mss -validatemethod _v_mss \
    -default "" \
    -readonly false
  method _c_mss {t v} { $self _configure_basic $t $v }
  method _v_mss {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_mss {t} { $self _cget_basic $t }
  # multiplier 
  method _m_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mss }
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -prefix \
    -cgetmethod _g_prefix -configuremethod _c_prefix -validatemethod _v_prefix \
    -default "" \
    -readonly false
  method _c_prefix {t v} { $self _configure_basic $t $v }
  method _v_prefix {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_prefix {t} { $self _cget_basic $t }
  # multiplier 
  method _m_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -prefix }
  
  option -auto_mac_generation \
    -cgetmethod _g_auto_mac_generation -configuremethod _c_auto_mac_generation -validatemethod _v_auto_mac_generation \
    -default "" \
    -readonly false
  method _c_auto_mac_generation {t v} { $self _configure_basic $t $v }
  method _v_auto_mac_generation {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_auto_mac_generation {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -count count
    -ip_type ipType
    -enabled enabled
    -gateway_increment_mode gatewayIncrementMode
    -enable_gateway_arp enableGatewayArp
    -ip_address ipAddress
    -gateway_increment gatewayIncrement
    -increment_by incrementBy
    -gateway_address gatewayAddress
    -name name
    -mss mss
    -object_id objectId
    -prefix prefix
    -auto_mac_generation autoMacGeneration
  }
  #
  variable MultiplierOptionGroups {
    _m_count {-count_base -count_incr}
    _m_ip_type {-ip_type_format -ip_type_base -ip_type_incr}
    _m_gateway_increment_mode {-gateway_increment_mode_format -gateway_increment_mode_base -gateway_increment_mode_incr}
    _m_ip_address {-ip_address_format -ip_address_base -ip_address_incr}
    _m_gateway_increment {-gateway_increment_format -gateway_increment_base -gateway_increment_incr}
    _m_increment_by {-increment_by_format -increment_by_base -increment_by_incr}
    _m_gateway_address {-gateway_address_format -gateway_address_base -gateway_address_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_mss {-mss_base -mss_incr}
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_prefix {-prefix_base -prefix_incr}
  }
}

#@ ancestors for ::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint/range/ipRange
#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/atm/emulatedRouter/ipEndpoint"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/atm/emulatedRouter/ipEndpoint
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/atm/emulatedRouter/ipEndpoint
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -_global_options \
    -cgetmethod _g__global_options -configuremethod _c__global_options -validatemethod _v__global_options \
    -default "" \
    -readonly false
  method _c__global_options {t v} { $self _configure_basic $t $v }
  method _v__global_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__global_options {t} { $self _cget_basic $t }
  option -_port_options \
    -cgetmethod _g__port_options -configuremethod _c__port_options -validatemethod _v__port_options \
    -default "" \
    -readonly false
  method _c__port_options {t v} { $self _configure_basic $t $v }
  method _v__port_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__port_options {t} { $self _cget_basic $t }
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  # XCHILD
  # /vport/protocolStack/atm/emulatedRouter/ipEndpoint/range
  option -range_handle -default UNDEFINED
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -_global_options _globalOptions
    -_port_options _portOptions
    -object_id objectId
    -name name
    -range_handle range
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_name {-name_format -name_base -name_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/atm/emulatedRouter/ipEndpoint/range
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/emulatedRouter/ipEndpoint/range {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/atm/emulatedRouter/ipEndpoint/range
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -eapo_udp_range_expected_system_token \
    -configuremethod _c_./eapoUdpRange/expectedSystemToken \
    -cgetmethod _g_./eapoUdpRange/expectedSystemToken \
    -readonly false
  method _c_./eapoUdpRange/expectedSystemToken {t v} { $self _configure_relative ./eapoUdpRange -expected_system_token $v }
  method _g_./eapoUdpRange/expectedSystemToken {t} { $self _cget_relative ./eapoUdpRange -expected_system_token }
  # multiplier 
  method _m_eapo_udp_range_expected_system_token {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_expected_system_token }
  
  option -eapo_udp_range_user_password \
    -configuremethod _c_./eapoUdpRange/userPassword \
    -cgetmethod _g_./eapoUdpRange/userPassword \
    -readonly false
  method _c_./eapoUdpRange/userPassword {t v} { $self _configure_relative ./eapoUdpRange -user_password $v }
  method _g_./eapoUdpRange/userPassword {t} { $self _cget_relative ./eapoUdpRange -user_password }
  # multiplier 
  method _m_eapo_udp_range_user_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_password }
  
  option -eapo_udp_range_enabled \
    -configuremethod _c_./eapoUdpRange/enabled \
    -cgetmethod _g_./eapoUdpRange/enabled \
    -readonly false
  method _c_./eapoUdpRange/enabled {t v} { $self _configure_relative ./eapoUdpRange -enabled $v }
  method _g_./eapoUdpRange/enabled {t} { $self _cget_relative ./eapoUdpRange -enabled }
  option -eapo_udp_range_nac_sequence \
    -configuremethod _c_./eapoUdpRange/nacSequence \
    -cgetmethod _g_./eapoUdpRange/nacSequence \
    -readonly false
  method _c_./eapoUdpRange/nacSequence {t v} { $self _configure_relative ./eapoUdpRange -nac_sequence $v }
  method _g_./eapoUdpRange/nacSequence {t} { $self _cget_relative ./eapoUdpRange -nac_sequence }
  option -eapo_udp_range_fast_stateless_resume \
    -configuremethod _c_./eapoUdpRange/fastStatelessResume \
    -cgetmethod _g_./eapoUdpRange/fastStatelessResume \
    -readonly false
  method _c_./eapoUdpRange/fastStatelessResume {t v} { $self _configure_relative ./eapoUdpRange -fast_stateless_resume $v }
  method _g_./eapoUdpRange/fastStatelessResume {t} { $self _cget_relative ./eapoUdpRange -fast_stateless_resume }
  # multiplier 
  method _m_eapo_udp_range_fast_stateless_resume {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_stateless_resume }
  
  option -eapo_udp_range_user_name \
    -configuremethod _c_./eapoUdpRange/userName \
    -cgetmethod _g_./eapoUdpRange/userName \
    -readonly false
  method _c_./eapoUdpRange/userName {t v} { $self _configure_relative ./eapoUdpRange -user_name $v }
  method _g_./eapoUdpRange/userName {t} { $self _cget_relative ./eapoUdpRange -user_name }
  # multiplier 
  method _m_eapo_udp_range_user_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_name }
  
  option -eapo_udp_range_response_type \
    -configuremethod _c_./eapoUdpRange/responseType \
    -cgetmethod _g_./eapoUdpRange/responseType \
    -readonly false
  method _c_./eapoUdpRange/responseType {t v} { $self _configure_relative ./eapoUdpRange -response_type $v }
  method _g_./eapoUdpRange/responseType {t} { $self _cget_relative ./eapoUdpRange -response_type }
  # multiplier 
  method _m_eapo_udp_range_response_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_response_type }
  
  option -eapo_udp_range_name \
    -configuremethod _c_./eapoUdpRange/name \
    -cgetmethod _g_./eapoUdpRange/name \
    -readonly false
  method _c_./eapoUdpRange/name {t v} { $self _configure_relative ./eapoUdpRange -name $v }
  method _g_./eapoUdpRange/name {t} { $self _cget_relative ./eapoUdpRange -name }
  # multiplier 
  method _m_eapo_udp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_name }
  
  option -eapo_udp_range_protocol \
    -configuremethod _c_./eapoUdpRange/protocol \
    -cgetmethod _g_./eapoUdpRange/protocol \
    -readonly false
  method _c_./eapoUdpRange/protocol {t v} { $self _configure_relative ./eapoUdpRange -protocol $v }
  method _g_./eapoUdpRange/protocol {t} { $self _cget_relative ./eapoUdpRange -protocol }
  # multiplier 
  method _m_eapo_udp_range_protocol {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_protocol }
  
  option -eapo_udp_range_fast_inner_method \
    -configuremethod _c_./eapoUdpRange/fastInnerMethod \
    -cgetmethod _g_./eapoUdpRange/fastInnerMethod \
    -readonly false
  method _c_./eapoUdpRange/fastInnerMethod {t v} { $self _configure_relative ./eapoUdpRange -fast_inner_method $v }
  method _g_./eapoUdpRange/fastInnerMethod {t} { $self _cget_relative ./eapoUdpRange -fast_inner_method }
  # multiplier 
  method _m_eapo_udp_range_fast_inner_method {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_inner_method }
  
  option -eapo_udp_range_fast_provision_mode \
    -configuremethod _c_./eapoUdpRange/fastProvisionMode \
    -cgetmethod _g_./eapoUdpRange/fastProvisionMode \
    -readonly false
  method _c_./eapoUdpRange/fastProvisionMode {t v} { $self _configure_relative ./eapoUdpRange -fast_provision_mode $v }
  method _g_./eapoUdpRange/fastProvisionMode {t} { $self _cget_relative ./eapoUdpRange -fast_provision_mode }
  # multiplier 
  method _m_eapo_udp_range_fast_provision_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_provision_mode }
  
  option -eapo_udp_range_object_id \
    -configuremethod _c_./eapoUdpRange/objectId \
    -cgetmethod _g_./eapoUdpRange/objectId \
    -readonly false
  method _c_./eapoUdpRange/objectId {t v} { $self _configure_relative ./eapoUdpRange -object_id $v }
  method _g_./eapoUdpRange/objectId {t} { $self _cget_relative ./eapoUdpRange -object_id }
  # multiplier 
  method _m_eapo_udp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_object_id }
  
  option -web_auth_range_object_id \
    -configuremethod _c_./webAuthRange/objectId \
    -cgetmethod _g_./webAuthRange/objectId \
    -readonly false
  method _c_./webAuthRange/objectId {t v} { $self _configure_relative ./webAuthRange -object_id $v }
  method _g_./webAuthRange/objectId {t} { $self _cget_relative ./webAuthRange -object_id }
  # multiplier 
  method _m_web_auth_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_object_id }
  
  option -web_auth_range_input_value3 \
    -configuremethod _c_./webAuthRange/inputValue3 \
    -cgetmethod _g_./webAuthRange/inputValue3 \
    -readonly false
  method _c_./webAuthRange/inputValue3 {t v} { $self _configure_relative ./webAuthRange -input_value3 $v }
  method _g_./webAuthRange/inputValue3 {t} { $self _cget_relative ./webAuthRange -input_value3 }
  # multiplier 
  method _m_web_auth_range_input_value3 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value3 }
  
  option -web_auth_range_name \
    -configuremethod _c_./webAuthRange/name \
    -cgetmethod _g_./webAuthRange/name \
    -readonly false
  method _c_./webAuthRange/name {t v} { $self _configure_relative ./webAuthRange -name $v }
  method _g_./webAuthRange/name {t} { $self _cget_relative ./webAuthRange -name }
  # multiplier 
  method _m_web_auth_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_name }
  
  option -web_auth_range_expect \
    -configuremethod _c_./webAuthRange/expect \
    -cgetmethod _g_./webAuthRange/expect \
    -readonly false
  method _c_./webAuthRange/expect {t v} { $self _configure_relative ./webAuthRange -expect $v }
  method _g_./webAuthRange/expect {t} { $self _cget_relative ./webAuthRange -expect }
  # multiplier 
  method _m_web_auth_range_expect {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_expect }
  
  option -web_auth_range_input_value1 \
    -configuremethod _c_./webAuthRange/inputValue1 \
    -cgetmethod _g_./webAuthRange/inputValue1 \
    -readonly false
  method _c_./webAuthRange/inputValue1 {t v} { $self _configure_relative ./webAuthRange -input_value1 $v }
  method _g_./webAuthRange/inputValue1 {t} { $self _cget_relative ./webAuthRange -input_value1 }
  # multiplier 
  method _m_web_auth_range_input_value1 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value1 }
  
  option -web_auth_range_enabled \
    -configuremethod _c_./webAuthRange/enabled \
    -cgetmethod _g_./webAuthRange/enabled \
    -readonly false
  method _c_./webAuthRange/enabled {t v} { $self _configure_relative ./webAuthRange -enabled $v }
  method _g_./webAuthRange/enabled {t} { $self _cget_relative ./webAuthRange -enabled }
  option -web_auth_range_input_value2 \
    -configuremethod _c_./webAuthRange/inputValue2 \
    -cgetmethod _g_./webAuthRange/inputValue2 \
    -readonly false
  method _c_./webAuthRange/inputValue2 {t v} { $self _configure_relative ./webAuthRange -input_value2 $v }
  method _g_./webAuthRange/inputValue2 {t} { $self _cget_relative ./webAuthRange -input_value2 }
  # multiplier 
  method _m_web_auth_range_input_value2 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value2 }
  
  option -twamp_server_range_iteration_count \
    -configuremethod _c_./twampServerRange/iterationCount \
    -cgetmethod _g_./twampServerRange/iterationCount \
    -readonly false
  method _c_./twampServerRange/iterationCount {t v} { $self _configure_relative ./twampServerRange -iteration_count $v }
  method _g_./twampServerRange/iterationCount {t} { $self _cget_relative ./twampServerRange -iteration_count }
  # multiplier 
  method _m_twamp_server_range_iteration_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_iteration_count }
  
  option -twamp_server_range_count \
    -configuremethod _c_./twampServerRange/count \
    -cgetmethod _g_./twampServerRange/count \
    -readonly false
  method _c_./twampServerRange/count {t v} { $self _configure_relative ./twampServerRange -count $v }
  method _g_./twampServerRange/count {t} { $self _cget_relative ./twampServerRange -count }
  # multiplier 
  method _m_twamp_server_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_count }
  
  option -twamp_server_range_enabled \
    -configuremethod _c_./twampServerRange/enabled \
    -cgetmethod _g_./twampServerRange/enabled \
    -readonly false
  method _c_./twampServerRange/enabled {t v} { $self _configure_relative ./twampServerRange -enabled $v }
  method _g_./twampServerRange/enabled {t} { $self _cget_relative ./twampServerRange -enabled }
  option -twamp_server_range_reflector_port \
    -configuremethod _c_./twampServerRange/reflectorPort \
    -cgetmethod _g_./twampServerRange/reflectorPort \
    -readonly false
  method _c_./twampServerRange/reflectorPort {t v} { $self _configure_relative ./twampServerRange -reflector_port $v }
  method _g_./twampServerRange/reflectorPort {t} { $self _cget_relative ./twampServerRange -reflector_port }
  # multiplier 
  method _m_twamp_server_range_reflector_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_reflector_port }
  
  option -twamp_server_range_max_test_sessions \
    -configuremethod _c_./twampServerRange/maxTestSessions \
    -cgetmethod _g_./twampServerRange/maxTestSessions \
    -readonly false
  method _c_./twampServerRange/maxTestSessions {t v} { $self _configure_relative ./twampServerRange -max_test_sessions $v }
  method _g_./twampServerRange/maxTestSessions {t} { $self _cget_relative ./twampServerRange -max_test_sessions }
  # multiplier 
  method _m_twamp_server_range_max_test_sessions {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_max_test_sessions }
  
  option -twamp_server_range_control_port \
    -configuremethod _c_./twampServerRange/controlPort \
    -cgetmethod _g_./twampServerRange/controlPort \
    -readonly false
  method _c_./twampServerRange/controlPort {t v} { $self _configure_relative ./twampServerRange -control_port $v }
  method _g_./twampServerRange/controlPort {t} { $self _cget_relative ./twampServerRange -control_port }
  # multiplier 
  method _m_twamp_server_range_control_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_control_port }
  
  option -twamp_server_range_key_id \
    -configuremethod _c_./twampServerRange/keyId \
    -cgetmethod _g_./twampServerRange/keyId \
    -readonly false
  method _c_./twampServerRange/keyId {t v} { $self _configure_relative ./twampServerRange -key_id $v }
  method _g_./twampServerRange/keyId {t} { $self _cget_relative ./twampServerRange -key_id }
  # multiplier 
  method _m_twamp_server_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_key_id }
  
  option -twamp_server_range_permitted_ip \
    -configuremethod _c_./twampServerRange/permittedIp \
    -cgetmethod _g_./twampServerRange/permittedIp \
    -readonly false
  method _c_./twampServerRange/permittedIp {t v} { $self _configure_relative ./twampServerRange -permitted_ip $v }
  method _g_./twampServerRange/permittedIp {t} { $self _cget_relative ./twampServerRange -permitted_ip }
  # multiplier 
  method _m_twamp_server_range_permitted_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip }
  
  option -twamp_server_range_name \
    -configuremethod _c_./twampServerRange/name \
    -cgetmethod _g_./twampServerRange/name \
    -readonly false
  method _c_./twampServerRange/name {t v} { $self _configure_relative ./twampServerRange -name $v }
  method _g_./twampServerRange/name {t} { $self _cget_relative ./twampServerRange -name }
  # multiplier 
  method _m_twamp_server_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_name }
  
  option -twamp_server_range_enable_access_control \
    -configuremethod _c_./twampServerRange/enableAccessControl \
    -cgetmethod _g_./twampServerRange/enableAccessControl \
    -readonly false
  method _c_./twampServerRange/enableAccessControl {t v} { $self _configure_relative ./twampServerRange -enable_access_control $v }
  method _g_./twampServerRange/enableAccessControl {t} { $self _cget_relative ./twampServerRange -enable_access_control }
  option -twamp_server_range_object_id \
    -configuremethod _c_./twampServerRange/objectId \
    -cgetmethod _g_./twampServerRange/objectId \
    -readonly false
  method _c_./twampServerRange/objectId {t v} { $self _configure_relative ./twampServerRange -object_id $v }
  method _g_./twampServerRange/objectId {t} { $self _cget_relative ./twampServerRange -object_id }
  # multiplier 
  method _m_twamp_server_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_object_id }
  
  option -twamp_server_range_permitted_ip_increment \
    -configuremethod _c_./twampServerRange/permittedIpIncrement \
    -cgetmethod _g_./twampServerRange/permittedIpIncrement \
    -readonly false
  method _c_./twampServerRange/permittedIpIncrement {t v} { $self _configure_relative ./twampServerRange -permitted_ip_increment $v }
  method _g_./twampServerRange/permittedIpIncrement {t} { $self _cget_relative ./twampServerRange -permitted_ip_increment }
  # multiplier 
  method _m_twamp_server_range_permitted_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip_increment }
  
  option -twamp_server_range_permitted_sender_port \
    -configuremethod _c_./twampServerRange/permittedSenderPort \
    -cgetmethod _g_./twampServerRange/permittedSenderPort \
    -readonly false
  method _c_./twampServerRange/permittedSenderPort {t v} { $self _configure_relative ./twampServerRange -permitted_sender_port $v }
  method _g_./twampServerRange/permittedSenderPort {t} { $self _cget_relative ./twampServerRange -permitted_sender_port }
  # multiplier 
  method _m_twamp_server_range_permitted_sender_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_permitted_sender_port }
  
  option -twamp_server_range_mode \
    -configuremethod _c_./twampServerRange/mode \
    -cgetmethod _g_./twampServerRange/mode \
    -readonly false
  method _c_./twampServerRange/mode {t v} { $self _configure_relative ./twampServerRange -mode $v }
  method _g_./twampServerRange/mode {t} { $self _cget_relative ./twampServerRange -mode }
  # multiplier 
  method _m_twamp_server_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_mode }
  
  option -twamp_server_range_secret \
    -configuremethod _c_./twampServerRange/secret \
    -cgetmethod _g_./twampServerRange/secret \
    -readonly false
  method _c_./twampServerRange/secret {t v} { $self _configure_relative ./twampServerRange -secret $v }
  method _g_./twampServerRange/secret {t} { $self _cget_relative ./twampServerRange -secret }
  # multiplier 
  method _m_twamp_server_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_secret }
  
  option -pvc_range_vpi_increment_step \
    -configuremethod _c_./pvcRange/vpiIncrementStep \
    -cgetmethod _g_./pvcRange/vpiIncrementStep \
    -readonly false
  method _c_./pvcRange/vpiIncrementStep {t v} { $self _configure_relative ./pvcRange -vpi_increment_step $v }
  method _g_./pvcRange/vpiIncrementStep {t} { $self _cget_relative ./pvcRange -vpi_increment_step }
  # multiplier 
  method _m_pvc_range_vpi_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_increment_step }
  
  option -pvc_range_vci_unique_count \
    -configuremethod _c_./pvcRange/vciUniqueCount \
    -cgetmethod _g_./pvcRange/vciUniqueCount \
    -readonly false
  method _c_./pvcRange/vciUniqueCount {t v} { $self _configure_relative ./pvcRange -vci_unique_count $v }
  method _g_./pvcRange/vciUniqueCount {t} { $self _cget_relative ./pvcRange -vci_unique_count }
  # multiplier 
  method _m_pvc_range_vci_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_unique_count }
  
  option -pvc_range_vci_increment_step \
    -configuremethod _c_./pvcRange/vciIncrementStep \
    -cgetmethod _g_./pvcRange/vciIncrementStep \
    -readonly false
  method _c_./pvcRange/vciIncrementStep {t v} { $self _configure_relative ./pvcRange -vci_increment_step $v }
  method _g_./pvcRange/vciIncrementStep {t} { $self _cget_relative ./pvcRange -vci_increment_step }
  # multiplier 
  method _m_pvc_range_vci_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_increment_step }
  
  option -pvc_range_enabled \
    -configuremethod _c_./pvcRange/enabled \
    -cgetmethod _g_./pvcRange/enabled \
    -readonly false
  method _c_./pvcRange/enabled {t v} { $self _configure_relative ./pvcRange -enabled $v }
  method _g_./pvcRange/enabled {t} { $self _cget_relative ./pvcRange -enabled }
  option -pvc_range_vpi_first_id \
    -configuremethod _c_./pvcRange/vpiFirstId \
    -cgetmethod _g_./pvcRange/vpiFirstId \
    -readonly false
  method _c_./pvcRange/vpiFirstId {t v} { $self _configure_relative ./pvcRange -vpi_first_id $v }
  method _g_./pvcRange/vpiFirstId {t} { $self _cget_relative ./pvcRange -vpi_first_id }
  # multiplier 
  method _m_pvc_range_vpi_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_first_id }
  
  option -pvc_range_vpi_increment \
    -configuremethod _c_./pvcRange/vpiIncrement \
    -cgetmethod _g_./pvcRange/vpiIncrement \
    -readonly false
  method _c_./pvcRange/vpiIncrement {t v} { $self _configure_relative ./pvcRange -vpi_increment $v }
  method _g_./pvcRange/vpiIncrement {t} { $self _cget_relative ./pvcRange -vpi_increment }
  # multiplier 
  method _m_pvc_range_vpi_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_increment }
  
  option -pvc_range_vci_first_id \
    -configuremethod _c_./pvcRange/vciFirstId \
    -cgetmethod _g_./pvcRange/vciFirstId \
    -readonly false
  method _c_./pvcRange/vciFirstId {t v} { $self _configure_relative ./pvcRange -vci_first_id $v }
  method _g_./pvcRange/vciFirstId {t} { $self _cget_relative ./pvcRange -vci_first_id }
  # multiplier 
  method _m_pvc_range_vci_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_first_id }
  
  option -pvc_range_vci_increment \
    -configuremethod _c_./pvcRange/vciIncrement \
    -cgetmethod _g_./pvcRange/vciIncrement \
    -readonly false
  method _c_./pvcRange/vciIncrement {t v} { $self _configure_relative ./pvcRange -vci_increment $v }
  method _g_./pvcRange/vciIncrement {t} { $self _cget_relative ./pvcRange -vci_increment }
  # multiplier 
  method _m_pvc_range_vci_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_increment }
  
  option -pvc_range_name \
    -configuremethod _c_./pvcRange/name \
    -cgetmethod _g_./pvcRange/name \
    -readonly false
  method _c_./pvcRange/name {t v} { $self _configure_relative ./pvcRange -name $v }
  method _g_./pvcRange/name {t} { $self _cget_relative ./pvcRange -name }
  # multiplier 
  method _m_pvc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pvc_range_name }
  
  option -pvc_range_increment_mode \
    -configuremethod _c_./pvcRange/incrementMode \
    -cgetmethod _g_./pvcRange/incrementMode \
    -readonly false
  method _c_./pvcRange/incrementMode {t v} { $self _configure_relative ./pvcRange -increment_mode $v }
  method _g_./pvcRange/incrementMode {t} { $self _cget_relative ./pvcRange -increment_mode }
  # multiplier 
  method _m_pvc_range_increment_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_increment_mode }
  
  option -pvc_range_object_id \
    -configuremethod _c_./pvcRange/objectId \
    -cgetmethod _g_./pvcRange/objectId \
    -readonly false
  method _c_./pvcRange/objectId {t v} { $self _configure_relative ./pvcRange -object_id $v }
  method _g_./pvcRange/objectId {t} { $self _cget_relative ./pvcRange -object_id }
  # multiplier 
  method _m_pvc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pvc_range_object_id }
  
  option -pvc_range_vpi_unique_count \
    -configuremethod _c_./pvcRange/vpiUniqueCount \
    -cgetmethod _g_./pvcRange/vpiUniqueCount \
    -readonly false
  method _c_./pvcRange/vpiUniqueCount {t v} { $self _configure_relative ./pvcRange -vpi_unique_count $v }
  method _g_./pvcRange/vpiUniqueCount {t} { $self _cget_relative ./pvcRange -vpi_unique_count }
  # multiplier 
  method _m_pvc_range_vpi_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_unique_count }
  
  option -ip_range_count \
    -configuremethod _c_./ipRange/count \
    -cgetmethod _g_./ipRange/count \
    -readonly false
  method _c_./ipRange/count {t v} { $self _configure_relative ./ipRange -count $v }
  method _g_./ipRange/count {t} { $self _cget_relative ./ipRange -count }
  # multiplier 
  method _m_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_count }
  
  option -ip_range_ip_type \
    -configuremethod _c_./ipRange/ipType \
    -cgetmethod _g_./ipRange/ipType \
    -readonly false
  method _c_./ipRange/ipType {t v} { $self _configure_relative ./ipRange -ip_type $v }
  method _g_./ipRange/ipType {t} { $self _cget_relative ./ipRange -ip_type }
  # multiplier 
  method _m_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_type }
  
  option -ip_range_enabled \
    -configuremethod _c_./ipRange/enabled \
    -cgetmethod _g_./ipRange/enabled \
    -readonly false
  method _c_./ipRange/enabled {t v} { $self _configure_relative ./ipRange -enabled $v }
  method _g_./ipRange/enabled {t} { $self _cget_relative ./ipRange -enabled }
  option -ip_range_gateway_increment_mode \
    -configuremethod _c_./ipRange/gatewayIncrementMode \
    -cgetmethod _g_./ipRange/gatewayIncrementMode \
    -readonly false
  method _c_./ipRange/gatewayIncrementMode {t v} { $self _configure_relative ./ipRange -gateway_increment_mode $v }
  method _g_./ipRange/gatewayIncrementMode {t} { $self _cget_relative ./ipRange -gateway_increment_mode }
  # multiplier 
  method _m_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment_mode }
  
  option -ip_range_enable_gateway_arp \
    -configuremethod _c_./ipRange/enableGatewayArp \
    -cgetmethod _g_./ipRange/enableGatewayArp \
    -readonly false
  method _c_./ipRange/enableGatewayArp {t v} { $self _configure_relative ./ipRange -enable_gateway_arp $v }
  method _g_./ipRange/enableGatewayArp {t} { $self _cget_relative ./ipRange -enable_gateway_arp }
  option -ip_range_ip_address \
    -configuremethod _c_./ipRange/ipAddress \
    -cgetmethod _g_./ipRange/ipAddress \
    -readonly false
  method _c_./ipRange/ipAddress {t v} { $self _configure_relative ./ipRange -ip_address $v }
  method _g_./ipRange/ipAddress {t} { $self _cget_relative ./ipRange -ip_address }
  # multiplier 
  method _m_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_address }
  
  option -ip_range_gateway_increment \
    -configuremethod _c_./ipRange/gatewayIncrement \
    -cgetmethod _g_./ipRange/gatewayIncrement \
    -readonly false
  method _c_./ipRange/gatewayIncrement {t v} { $self _configure_relative ./ipRange -gateway_increment $v }
  method _g_./ipRange/gatewayIncrement {t} { $self _cget_relative ./ipRange -gateway_increment }
  # multiplier 
  method _m_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment }
  
  option -ip_range_increment_by \
    -configuremethod _c_./ipRange/incrementBy \
    -cgetmethod _g_./ipRange/incrementBy \
    -readonly false
  method _c_./ipRange/incrementBy {t v} { $self _configure_relative ./ipRange -increment_by $v }
  method _g_./ipRange/incrementBy {t} { $self _cget_relative ./ipRange -increment_by }
  # multiplier 
  method _m_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_increment_by }
  
  option -ip_range_gateway_address \
    -configuremethod _c_./ipRange/gatewayAddress \
    -cgetmethod _g_./ipRange/gatewayAddress \
    -readonly false
  method _c_./ipRange/gatewayAddress {t v} { $self _configure_relative ./ipRange -gateway_address $v }
  method _g_./ipRange/gatewayAddress {t} { $self _cget_relative ./ipRange -gateway_address }
  # multiplier 
  method _m_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_address }
  
  option -ip_range_name \
    -configuremethod _c_./ipRange/name \
    -cgetmethod _g_./ipRange/name \
    -readonly false
  method _c_./ipRange/name {t v} { $self _configure_relative ./ipRange -name $v }
  method _g_./ipRange/name {t} { $self _cget_relative ./ipRange -name }
  # multiplier 
  method _m_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_name }
  
  option -ip_range_mss \
    -configuremethod _c_./ipRange/mss \
    -cgetmethod _g_./ipRange/mss \
    -readonly false
  method _c_./ipRange/mss {t v} { $self _configure_relative ./ipRange -mss $v }
  method _g_./ipRange/mss {t} { $self _cget_relative ./ipRange -mss }
  # multiplier 
  method _m_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_mss }
  
  option -ip_range_object_id \
    -configuremethod _c_./ipRange/objectId \
    -cgetmethod _g_./ipRange/objectId \
    -readonly false
  method _c_./ipRange/objectId {t v} { $self _configure_relative ./ipRange -object_id $v }
  method _g_./ipRange/objectId {t} { $self _cget_relative ./ipRange -object_id }
  # multiplier 
  method _m_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_object_id }
  
  option -ip_range_prefix \
    -configuremethod _c_./ipRange/prefix \
    -cgetmethod _g_./ipRange/prefix \
    -readonly false
  method _c_./ipRange/prefix {t v} { $self _configure_relative ./ipRange -prefix $v }
  method _g_./ipRange/prefix {t} { $self _cget_relative ./ipRange -prefix }
  # multiplier 
  method _m_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_prefix }
  
  option -ip_range_auto_mac_generation \
    -configuremethod _c_./ipRange/autoMacGeneration \
    -cgetmethod _g_./ipRange/autoMacGeneration \
    -readonly false
  method _c_./ipRange/autoMacGeneration {t v} { $self _configure_relative ./ipRange -auto_mac_generation $v }
  method _g_./ipRange/autoMacGeneration {t} { $self _cget_relative ./ipRange -auto_mac_generation }
  option -ptp_range_over_ip_master_mac_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterMacIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_inter_entity }
  
  option -ptp_range_over_ip_communication_mode \
    -configuremethod _c_./ptpRangeOverIp/communicationMode \
    -cgetmethod _g_./ptpRangeOverIp/communicationMode \
    -readonly false
  method _c_./ptpRangeOverIp/communicationMode {t v} { $self _configure_relative ./ptpRangeOverIp -communication_mode $v }
  method _g_./ptpRangeOverIp/communicationMode {t} { $self _cget_relative ./ptpRangeOverIp -communication_mode }
  # multiplier 
  method _m_ptp_range_over_ip_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_communication_mode }
  
  option -ptp_range_over_ip_send_announce_multicast \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceMulticast \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceMulticast \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceMulticast {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_multicast $v }
  method _g_./ptpRangeOverIp/sendAnnounceMulticast {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_multicast }
  option -ptp_range_over_ip_follow_up_delay \
    -configuremethod _c_./ptpRangeOverIp/followUpDelay \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelay \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelay {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay $v }
  method _g_./ptpRangeOverIp/followUpDelay {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay }
  
  option -ptp_range_over_ip_domain \
    -configuremethod _c_./ptpRangeOverIp/domain \
    -cgetmethod _g_./ptpRangeOverIp/domain \
    -readonly false
  method _c_./ptpRangeOverIp/domain {t v} { $self _configure_relative ./ptpRangeOverIp -domain $v }
  method _g_./ptpRangeOverIp/domain {t} { $self _cget_relative ./ptpRangeOverIp -domain }
  # multiplier 
  method _m_ptp_range_over_ip_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_domain }
  
  option -ptp_range_over_ip_announce_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/announceDropRate \
    -cgetmethod _g_./ptpRangeOverIp/announceDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/announceDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -announce_drop_rate $v }
  method _g_./ptpRangeOverIp/announceDropRate {t} { $self _cget_relative ./ptpRangeOverIp -announce_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_drop_rate }
  
  option -ptp_range_over_ip_client_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_increment_by $v }
  method _g_./ptpRangeOverIp/clientIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_increment_by }
  
  option -ptp_range_over_ip_renewal_invited \
    -configuremethod _c_./ptpRangeOverIp/renewalInvited \
    -cgetmethod _g_./ptpRangeOverIp/renewalInvited \
    -readonly false
  method _c_./ptpRangeOverIp/renewalInvited {t v} { $self _configure_relative ./ptpRangeOverIp -renewal_invited $v }
  method _g_./ptpRangeOverIp/renewalInvited {t} { $self _cget_relative ./ptpRangeOverIp -renewal_invited }
  option -ptp_range_over_ip_port_number_increment \
    -configuremethod _c_./ptpRangeOverIp/portNumberIncrement \
    -cgetmethod _g_./ptpRangeOverIp/portNumberIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/portNumberIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -port_number_increment $v }
  method _g_./ptpRangeOverIp/portNumberIncrement {t} { $self _cget_relative ./ptpRangeOverIp -port_number_increment }
  # multiplier 
  method _m_ptp_range_over_ip_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number_increment }
  
  option -ptp_range_over_ip_use_clock_identity \
    -configuremethod _c_./ptpRangeOverIp/useClockIdentity \
    -cgetmethod _g_./ptpRangeOverIp/useClockIdentity \
    -readonly false
  method _c_./ptpRangeOverIp/useClockIdentity {t v} { $self _configure_relative ./ptpRangeOverIp -use_clock_identity $v }
  method _g_./ptpRangeOverIp/useClockIdentity {t} { $self _cget_relative ./ptpRangeOverIp -use_clock_identity }
  option -ptp_range_over_ip_priority1 \
    -configuremethod _c_./ptpRangeOverIp/priority1 \
    -cgetmethod _g_./ptpRangeOverIp/priority1 \
    -readonly false
  method _c_./ptpRangeOverIp/priority1 {t v} { $self _configure_relative ./ptpRangeOverIp -priority1 $v }
  method _g_./ptpRangeOverIp/priority1 {t} { $self _cget_relative ./ptpRangeOverIp -priority1 }
  # multiplier 
  method _m_ptp_range_over_ip_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority1 }
  
  option -ptp_range_over_ip_use_alternate_master_flag \
    -configuremethod _c_./ptpRangeOverIp/useAlternateMasterFlag \
    -cgetmethod _g_./ptpRangeOverIp/useAlternateMasterFlag \
    -readonly false
  method _c_./ptpRangeOverIp/useAlternateMasterFlag {t v} { $self _configure_relative ./ptpRangeOverIp -use_alternate_master_flag $v }
  method _g_./ptpRangeOverIp/useAlternateMasterFlag {t} { $self _cget_relative ./ptpRangeOverIp -use_alternate_master_flag }
  option -ptp_range_over_ip_object_id \
    -configuremethod _c_./ptpRangeOverIp/objectId \
    -cgetmethod _g_./ptpRangeOverIp/objectId \
    -readonly false
  method _c_./ptpRangeOverIp/objectId {t v} { $self _configure_relative ./ptpRangeOverIp -object_id $v }
  method _g_./ptpRangeOverIp/objectId {t} { $self _cget_relative ./ptpRangeOverIp -object_id }
  # multiplier 
  method _m_ptp_range_over_ip_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_object_id }
  
  option -ptp_range_over_ip_delay_resp_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/delayRespReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/delayRespReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_receipt_timeout $v }
  method _g_./ptpRangeOverIp/delayRespReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_receipt_timeout }
  
  option -ptp_range_over_ip_announce_frequency_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceFrequencyTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceFrequencyTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceFrequencyTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_frequency_traceable $v }
  method _g_./ptpRangeOverIp/announceFrequencyTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_frequency_traceable }
  option -ptp_range_over_ip_priority2 \
    -configuremethod _c_./ptpRangeOverIp/priority2 \
    -cgetmethod _g_./ptpRangeOverIp/priority2 \
    -readonly false
  method _c_./ptpRangeOverIp/priority2 {t v} { $self _configure_relative ./ptpRangeOverIp -priority2 $v }
  method _g_./ptpRangeOverIp/priority2 {t} { $self _cget_relative ./ptpRangeOverIp -priority2 }
  # multiplier 
  method _m_ptp_range_over_ip_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority2 }
  
  option -ptp_range_over_ip_announce_current_utc_offset_valid \
    -configuremethod _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -cgetmethod _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -readonly false
  method _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t v} { $self _configure_relative ./ptpRangeOverIp -announce_current_utc_offset_valid $v }
  method _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t} { $self _cget_relative ./ptpRangeOverIp -announce_current_utc_offset_valid }
  option -ptp_range_over_ip_client_mac_address \
    -configuremethod _c_./ptpRangeOverIp/clientMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_address $v }
  method _g_./ptpRangeOverIp/clientMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_address }
  
  option -ptp_range_over_ip_time_source \
    -configuremethod _c_./ptpRangeOverIp/timeSource \
    -cgetmethod _g_./ptpRangeOverIp/timeSource \
    -readonly false
  method _c_./ptpRangeOverIp/timeSource {t v} { $self _configure_relative ./ptpRangeOverIp -time_source $v }
  method _g_./ptpRangeOverIp/timeSource {t} { $self _cget_relative ./ptpRangeOverIp -time_source }
  # multiplier 
  method _m_ptp_range_over_ip_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_time_source }
  
  option -ptp_range_over_ip_steps_removed \
    -configuremethod _c_./ptpRangeOverIp/stepsRemoved \
    -cgetmethod _g_./ptpRangeOverIp/stepsRemoved \
    -readonly false
  method _c_./ptpRangeOverIp/stepsRemoved {t v} { $self _configure_relative ./ptpRangeOverIp -steps_removed $v }
  method _g_./ptpRangeOverIp/stepsRemoved {t} { $self _cget_relative ./ptpRangeOverIp -steps_removed }
  # multiplier 
  method _m_ptp_range_over_ip_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_steps_removed }
  
  option -ptp_range_over_ip_clock_class \
    -configuremethod _c_./ptpRangeOverIp/clockClass \
    -cgetmethod _g_./ptpRangeOverIp/clockClass \
    -readonly false
  method _c_./ptpRangeOverIp/clockClass {t v} { $self _configure_relative ./ptpRangeOverIp -clock_class $v }
  method _g_./ptpRangeOverIp/clockClass {t} { $self _cget_relative ./ptpRangeOverIp -clock_class }
  # multiplier 
  method _m_ptp_range_over_ip_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_class }
  
  option -ptp_range_over_ip_request_attempts \
    -configuremethod _c_./ptpRangeOverIp/requestAttempts \
    -cgetmethod _g_./ptpRangeOverIp/requestAttempts \
    -readonly false
  method _c_./ptpRangeOverIp/requestAttempts {t v} { $self _configure_relative ./ptpRangeOverIp -request_attempts $v }
  method _g_./ptpRangeOverIp/requestAttempts {t} { $self _cget_relative ./ptpRangeOverIp -request_attempts }
  # multiplier 
  method _m_ptp_range_over_ip_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_attempts }
  
  option -ptp_range_over_ip_follow_up_bad_crc_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpBadCrcRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpBadCrcRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpBadCrcRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_bad_crc_rate $v }
  method _g_./ptpRangeOverIp/followUpBadCrcRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_bad_crc_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_bad_crc_rate }
  
  option -ptp_range_over_ip_delay_response_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/delayResponseDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_sync_interval \
    -configuremethod _c_./ptpRangeOverIp/logSyncInterval \
    -cgetmethod _g_./ptpRangeOverIp/logSyncInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logSyncInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_sync_interval $v }
  method _g_./ptpRangeOverIp/logSyncInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_sync_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_sync_interval }
  
  option -ptp_range_over_ip_master_count \
    -configuremethod _c_./ptpRangeOverIp/masterCount \
    -cgetmethod _g_./ptpRangeOverIp/masterCount \
    -readonly false
  method _c_./ptpRangeOverIp/masterCount {t v} { $self _configure_relative ./ptpRangeOverIp -master_count $v }
  method _g_./ptpRangeOverIp/masterCount {t} { $self _cget_relative ./ptpRangeOverIp -master_count }
  # multiplier 
  method _m_ptp_range_over_ip_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_count }
  
  option -ptp_range_over_ip_residence_time \
    -configuremethod _c_./ptpRangeOverIp/residenceTime \
    -cgetmethod _g_./ptpRangeOverIp/residenceTime \
    -readonly false
  method _c_./ptpRangeOverIp/residenceTime {t v} { $self _configure_relative ./ptpRangeOverIp -residence_time $v }
  method _g_./ptpRangeOverIp/residenceTime {t} { $self _cget_relative ./ptpRangeOverIp -residence_time }
  # multiplier 
  method _m_ptp_range_over_ip_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_residence_time }
  
  option -ptp_range_over_ip_signal_interval \
    -configuremethod _c_./ptpRangeOverIp/signalInterval \
    -cgetmethod _g_./ptpRangeOverIp/signalInterval \
    -readonly false
  method _c_./ptpRangeOverIp/signalInterval {t v} { $self _configure_relative ./ptpRangeOverIp -signal_interval $v }
  method _g_./ptpRangeOverIp/signalInterval {t} { $self _cget_relative ./ptpRangeOverIp -signal_interval }
  # multiplier 
  method _m_ptp_range_over_ip_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_interval }
  
  option -ptp_range_over_ip_delay_mechanism \
    -configuremethod _c_./ptpRangeOverIp/delayMechanism \
    -cgetmethod _g_./ptpRangeOverIp/delayMechanism \
    -readonly false
  method _c_./ptpRangeOverIp/delayMechanism {t v} { $self _configure_relative ./ptpRangeOverIp -delay_mechanism $v }
  method _g_./ptpRangeOverIp/delayMechanism {t} { $self _cget_relative ./ptpRangeOverIp -delay_mechanism }
  # multiplier 
  method _m_ptp_range_over_ip_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_mechanism }
  
  option -ptp_range_over_ip_strict_grant \
    -configuremethod _c_./ptpRangeOverIp/strictGrant \
    -cgetmethod _g_./ptpRangeOverIp/strictGrant \
    -readonly false
  method _c_./ptpRangeOverIp/strictGrant {t v} { $self _configure_relative ./ptpRangeOverIp -strict_grant $v }
  method _g_./ptpRangeOverIp/strictGrant {t} { $self _cget_relative ./ptpRangeOverIp -strict_grant }
  option -ptp_range_over_ip_sync_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/syncDropRate \
    -cgetmethod _g_./ptpRangeOverIp/syncDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/syncDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -sync_drop_rate $v }
  method _g_./ptpRangeOverIp/syncDropRate {t} { $self _cget_relative ./ptpRangeOverIp -sync_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_drop_rate }
  
  option -ptp_range_over_ip_drop_signal_req_sync \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqSync \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqSync \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqSync {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_sync $v }
  method _g_./ptpRangeOverIp/dropSignalReqSync {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_sync }
  option -ptp_range_over_ip_clock_increment \
    -configuremethod _c_./ptpRangeOverIp/clockIncrement \
    -cgetmethod _g_./ptpRangeOverIp/clockIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/clockIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -clock_increment $v }
  method _g_./ptpRangeOverIp/clockIncrement {t} { $self _cget_relative ./ptpRangeOverIp -clock_increment }
  # multiplier 
  method _m_ptp_range_over_ip_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_increment }
  
  option -ptp_range_over_ip_announce_ptp_timescale \
    -configuremethod _c_./ptpRangeOverIp/announcePtpTimescale \
    -cgetmethod _g_./ptpRangeOverIp/announcePtpTimescale \
    -readonly false
  method _c_./ptpRangeOverIp/announcePtpTimescale {t v} { $self _configure_relative ./ptpRangeOverIp -announce_ptp_timescale $v }
  method _g_./ptpRangeOverIp/announcePtpTimescale {t} { $self _cget_relative ./ptpRangeOverIp -announce_ptp_timescale }
  option -ptp_range_over_ip_signal_unicast_handling \
    -configuremethod _c_./ptpRangeOverIp/signalUnicastHandling \
    -cgetmethod _g_./ptpRangeOverIp/signalUnicastHandling \
    -readonly false
  method _c_./ptpRangeOverIp/signalUnicastHandling {t v} { $self _configure_relative ./ptpRangeOverIp -signal_unicast_handling $v }
  method _g_./ptpRangeOverIp/signalUnicastHandling {t} { $self _cget_relative ./ptpRangeOverIp -signal_unicast_handling }
  # multiplier 
  method _m_ptp_range_over_ip_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_unicast_handling }
  
  option -ptp_range_over_ip_enabled \
    -configuremethod _c_./ptpRangeOverIp/enabled \
    -cgetmethod _g_./ptpRangeOverIp/enabled \
    -readonly false
  method _c_./ptpRangeOverIp/enabled {t v} { $self _configure_relative ./ptpRangeOverIp -enabled $v }
  method _g_./ptpRangeOverIp/enabled {t} { $self _cget_relative ./ptpRangeOverIp -enabled }
  option -ptp_range_over_ip_timestamp_offset \
    -configuremethod _c_./ptpRangeOverIp/timestampOffset \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffset \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffset {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset $v }
  method _g_./ptpRangeOverIp/timestampOffset {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset }
  
  option -ptp_range_over_ip_master_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_by $v }
  method _g_./ptpRangeOverIp/masterIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_by }
  
  option -ptp_range_over_ip_request_interval \
    -configuremethod _c_./ptpRangeOverIp/requestInterval \
    -cgetmethod _g_./ptpRangeOverIp/requestInterval \
    -readonly false
  method _c_./ptpRangeOverIp/requestInterval {t v} { $self _configure_relative ./ptpRangeOverIp -request_interval $v }
  method _g_./ptpRangeOverIp/requestInterval {t} { $self _cget_relative ./ptpRangeOverIp -request_interval }
  # multiplier 
  method _m_ptp_range_over_ip_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_interval }
  
  option -ptp_range_over_ip_ip_tos \
    -configuremethod _c_./ptpRangeOverIp/ipTos \
    -cgetmethod _g_./ptpRangeOverIp/ipTos \
    -readonly false
  method _c_./ptpRangeOverIp/ipTos {t v} { $self _configure_relative ./ptpRangeOverIp -ip_tos $v }
  method _g_./ptpRangeOverIp/ipTos {t} { $self _cget_relative ./ptpRangeOverIp -ip_tos }
  # multiplier 
  method _m_ptp_range_over_ip_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_ip_tos }
  
  option -ptp_range_over_ip_request_holddown \
    -configuremethod _c_./ptpRangeOverIp/requestHolddown \
    -cgetmethod _g_./ptpRangeOverIp/requestHolddown \
    -readonly false
  method _c_./ptpRangeOverIp/requestHolddown {t v} { $self _configure_relative ./ptpRangeOverIp -request_holddown $v }
  method _g_./ptpRangeOverIp/requestHolddown {t} { $self _cget_relative ./ptpRangeOverIp -request_holddown }
  # multiplier 
  method _m_ptp_range_over_ip_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_holddown }
  
  option -ptp_range_over_ip_client_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_increment_by $v }
  method _g_./ptpRangeOverIp/clientMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_increment_by }
  
  option -ptp_range_over_ip_name \
    -configuremethod _c_./ptpRangeOverIp/name \
    -cgetmethod _g_./ptpRangeOverIp/name \
    -readonly false
  method _c_./ptpRangeOverIp/name {t v} { $self _configure_relative ./ptpRangeOverIp -name $v }
  method _g_./ptpRangeOverIp/name {t} { $self _cget_relative ./ptpRangeOverIp -name }
  # multiplier 
  method _m_ptp_range_over_ip_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_name }
  
  option -ptp_range_over_ip_drop_signal_req_announce \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqAnnounce \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqAnnounce \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqAnnounce {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_announce $v }
  method _g_./ptpRangeOverIp/dropSignalReqAnnounce {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_announce }
  option -ptp_range_over_ip_master_ip_address \
    -configuremethod _c_./ptpRangeOverIp/masterIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_address $v }
  method _g_./ptpRangeOverIp/masterIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_address }
  
  option -ptp_range_over_ip_first_clock \
    -configuremethod _c_./ptpRangeOverIp/firstClock \
    -cgetmethod _g_./ptpRangeOverIp/firstClock \
    -readonly false
  method _c_./ptpRangeOverIp/firstClock {t v} { $self _configure_relative ./ptpRangeOverIp -first_clock $v }
  method _g_./ptpRangeOverIp/firstClock {t} { $self _cget_relative ./ptpRangeOverIp -first_clock }
  # multiplier 
  method _m_ptp_range_over_ip_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_first_clock }
  
  option -ptp_range_over_ip_master_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_by $v }
  method _g_./ptpRangeOverIp/masterMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_by }
  
  option -ptp_range_over_ip_send_cancel_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendCancelTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendCancelTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendCancelTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_cancel_tlv $v }
  method _g_./ptpRangeOverIp/sendCancelTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_cancel_tlv }
  option -ptp_range_over_ip_port_number \
    -configuremethod _c_./ptpRangeOverIp/portNumber \
    -cgetmethod _g_./ptpRangeOverIp/portNumber \
    -readonly false
  method _c_./ptpRangeOverIp/portNumber {t v} { $self _configure_relative ./ptpRangeOverIp -port_number $v }
  method _g_./ptpRangeOverIp/portNumber {t} { $self _cget_relative ./ptpRangeOverIp -port_number }
  # multiplier 
  method _m_ptp_range_over_ip_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number }
  
  option -ptp_range_over_ip_client_ip_address \
    -configuremethod _c_./ptpRangeOverIp/clientIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_address $v }
  method _g_./ptpRangeOverIp/clientIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_address }
  
  option -ptp_range_over_ip_announce_leap59 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap59 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap59 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap59 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap59 $v }
  method _g_./ptpRangeOverIp/announceLeap59 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap59 }
  option -ptp_range_over_ip_send_announce_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_tlv $v }
  method _g_./ptpRangeOverIp/sendAnnounceTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_tlv }
  option -ptp_range_over_ip_sync_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/syncReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/syncReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/syncReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -sync_receipt_timeout $v }
  method _g_./ptpRangeOverIp/syncReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -sync_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_receipt_timeout }
  
  option -ptp_range_over_ip_announce_leap61 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap61 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap61 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap61 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap61 $v }
  method _g_./ptpRangeOverIp/announceLeap61 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap61 }
  option -ptp_range_over_ip_grant_delay_resp_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantDelayRespDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval $v }
  method _g_./ptpRangeOverIp/grantDelayRespDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_delay_resp_duration_interval }
  
  option -ptp_range_over_ip_timestamp_offset_variation \
    -configuremethod _c_./ptpRangeOverIp/timestampOffsetVariation \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffsetVariation \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffsetVariation {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset_variation $v }
  method _g_./ptpRangeOverIp/timestampOffsetVariation {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset_variation }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset_variation }
  
  option -ptp_range_over_ip_follow_up_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDropRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_drop_rate $v }
  method _g_./ptpRangeOverIp/followUpDropRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_drop_rate }
  
  option -ptp_range_over_ip_master_mac_address \
    -configuremethod _c_./ptpRangeOverIp/masterMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_address $v }
  method _g_./ptpRangeOverIp/masterMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_address }
  
  option -ptp_range_over_ip_drop_signal_req_delay_resp \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqDelayResp \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqDelayResp \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqDelayResp {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_delay_resp $v }
  method _g_./ptpRangeOverIp/dropSignalReqDelayResp {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_delay_resp }
  option -ptp_range_over_ip_grant_sync_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantSyncDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantSyncDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantSyncDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_sync_duration_interval $v }
  method _g_./ptpRangeOverIp/grantSyncDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_sync_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_sync_duration_interval }
  
  option -ptp_range_over_ip_learn_port_id \
    -configuremethod _c_./ptpRangeOverIp/learnPortId \
    -cgetmethod _g_./ptpRangeOverIp/learnPortId \
    -readonly false
  method _c_./ptpRangeOverIp/learnPortId {t v} { $self _configure_relative ./ptpRangeOverIp -learn_port_id $v }
  method _g_./ptpRangeOverIp/learnPortId {t} { $self _cget_relative ./ptpRangeOverIp -learn_port_id }
  option -ptp_range_over_ip_delay_response_delay \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelay \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelay \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelay {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay $v }
  method _g_./ptpRangeOverIp/delayResponseDelay {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay }
  
  option -ptp_range_over_ip_grant_unicast_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantUnicastDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantUnicastDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantUnicastDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_unicast_duration_interval $v }
  method _g_./ptpRangeOverIp/grantUnicastDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_unicast_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_unicast_duration_interval }
  
  option -ptp_range_over_ip_follow_up_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/followUpDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_delay_req_interval \
    -configuremethod _c_./ptpRangeOverIp/logDelayReqInterval \
    -cgetmethod _g_./ptpRangeOverIp/logDelayReqInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logDelayReqInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_delay_req_interval $v }
  method _g_./ptpRangeOverIp/logDelayReqInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_delay_req_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_delay_req_interval }
  
  option -ptp_range_over_ip_clock_accuracy \
    -configuremethod _c_./ptpRangeOverIp/clockAccuracy \
    -cgetmethod _g_./ptpRangeOverIp/clockAccuracy \
    -readonly false
  method _c_./ptpRangeOverIp/clockAccuracy {t v} { $self _configure_relative ./ptpRangeOverIp -clock_accuracy $v }
  method _g_./ptpRangeOverIp/clockAccuracy {t} { $self _cget_relative ./ptpRangeOverIp -clock_accuracy }
  # multiplier 
  method _m_ptp_range_over_ip_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_accuracy }
  
  option -ptp_range_over_ip_client_count \
    -configuremethod _c_./ptpRangeOverIp/clientCount \
    -cgetmethod _g_./ptpRangeOverIp/clientCount \
    -readonly false
  method _c_./ptpRangeOverIp/clientCount {t v} { $self _configure_relative ./ptpRangeOverIp -client_count $v }
  method _g_./ptpRangeOverIp/clientCount {t} { $self _cget_relative ./ptpRangeOverIp -client_count }
  # multiplier 
  method _m_ptp_range_over_ip_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_count }
  
  option -ptp_range_over_ip_announce_time_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceTimeTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceTimeTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceTimeTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_time_traceable $v }
  method _g_./ptpRangeOverIp/announceTimeTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_time_traceable }
  option -ptp_range_over_ip_step_mode \
    -configuremethod _c_./ptpRangeOverIp/stepMode \
    -cgetmethod _g_./ptpRangeOverIp/stepMode \
    -readonly false
  method _c_./ptpRangeOverIp/stepMode {t v} { $self _configure_relative ./ptpRangeOverIp -step_mode $v }
  method _g_./ptpRangeOverIp/stepMode {t} { $self _cget_relative ./ptpRangeOverIp -step_mode }
  # multiplier 
  method _m_ptp_range_over_ip_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_step_mode }
  
  option -ptp_range_over_ip_master_ip_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterIpIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_inter_entity }
  
  option -ptp_range_over_ip_delay_resp_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/delayRespDropRate \
    -cgetmethod _g_./ptpRangeOverIp/delayRespDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_drop_rate $v }
  method _g_./ptpRangeOverIp/delayRespDropRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_drop_rate }
  
  option -ptp_range_over_ip_announce_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/announceReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/announceReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/announceReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -announce_receipt_timeout $v }
  method _g_./ptpRangeOverIp/announceReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -announce_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_receipt_timeout }
  
  option -ptp_range_over_ip_rx_calibration \
    -configuremethod _c_./ptpRangeOverIp/rxCalibration \
    -cgetmethod _g_./ptpRangeOverIp/rxCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/rxCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -rx_calibration $v }
  method _g_./ptpRangeOverIp/rxCalibration {t} { $self _cget_relative ./ptpRangeOverIp -rx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_rx_calibration }
  
  option -ptp_range_over_ip_tx_calibration \
    -configuremethod _c_./ptpRangeOverIp/txCalibration \
    -cgetmethod _g_./ptpRangeOverIp/txCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/txCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -tx_calibration $v }
  method _g_./ptpRangeOverIp/txCalibration {t} { $self _cget_relative ./ptpRangeOverIp -tx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_tx_calibration }
  
  option -ptp_range_over_ip_log_announce_interval \
    -configuremethod _c_./ptpRangeOverIp/logAnnounceInterval \
    -cgetmethod _g_./ptpRangeOverIp/logAnnounceInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logAnnounceInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_announce_interval $v }
  method _g_./ptpRangeOverIp/logAnnounceInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_announce_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_announce_interval }
  
  option -igmp_querier_range_object_id \
    -configuremethod _c_./igmpQuerierRange/objectId \
    -cgetmethod _g_./igmpQuerierRange/objectId \
    -readonly false
  method _c_./igmpQuerierRange/objectId {t v} { $self _configure_relative ./igmpQuerierRange -object_id $v }
  method _g_./igmpQuerierRange/objectId {t} { $self _cget_relative ./igmpQuerierRange -object_id }
  # multiplier 
  method _m_igmp_querier_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_object_id }
  
  option -igmp_querier_range_specific_query_response_count \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseCount \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseCount \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseCount {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_count $v }
  method _g_./igmpQuerierRange/specificQueryResponseCount {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_count }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_count }
  
  option -igmp_querier_range_specific_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_interval $v }
  method _g_./igmpQuerierRange/specificQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_interval }
  
  option -igmp_querier_range_general_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_response_interval $v }
  method _g_./igmpQuerierRange/generalQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_response_interval }
  
  option -igmp_querier_range_name \
    -configuremethod _c_./igmpQuerierRange/name \
    -cgetmethod _g_./igmpQuerierRange/name \
    -readonly false
  method _c_./igmpQuerierRange/name {t v} { $self _configure_relative ./igmpQuerierRange -name $v }
  method _g_./igmpQuerierRange/name {t} { $self _cget_relative ./igmpQuerierRange -name }
  # multiplier 
  method _m_igmp_querier_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_name }
  
  option -igmp_querier_range_router_alert \
    -configuremethod _c_./igmpQuerierRange/routerAlert \
    -cgetmethod _g_./igmpQuerierRange/routerAlert \
    -readonly false
  method _c_./igmpQuerierRange/routerAlert {t v} { $self _configure_relative ./igmpQuerierRange -router_alert $v }
  method _g_./igmpQuerierRange/routerAlert {t} { $self _cget_relative ./igmpQuerierRange -router_alert }
  option -igmp_querier_range_general_query_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_interval $v }
  method _g_./igmpQuerierRange/generalQueryInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_interval }
  
  option -igmp_querier_range_robustness_variable \
    -configuremethod _c_./igmpQuerierRange/robustnessVariable \
    -cgetmethod _g_./igmpQuerierRange/robustnessVariable \
    -readonly false
  method _c_./igmpQuerierRange/robustnessVariable {t v} { $self _configure_relative ./igmpQuerierRange -robustness_variable $v }
  method _g_./igmpQuerierRange/robustnessVariable {t} { $self _cget_relative ./igmpQuerierRange -robustness_variable }
  # multiplier 
  method _m_igmp_querier_range_robustness_variable {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_robustness_variable }
  
  option -igmp_querier_range_startup_query_count \
    -configuremethod _c_./igmpQuerierRange/startupQueryCount \
    -cgetmethod _g_./igmpQuerierRange/startupQueryCount \
    -readonly false
  method _c_./igmpQuerierRange/startupQueryCount {t v} { $self _configure_relative ./igmpQuerierRange -startup_query_count $v }
  method _g_./igmpQuerierRange/startupQueryCount {t} { $self _cget_relative ./igmpQuerierRange -startup_query_count }
  # multiplier 
  method _m_igmp_querier_range_startup_query_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_startup_query_count }
  
  option -igmp_querier_range_version \
    -configuremethod _c_./igmpQuerierRange/version \
    -cgetmethod _g_./igmpQuerierRange/version \
    -readonly false
  method _c_./igmpQuerierRange/version {t v} { $self _configure_relative ./igmpQuerierRange -version $v }
  method _g_./igmpQuerierRange/version {t} { $self _cget_relative ./igmpQuerierRange -version }
  # multiplier 
  method _m_igmp_querier_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_version }
  
  option -igmp_querier_range_enabled \
    -configuremethod _c_./igmpQuerierRange/enabled \
    -cgetmethod _g_./igmpQuerierRange/enabled \
    -readonly false
  method _c_./igmpQuerierRange/enabled {t v} { $self _configure_relative ./igmpQuerierRange -enabled $v }
  method _g_./igmpQuerierRange/enabled {t} { $self _cget_relative ./igmpQuerierRange -enabled }
  option -igmp_mld_range_meshing_mode \
    -configuremethod _c_./igmpMldRange/meshingMode \
    -cgetmethod _g_./igmpMldRange/meshingMode \
    -readonly false
  method _c_./igmpMldRange/meshingMode {t v} { $self _configure_relative ./igmpMldRange -meshing_mode $v }
  method _g_./igmpMldRange/meshingMode {t} { $self _cget_relative ./igmpMldRange -meshing_mode }
  # multiplier 
  method _m_igmp_mld_range_meshing_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_meshing_mode }
  
  option -igmp_mld_range_router_alert \
    -configuremethod _c_./igmpMldRange/routerAlert \
    -cgetmethod _g_./igmpMldRange/routerAlert \
    -readonly false
  method _c_./igmpMldRange/routerAlert {t v} { $self _configure_relative ./igmpMldRange -router_alert $v }
  method _g_./igmpMldRange/routerAlert {t} { $self _cget_relative ./igmpMldRange -router_alert }
  option -igmp_mld_range_enabled \
    -configuremethod _c_./igmpMldRange/enabled \
    -cgetmethod _g_./igmpMldRange/enabled \
    -readonly false
  method _c_./igmpMldRange/enabled {t v} { $self _configure_relative ./igmpMldRange -enabled $v }
  method _g_./igmpMldRange/enabled {t} { $self _cget_relative ./igmpMldRange -enabled }
  option -igmp_mld_range_report_frequency \
    -configuremethod _c_./igmpMldRange/reportFrequency \
    -cgetmethod _g_./igmpMldRange/reportFrequency \
    -readonly false
  method _c_./igmpMldRange/reportFrequency {t v} { $self _configure_relative ./igmpMldRange -report_frequency $v }
  method _g_./igmpMldRange/reportFrequency {t} { $self _cget_relative ./igmpMldRange -report_frequency }
  # multiplier 
  method _m_igmp_mld_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_report_frequency }
  
  option -igmp_mld_range_unsolicited_response_mode \
    -configuremethod _c_./igmpMldRange/unsolicitedResponseMode \
    -cgetmethod _g_./igmpMldRange/unsolicitedResponseMode \
    -readonly false
  method _c_./igmpMldRange/unsolicitedResponseMode {t v} { $self _configure_relative ./igmpMldRange -unsolicited_response_mode $v }
  method _g_./igmpMldRange/unsolicitedResponseMode {t} { $self _cget_relative ./igmpMldRange -unsolicited_response_mode }
  option -igmp_mld_range_general_query_response_mode \
    -configuremethod _c_./igmpMldRange/generalQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/generalQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/generalQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -general_query_response_mode $v }
  method _g_./igmpMldRange/generalQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -general_query_response_mode }
  option -igmp_mld_range_specific_query_response_mode \
    -configuremethod _c_./igmpMldRange/specificQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/specificQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/specificQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -specific_query_response_mode $v }
  method _g_./igmpMldRange/specificQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -specific_query_response_mode }
  option -igmp_mld_range_name \
    -configuremethod _c_./igmpMldRange/name \
    -cgetmethod _g_./igmpMldRange/name \
    -readonly false
  method _c_./igmpMldRange/name {t v} { $self _configure_relative ./igmpMldRange -name $v }
  method _g_./igmpMldRange/name {t} { $self _cget_relative ./igmpMldRange -name }
  # multiplier 
  method _m_igmp_mld_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_name }
  
  option -igmp_mld_range_join_leave_multiplier \
    -configuremethod _c_./igmpMldRange/joinLeaveMultiplier \
    -cgetmethod _g_./igmpMldRange/joinLeaveMultiplier \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMultiplier {t v} { $self _configure_relative ./igmpMldRange -join_leave_multiplier $v }
  method _g_./igmpMldRange/joinLeaveMultiplier {t} { $self _cget_relative ./igmpMldRange -join_leave_multiplier }
  # multiplier 
  method _m_igmp_mld_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_join_leave_multiplier }
  
  option -igmp_mld_range_object_id \
    -configuremethod _c_./igmpMldRange/objectId \
    -cgetmethod _g_./igmpMldRange/objectId \
    -readonly false
  method _c_./igmpMldRange/objectId {t v} { $self _configure_relative ./igmpMldRange -object_id $v }
  method _g_./igmpMldRange/objectId {t} { $self _cget_relative ./igmpMldRange -object_id }
  # multiplier 
  method _m_igmp_mld_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_object_id }
  
  option -igmp_mld_range_version \
    -configuremethod _c_./igmpMldRange/version \
    -cgetmethod _g_./igmpMldRange/version \
    -readonly false
  method _c_./igmpMldRange/version {t v} { $self _configure_relative ./igmpMldRange -version $v }
  method _g_./igmpMldRange/version {t} { $self _cget_relative ./igmpMldRange -version }
  # multiplier 
  method _m_igmp_mld_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_version }
  
  option -igmp_mld_range_immediate_response \
    -configuremethod _c_./igmpMldRange/immediateResponse \
    -cgetmethod _g_./igmpMldRange/immediateResponse \
    -readonly false
  method _c_./igmpMldRange/immediateResponse {t v} { $self _configure_relative ./igmpMldRange -immediate_response $v }
  method _g_./igmpMldRange/immediateResponse {t} { $self _cget_relative ./igmpMldRange -immediate_response }
  option -igmp_mld_range_multicast_group_range \
    -configuremethod _c_./igmpMldRange/multicastGroupRange \
    -cgetmethod _g_./igmpMldRange/multicastGroupRange \
    -readonly false
  method _c_./igmpMldRange/multicastGroupRange {t v} { $self _configure_relative ./igmpMldRange -multicast_group_range $v }
  method _g_./igmpMldRange/multicastGroupRange {t} { $self _cget_relative ./igmpMldRange -multicast_group_range }
  option -igmp_mld_range_join_leave_multicast_group_range \
    -configuremethod _c_./igmpMldRange/joinLeaveMulticastGroupRange \
    -cgetmethod _g_./igmpMldRange/joinLeaveMulticastGroupRange \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMulticastGroupRange {t v} { $self _configure_relative ./igmpMldRange -join_leave_multicast_group_range $v }
  method _g_./igmpMldRange/joinLeaveMulticastGroupRange {t} { $self _cget_relative ./igmpMldRange -join_leave_multicast_group_range }
  option -atm_range_object_id \
    -configuremethod _c_./atmRange/objectId \
    -cgetmethod _g_./atmRange/objectId \
    -readonly false
  method _c_./atmRange/objectId {t v} { $self _configure_relative ./atmRange -object_id $v }
  method _g_./atmRange/objectId {t} { $self _cget_relative ./atmRange -object_id }
  # multiplier 
  method _m_atm_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_object_id }
  
  option -atm_range_increment_by \
    -configuremethod _c_./atmRange/incrementBy \
    -cgetmethod _g_./atmRange/incrementBy \
    -readonly false
  method _c_./atmRange/incrementBy {t v} { $self _configure_relative ./atmRange -increment_by $v }
  method _g_./atmRange/incrementBy {t} { $self _cget_relative ./atmRange -increment_by }
  # multiplier 
  method _m_atm_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_increment_by }
  
  option -atm_range_name \
    -configuremethod _c_./atmRange/name \
    -cgetmethod _g_./atmRange/name \
    -readonly false
  method _c_./atmRange/name {t v} { $self _configure_relative ./atmRange -name $v }
  method _g_./atmRange/name {t} { $self _cget_relative ./atmRange -name }
  # multiplier 
  method _m_atm_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_name }
  
  option -atm_range_count \
    -configuremethod _c_./atmRange/count \
    -cgetmethod _g_./atmRange/count \
    -readonly false
  method _c_./atmRange/count {t v} { $self _configure_relative ./atmRange -count $v }
  method _g_./atmRange/count {t} { $self _cget_relative ./atmRange -count }
  # multiplier 
  method _m_atm_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -atm_range_count }
  
  option -atm_range_mac \
    -configuremethod _c_./atmRange/mac \
    -cgetmethod _g_./atmRange/mac \
    -readonly false
  method _c_./atmRange/mac {t v} { $self _configure_relative ./atmRange -mac $v }
  method _g_./atmRange/mac {t} { $self _cget_relative ./atmRange -mac }
  # multiplier 
  method _m_atm_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_mac }
  
  option -atm_range_mtu \
    -configuremethod _c_./atmRange/mtu \
    -cgetmethod _g_./atmRange/mtu \
    -readonly false
  method _c_./atmRange/mtu {t v} { $self _configure_relative ./atmRange -mtu $v }
  method _g_./atmRange/mtu {t} { $self _cget_relative ./atmRange -mtu }
  # multiplier 
  method _m_atm_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -atm_range_mtu }
  
  option -atm_range_encapsulation \
    -configuremethod _c_./atmRange/encapsulation \
    -cgetmethod _g_./atmRange/encapsulation \
    -readonly false
  method _c_./atmRange/encapsulation {t v} { $self _configure_relative ./atmRange -encapsulation $v }
  method _g_./atmRange/encapsulation {t} { $self _cget_relative ./atmRange -encapsulation }
  # multiplier 
  method _m_atm_range_encapsulation {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_encapsulation }
  
  option -atm_range_enabled \
    -configuremethod _c_./atmRange/enabled \
    -cgetmethod _g_./atmRange/enabled \
    -readonly false
  method _c_./atmRange/enabled {t v} { $self _configure_relative ./atmRange -enabled $v }
  method _g_./atmRange/enabled {t} { $self _cget_relative ./atmRange -enabled }
  option -emulated_router_range_count \
    -configuremethod _c_./emulatedRouterRange/count \
    -cgetmethod _g_./emulatedRouterRange/count \
    -readonly false
  method _c_./emulatedRouterRange/count {t v} { $self _configure_relative ./emulatedRouterRange -count $v }
  method _g_./emulatedRouterRange/count {t} { $self _cget_relative ./emulatedRouterRange -count }
  # multiplier 
  method _m_emulated_router_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -emulated_router_range_count }
  
  option -emulated_router_range_enabled \
    -configuremethod _c_./emulatedRouterRange/enabled \
    -cgetmethod _g_./emulatedRouterRange/enabled \
    -readonly false
  method _c_./emulatedRouterRange/enabled {t v} { $self _configure_relative ./emulatedRouterRange -enabled $v }
  method _g_./emulatedRouterRange/enabled {t} { $self _cget_relative ./emulatedRouterRange -enabled }
  option -emulated_router_range_ip_type \
    -configuremethod _c_./emulatedRouterRange/ipType \
    -cgetmethod _g_./emulatedRouterRange/ipType \
    -readonly false
  method _c_./emulatedRouterRange/ipType {t v} { $self _configure_relative ./emulatedRouterRange -ip_type $v }
  method _g_./emulatedRouterRange/ipType {t} { $self _cget_relative ./emulatedRouterRange -ip_type }
  # multiplier 
  method _m_emulated_router_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_ip_type }
  
  option -emulated_router_range_gateway_increment_mode \
    -configuremethod _c_./emulatedRouterRange/gatewayIncrementMode \
    -cgetmethod _g_./emulatedRouterRange/gatewayIncrementMode \
    -readonly false
  method _c_./emulatedRouterRange/gatewayIncrementMode {t v} { $self _configure_relative ./emulatedRouterRange -gateway_increment_mode $v }
  method _g_./emulatedRouterRange/gatewayIncrementMode {t} { $self _cget_relative ./emulatedRouterRange -gateway_increment_mode }
  # multiplier 
  method _m_emulated_router_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_gateway_increment_mode }
  
  option -emulated_router_range_enable_gateway_arp \
    -configuremethod _c_./emulatedRouterRange/enableGatewayArp \
    -cgetmethod _g_./emulatedRouterRange/enableGatewayArp \
    -readonly false
  method _c_./emulatedRouterRange/enableGatewayArp {t v} { $self _configure_relative ./emulatedRouterRange -enable_gateway_arp $v }
  method _g_./emulatedRouterRange/enableGatewayArp {t} { $self _cget_relative ./emulatedRouterRange -enable_gateway_arp }
  option -emulated_router_range_ip_address \
    -configuremethod _c_./emulatedRouterRange/ipAddress \
    -cgetmethod _g_./emulatedRouterRange/ipAddress \
    -readonly false
  method _c_./emulatedRouterRange/ipAddress {t v} { $self _configure_relative ./emulatedRouterRange -ip_address $v }
  method _g_./emulatedRouterRange/ipAddress {t} { $self _cget_relative ./emulatedRouterRange -ip_address }
  # multiplier 
  method _m_emulated_router_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_ip_address }
  
  option -emulated_router_range_gateway_increment \
    -configuremethod _c_./emulatedRouterRange/gatewayIncrement \
    -cgetmethod _g_./emulatedRouterRange/gatewayIncrement \
    -readonly false
  method _c_./emulatedRouterRange/gatewayIncrement {t v} { $self _configure_relative ./emulatedRouterRange -gateway_increment $v }
  method _g_./emulatedRouterRange/gatewayIncrement {t} { $self _cget_relative ./emulatedRouterRange -gateway_increment }
  # multiplier 
  method _m_emulated_router_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_gateway_increment }
  
  option -emulated_router_range_increment_by \
    -configuremethod _c_./emulatedRouterRange/incrementBy \
    -cgetmethod _g_./emulatedRouterRange/incrementBy \
    -readonly false
  method _c_./emulatedRouterRange/incrementBy {t v} { $self _configure_relative ./emulatedRouterRange -increment_by $v }
  method _g_./emulatedRouterRange/incrementBy {t} { $self _cget_relative ./emulatedRouterRange -increment_by }
  # multiplier 
  method _m_emulated_router_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_increment_by }
  
  option -emulated_router_range_gateway_address \
    -configuremethod _c_./emulatedRouterRange/gatewayAddress \
    -cgetmethod _g_./emulatedRouterRange/gatewayAddress \
    -readonly false
  method _c_./emulatedRouterRange/gatewayAddress {t v} { $self _configure_relative ./emulatedRouterRange -gateway_address $v }
  method _g_./emulatedRouterRange/gatewayAddress {t} { $self _cget_relative ./emulatedRouterRange -gateway_address }
  # multiplier 
  method _m_emulated_router_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_gateway_address }
  
  option -emulated_router_range_name \
    -configuremethod _c_./emulatedRouterRange/name \
    -cgetmethod _g_./emulatedRouterRange/name \
    -readonly false
  method _c_./emulatedRouterRange/name {t v} { $self _configure_relative ./emulatedRouterRange -name $v }
  method _g_./emulatedRouterRange/name {t} { $self _cget_relative ./emulatedRouterRange -name }
  # multiplier 
  method _m_emulated_router_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_name }
  
  option -emulated_router_range_mss \
    -configuremethod _c_./emulatedRouterRange/mss \
    -cgetmethod _g_./emulatedRouterRange/mss \
    -readonly false
  method _c_./emulatedRouterRange/mss {t v} { $self _configure_relative ./emulatedRouterRange -mss $v }
  method _g_./emulatedRouterRange/mss {t} { $self _cget_relative ./emulatedRouterRange -mss }
  # multiplier 
  method _m_emulated_router_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -emulated_router_range_mss }
  
  option -emulated_router_range_object_id \
    -configuremethod _c_./emulatedRouterRange/objectId \
    -cgetmethod _g_./emulatedRouterRange/objectId \
    -readonly false
  method _c_./emulatedRouterRange/objectId {t v} { $self _configure_relative ./emulatedRouterRange -object_id $v }
  method _g_./emulatedRouterRange/objectId {t} { $self _cget_relative ./emulatedRouterRange -object_id }
  # multiplier 
  method _m_emulated_router_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_object_id }
  
  option -emulated_router_range_auto_count_enabled \
    -configuremethod _c_./emulatedRouterRange/autoCountEnabled \
    -cgetmethod _g_./emulatedRouterRange/autoCountEnabled \
    -readonly false
  method _c_./emulatedRouterRange/autoCountEnabled {t v} { $self _configure_relative ./emulatedRouterRange -auto_count_enabled $v }
  method _g_./emulatedRouterRange/autoCountEnabled {t} { $self _cget_relative ./emulatedRouterRange -auto_count_enabled }
  option -emulated_router_range_prefix \
    -configuremethod _c_./emulatedRouterRange/prefix \
    -cgetmethod _g_./emulatedRouterRange/prefix \
    -readonly false
  method _c_./emulatedRouterRange/prefix {t v} { $self _configure_relative ./emulatedRouterRange -prefix $v }
  method _g_./emulatedRouterRange/prefix {t} { $self _cget_relative ./emulatedRouterRange -prefix }
  # multiplier 
  method _m_emulated_router_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -emulated_router_range_prefix }
  
  option -emulated_router_range_auto_mac_generation \
    -configuremethod _c_./emulatedRouterRange/autoMacGeneration \
    -cgetmethod _g_./emulatedRouterRange/autoMacGeneration \
    -readonly false
  method _c_./emulatedRouterRange/autoMacGeneration {t v} { $self _configure_relative ./emulatedRouterRange -auto_mac_generation $v }
  method _g_./emulatedRouterRange/autoMacGeneration {t} { $self _cget_relative ./emulatedRouterRange -auto_mac_generation }
  option -amt_range_use_relay_discovery \
    -configuremethod _c_./amtRange/useRelayDiscovery \
    -cgetmethod _g_./amtRange/useRelayDiscovery \
    -readonly false
  method _c_./amtRange/useRelayDiscovery {t v} { $self _configure_relative ./amtRange -use_relay_discovery $v }
  method _g_./amtRange/useRelayDiscovery {t} { $self _cget_relative ./amtRange -use_relay_discovery }
  option -amt_range_amt_unicast_ip \
    -configuremethod _c_./amtRange/amtUnicastIp \
    -cgetmethod _g_./amtRange/amtUnicastIp \
    -readonly false
  method _c_./amtRange/amtUnicastIp {t v} { $self _configure_relative ./amtRange -amt_unicast_ip $v }
  method _g_./amtRange/amtUnicastIp {t} { $self _cget_relative ./amtRange -amt_unicast_ip }
  # multiplier 
  method _m_amt_range_amt_unicast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip }
  
  option -amt_range_enabled \
    -configuremethod _c_./amtRange/enabled \
    -cgetmethod _g_./amtRange/enabled \
    -readonly false
  method _c_./amtRange/enabled {t v} { $self _configure_relative ./amtRange -enabled $v }
  method _g_./amtRange/enabled {t} { $self _cget_relative ./amtRange -enabled }
  option -amt_range_query_timer_interval \
    -configuremethod _c_./amtRange/queryTimerInterval \
    -cgetmethod _g_./amtRange/queryTimerInterval \
    -readonly false
  method _c_./amtRange/queryTimerInterval {t v} { $self _configure_relative ./amtRange -query_timer_interval $v }
  method _g_./amtRange/queryTimerInterval {t} { $self _cget_relative ./amtRange -query_timer_interval }
  # multiplier 
  method _m_amt_range_query_timer_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_query_timer_interval }
  
  option -amt_range_amt_udp_src_port_increment \
    -configuremethod _c_./amtRange/amtUdpSrcPortIncrement \
    -cgetmethod _g_./amtRange/amtUdpSrcPortIncrement \
    -readonly false
  method _c_./amtRange/amtUdpSrcPortIncrement {t v} { $self _configure_relative ./amtRange -amt_udp_src_port_increment $v }
  method _g_./amtRange/amtUdpSrcPortIncrement {t} { $self _cget_relative ./amtRange -amt_udp_src_port_increment }
  # multiplier 
  method _m_amt_range_amt_udp_src_port_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port_increment }
  
  option -amt_range_send_teardown \
    -configuremethod _c_./amtRange/sendTeardown \
    -cgetmethod _g_./amtRange/sendTeardown \
    -readonly false
  method _c_./amtRange/sendTeardown {t v} { $self _configure_relative ./amtRange -send_teardown $v }
  method _g_./amtRange/sendTeardown {t} { $self _cget_relative ./amtRange -send_teardown }
  option -amt_range_discovery_retries \
    -configuremethod _c_./amtRange/discoveryRetries \
    -cgetmethod _g_./amtRange/discoveryRetries \
    -readonly false
  method _c_./amtRange/discoveryRetries {t v} { $self _configure_relative ./amtRange -discovery_retries $v }
  method _g_./amtRange/discoveryRetries {t} { $self _cget_relative ./amtRange -discovery_retries }
  # multiplier 
  method _m_amt_range_discovery_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_retries }
  
  option -amt_range_discovery_timeout \
    -configuremethod _c_./amtRange/discoveryTimeout \
    -cgetmethod _g_./amtRange/discoveryTimeout \
    -readonly false
  method _c_./amtRange/discoveryTimeout {t v} { $self _configure_relative ./amtRange -discovery_timeout $v }
  method _g_./amtRange/discoveryTimeout {t} { $self _cget_relative ./amtRange -discovery_timeout }
  # multiplier 
  method _m_amt_range_discovery_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_timeout }
  
  option -amt_range_request_retries \
    -configuremethod _c_./amtRange/requestRetries \
    -cgetmethod _g_./amtRange/requestRetries \
    -readonly false
  method _c_./amtRange/requestRetries {t v} { $self _configure_relative ./amtRange -request_retries $v }
  method _g_./amtRange/requestRetries {t} { $self _cget_relative ./amtRange -request_retries }
  # multiplier 
  method _m_amt_range_request_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_retries }
  
  option -amt_range_amt_udp_src_port \
    -configuremethod _c_./amtRange/amtUdpSrcPort \
    -cgetmethod _g_./amtRange/amtUdpSrcPort \
    -readonly false
  method _c_./amtRange/amtUdpSrcPort {t v} { $self _configure_relative ./amtRange -amt_udp_src_port $v }
  method _g_./amtRange/amtUdpSrcPort {t} { $self _cget_relative ./amtRange -amt_udp_src_port }
  # multiplier 
  method _m_amt_range_amt_udp_src_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port }
  
  option -amt_range_request_timeout \
    -configuremethod _c_./amtRange/requestTimeout \
    -cgetmethod _g_./amtRange/requestTimeout \
    -readonly false
  method _c_./amtRange/requestTimeout {t v} { $self _configure_relative ./amtRange -request_timeout $v }
  method _g_./amtRange/requestTimeout {t} { $self _cget_relative ./amtRange -request_timeout }
  # multiplier 
  method _m_amt_range_request_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_timeout }
  
  option -amt_range_name \
    -configuremethod _c_./amtRange/name \
    -cgetmethod _g_./amtRange/name \
    -readonly false
  method _c_./amtRange/name {t v} { $self _configure_relative ./amtRange -name $v }
  method _g_./amtRange/name {t} { $self _cget_relative ./amtRange -name }
  # multiplier 
  method _m_amt_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_name }
  
  option -amt_range_amt_anycast_ip_increment \
    -configuremethod _c_./amtRange/amtAnycastIpIncrement \
    -cgetmethod _g_./amtRange/amtAnycastIpIncrement \
    -readonly false
  method _c_./amtRange/amtAnycastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_anycast_ip_increment $v }
  method _g_./amtRange/amtAnycastIpIncrement {t} { $self _cget_relative ./amtRange -amt_anycast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_anycast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip_increment }
  
  option -amt_range_object_id \
    -configuremethod _c_./amtRange/objectId \
    -cgetmethod _g_./amtRange/objectId \
    -readonly false
  method _c_./amtRange/objectId {t v} { $self _configure_relative ./amtRange -object_id $v }
  method _g_./amtRange/objectId {t} { $self _cget_relative ./amtRange -object_id }
  # multiplier 
  method _m_amt_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_object_id }
  
  option -amt_range_override_qt \
    -configuremethod _c_./amtRange/overrideQt \
    -cgetmethod _g_./amtRange/overrideQt \
    -readonly false
  method _c_./amtRange/overrideQt {t v} { $self _configure_relative ./amtRange -override_qt $v }
  method _g_./amtRange/overrideQt {t} { $self _cget_relative ./amtRange -override_qt }
  option -amt_range_amt_anycast_ip \
    -configuremethod _c_./amtRange/amtAnycastIp \
    -cgetmethod _g_./amtRange/amtAnycastIp \
    -readonly false
  method _c_./amtRange/amtAnycastIp {t v} { $self _configure_relative ./amtRange -amt_anycast_ip $v }
  method _g_./amtRange/amtAnycastIp {t} { $self _cget_relative ./amtRange -amt_anycast_ip }
  # multiplier 
  method _m_amt_range_amt_anycast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip }
  
  option -amt_range_amt_unicast_ip_increment \
    -configuremethod _c_./amtRange/amtUnicastIpIncrement \
    -cgetmethod _g_./amtRange/amtUnicastIpIncrement \
    -readonly false
  method _c_./amtRange/amtUnicastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_unicast_ip_increment $v }
  method _g_./amtRange/amtUnicastIpIncrement {t} { $self _cget_relative ./amtRange -amt_unicast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_unicast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip_increment }
  
  option -ancp_range_circuit_id \
    -configuremethod _c_./ancpRange/circuitId \
    -cgetmethod _g_./ancpRange/circuitId \
    -readonly false
  method _c_./ancpRange/circuitId {t v} { $self _configure_relative ./ancpRange -circuit_id $v }
  method _g_./ancpRange/circuitId {t} { $self _cget_relative ./ancpRange -circuit_id }
  # multiplier 
  method _m_ancp_range_circuit_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_circuit_id }
  
  option -ancp_range_use_dsl_outer_vlan \
    -configuremethod _c_./ancpRange/useDslOuterVlan \
    -cgetmethod _g_./ancpRange/useDslOuterVlan \
    -readonly false
  method _c_./ancpRange/useDslOuterVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_outer_vlan $v }
  method _g_./ancpRange/useDslOuterVlan {t} { $self _cget_relative ./ancpRange -use_dsl_outer_vlan }
  option -ancp_range_distribution_algorithm_percent \
    -configuremethod _c_./ancpRange/distributionAlgorithmPercent \
    -cgetmethod _g_./ancpRange/distributionAlgorithmPercent \
    -readonly false
  method _c_./ancpRange/distributionAlgorithmPercent {t v} { $self _configure_relative ./ancpRange -distribution_algorithm_percent $v }
  method _g_./ancpRange/distributionAlgorithmPercent {t} { $self _cget_relative ./ancpRange -distribution_algorithm_percent }
  # multiplier 
  method _m_ancp_range_distribution_algorithm_percent {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_distribution_algorithm_percent }
  
  option -ancp_range_atm_vpi \
    -configuremethod _c_./ancpRange/atmVpi \
    -cgetmethod _g_./ancpRange/atmVpi \
    -readonly false
  method _c_./ancpRange/atmVpi {t v} { $self _configure_relative ./ancpRange -atm_vpi $v }
  method _g_./ancpRange/atmVpi {t} { $self _cget_relative ./ancpRange -atm_vpi }
  # multiplier 
  method _m_ancp_range_atm_vpi {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vpi }
  
  option -ancp_range_nas_ip_address \
    -configuremethod _c_./ancpRange/nasIpAddress \
    -cgetmethod _g_./ancpRange/nasIpAddress \
    -readonly false
  method _c_./ancpRange/nasIpAddress {t v} { $self _configure_relative ./ancpRange -nas_ip_address $v }
  method _g_./ancpRange/nasIpAddress {t} { $self _cget_relative ./ancpRange -nas_ip_address }
  # multiplier 
  method _m_ancp_range_nas_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address }
  
  option -ancp_range_nas_ancp_service_port \
    -configuremethod _c_./ancpRange/nasAncpServicePort \
    -cgetmethod _g_./ancpRange/nasAncpServicePort \
    -readonly false
  method _c_./ancpRange/nasAncpServicePort {t v} { $self _configure_relative ./ancpRange -nas_ancp_service_port $v }
  method _g_./ancpRange/nasAncpServicePort {t} { $self _cget_relative ./ancpRange -nas_ancp_service_port }
  # multiplier 
  method _m_ancp_range_nas_ancp_service_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_ancp_service_port }
  
  option -ancp_range_inner_vlan_id \
    -configuremethod _c_./ancpRange/innerVlanId \
    -cgetmethod _g_./ancpRange/innerVlanId \
    -readonly false
  method _c_./ancpRange/innerVlanId {t v} { $self _configure_relative ./ancpRange -inner_vlan_id $v }
  method _g_./ancpRange/innerVlanId {t} { $self _cget_relative ./ancpRange -inner_vlan_id }
  # multiplier 
  method _m_ancp_range_inner_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_inner_vlan_id }
  
  option -ancp_range_enabled \
    -configuremethod _c_./ancpRange/enabled \
    -cgetmethod _g_./ancpRange/enabled \
    -readonly false
  method _c_./ancpRange/enabled {t v} { $self _configure_relative ./ancpRange -enabled $v }
  method _g_./ancpRange/enabled {t} { $self _cget_relative ./ancpRange -enabled }
  option -ancp_range_use_dsl_inner_vlan \
    -configuremethod _c_./ancpRange/useDslInnerVlan \
    -cgetmethod _g_./ancpRange/useDslInnerVlan \
    -readonly false
  method _c_./ancpRange/useDslInnerVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_inner_vlan $v }
  method _g_./ancpRange/useDslInnerVlan {t} { $self _cget_relative ./ancpRange -use_dsl_inner_vlan }
  option -ancp_range_access_aggregation_cb_tlv \
    -configuremethod _c_./ancpRange/accessAggregationCbTlv \
    -cgetmethod _g_./ancpRange/accessAggregationCbTlv \
    -readonly false
  method _c_./ancpRange/accessAggregationCbTlv {t v} { $self _configure_relative ./ancpRange -access_aggregation_cb_tlv $v }
  method _g_./ancpRange/accessAggregationCbTlv {t} { $self _cget_relative ./ancpRange -access_aggregation_cb_tlv }
  # multiplier 
  method _m_ancp_range_access_aggregation_cb_tlv {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_access_aggregation_cb_tlv }
  
  option -ancp_range_nas_keep_alive_retries \
    -configuremethod _c_./ancpRange/nasKeepAliveRetries \
    -cgetmethod _g_./ancpRange/nasKeepAliveRetries \
    -readonly false
  method _c_./ancpRange/nasKeepAliveRetries {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_retries $v }
  method _g_./ancpRange/nasKeepAliveRetries {t} { $self _cget_relative ./ancpRange -nas_keep_alive_retries }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_retries }
  
  option -ancp_range_nas_keep_alive_timeout \
    -configuremethod _c_./ancpRange/nasKeepAliveTimeout \
    -cgetmethod _g_./ancpRange/nasKeepAliveTimeout \
    -readonly false
  method _c_./ancpRange/nasKeepAliveTimeout {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_timeout $v }
  method _g_./ancpRange/nasKeepAliveTimeout {t} { $self _cget_relative ./ancpRange -nas_keep_alive_timeout }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_timeout }
  
  option -ancp_range_name \
    -configuremethod _c_./ancpRange/name \
    -cgetmethod _g_./ancpRange/name \
    -readonly false
  method _c_./ancpRange/name {t v} { $self _configure_relative ./ancpRange -name $v }
  method _g_./ancpRange/name {t} { $self _cget_relative ./ancpRange -name }
  # multiplier 
  method _m_ancp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_name }
  
  option -ancp_range_enable_access_aggregation \
    -configuremethod _c_./ancpRange/enableAccessAggregation \
    -cgetmethod _g_./ancpRange/enableAccessAggregation \
    -readonly false
  method _c_./ancpRange/enableAccessAggregation {t v} { $self _configure_relative ./ancpRange -enable_access_aggregation $v }
  method _g_./ancpRange/enableAccessAggregation {t} { $self _cget_relative ./ancpRange -enable_access_aggregation }
  option -ancp_range_object_id \
    -configuremethod _c_./ancpRange/objectId \
    -cgetmethod _g_./ancpRange/objectId \
    -readonly false
  method _c_./ancpRange/objectId {t v} { $self _configure_relative ./ancpRange -object_id $v }
  method _g_./ancpRange/objectId {t} { $self _cget_relative ./ancpRange -object_id }
  # multiplier 
  method _m_ancp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_object_id }
  
  option -ancp_range_atm_vci \
    -configuremethod _c_./ancpRange/atmVci \
    -cgetmethod _g_./ancpRange/atmVci \
    -readonly false
  method _c_./ancpRange/atmVci {t v} { $self _configure_relative ./ancpRange -atm_vci $v }
  method _g_./ancpRange/atmVci {t} { $self _cget_relative ./ancpRange -atm_vci }
  # multiplier 
  method _m_ancp_range_atm_vci {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vci }
  
  option -ancp_range_nas_ipaddress_incr \
    -configuremethod _c_./ancpRange/nasIPAddressIncr \
    -cgetmethod _g_./ancpRange/nasIPAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIPAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ipaddress_incr $v }
  method _g_./ancpRange/nasIPAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ipaddress_incr }
  # multiplier 
  method _m_ancp_range_nas_ipaddress_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ipaddress_incr }
  
  option -ancp_range_outer_vlan_id \
    -configuremethod _c_./ancpRange/outerVlanId \
    -cgetmethod _g_./ancpRange/outerVlanId \
    -readonly false
  method _c_./ancpRange/outerVlanId {t v} { $self _configure_relative ./ancpRange -outer_vlan_id $v }
  method _g_./ancpRange/outerVlanId {t} { $self _cget_relative ./ancpRange -outer_vlan_id }
  # multiplier 
  method _m_ancp_range_outer_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_outer_vlan_id }
  
  option -ancp_range_nas_ip_address_incr \
    -configuremethod _c_./ancpRange/nasIpAddressIncr \
    -cgetmethod _g_./ancpRange/nasIpAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIpAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ip_address_incr $v }
  method _g_./ancpRange/nasIpAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ip_address_incr }
  # multiplier 
  method _m_ancp_range_nas_ip_address_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address_incr }
  
  option -ancp_range_ancp_ip_range \
    -configuremethod _c_./ancpRange/ancpIpRange \
    -cgetmethod _g_./ancpRange/ancpIpRange \
    -readonly false
  method _c_./ancpRange/ancpIpRange {t v} { $self _configure_relative ./ancpRange -ancp_ip_range $v }
  method _g_./ancpRange/ancpIpRange {t} { $self _cget_relative ./ancpRange -ancp_ip_range }
  option -ancp_range_ancp_pvc_range \
    -configuremethod _c_./ancpRange/ancpPvcRange \
    -cgetmethod _g_./ancpRange/ancpPvcRange \
    -readonly false
  method _c_./ancpRange/ancpPvcRange {t v} { $self _configure_relative ./ancpRange -ancp_pvc_range $v }
  method _g_./ancpRange/ancpPvcRange {t} { $self _cget_relative ./ancpRange -ancp_pvc_range }
  option -ancp_range_ancp_vlan_range \
    -configuremethod _c_./ancpRange/ancpVlanRange \
    -cgetmethod _g_./ancpRange/ancpVlanRange \
    -readonly false
  method _c_./ancpRange/ancpVlanRange {t v} { $self _configure_relative ./ancpRange -ancp_vlan_range $v }
  method _g_./ancpRange/ancpVlanRange {t} { $self _cget_relative ./ancpRange -ancp_vlan_range }
  option -ancp_range_ancp_mac_range \
    -configuremethod _c_./ancpRange/ancpMacRange \
    -cgetmethod _g_./ancpRange/ancpMacRange \
    -readonly false
  method _c_./ancpRange/ancpMacRange {t v} { $self _configure_relative ./ancpRange -ancp_mac_range $v }
  method _g_./ancpRange/ancpMacRange {t} { $self _cget_relative ./ancpRange -ancp_mac_range }
  option -ancp_range_ancp_atm_range \
    -configuremethod _c_./ancpRange/ancpAtmRange \
    -cgetmethod _g_./ancpRange/ancpAtmRange \
    -readonly false
  method _c_./ancpRange/ancpAtmRange {t v} { $self _configure_relative ./ancpRange -ancp_atm_range $v }
  method _g_./ancpRange/ancpAtmRange {t} { $self _cget_relative ./ancpRange -ancp_atm_range }
  option -ancp_range_dsl_resync_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslResyncProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslResyncProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslResyncProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_resync_profile_allocation_table $v }
  method _g_./ancpRange/dslResyncProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_resync_profile_allocation_table }
  option -ancp_range_dsl_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_profile_allocation_table $v }
  method _g_./ancpRange/dslProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_profile_allocation_table }
  option -ancp_range_ancp_ip_range_count \
    -configuremethod _c_./ancpRange/ancpIpRange/count \
    -cgetmethod _g_./ancpRange/ancpIpRange/count \
    -readonly false
  method _c_./ancpRange/ancpIpRange/count {t v} { $self _configure_relative ./ancpRange/ancpIpRange -count $v }
  method _g_./ancpRange/ancpIpRange/count {t} { $self _cget_relative ./ancpRange/ancpIpRange -count }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_count }
  
  option -ancp_range_ancp_ip_range_ip_type \
    -configuremethod _c_./ancpRange/ancpIpRange/ipType \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipType \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipType {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_type $v }
  method _g_./ancpRange/ancpIpRange/ipType {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_type }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_type }
  
  option -ancp_range_ancp_ip_range_enabled \
    -configuremethod _c_./ancpRange/ancpIpRange/enabled \
    -cgetmethod _g_./ancpRange/ancpIpRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enabled $v }
  method _g_./ancpRange/ancpIpRange/enabled {t} { $self _cget_relative ./ancpRange/ancpIpRange -enabled }
  option -ancp_range_ancp_ip_range_gateway_increment_mode \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrementMode {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment_mode $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrementMode {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment_mode }
  
  option -ancp_range_ancp_ip_range_enable_gateway_arp \
    -configuremethod _c_./ancpRange/ancpIpRange/enableGatewayArp \
    -cgetmethod _g_./ancpRange/ancpIpRange/enableGatewayArp \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enableGatewayArp {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enable_gateway_arp $v }
  method _g_./ancpRange/ancpIpRange/enableGatewayArp {t} { $self _cget_relative ./ancpRange/ancpIpRange -enable_gateway_arp }
  option -ancp_range_ancp_ip_range_ip_address \
    -configuremethod _c_./ancpRange/ancpIpRange/ipAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_address $v }
  method _g_./ancpRange/ancpIpRange/ipAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_address }
  
  option -ancp_range_ancp_ip_range_gateway_increment \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrement \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrement \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrement {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrement {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment }
  
  option -ancp_range_ancp_ip_range_increment_by \
    -configuremethod _c_./ancpRange/ancpIpRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpIpRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpIpRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpIpRange -increment_by $v }
  method _g_./ancpRange/ancpIpRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpIpRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_increment_by }
  
  option -ancp_range_ancp_ip_range_gateway_address \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_address $v }
  method _g_./ancpRange/ancpIpRange/gatewayAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_address }
  
  option -ancp_range_ancp_ip_range_name \
    -configuremethod _c_./ancpRange/ancpIpRange/name \
    -cgetmethod _g_./ancpRange/ancpIpRange/name \
    -readonly false
  method _c_./ancpRange/ancpIpRange/name {t v} { $self _configure_relative ./ancpRange/ancpIpRange -name $v }
  method _g_./ancpRange/ancpIpRange/name {t} { $self _cget_relative ./ancpRange/ancpIpRange -name }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_name }
  
  option -ancp_range_ancp_ip_range_mss \
    -configuremethod _c_./ancpRange/ancpIpRange/mss \
    -cgetmethod _g_./ancpRange/ancpIpRange/mss \
    -readonly false
  method _c_./ancpRange/ancpIpRange/mss {t v} { $self _configure_relative ./ancpRange/ancpIpRange -mss $v }
  method _g_./ancpRange/ancpIpRange/mss {t} { $self _cget_relative ./ancpRange/ancpIpRange -mss }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_mss }
  
  option -ancp_range_ancp_ip_range_object_id \
    -configuremethod _c_./ancpRange/ancpIpRange/objectId \
    -cgetmethod _g_./ancpRange/ancpIpRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpIpRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpIpRange -object_id $v }
  method _g_./ancpRange/ancpIpRange/objectId {t} { $self _cget_relative ./ancpRange/ancpIpRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_object_id }
  
  option -ancp_range_ancp_ip_range_prefix \
    -configuremethod _c_./ancpRange/ancpIpRange/prefix \
    -cgetmethod _g_./ancpRange/ancpIpRange/prefix \
    -readonly false
  method _c_./ancpRange/ancpIpRange/prefix {t v} { $self _configure_relative ./ancpRange/ancpIpRange -prefix $v }
  method _g_./ancpRange/ancpIpRange/prefix {t} { $self _cget_relative ./ancpRange/ancpIpRange -prefix }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_prefix }
  
  option -ancp_range_ancp_ip_range_auto_mac_generation \
    -configuremethod _c_./ancpRange/ancpIpRange/autoMacGeneration \
    -cgetmethod _g_./ancpRange/ancpIpRange/autoMacGeneration \
    -readonly false
  method _c_./ancpRange/ancpIpRange/autoMacGeneration {t v} { $self _configure_relative ./ancpRange/ancpIpRange -auto_mac_generation $v }
  method _g_./ancpRange/ancpIpRange/autoMacGeneration {t} { $self _cget_relative ./ancpRange/ancpIpRange -auto_mac_generation }
  option -ancp_range_ancp_pvc_range_vpi_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment_step }
  
  option -ancp_range_ancp_pvc_range_vci_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vciUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_unique_count }
  
  option -ancp_range_ancp_pvc_range_vci_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment_step }
  
  option -ancp_range_ancp_pvc_range_enabled \
    -configuremethod _c_./ancpRange/ancpPvcRange/enabled \
    -cgetmethod _g_./ancpRange/ancpPvcRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -enabled $v }
  method _g_./ancpRange/ancpPvcRange/enabled {t} { $self _cget_relative ./ancpRange/ancpPvcRange -enabled }
  option -ancp_range_ancp_pvc_range_vpi_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vpiFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_first_id }
  
  option -ancp_range_ancp_pvc_range_vpi_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment }
  
  option -ancp_range_ancp_pvc_range_vci_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vciFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_first_id }
  
  option -ancp_range_ancp_pvc_range_vci_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment }
  
  option -ancp_range_ancp_pvc_range_name \
    -configuremethod _c_./ancpRange/ancpPvcRange/name \
    -cgetmethod _g_./ancpRange/ancpPvcRange/name \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/name {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -name $v }
  method _g_./ancpRange/ancpPvcRange/name {t} { $self _cget_relative ./ancpRange/ancpPvcRange -name }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_name }
  
  option -ancp_range_ancp_pvc_range_increment_mode \
    -configuremethod _c_./ancpRange/ancpPvcRange/incrementMode \
    -cgetmethod _g_./ancpRange/ancpPvcRange/incrementMode \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/incrementMode {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -increment_mode $v }
  method _g_./ancpRange/ancpPvcRange/incrementMode {t} { $self _cget_relative ./ancpRange/ancpPvcRange -increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_increment_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_increment_mode }
  
  option -ancp_range_ancp_pvc_range_object_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/objectId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -object_id $v }
  method _g_./ancpRange/ancpPvcRange/objectId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_object_id }
  
  option -ancp_range_ancp_pvc_range_vpi_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vpiUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerFirstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerFirstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerFirstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_first_id $v }
  method _g_./ancpRange/ancpVlanRange/innerFirstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_first_id }
  
  option -ancp_range_ancp_vlan_range_inner_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrement \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrement \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrement {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrement {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment }
  
  option -ancp_range_ancp_vlan_range_enabled \
    -configuremethod _c_./ancpRange/ancpVlanRange/enabled \
    -cgetmethod _g_./ancpRange/ancpVlanRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -enabled $v }
  method _g_./ancpRange/ancpVlanRange/enabled {t} { $self _cget_relative ./ancpRange/ancpVlanRange -enabled }
  option -ancp_range_ancp_vlan_range_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/uniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/uniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/uniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -unique_count $v }
  method _g_./ancpRange/ancpVlanRange/uniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_unique_count }
  
  option -ancp_range_ancp_vlan_range_name \
    -configuremethod _c_./ancpRange/ancpVlanRange/name \
    -cgetmethod _g_./ancpRange/ancpVlanRange/name \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/name {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -name $v }
  method _g_./ancpRange/ancpVlanRange/name {t} { $self _cget_relative ./ancpRange/ancpVlanRange -name }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_name }
  
  option -ancp_range_ancp_vlan_range_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/incrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/incrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/incrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment_step $v }
  method _g_./ancpRange/ancpVlanRange/incrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment_step }
  
  option -ancp_range_ancp_vlan_range_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/tpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/tpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/tpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -tpid $v }
  method _g_./ancpRange/ancpVlanRange/tpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_tpid }
  
  option -ancp_range_ancp_vlan_range_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/priority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/priority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/priority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -priority $v }
  method _g_./ancpRange/ancpVlanRange/priority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_priority }
  
  option -ancp_range_ancp_vlan_range_inner_enable \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerEnable \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerEnable \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerEnable {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_enable $v }
  method _g_./ancpRange/ancpVlanRange/innerEnable {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_enable }
  option -ancp_range_ancp_vlan_range_object_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/objectId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -object_id $v }
  method _g_./ancpRange/ancpVlanRange/objectId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_object_id }
  
  option -ancp_range_ancp_vlan_range_inner_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerUniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_unique_count $v }
  method _g_./ancpRange/ancpVlanRange/innerUniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerTpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerTpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerTpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_tpid $v }
  method _g_./ancpRange/ancpVlanRange/innerTpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_tpid }
  
  option -ancp_range_ancp_vlan_range_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/firstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/firstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/firstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -first_id $v }
  method _g_./ancpRange/ancpVlanRange/firstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_first_id }
  
  option -ancp_range_ancp_vlan_range_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/increment \
    -cgetmethod _g_./ancpRange/ancpVlanRange/increment \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/increment {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment $v }
  method _g_./ancpRange/ancpVlanRange/increment {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment }
  
  option -ancp_range_ancp_vlan_range_inner_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment_step $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment_step }
  
  option -ancp_range_ancp_vlan_range_id_incr_mode \
    -configuremethod _c_./ancpRange/ancpVlanRange/idIncrMode \
    -cgetmethod _g_./ancpRange/ancpVlanRange/idIncrMode \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/idIncrMode {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -id_incr_mode $v }
  method _g_./ancpRange/ancpVlanRange/idIncrMode {t} { $self _cget_relative ./ancpRange/ancpVlanRange -id_incr_mode }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_id_incr_mode }
  
  option -ancp_range_ancp_vlan_range_inner_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerPriority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerPriority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerPriority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_priority $v }
  method _g_./ancpRange/ancpVlanRange/innerPriority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_priority }
  
  option -ancp_range_ancp_vlan_range_vlan_id_info \
    -configuremethod _c_./ancpRange/ancpVlanRange/vlanIdInfo \
    -cgetmethod _g_./ancpRange/ancpVlanRange/vlanIdInfo \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/vlanIdInfo {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -vlan_id_info $v }
  method _g_./ancpRange/ancpVlanRange/vlanIdInfo {t} { $self _cget_relative ./ancpRange/ancpVlanRange -vlan_id_info }
  option -ancp_range_ancp_mac_range_object_id \
    -configuremethod _c_./ancpRange/ancpMacRange/objectId \
    -cgetmethod _g_./ancpRange/ancpMacRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpMacRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpMacRange -object_id $v }
  method _g_./ancpRange/ancpMacRange/objectId {t} { $self _cget_relative ./ancpRange/ancpMacRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_object_id }
  
  option -ancp_range_ancp_mac_range_increment_by \
    -configuremethod _c_./ancpRange/ancpMacRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpMacRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpMacRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpMacRange -increment_by $v }
  method _g_./ancpRange/ancpMacRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpMacRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_increment_by }
  
  option -ancp_range_ancp_mac_range_name \
    -configuremethod _c_./ancpRange/ancpMacRange/name \
    -cgetmethod _g_./ancpRange/ancpMacRange/name \
    -readonly false
  method _c_./ancpRange/ancpMacRange/name {t v} { $self _configure_relative ./ancpRange/ancpMacRange -name $v }
  method _g_./ancpRange/ancpMacRange/name {t} { $self _cget_relative ./ancpRange/ancpMacRange -name }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_name }
  
  option -ancp_range_ancp_mac_range_count \
    -configuremethod _c_./ancpRange/ancpMacRange/count \
    -cgetmethod _g_./ancpRange/ancpMacRange/count \
    -readonly false
  method _c_./ancpRange/ancpMacRange/count {t v} { $self _configure_relative ./ancpRange/ancpMacRange -count $v }
  method _g_./ancpRange/ancpMacRange/count {t} { $self _cget_relative ./ancpRange/ancpMacRange -count }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_count }
  
  option -ancp_range_ancp_mac_range_mac \
    -configuremethod _c_./ancpRange/ancpMacRange/mac \
    -cgetmethod _g_./ancpRange/ancpMacRange/mac \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mac {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mac $v }
  method _g_./ancpRange/ancpMacRange/mac {t} { $self _cget_relative ./ancpRange/ancpMacRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mac }
  
  option -ancp_range_ancp_mac_range_mtu \
    -configuremethod _c_./ancpRange/ancpMacRange/mtu \
    -cgetmethod _g_./ancpRange/ancpMacRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mtu $v }
  method _g_./ancpRange/ancpMacRange/mtu {t} { $self _cget_relative ./ancpRange/ancpMacRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mtu }
  
  option -ancp_range_ancp_mac_range_enabled \
    -configuremethod _c_./ancpRange/ancpMacRange/enabled \
    -cgetmethod _g_./ancpRange/ancpMacRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpMacRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpMacRange -enabled $v }
  method _g_./ancpRange/ancpMacRange/enabled {t} { $self _cget_relative ./ancpRange/ancpMacRange -enabled }
  option -ancp_range_ancp_atm_range_object_id \
    -configuremethod _c_./ancpRange/ancpAtmRange/objectId \
    -cgetmethod _g_./ancpRange/ancpAtmRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -object_id $v }
  method _g_./ancpRange/ancpAtmRange/objectId {t} { $self _cget_relative ./ancpRange/ancpAtmRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_object_id }
  
  option -ancp_range_ancp_atm_range_increment_by \
    -configuremethod _c_./ancpRange/ancpAtmRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpAtmRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -increment_by $v }
  method _g_./ancpRange/ancpAtmRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpAtmRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_increment_by }
  
  option -ancp_range_ancp_atm_range_name \
    -configuremethod _c_./ancpRange/ancpAtmRange/name \
    -cgetmethod _g_./ancpRange/ancpAtmRange/name \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/name {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -name $v }
  method _g_./ancpRange/ancpAtmRange/name {t} { $self _cget_relative ./ancpRange/ancpAtmRange -name }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_name }
  
  option -ancp_range_ancp_atm_range_count \
    -configuremethod _c_./ancpRange/ancpAtmRange/count \
    -cgetmethod _g_./ancpRange/ancpAtmRange/count \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/count {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -count $v }
  method _g_./ancpRange/ancpAtmRange/count {t} { $self _cget_relative ./ancpRange/ancpAtmRange -count }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_count }
  
  option -ancp_range_ancp_atm_range_mac \
    -configuremethod _c_./ancpRange/ancpAtmRange/mac \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mac \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mac {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mac $v }
  method _g_./ancpRange/ancpAtmRange/mac {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mac }
  
  option -ancp_range_ancp_atm_range_mtu \
    -configuremethod _c_./ancpRange/ancpAtmRange/mtu \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mtu $v }
  method _g_./ancpRange/ancpAtmRange/mtu {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mtu }
  
  option -ancp_range_ancp_atm_range_encapsulation \
    -configuremethod _c_./ancpRange/ancpAtmRange/encapsulation \
    -cgetmethod _g_./ancpRange/ancpAtmRange/encapsulation \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/encapsulation {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -encapsulation $v }
  method _g_./ancpRange/ancpAtmRange/encapsulation {t} { $self _cget_relative ./ancpRange/ancpAtmRange -encapsulation }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_encapsulation {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_encapsulation }
  
  option -ancp_range_ancp_atm_range_enabled \
    -configuremethod _c_./ancpRange/ancpAtmRange/enabled \
    -cgetmethod _g_./ancpRange/ancpAtmRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -enabled $v }
  method _g_./ancpRange/ancpAtmRange/enabled {t} { $self _cget_relative ./ancpRange/ancpAtmRange -enabled }
  option -twamp_control_range_object_id \
    -configuremethod _c_./twampControlRange/objectId \
    -cgetmethod _g_./twampControlRange/objectId \
    -readonly false
  method _c_./twampControlRange/objectId {t v} { $self _configure_relative ./twampControlRange -object_id $v }
  method _g_./twampControlRange/objectId {t} { $self _cget_relative ./twampControlRange -object_id }
  # multiplier 
  method _m_twamp_control_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_object_id }
  
  option -twamp_control_range_name \
    -configuremethod _c_./twampControlRange/name \
    -cgetmethod _g_./twampControlRange/name \
    -readonly false
  method _c_./twampControlRange/name {t v} { $self _configure_relative ./twampControlRange -name $v }
  method _g_./twampControlRange/name {t} { $self _cget_relative ./twampControlRange -name }
  # multiplier 
  method _m_twamp_control_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_name }
  
  option -twamp_control_range_mode \
    -configuremethod _c_./twampControlRange/mode \
    -cgetmethod _g_./twampControlRange/mode \
    -readonly false
  method _c_./twampControlRange/mode {t v} { $self _configure_relative ./twampControlRange -mode $v }
  method _g_./twampControlRange/mode {t} { $self _cget_relative ./twampControlRange -mode }
  # multiplier 
  method _m_twamp_control_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_mode }
  
  option -twamp_control_range_control_server_port \
    -configuremethod _c_./twampControlRange/controlServerPort \
    -cgetmethod _g_./twampControlRange/controlServerPort \
    -readonly false
  method _c_./twampControlRange/controlServerPort {t v} { $self _configure_relative ./twampControlRange -control_server_port $v }
  method _g_./twampControlRange/controlServerPort {t} { $self _cget_relative ./twampControlRange -control_server_port }
  # multiplier 
  method _m_twamp_control_range_control_server_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_control_server_port }
  
  option -twamp_control_range_count \
    -configuremethod _c_./twampControlRange/count \
    -cgetmethod _g_./twampControlRange/count \
    -readonly false
  method _c_./twampControlRange/count {t v} { $self _configure_relative ./twampControlRange -count $v }
  method _g_./twampControlRange/count {t} { $self _cget_relative ./twampControlRange -count }
  # multiplier 
  method _m_twamp_control_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_count }
  
  option -twamp_control_range_secret \
    -configuremethod _c_./twampControlRange/secret \
    -cgetmethod _g_./twampControlRange/secret \
    -readonly false
  method _c_./twampControlRange/secret {t v} { $self _configure_relative ./twampControlRange -secret $v }
  method _g_./twampControlRange/secret {t} { $self _cget_relative ./twampControlRange -secret }
  # multiplier 
  method _m_twamp_control_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_secret }
  
  option -twamp_control_range_key_id \
    -configuremethod _c_./twampControlRange/keyId \
    -cgetmethod _g_./twampControlRange/keyId \
    -readonly false
  method _c_./twampControlRange/keyId {t v} { $self _configure_relative ./twampControlRange -key_id $v }
  method _g_./twampControlRange/keyId {t} { $self _cget_relative ./twampControlRange -key_id }
  # multiplier 
  method _m_twamp_control_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_key_id }
  
  option -twamp_control_range_control_server_ip_increment \
    -configuremethod _c_./twampControlRange/controlServerIpIncrement \
    -cgetmethod _g_./twampControlRange/controlServerIpIncrement \
    -readonly false
  method _c_./twampControlRange/controlServerIpIncrement {t v} { $self _configure_relative ./twampControlRange -control_server_ip_increment $v }
  method _g_./twampControlRange/controlServerIpIncrement {t} { $self _cget_relative ./twampControlRange -control_server_ip_increment }
  # multiplier 
  method _m_twamp_control_range_control_server_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_server_ip_increment }
  
  option -twamp_control_range_enabled \
    -configuremethod _c_./twampControlRange/enabled \
    -cgetmethod _g_./twampControlRange/enabled \
    -readonly false
  method _c_./twampControlRange/enabled {t v} { $self _configure_relative ./twampControlRange -enabled $v }
  method _g_./twampControlRange/enabled {t} { $self _cget_relative ./twampControlRange -enabled }
  option -twamp_control_range_control_start_server_ip \
    -configuremethod _c_./twampControlRange/controlStartServerIp \
    -cgetmethod _g_./twampControlRange/controlStartServerIp \
    -readonly false
  method _c_./twampControlRange/controlStartServerIp {t v} { $self _configure_relative ./twampControlRange -control_start_server_ip $v }
  method _g_./twampControlRange/controlStartServerIp {t} { $self _cget_relative ./twampControlRange -control_start_server_ip }
  # multiplier 
  method _m_twamp_control_range_control_start_server_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_start_server_ip }
  
  option -iptv_range_inter_stb_start_delay \
    -configuremethod _c_./iptvRange/interStbStartDelay \
    -cgetmethod _g_./iptvRange/interStbStartDelay \
    -readonly false
  method _c_./iptvRange/interStbStartDelay {t v} { $self _configure_relative ./iptvRange -inter_stb_start_delay $v }
  method _g_./iptvRange/interStbStartDelay {t} { $self _cget_relative ./iptvRange -inter_stb_start_delay }
  # multiplier 
  method _m_iptv_range_inter_stb_start_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_inter_stb_start_delay }
  
  option -iptv_range_router_alert \
    -configuremethod _c_./iptvRange/routerAlert \
    -cgetmethod _g_./iptvRange/routerAlert \
    -readonly false
  method _c_./iptvRange/routerAlert {t v} { $self _configure_relative ./iptvRange -router_alert $v }
  method _g_./iptvRange/routerAlert {t} { $self _cget_relative ./iptvRange -router_alert }
  option -iptv_range_viewing_profile \
    -configuremethod _c_./iptvRange/viewingProfile \
    -cgetmethod _g_./iptvRange/viewingProfile \
    -readonly false
  method _c_./iptvRange/viewingProfile {t v} { $self _configure_relative ./iptvRange -viewing_profile $v }
  method _g_./iptvRange/viewingProfile {t} { $self _cget_relative ./iptvRange -viewing_profile }
  option -iptv_range_leave_latency_threshold \
    -configuremethod _c_./iptvRange/leaveLatencyThreshold \
    -cgetmethod _g_./iptvRange/leaveLatencyThreshold \
    -readonly false
  method _c_./iptvRange/leaveLatencyThreshold {t v} { $self _configure_relative ./iptvRange -leave_latency_threshold $v }
  method _g_./iptvRange/leaveLatencyThreshold {t} { $self _cget_relative ./iptvRange -leave_latency_threshold }
  # multiplier 
  method _m_iptv_range_leave_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_leave_latency_threshold }
  
  option -iptv_range_enabled \
    -configuremethod _c_./iptvRange/enabled \
    -cgetmethod _g_./iptvRange/enabled \
    -readonly false
  method _c_./iptvRange/enabled {t v} { $self _configure_relative ./iptvRange -enabled $v }
  method _g_./iptvRange/enabled {t} { $self _cget_relative ./iptvRange -enabled }
  option -iptv_range_join_latency_threshold \
    -configuremethod _c_./iptvRange/joinLatencyThreshold \
    -cgetmethod _g_./iptvRange/joinLatencyThreshold \
    -readonly false
  method _c_./iptvRange/joinLatencyThreshold {t v} { $self _configure_relative ./iptvRange -join_latency_threshold $v }
  method _g_./iptvRange/joinLatencyThreshold {t} { $self _cget_relative ./iptvRange -join_latency_threshold }
  # multiplier 
  method _m_iptv_range_join_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_latency_threshold }
  
  option -iptv_range_report_frequency \
    -configuremethod _c_./iptvRange/reportFrequency \
    -cgetmethod _g_./iptvRange/reportFrequency \
    -readonly false
  method _c_./iptvRange/reportFrequency {t v} { $self _configure_relative ./iptvRange -report_frequency $v }
  method _g_./iptvRange/reportFrequency {t} { $self _cget_relative ./iptvRange -report_frequency }
  # multiplier 
  method _m_iptv_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_report_frequency }
  
  option -iptv_range_unsolicited_response_mode \
    -configuremethod _c_./iptvRange/unsolicitedResponseMode \
    -cgetmethod _g_./iptvRange/unsolicitedResponseMode \
    -readonly false
  method _c_./iptvRange/unsolicitedResponseMode {t v} { $self _configure_relative ./iptvRange -unsolicited_response_mode $v }
  method _g_./iptvRange/unsolicitedResponseMode {t} { $self _cget_relative ./iptvRange -unsolicited_response_mode }
  option -iptv_range_general_query_response_mode \
    -configuremethod _c_./iptvRange/generalQueryResponseMode \
    -cgetmethod _g_./iptvRange/generalQueryResponseMode \
    -readonly false
  method _c_./iptvRange/generalQueryResponseMode {t v} { $self _configure_relative ./iptvRange -general_query_response_mode $v }
  method _g_./iptvRange/generalQueryResponseMode {t} { $self _cget_relative ./iptvRange -general_query_response_mode }
  option -iptv_range_specific_query_response_mode \
    -configuremethod _c_./iptvRange/specificQueryResponseMode \
    -cgetmethod _g_./iptvRange/specificQueryResponseMode \
    -readonly false
  method _c_./iptvRange/specificQueryResponseMode {t v} { $self _configure_relative ./iptvRange -specific_query_response_mode $v }
  method _g_./iptvRange/specificQueryResponseMode {t} { $self _cget_relative ./iptvRange -specific_query_response_mode }
  option -iptv_range_name \
    -configuremethod _c_./iptvRange/name \
    -cgetmethod _g_./iptvRange/name \
    -readonly false
  method _c_./iptvRange/name {t v} { $self _configure_relative ./iptvRange -name $v }
  method _g_./iptvRange/name {t} { $self _cget_relative ./iptvRange -name }
  # multiplier 
  method _m_iptv_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_name }
  
  option -iptv_range_log_failure_timestamps \
    -configuremethod _c_./iptvRange/logFailureTimestamps \
    -cgetmethod _g_./iptvRange/logFailureTimestamps \
    -readonly false
  method _c_./iptvRange/logFailureTimestamps {t v} { $self _configure_relative ./iptvRange -log_failure_timestamps $v }
  method _g_./iptvRange/logFailureTimestamps {t} { $self _cget_relative ./iptvRange -log_failure_timestamps }
  option -iptv_range_object_id \
    -configuremethod _c_./iptvRange/objectId \
    -cgetmethod _g_./iptvRange/objectId \
    -readonly false
  method _c_./iptvRange/objectId {t v} { $self _configure_relative ./iptvRange -object_id $v }
  method _g_./iptvRange/objectId {t} { $self _cget_relative ./iptvRange -object_id }
  # multiplier 
  method _m_iptv_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_object_id }
  
  option -iptv_range_join_leave_multiplier \
    -configuremethod _c_./iptvRange/joinLeaveMultiplier \
    -cgetmethod _g_./iptvRange/joinLeaveMultiplier \
    -readonly false
  method _c_./iptvRange/joinLeaveMultiplier {t v} { $self _configure_relative ./iptvRange -join_leave_multiplier $v }
  method _g_./iptvRange/joinLeaveMultiplier {t} { $self _cget_relative ./iptvRange -join_leave_multiplier }
  # multiplier 
  method _m_iptv_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_leave_multiplier }
  
  option -iptv_range_stb_leave_join_delay \
    -configuremethod _c_./iptvRange/stbLeaveJoinDelay \
    -cgetmethod _g_./iptvRange/stbLeaveJoinDelay \
    -readonly false
  method _c_./iptvRange/stbLeaveJoinDelay {t v} { $self _configure_relative ./iptvRange -stb_leave_join_delay $v }
  method _g_./iptvRange/stbLeaveJoinDelay {t} { $self _cget_relative ./iptvRange -stb_leave_join_delay }
  # multiplier 
  method _m_iptv_range_stb_leave_join_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_stb_leave_join_delay }
  
  option -iptv_range_version \
    -configuremethod _c_./iptvRange/version \
    -cgetmethod _g_./iptvRange/version \
    -readonly false
  method _c_./iptvRange/version {t v} { $self _configure_relative ./iptvRange -version $v }
  method _g_./iptvRange/version {t} { $self _cget_relative ./iptvRange -version }
  # multiplier 
  method _m_iptv_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_version }
  
  option -iptv_range_immediate_response \
    -configuremethod _c_./iptvRange/immediateResponse \
    -cgetmethod _g_./iptvRange/immediateResponse \
    -readonly false
  method _c_./iptvRange/immediateResponse {t v} { $self _configure_relative ./iptvRange -immediate_response $v }
  method _g_./iptvRange/immediateResponse {t} { $self _cget_relative ./iptvRange -immediate_response }
  option -iptv_range_iptv_channels \
    -configuremethod _c_./iptvRange/iptvChannels \
    -cgetmethod _g_./iptvRange/iptvChannels \
    -readonly false
  method _c_./iptvRange/iptvChannels {t v} { $self _configure_relative ./iptvRange -iptv_channels $v }
  method _g_./iptvRange/iptvChannels {t} { $self _cget_relative ./iptvRange -iptv_channels }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -eapo_udp_range_expected_system_token ./eapoUdpRange/expectedSystemToken
    -eapo_udp_range_user_password ./eapoUdpRange/userPassword
    -eapo_udp_range_enabled ./eapoUdpRange/enabled
    -eapo_udp_range_nac_sequence ./eapoUdpRange/nacSequence
    -eapo_udp_range_fast_stateless_resume ./eapoUdpRange/fastStatelessResume
    -eapo_udp_range_user_name ./eapoUdpRange/userName
    -eapo_udp_range_response_type ./eapoUdpRange/responseType
    -eapo_udp_range_name ./eapoUdpRange/name
    -eapo_udp_range_protocol ./eapoUdpRange/protocol
    -eapo_udp_range_fast_inner_method ./eapoUdpRange/fastInnerMethod
    -eapo_udp_range_fast_provision_mode ./eapoUdpRange/fastProvisionMode
    -eapo_udp_range_object_id ./eapoUdpRange/objectId
    -web_auth_range_object_id ./webAuthRange/objectId
    -web_auth_range_input_value3 ./webAuthRange/inputValue3
    -web_auth_range_name ./webAuthRange/name
    -web_auth_range_expect ./webAuthRange/expect
    -web_auth_range_input_value1 ./webAuthRange/inputValue1
    -web_auth_range_enabled ./webAuthRange/enabled
    -web_auth_range_input_value2 ./webAuthRange/inputValue2
    -twamp_server_range_iteration_count ./twampServerRange/iterationCount
    -twamp_server_range_count ./twampServerRange/count
    -twamp_server_range_enabled ./twampServerRange/enabled
    -twamp_server_range_reflector_port ./twampServerRange/reflectorPort
    -twamp_server_range_max_test_sessions ./twampServerRange/maxTestSessions
    -twamp_server_range_control_port ./twampServerRange/controlPort
    -twamp_server_range_key_id ./twampServerRange/keyId
    -twamp_server_range_permitted_ip ./twampServerRange/permittedIp
    -twamp_server_range_name ./twampServerRange/name
    -twamp_server_range_enable_access_control ./twampServerRange/enableAccessControl
    -twamp_server_range_object_id ./twampServerRange/objectId
    -twamp_server_range_permitted_ip_increment ./twampServerRange/permittedIpIncrement
    -twamp_server_range_permitted_sender_port ./twampServerRange/permittedSenderPort
    -twamp_server_range_mode ./twampServerRange/mode
    -twamp_server_range_secret ./twampServerRange/secret
    -pvc_range_vpi_increment_step ./pvcRange/vpiIncrementStep
    -pvc_range_vci_unique_count ./pvcRange/vciUniqueCount
    -pvc_range_vci_increment_step ./pvcRange/vciIncrementStep
    -pvc_range_enabled ./pvcRange/enabled
    -pvc_range_vpi_first_id ./pvcRange/vpiFirstId
    -pvc_range_vpi_increment ./pvcRange/vpiIncrement
    -pvc_range_vci_first_id ./pvcRange/vciFirstId
    -pvc_range_vci_increment ./pvcRange/vciIncrement
    -pvc_range_name ./pvcRange/name
    -pvc_range_increment_mode ./pvcRange/incrementMode
    -pvc_range_object_id ./pvcRange/objectId
    -pvc_range_vpi_unique_count ./pvcRange/vpiUniqueCount
    -ip_range_count ./ipRange/count
    -ip_range_ip_type ./ipRange/ipType
    -ip_range_enabled ./ipRange/enabled
    -ip_range_gateway_increment_mode ./ipRange/gatewayIncrementMode
    -ip_range_enable_gateway_arp ./ipRange/enableGatewayArp
    -ip_range_ip_address ./ipRange/ipAddress
    -ip_range_gateway_increment ./ipRange/gatewayIncrement
    -ip_range_increment_by ./ipRange/incrementBy
    -ip_range_gateway_address ./ipRange/gatewayAddress
    -ip_range_name ./ipRange/name
    -ip_range_mss ./ipRange/mss
    -ip_range_object_id ./ipRange/objectId
    -ip_range_prefix ./ipRange/prefix
    -ip_range_auto_mac_generation ./ipRange/autoMacGeneration
    -ptp_range_over_ip_master_mac_increment_inter_entity ./ptpRangeOverIp/masterMacIncrementInterEntity
    -ptp_range_over_ip_communication_mode ./ptpRangeOverIp/communicationMode
    -ptp_range_over_ip_send_announce_multicast ./ptpRangeOverIp/sendAnnounceMulticast
    -ptp_range_over_ip_follow_up_delay ./ptpRangeOverIp/followUpDelay
    -ptp_range_over_ip_domain ./ptpRangeOverIp/domain
    -ptp_range_over_ip_announce_drop_rate ./ptpRangeOverIp/announceDropRate
    -ptp_range_over_ip_client_ip_increment_by ./ptpRangeOverIp/clientIpIncrementBy
    -ptp_range_over_ip_renewal_invited ./ptpRangeOverIp/renewalInvited
    -ptp_range_over_ip_port_number_increment ./ptpRangeOverIp/portNumberIncrement
    -ptp_range_over_ip_use_clock_identity ./ptpRangeOverIp/useClockIdentity
    -ptp_range_over_ip_priority1 ./ptpRangeOverIp/priority1
    -ptp_range_over_ip_use_alternate_master_flag ./ptpRangeOverIp/useAlternateMasterFlag
    -ptp_range_over_ip_object_id ./ptpRangeOverIp/objectId
    -ptp_range_over_ip_delay_resp_receipt_timeout ./ptpRangeOverIp/delayRespReceiptTimeout
    -ptp_range_over_ip_announce_frequency_traceable ./ptpRangeOverIp/announceFrequencyTraceable
    -ptp_range_over_ip_priority2 ./ptpRangeOverIp/priority2
    -ptp_range_over_ip_announce_current_utc_offset_valid ./ptpRangeOverIp/announceCurrentUtcOffsetValid
    -ptp_range_over_ip_client_mac_address ./ptpRangeOverIp/clientMacAddress
    -ptp_range_over_ip_time_source ./ptpRangeOverIp/timeSource
    -ptp_range_over_ip_steps_removed ./ptpRangeOverIp/stepsRemoved
    -ptp_range_over_ip_clock_class ./ptpRangeOverIp/clockClass
    -ptp_range_over_ip_request_attempts ./ptpRangeOverIp/requestAttempts
    -ptp_range_over_ip_follow_up_bad_crc_rate ./ptpRangeOverIp/followUpBadCrcRate
    -ptp_range_over_ip_delay_response_delay_insertion_rate ./ptpRangeOverIp/delayResponseDelayInsertionRate
    -ptp_range_over_ip_log_sync_interval ./ptpRangeOverIp/logSyncInterval
    -ptp_range_over_ip_master_count ./ptpRangeOverIp/masterCount
    -ptp_range_over_ip_residence_time ./ptpRangeOverIp/residenceTime
    -ptp_range_over_ip_signal_interval ./ptpRangeOverIp/signalInterval
    -ptp_range_over_ip_delay_mechanism ./ptpRangeOverIp/delayMechanism
    -ptp_range_over_ip_strict_grant ./ptpRangeOverIp/strictGrant
    -ptp_range_over_ip_sync_drop_rate ./ptpRangeOverIp/syncDropRate
    -ptp_range_over_ip_drop_signal_req_sync ./ptpRangeOverIp/dropSignalReqSync
    -ptp_range_over_ip_clock_increment ./ptpRangeOverIp/clockIncrement
    -ptp_range_over_ip_announce_ptp_timescale ./ptpRangeOverIp/announcePtpTimescale
    -ptp_range_over_ip_signal_unicast_handling ./ptpRangeOverIp/signalUnicastHandling
    -ptp_range_over_ip_enabled ./ptpRangeOverIp/enabled
    -ptp_range_over_ip_timestamp_offset ./ptpRangeOverIp/timestampOffset
    -ptp_range_over_ip_master_ip_increment_by ./ptpRangeOverIp/masterIpIncrementBy
    -ptp_range_over_ip_request_interval ./ptpRangeOverIp/requestInterval
    -ptp_range_over_ip_ip_tos ./ptpRangeOverIp/ipTos
    -ptp_range_over_ip_request_holddown ./ptpRangeOverIp/requestHolddown
    -ptp_range_over_ip_client_mac_increment_by ./ptpRangeOverIp/clientMacIncrementBy
    -ptp_range_over_ip_name ./ptpRangeOverIp/name
    -ptp_range_over_ip_drop_signal_req_announce ./ptpRangeOverIp/dropSignalReqAnnounce
    -ptp_range_over_ip_master_ip_address ./ptpRangeOverIp/masterIpAddress
    -ptp_range_over_ip_first_clock ./ptpRangeOverIp/firstClock
    -ptp_range_over_ip_master_mac_increment_by ./ptpRangeOverIp/masterMacIncrementBy
    -ptp_range_over_ip_send_cancel_tlv ./ptpRangeOverIp/sendCancelTlv
    -ptp_range_over_ip_port_number ./ptpRangeOverIp/portNumber
    -ptp_range_over_ip_client_ip_address ./ptpRangeOverIp/clientIpAddress
    -ptp_range_over_ip_announce_leap59 ./ptpRangeOverIp/announceLeap59
    -ptp_range_over_ip_send_announce_tlv ./ptpRangeOverIp/sendAnnounceTlv
    -ptp_range_over_ip_sync_receipt_timeout ./ptpRangeOverIp/syncReceiptTimeout
    -ptp_range_over_ip_announce_leap61 ./ptpRangeOverIp/announceLeap61
    -ptp_range_over_ip_grant_delay_resp_duration_interval ./ptpRangeOverIp/grantDelayRespDurationInterval
    -ptp_range_over_ip_timestamp_offset_variation ./ptpRangeOverIp/timestampOffsetVariation
    -ptp_range_over_ip_follow_up_drop_rate ./ptpRangeOverIp/followUpDropRate
    -ptp_range_over_ip_master_mac_address ./ptpRangeOverIp/masterMacAddress
    -ptp_range_over_ip_drop_signal_req_delay_resp ./ptpRangeOverIp/dropSignalReqDelayResp
    -ptp_range_over_ip_grant_sync_duration_interval ./ptpRangeOverIp/grantSyncDurationInterval
    -ptp_range_over_ip_learn_port_id ./ptpRangeOverIp/learnPortId
    -ptp_range_over_ip_delay_response_delay ./ptpRangeOverIp/delayResponseDelay
    -ptp_range_over_ip_grant_unicast_duration_interval ./ptpRangeOverIp/grantUnicastDurationInterval
    -ptp_range_over_ip_follow_up_delay_insertion_rate ./ptpRangeOverIp/followUpDelayInsertionRate
    -ptp_range_over_ip_log_delay_req_interval ./ptpRangeOverIp/logDelayReqInterval
    -ptp_range_over_ip_clock_accuracy ./ptpRangeOverIp/clockAccuracy
    -ptp_range_over_ip_client_count ./ptpRangeOverIp/clientCount
    -ptp_range_over_ip_announce_time_traceable ./ptpRangeOverIp/announceTimeTraceable
    -ptp_range_over_ip_step_mode ./ptpRangeOverIp/stepMode
    -ptp_range_over_ip_master_ip_increment_inter_entity ./ptpRangeOverIp/masterIpIncrementInterEntity
    -ptp_range_over_ip_delay_resp_drop_rate ./ptpRangeOverIp/delayRespDropRate
    -ptp_range_over_ip_announce_receipt_timeout ./ptpRangeOverIp/announceReceiptTimeout
    -ptp_range_over_ip_rx_calibration ./ptpRangeOverIp/rxCalibration
    -ptp_range_over_ip_tx_calibration ./ptpRangeOverIp/txCalibration
    -ptp_range_over_ip_log_announce_interval ./ptpRangeOverIp/logAnnounceInterval
    -igmp_querier_range_object_id ./igmpQuerierRange/objectId
    -igmp_querier_range_specific_query_response_count ./igmpQuerierRange/specificQueryResponseCount
    -igmp_querier_range_specific_query_response_interval ./igmpQuerierRange/specificQueryResponseInterval
    -igmp_querier_range_general_query_response_interval ./igmpQuerierRange/generalQueryResponseInterval
    -igmp_querier_range_name ./igmpQuerierRange/name
    -igmp_querier_range_router_alert ./igmpQuerierRange/routerAlert
    -igmp_querier_range_general_query_interval ./igmpQuerierRange/generalQueryInterval
    -igmp_querier_range_robustness_variable ./igmpQuerierRange/robustnessVariable
    -igmp_querier_range_startup_query_count ./igmpQuerierRange/startupQueryCount
    -igmp_querier_range_version ./igmpQuerierRange/version
    -igmp_querier_range_enabled ./igmpQuerierRange/enabled
    -igmp_mld_range_meshing_mode ./igmpMldRange/meshingMode
    -igmp_mld_range_router_alert ./igmpMldRange/routerAlert
    -igmp_mld_range_enabled ./igmpMldRange/enabled
    -igmp_mld_range_report_frequency ./igmpMldRange/reportFrequency
    -igmp_mld_range_unsolicited_response_mode ./igmpMldRange/unsolicitedResponseMode
    -igmp_mld_range_general_query_response_mode ./igmpMldRange/generalQueryResponseMode
    -igmp_mld_range_specific_query_response_mode ./igmpMldRange/specificQueryResponseMode
    -igmp_mld_range_name ./igmpMldRange/name
    -igmp_mld_range_join_leave_multiplier ./igmpMldRange/joinLeaveMultiplier
    -igmp_mld_range_object_id ./igmpMldRange/objectId
    -igmp_mld_range_version ./igmpMldRange/version
    -igmp_mld_range_immediate_response ./igmpMldRange/immediateResponse
    -igmp_mld_range_multicast_group_range ./igmpMldRange/multicastGroupRange
    -igmp_mld_range_join_leave_multicast_group_range ./igmpMldRange/joinLeaveMulticastGroupRange
    -atm_range_object_id ./atmRange/objectId
    -atm_range_increment_by ./atmRange/incrementBy
    -atm_range_name ./atmRange/name
    -atm_range_count ./atmRange/count
    -atm_range_mac ./atmRange/mac
    -atm_range_mtu ./atmRange/mtu
    -atm_range_encapsulation ./atmRange/encapsulation
    -atm_range_enabled ./atmRange/enabled
    -emulated_router_range_count ./emulatedRouterRange/count
    -emulated_router_range_enabled ./emulatedRouterRange/enabled
    -emulated_router_range_ip_type ./emulatedRouterRange/ipType
    -emulated_router_range_gateway_increment_mode ./emulatedRouterRange/gatewayIncrementMode
    -emulated_router_range_enable_gateway_arp ./emulatedRouterRange/enableGatewayArp
    -emulated_router_range_ip_address ./emulatedRouterRange/ipAddress
    -emulated_router_range_gateway_increment ./emulatedRouterRange/gatewayIncrement
    -emulated_router_range_increment_by ./emulatedRouterRange/incrementBy
    -emulated_router_range_gateway_address ./emulatedRouterRange/gatewayAddress
    -emulated_router_range_name ./emulatedRouterRange/name
    -emulated_router_range_mss ./emulatedRouterRange/mss
    -emulated_router_range_object_id ./emulatedRouterRange/objectId
    -emulated_router_range_auto_count_enabled ./emulatedRouterRange/autoCountEnabled
    -emulated_router_range_prefix ./emulatedRouterRange/prefix
    -emulated_router_range_auto_mac_generation ./emulatedRouterRange/autoMacGeneration
    -amt_range_use_relay_discovery ./amtRange/useRelayDiscovery
    -amt_range_amt_unicast_ip ./amtRange/amtUnicastIp
    -amt_range_enabled ./amtRange/enabled
    -amt_range_query_timer_interval ./amtRange/queryTimerInterval
    -amt_range_amt_udp_src_port_increment ./amtRange/amtUdpSrcPortIncrement
    -amt_range_send_teardown ./amtRange/sendTeardown
    -amt_range_discovery_retries ./amtRange/discoveryRetries
    -amt_range_discovery_timeout ./amtRange/discoveryTimeout
    -amt_range_request_retries ./amtRange/requestRetries
    -amt_range_amt_udp_src_port ./amtRange/amtUdpSrcPort
    -amt_range_request_timeout ./amtRange/requestTimeout
    -amt_range_name ./amtRange/name
    -amt_range_amt_anycast_ip_increment ./amtRange/amtAnycastIpIncrement
    -amt_range_object_id ./amtRange/objectId
    -amt_range_override_qt ./amtRange/overrideQt
    -amt_range_amt_anycast_ip ./amtRange/amtAnycastIp
    -amt_range_amt_unicast_ip_increment ./amtRange/amtUnicastIpIncrement
    -ancp_range_circuit_id ./ancpRange/circuitId
    -ancp_range_use_dsl_outer_vlan ./ancpRange/useDslOuterVlan
    -ancp_range_distribution_algorithm_percent ./ancpRange/distributionAlgorithmPercent
    -ancp_range_atm_vpi ./ancpRange/atmVpi
    -ancp_range_nas_ip_address ./ancpRange/nasIpAddress
    -ancp_range_nas_ancp_service_port ./ancpRange/nasAncpServicePort
    -ancp_range_inner_vlan_id ./ancpRange/innerVlanId
    -ancp_range_enabled ./ancpRange/enabled
    -ancp_range_use_dsl_inner_vlan ./ancpRange/useDslInnerVlan
    -ancp_range_access_aggregation_cb_tlv ./ancpRange/accessAggregationCbTlv
    -ancp_range_nas_keep_alive_retries ./ancpRange/nasKeepAliveRetries
    -ancp_range_nas_keep_alive_timeout ./ancpRange/nasKeepAliveTimeout
    -ancp_range_name ./ancpRange/name
    -ancp_range_enable_access_aggregation ./ancpRange/enableAccessAggregation
    -ancp_range_object_id ./ancpRange/objectId
    -ancp_range_atm_vci ./ancpRange/atmVci
    -ancp_range_nas_ipaddress_incr ./ancpRange/nasIPAddressIncr
    -ancp_range_outer_vlan_id ./ancpRange/outerVlanId
    -ancp_range_nas_ip_address_incr ./ancpRange/nasIpAddressIncr
    -ancp_range_ancp_ip_range ./ancpRange/ancpIpRange
    -ancp_range_ancp_pvc_range ./ancpRange/ancpPvcRange
    -ancp_range_ancp_vlan_range ./ancpRange/ancpVlanRange
    -ancp_range_ancp_mac_range ./ancpRange/ancpMacRange
    -ancp_range_ancp_atm_range ./ancpRange/ancpAtmRange
    -ancp_range_dsl_resync_profile_allocation_table ./ancpRange/dslResyncProfileAllocationTable
    -ancp_range_dsl_profile_allocation_table ./ancpRange/dslProfileAllocationTable
    -ancp_range_ancp_ip_range_count ./ancpRange/ancpIpRange/count
    -ancp_range_ancp_ip_range_ip_type ./ancpRange/ancpIpRange/ipType
    -ancp_range_ancp_ip_range_enabled ./ancpRange/ancpIpRange/enabled
    -ancp_range_ancp_ip_range_gateway_increment_mode ./ancpRange/ancpIpRange/gatewayIncrementMode
    -ancp_range_ancp_ip_range_enable_gateway_arp ./ancpRange/ancpIpRange/enableGatewayArp
    -ancp_range_ancp_ip_range_ip_address ./ancpRange/ancpIpRange/ipAddress
    -ancp_range_ancp_ip_range_gateway_increment ./ancpRange/ancpIpRange/gatewayIncrement
    -ancp_range_ancp_ip_range_increment_by ./ancpRange/ancpIpRange/incrementBy
    -ancp_range_ancp_ip_range_gateway_address ./ancpRange/ancpIpRange/gatewayAddress
    -ancp_range_ancp_ip_range_name ./ancpRange/ancpIpRange/name
    -ancp_range_ancp_ip_range_mss ./ancpRange/ancpIpRange/mss
    -ancp_range_ancp_ip_range_object_id ./ancpRange/ancpIpRange/objectId
    -ancp_range_ancp_ip_range_prefix ./ancpRange/ancpIpRange/prefix
    -ancp_range_ancp_ip_range_auto_mac_generation ./ancpRange/ancpIpRange/autoMacGeneration
    -ancp_range_ancp_pvc_range_vpi_increment_step ./ancpRange/ancpPvcRange/vpiIncrementStep
    -ancp_range_ancp_pvc_range_vci_unique_count ./ancpRange/ancpPvcRange/vciUniqueCount
    -ancp_range_ancp_pvc_range_vci_increment_step ./ancpRange/ancpPvcRange/vciIncrementStep
    -ancp_range_ancp_pvc_range_enabled ./ancpRange/ancpPvcRange/enabled
    -ancp_range_ancp_pvc_range_vpi_first_id ./ancpRange/ancpPvcRange/vpiFirstId
    -ancp_range_ancp_pvc_range_vpi_increment ./ancpRange/ancpPvcRange/vpiIncrement
    -ancp_range_ancp_pvc_range_vci_first_id ./ancpRange/ancpPvcRange/vciFirstId
    -ancp_range_ancp_pvc_range_vci_increment ./ancpRange/ancpPvcRange/vciIncrement
    -ancp_range_ancp_pvc_range_name ./ancpRange/ancpPvcRange/name
    -ancp_range_ancp_pvc_range_increment_mode ./ancpRange/ancpPvcRange/incrementMode
    -ancp_range_ancp_pvc_range_object_id ./ancpRange/ancpPvcRange/objectId
    -ancp_range_ancp_pvc_range_vpi_unique_count ./ancpRange/ancpPvcRange/vpiUniqueCount
    -ancp_range_ancp_vlan_range_inner_first_id ./ancpRange/ancpVlanRange/innerFirstId
    -ancp_range_ancp_vlan_range_inner_increment ./ancpRange/ancpVlanRange/innerIncrement
    -ancp_range_ancp_vlan_range_enabled ./ancpRange/ancpVlanRange/enabled
    -ancp_range_ancp_vlan_range_unique_count ./ancpRange/ancpVlanRange/uniqueCount
    -ancp_range_ancp_vlan_range_name ./ancpRange/ancpVlanRange/name
    -ancp_range_ancp_vlan_range_increment_step ./ancpRange/ancpVlanRange/incrementStep
    -ancp_range_ancp_vlan_range_tpid ./ancpRange/ancpVlanRange/tpid
    -ancp_range_ancp_vlan_range_priority ./ancpRange/ancpVlanRange/priority
    -ancp_range_ancp_vlan_range_inner_enable ./ancpRange/ancpVlanRange/innerEnable
    -ancp_range_ancp_vlan_range_object_id ./ancpRange/ancpVlanRange/objectId
    -ancp_range_ancp_vlan_range_inner_unique_count ./ancpRange/ancpVlanRange/innerUniqueCount
    -ancp_range_ancp_vlan_range_inner_tpid ./ancpRange/ancpVlanRange/innerTpid
    -ancp_range_ancp_vlan_range_first_id ./ancpRange/ancpVlanRange/firstId
    -ancp_range_ancp_vlan_range_increment ./ancpRange/ancpVlanRange/increment
    -ancp_range_ancp_vlan_range_inner_increment_step ./ancpRange/ancpVlanRange/innerIncrementStep
    -ancp_range_ancp_vlan_range_id_incr_mode ./ancpRange/ancpVlanRange/idIncrMode
    -ancp_range_ancp_vlan_range_inner_priority ./ancpRange/ancpVlanRange/innerPriority
    -ancp_range_ancp_vlan_range_vlan_id_info ./ancpRange/ancpVlanRange/vlanIdInfo
    -ancp_range_ancp_mac_range_object_id ./ancpRange/ancpMacRange/objectId
    -ancp_range_ancp_mac_range_increment_by ./ancpRange/ancpMacRange/incrementBy
    -ancp_range_ancp_mac_range_name ./ancpRange/ancpMacRange/name
    -ancp_range_ancp_mac_range_count ./ancpRange/ancpMacRange/count
    -ancp_range_ancp_mac_range_mac ./ancpRange/ancpMacRange/mac
    -ancp_range_ancp_mac_range_mtu ./ancpRange/ancpMacRange/mtu
    -ancp_range_ancp_mac_range_enabled ./ancpRange/ancpMacRange/enabled
    -ancp_range_ancp_atm_range_object_id ./ancpRange/ancpAtmRange/objectId
    -ancp_range_ancp_atm_range_increment_by ./ancpRange/ancpAtmRange/incrementBy
    -ancp_range_ancp_atm_range_name ./ancpRange/ancpAtmRange/name
    -ancp_range_ancp_atm_range_count ./ancpRange/ancpAtmRange/count
    -ancp_range_ancp_atm_range_mac ./ancpRange/ancpAtmRange/mac
    -ancp_range_ancp_atm_range_mtu ./ancpRange/ancpAtmRange/mtu
    -ancp_range_ancp_atm_range_encapsulation ./ancpRange/ancpAtmRange/encapsulation
    -ancp_range_ancp_atm_range_enabled ./ancpRange/ancpAtmRange/enabled
    -twamp_control_range_object_id ./twampControlRange/objectId
    -twamp_control_range_name ./twampControlRange/name
    -twamp_control_range_mode ./twampControlRange/mode
    -twamp_control_range_control_server_port ./twampControlRange/controlServerPort
    -twamp_control_range_count ./twampControlRange/count
    -twamp_control_range_secret ./twampControlRange/secret
    -twamp_control_range_key_id ./twampControlRange/keyId
    -twamp_control_range_control_server_ip_increment ./twampControlRange/controlServerIpIncrement
    -twamp_control_range_enabled ./twampControlRange/enabled
    -twamp_control_range_control_start_server_ip ./twampControlRange/controlStartServerIp
    -iptv_range_inter_stb_start_delay ./iptvRange/interStbStartDelay
    -iptv_range_router_alert ./iptvRange/routerAlert
    -iptv_range_viewing_profile ./iptvRange/viewingProfile
    -iptv_range_leave_latency_threshold ./iptvRange/leaveLatencyThreshold
    -iptv_range_enabled ./iptvRange/enabled
    -iptv_range_join_latency_threshold ./iptvRange/joinLatencyThreshold
    -iptv_range_report_frequency ./iptvRange/reportFrequency
    -iptv_range_unsolicited_response_mode ./iptvRange/unsolicitedResponseMode
    -iptv_range_general_query_response_mode ./iptvRange/generalQueryResponseMode
    -iptv_range_specific_query_response_mode ./iptvRange/specificQueryResponseMode
    -iptv_range_name ./iptvRange/name
    -iptv_range_log_failure_timestamps ./iptvRange/logFailureTimestamps
    -iptv_range_object_id ./iptvRange/objectId
    -iptv_range_join_leave_multiplier ./iptvRange/joinLeaveMultiplier
    -iptv_range_stb_leave_join_delay ./iptvRange/stbLeaveJoinDelay
    -iptv_range_version ./iptvRange/version
    -iptv_range_immediate_response ./iptvRange/immediateResponse
    -iptv_range_iptv_channels ./iptvRange/iptvChannels
  }
  #
  variable MultiplierOptionGroups {
    _m_eapo_udp_range_expected_system_token {-eapo_udp_range_expected_system_token_format -eapo_udp_range_expected_system_token_base -eapo_udp_range_expected_system_token_incr}
    _m_eapo_udp_range_user_password {-eapo_udp_range_user_password_format -eapo_udp_range_user_password_base -eapo_udp_range_user_password_incr}
    _m_eapo_udp_range_fast_stateless_resume {-eapo_udp_range_fast_stateless_resume_format -eapo_udp_range_fast_stateless_resume_base -eapo_udp_range_fast_stateless_resume_incr}
    _m_eapo_udp_range_user_name {-eapo_udp_range_user_name_format -eapo_udp_range_user_name_base -eapo_udp_range_user_name_incr}
    _m_eapo_udp_range_response_type {-eapo_udp_range_response_type_format -eapo_udp_range_response_type_base -eapo_udp_range_response_type_incr}
    _m_eapo_udp_range_name {-eapo_udp_range_name_format -eapo_udp_range_name_base -eapo_udp_range_name_incr}
    _m_eapo_udp_range_protocol {-eapo_udp_range_protocol_format -eapo_udp_range_protocol_base -eapo_udp_range_protocol_incr}
    _m_eapo_udp_range_fast_inner_method {-eapo_udp_range_fast_inner_method_format -eapo_udp_range_fast_inner_method_base -eapo_udp_range_fast_inner_method_incr}
    _m_eapo_udp_range_fast_provision_mode {-eapo_udp_range_fast_provision_mode_format -eapo_udp_range_fast_provision_mode_base -eapo_udp_range_fast_provision_mode_incr}
    _m_eapo_udp_range_object_id {-eapo_udp_range_object_id_format -eapo_udp_range_object_id_base -eapo_udp_range_object_id_incr}
    _m_web_auth_range_object_id {-web_auth_range_object_id_format -web_auth_range_object_id_base -web_auth_range_object_id_incr}
    _m_web_auth_range_input_value3 {-web_auth_range_input_value3_format -web_auth_range_input_value3_base -web_auth_range_input_value3_incr}
    _m_web_auth_range_name {-web_auth_range_name_format -web_auth_range_name_base -web_auth_range_name_incr}
    _m_web_auth_range_expect {-web_auth_range_expect_format -web_auth_range_expect_base -web_auth_range_expect_incr}
    _m_web_auth_range_input_value1 {-web_auth_range_input_value1_format -web_auth_range_input_value1_base -web_auth_range_input_value1_incr}
    _m_web_auth_range_input_value2 {-web_auth_range_input_value2_format -web_auth_range_input_value2_base -web_auth_range_input_value2_incr}
    _m_twamp_server_range_iteration_count {-twamp_server_range_iteration_count_base -twamp_server_range_iteration_count_incr}
    _m_twamp_server_range_count {-twamp_server_range_count_base -twamp_server_range_count_incr}
    _m_twamp_server_range_reflector_port {-twamp_server_range_reflector_port_base -twamp_server_range_reflector_port_incr}
    _m_twamp_server_range_max_test_sessions {-twamp_server_range_max_test_sessions_base -twamp_server_range_max_test_sessions_incr}
    _m_twamp_server_range_control_port {-twamp_server_range_control_port_base -twamp_server_range_control_port_incr}
    _m_twamp_server_range_key_id {-twamp_server_range_key_id_format -twamp_server_range_key_id_base -twamp_server_range_key_id_incr}
    _m_twamp_server_range_permitted_ip {-twamp_server_range_permitted_ip_format -twamp_server_range_permitted_ip_base -twamp_server_range_permitted_ip_incr}
    _m_twamp_server_range_name {-twamp_server_range_name_format -twamp_server_range_name_base -twamp_server_range_name_incr}
    _m_twamp_server_range_object_id {-twamp_server_range_object_id_format -twamp_server_range_object_id_base -twamp_server_range_object_id_incr}
    _m_twamp_server_range_permitted_ip_increment {-twamp_server_range_permitted_ip_increment_format -twamp_server_range_permitted_ip_increment_base -twamp_server_range_permitted_ip_increment_incr}
    _m_twamp_server_range_permitted_sender_port {-twamp_server_range_permitted_sender_port_base -twamp_server_range_permitted_sender_port_incr}
    _m_twamp_server_range_mode {-twamp_server_range_mode_format -twamp_server_range_mode_base -twamp_server_range_mode_incr}
    _m_twamp_server_range_secret {-twamp_server_range_secret_format -twamp_server_range_secret_base -twamp_server_range_secret_incr}
    _m_pvc_range_vpi_increment_step {-pvc_range_vpi_increment_step_base -pvc_range_vpi_increment_step_incr}
    _m_pvc_range_vci_unique_count {-pvc_range_vci_unique_count_base -pvc_range_vci_unique_count_incr}
    _m_pvc_range_vci_increment_step {-pvc_range_vci_increment_step_base -pvc_range_vci_increment_step_incr}
    _m_pvc_range_vpi_first_id {-pvc_range_vpi_first_id_base -pvc_range_vpi_first_id_incr}
    _m_pvc_range_vpi_increment {-pvc_range_vpi_increment_base -pvc_range_vpi_increment_incr}
    _m_pvc_range_vci_first_id {-pvc_range_vci_first_id_base -pvc_range_vci_first_id_incr}
    _m_pvc_range_vci_increment {-pvc_range_vci_increment_base -pvc_range_vci_increment_incr}
    _m_pvc_range_name {-pvc_range_name_format -pvc_range_name_base -pvc_range_name_incr}
    _m_pvc_range_increment_mode {-pvc_range_increment_mode_base -pvc_range_increment_mode_incr}
    _m_pvc_range_object_id {-pvc_range_object_id_format -pvc_range_object_id_base -pvc_range_object_id_incr}
    _m_pvc_range_vpi_unique_count {-pvc_range_vpi_unique_count_base -pvc_range_vpi_unique_count_incr}
    _m_ip_range_count {-ip_range_count_base -ip_range_count_incr}
    _m_ip_range_ip_type {-ip_range_ip_type_format -ip_range_ip_type_base -ip_range_ip_type_incr}
    _m_ip_range_gateway_increment_mode {-ip_range_gateway_increment_mode_format -ip_range_gateway_increment_mode_base -ip_range_gateway_increment_mode_incr}
    _m_ip_range_ip_address {-ip_range_ip_address_format -ip_range_ip_address_base -ip_range_ip_address_incr}
    _m_ip_range_gateway_increment {-ip_range_gateway_increment_format -ip_range_gateway_increment_base -ip_range_gateway_increment_incr}
    _m_ip_range_increment_by {-ip_range_increment_by_format -ip_range_increment_by_base -ip_range_increment_by_incr}
    _m_ip_range_gateway_address {-ip_range_gateway_address_format -ip_range_gateway_address_base -ip_range_gateway_address_incr}
    _m_ip_range_name {-ip_range_name_format -ip_range_name_base -ip_range_name_incr}
    _m_ip_range_mss {-ip_range_mss_base -ip_range_mss_incr}
    _m_ip_range_object_id {-ip_range_object_id_format -ip_range_object_id_base -ip_range_object_id_incr}
    _m_ip_range_prefix {-ip_range_prefix_base -ip_range_prefix_incr}
    _m_ptp_range_over_ip_master_mac_increment_inter_entity {-ptp_range_over_ip_master_mac_increment_inter_entity_format -ptp_range_over_ip_master_mac_increment_inter_entity_base -ptp_range_over_ip_master_mac_increment_inter_entity_incr}
    _m_ptp_range_over_ip_communication_mode {-ptp_range_over_ip_communication_mode_format -ptp_range_over_ip_communication_mode_base -ptp_range_over_ip_communication_mode_incr}
    _m_ptp_range_over_ip_follow_up_delay {-ptp_range_over_ip_follow_up_delay_base -ptp_range_over_ip_follow_up_delay_incr}
    _m_ptp_range_over_ip_domain {-ptp_range_over_ip_domain_base -ptp_range_over_ip_domain_incr}
    _m_ptp_range_over_ip_announce_drop_rate {-ptp_range_over_ip_announce_drop_rate_base -ptp_range_over_ip_announce_drop_rate_incr}
    _m_ptp_range_over_ip_client_ip_increment_by {-ptp_range_over_ip_client_ip_increment_by_format -ptp_range_over_ip_client_ip_increment_by_base -ptp_range_over_ip_client_ip_increment_by_incr}
    _m_ptp_range_over_ip_port_number_increment {-ptp_range_over_ip_port_number_increment_base -ptp_range_over_ip_port_number_increment_incr}
    _m_ptp_range_over_ip_priority1 {-ptp_range_over_ip_priority1_base -ptp_range_over_ip_priority1_incr}
    _m_ptp_range_over_ip_object_id {-ptp_range_over_ip_object_id_format -ptp_range_over_ip_object_id_base -ptp_range_over_ip_object_id_incr}
    _m_ptp_range_over_ip_delay_resp_receipt_timeout {-ptp_range_over_ip_delay_resp_receipt_timeout_base -ptp_range_over_ip_delay_resp_receipt_timeout_incr}
    _m_ptp_range_over_ip_priority2 {-ptp_range_over_ip_priority2_base -ptp_range_over_ip_priority2_incr}
    _m_ptp_range_over_ip_client_mac_address {-ptp_range_over_ip_client_mac_address_format -ptp_range_over_ip_client_mac_address_base -ptp_range_over_ip_client_mac_address_incr}
    _m_ptp_range_over_ip_time_source {-ptp_range_over_ip_time_source_format -ptp_range_over_ip_time_source_base -ptp_range_over_ip_time_source_incr}
    _m_ptp_range_over_ip_steps_removed {-ptp_range_over_ip_steps_removed_base -ptp_range_over_ip_steps_removed_incr}
    _m_ptp_range_over_ip_clock_class {-ptp_range_over_ip_clock_class_base -ptp_range_over_ip_clock_class_incr}
    _m_ptp_range_over_ip_request_attempts {-ptp_range_over_ip_request_attempts_base -ptp_range_over_ip_request_attempts_incr}
    _m_ptp_range_over_ip_follow_up_bad_crc_rate {-ptp_range_over_ip_follow_up_bad_crc_rate_base -ptp_range_over_ip_follow_up_bad_crc_rate_incr}
    _m_ptp_range_over_ip_delay_response_delay_insertion_rate {-ptp_range_over_ip_delay_response_delay_insertion_rate_base -ptp_range_over_ip_delay_response_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_sync_interval {-ptp_range_over_ip_log_sync_interval_base -ptp_range_over_ip_log_sync_interval_incr}
    _m_ptp_range_over_ip_master_count {-ptp_range_over_ip_master_count_base -ptp_range_over_ip_master_count_incr}
    _m_ptp_range_over_ip_residence_time {-ptp_range_over_ip_residence_time_base -ptp_range_over_ip_residence_time_incr}
    _m_ptp_range_over_ip_signal_interval {-ptp_range_over_ip_signal_interval_base -ptp_range_over_ip_signal_interval_incr}
    _m_ptp_range_over_ip_delay_mechanism {-ptp_range_over_ip_delay_mechanism_format -ptp_range_over_ip_delay_mechanism_base -ptp_range_over_ip_delay_mechanism_incr}
    _m_ptp_range_over_ip_sync_drop_rate {-ptp_range_over_ip_sync_drop_rate_base -ptp_range_over_ip_sync_drop_rate_incr}
    _m_ptp_range_over_ip_clock_increment {-ptp_range_over_ip_clock_increment_format -ptp_range_over_ip_clock_increment_base -ptp_range_over_ip_clock_increment_incr}
    _m_ptp_range_over_ip_signal_unicast_handling {-ptp_range_over_ip_signal_unicast_handling_format -ptp_range_over_ip_signal_unicast_handling_base -ptp_range_over_ip_signal_unicast_handling_incr}
    _m_ptp_range_over_ip_timestamp_offset {-ptp_range_over_ip_timestamp_offset_base -ptp_range_over_ip_timestamp_offset_incr}
    _m_ptp_range_over_ip_master_ip_increment_by {-ptp_range_over_ip_master_ip_increment_by_format -ptp_range_over_ip_master_ip_increment_by_base -ptp_range_over_ip_master_ip_increment_by_incr}
    _m_ptp_range_over_ip_request_interval {-ptp_range_over_ip_request_interval_base -ptp_range_over_ip_request_interval_incr}
    _m_ptp_range_over_ip_ip_tos {-ptp_range_over_ip_ip_tos_base -ptp_range_over_ip_ip_tos_incr}
    _m_ptp_range_over_ip_request_holddown {-ptp_range_over_ip_request_holddown_base -ptp_range_over_ip_request_holddown_incr}
    _m_ptp_range_over_ip_client_mac_increment_by {-ptp_range_over_ip_client_mac_increment_by_format -ptp_range_over_ip_client_mac_increment_by_base -ptp_range_over_ip_client_mac_increment_by_incr}
    _m_ptp_range_over_ip_name {-ptp_range_over_ip_name_format -ptp_range_over_ip_name_base -ptp_range_over_ip_name_incr}
    _m_ptp_range_over_ip_master_ip_address {-ptp_range_over_ip_master_ip_address_format -ptp_range_over_ip_master_ip_address_base -ptp_range_over_ip_master_ip_address_incr}
    _m_ptp_range_over_ip_first_clock {-ptp_range_over_ip_first_clock_format -ptp_range_over_ip_first_clock_base -ptp_range_over_ip_first_clock_incr}
    _m_ptp_range_over_ip_master_mac_increment_by {-ptp_range_over_ip_master_mac_increment_by_format -ptp_range_over_ip_master_mac_increment_by_base -ptp_range_over_ip_master_mac_increment_by_incr}
    _m_ptp_range_over_ip_port_number {-ptp_range_over_ip_port_number_base -ptp_range_over_ip_port_number_incr}
    _m_ptp_range_over_ip_client_ip_address {-ptp_range_over_ip_client_ip_address_format -ptp_range_over_ip_client_ip_address_base -ptp_range_over_ip_client_ip_address_incr}
    _m_ptp_range_over_ip_sync_receipt_timeout {-ptp_range_over_ip_sync_receipt_timeout_base -ptp_range_over_ip_sync_receipt_timeout_incr}
    _m_ptp_range_over_ip_grant_delay_resp_duration_interval {-ptp_range_over_ip_grant_delay_resp_duration_interval_base -ptp_range_over_ip_grant_delay_resp_duration_interval_incr}
    _m_ptp_range_over_ip_timestamp_offset_variation {-ptp_range_over_ip_timestamp_offset_variation_base -ptp_range_over_ip_timestamp_offset_variation_incr}
    _m_ptp_range_over_ip_follow_up_drop_rate {-ptp_range_over_ip_follow_up_drop_rate_base -ptp_range_over_ip_follow_up_drop_rate_incr}
    _m_ptp_range_over_ip_master_mac_address {-ptp_range_over_ip_master_mac_address_format -ptp_range_over_ip_master_mac_address_base -ptp_range_over_ip_master_mac_address_incr}
    _m_ptp_range_over_ip_grant_sync_duration_interval {-ptp_range_over_ip_grant_sync_duration_interval_base -ptp_range_over_ip_grant_sync_duration_interval_incr}
    _m_ptp_range_over_ip_delay_response_delay {-ptp_range_over_ip_delay_response_delay_base -ptp_range_over_ip_delay_response_delay_incr}
    _m_ptp_range_over_ip_grant_unicast_duration_interval {-ptp_range_over_ip_grant_unicast_duration_interval_base -ptp_range_over_ip_grant_unicast_duration_interval_incr}
    _m_ptp_range_over_ip_follow_up_delay_insertion_rate {-ptp_range_over_ip_follow_up_delay_insertion_rate_base -ptp_range_over_ip_follow_up_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_delay_req_interval {-ptp_range_over_ip_log_delay_req_interval_base -ptp_range_over_ip_log_delay_req_interval_incr}
    _m_ptp_range_over_ip_clock_accuracy {-ptp_range_over_ip_clock_accuracy_format -ptp_range_over_ip_clock_accuracy_base -ptp_range_over_ip_clock_accuracy_incr}
    _m_ptp_range_over_ip_client_count {-ptp_range_over_ip_client_count_base -ptp_range_over_ip_client_count_incr}
    _m_ptp_range_over_ip_step_mode {-ptp_range_over_ip_step_mode_format -ptp_range_over_ip_step_mode_base -ptp_range_over_ip_step_mode_incr}
    _m_ptp_range_over_ip_master_ip_increment_inter_entity {-ptp_range_over_ip_master_ip_increment_inter_entity_format -ptp_range_over_ip_master_ip_increment_inter_entity_base -ptp_range_over_ip_master_ip_increment_inter_entity_incr}
    _m_ptp_range_over_ip_delay_resp_drop_rate {-ptp_range_over_ip_delay_resp_drop_rate_base -ptp_range_over_ip_delay_resp_drop_rate_incr}
    _m_ptp_range_over_ip_announce_receipt_timeout {-ptp_range_over_ip_announce_receipt_timeout_base -ptp_range_over_ip_announce_receipt_timeout_incr}
    _m_ptp_range_over_ip_rx_calibration {-ptp_range_over_ip_rx_calibration_base -ptp_range_over_ip_rx_calibration_incr}
    _m_ptp_range_over_ip_tx_calibration {-ptp_range_over_ip_tx_calibration_base -ptp_range_over_ip_tx_calibration_incr}
    _m_ptp_range_over_ip_log_announce_interval {-ptp_range_over_ip_log_announce_interval_base -ptp_range_over_ip_log_announce_interval_incr}
    _m_igmp_querier_range_object_id {-igmp_querier_range_object_id_format -igmp_querier_range_object_id_base -igmp_querier_range_object_id_incr}
    _m_igmp_querier_range_specific_query_response_count {-igmp_querier_range_specific_query_response_count_base -igmp_querier_range_specific_query_response_count_incr}
    _m_igmp_querier_range_specific_query_response_interval {-igmp_querier_range_specific_query_response_interval_base -igmp_querier_range_specific_query_response_interval_incr}
    _m_igmp_querier_range_general_query_response_interval {-igmp_querier_range_general_query_response_interval_base -igmp_querier_range_general_query_response_interval_incr}
    _m_igmp_querier_range_name {-igmp_querier_range_name_format -igmp_querier_range_name_base -igmp_querier_range_name_incr}
    _m_igmp_querier_range_general_query_interval {-igmp_querier_range_general_query_interval_base -igmp_querier_range_general_query_interval_incr}
    _m_igmp_querier_range_robustness_variable {-igmp_querier_range_robustness_variable_base -igmp_querier_range_robustness_variable_incr}
    _m_igmp_querier_range_startup_query_count {-igmp_querier_range_startup_query_count_base -igmp_querier_range_startup_query_count_incr}
    _m_igmp_querier_range_version {-igmp_querier_range_version_format -igmp_querier_range_version_base -igmp_querier_range_version_incr}
    _m_igmp_mld_range_meshing_mode {-igmp_mld_range_meshing_mode_format -igmp_mld_range_meshing_mode_base -igmp_mld_range_meshing_mode_incr}
    _m_igmp_mld_range_report_frequency {-igmp_mld_range_report_frequency_base -igmp_mld_range_report_frequency_incr}
    _m_igmp_mld_range_name {-igmp_mld_range_name_format -igmp_mld_range_name_base -igmp_mld_range_name_incr}
    _m_igmp_mld_range_join_leave_multiplier {-igmp_mld_range_join_leave_multiplier_base -igmp_mld_range_join_leave_multiplier_incr}
    _m_igmp_mld_range_object_id {-igmp_mld_range_object_id_format -igmp_mld_range_object_id_base -igmp_mld_range_object_id_incr}
    _m_igmp_mld_range_version {-igmp_mld_range_version_format -igmp_mld_range_version_base -igmp_mld_range_version_incr}
    _m_atm_range_object_id {-atm_range_object_id_format -atm_range_object_id_base -atm_range_object_id_incr}
    _m_atm_range_increment_by {-atm_range_increment_by_format -atm_range_increment_by_base -atm_range_increment_by_incr}
    _m_atm_range_name {-atm_range_name_format -atm_range_name_base -atm_range_name_incr}
    _m_atm_range_count {-atm_range_count_base -atm_range_count_incr}
    _m_atm_range_mac {-atm_range_mac_format -atm_range_mac_base -atm_range_mac_incr}
    _m_atm_range_mtu {-atm_range_mtu_base -atm_range_mtu_incr}
    _m_atm_range_encapsulation {-atm_range_encapsulation_format -atm_range_encapsulation_base -atm_range_encapsulation_incr}
    _m_emulated_router_range_count {-emulated_router_range_count_base -emulated_router_range_count_incr}
    _m_emulated_router_range_ip_type {-emulated_router_range_ip_type_format -emulated_router_range_ip_type_base -emulated_router_range_ip_type_incr}
    _m_emulated_router_range_gateway_increment_mode {-emulated_router_range_gateway_increment_mode_format -emulated_router_range_gateway_increment_mode_base -emulated_router_range_gateway_increment_mode_incr}
    _m_emulated_router_range_ip_address {-emulated_router_range_ip_address_format -emulated_router_range_ip_address_base -emulated_router_range_ip_address_incr}
    _m_emulated_router_range_gateway_increment {-emulated_router_range_gateway_increment_format -emulated_router_range_gateway_increment_base -emulated_router_range_gateway_increment_incr}
    _m_emulated_router_range_increment_by {-emulated_router_range_increment_by_format -emulated_router_range_increment_by_base -emulated_router_range_increment_by_incr}
    _m_emulated_router_range_gateway_address {-emulated_router_range_gateway_address_format -emulated_router_range_gateway_address_base -emulated_router_range_gateway_address_incr}
    _m_emulated_router_range_name {-emulated_router_range_name_format -emulated_router_range_name_base -emulated_router_range_name_incr}
    _m_emulated_router_range_mss {-emulated_router_range_mss_base -emulated_router_range_mss_incr}
    _m_emulated_router_range_object_id {-emulated_router_range_object_id_format -emulated_router_range_object_id_base -emulated_router_range_object_id_incr}
    _m_emulated_router_range_prefix {-emulated_router_range_prefix_base -emulated_router_range_prefix_incr}
    _m_amt_range_amt_unicast_ip {-amt_range_amt_unicast_ip_format -amt_range_amt_unicast_ip_base -amt_range_amt_unicast_ip_incr}
    _m_amt_range_query_timer_interval {-amt_range_query_timer_interval_base -amt_range_query_timer_interval_incr}
    _m_amt_range_amt_udp_src_port_increment {-amt_range_amt_udp_src_port_increment_base -amt_range_amt_udp_src_port_increment_incr}
    _m_amt_range_discovery_retries {-amt_range_discovery_retries_base -amt_range_discovery_retries_incr}
    _m_amt_range_discovery_timeout {-amt_range_discovery_timeout_base -amt_range_discovery_timeout_incr}
    _m_amt_range_request_retries {-amt_range_request_retries_base -amt_range_request_retries_incr}
    _m_amt_range_amt_udp_src_port {-amt_range_amt_udp_src_port_base -amt_range_amt_udp_src_port_incr}
    _m_amt_range_request_timeout {-amt_range_request_timeout_base -amt_range_request_timeout_incr}
    _m_amt_range_name {-amt_range_name_format -amt_range_name_base -amt_range_name_incr}
    _m_amt_range_amt_anycast_ip_increment {-amt_range_amt_anycast_ip_increment_format -amt_range_amt_anycast_ip_increment_base -amt_range_amt_anycast_ip_increment_incr}
    _m_amt_range_object_id {-amt_range_object_id_format -amt_range_object_id_base -amt_range_object_id_incr}
    _m_amt_range_amt_anycast_ip {-amt_range_amt_anycast_ip_format -amt_range_amt_anycast_ip_base -amt_range_amt_anycast_ip_incr}
    _m_amt_range_amt_unicast_ip_increment {-amt_range_amt_unicast_ip_increment_format -amt_range_amt_unicast_ip_increment_base -amt_range_amt_unicast_ip_increment_incr}
    _m_ancp_range_circuit_id {-ancp_range_circuit_id_format -ancp_range_circuit_id_base -ancp_range_circuit_id_incr}
    _m_ancp_range_distribution_algorithm_percent {-ancp_range_distribution_algorithm_percent_base -ancp_range_distribution_algorithm_percent_incr}
    _m_ancp_range_atm_vpi {-ancp_range_atm_vpi_base -ancp_range_atm_vpi_incr}
    _m_ancp_range_nas_ip_address {-ancp_range_nas_ip_address_format -ancp_range_nas_ip_address_base -ancp_range_nas_ip_address_incr}
    _m_ancp_range_nas_ancp_service_port {-ancp_range_nas_ancp_service_port_base -ancp_range_nas_ancp_service_port_incr}
    _m_ancp_range_inner_vlan_id {-ancp_range_inner_vlan_id_base -ancp_range_inner_vlan_id_incr}
    _m_ancp_range_access_aggregation_cb_tlv {-ancp_range_access_aggregation_cb_tlv_format -ancp_range_access_aggregation_cb_tlv_base -ancp_range_access_aggregation_cb_tlv_incr}
    _m_ancp_range_nas_keep_alive_retries {-ancp_range_nas_keep_alive_retries_base -ancp_range_nas_keep_alive_retries_incr}
    _m_ancp_range_nas_keep_alive_timeout {-ancp_range_nas_keep_alive_timeout_base -ancp_range_nas_keep_alive_timeout_incr}
    _m_ancp_range_name {-ancp_range_name_format -ancp_range_name_base -ancp_range_name_incr}
    _m_ancp_range_object_id {-ancp_range_object_id_format -ancp_range_object_id_base -ancp_range_object_id_incr}
    _m_ancp_range_atm_vci {-ancp_range_atm_vci_base -ancp_range_atm_vci_incr}
    _m_ancp_range_nas_ipaddress_incr {-ancp_range_nas_ipaddress_incr_format -ancp_range_nas_ipaddress_incr_base -ancp_range_nas_ipaddress_incr_incr}
    _m_ancp_range_outer_vlan_id {-ancp_range_outer_vlan_id_base -ancp_range_outer_vlan_id_incr}
    _m_ancp_range_nas_ip_address_incr {-ancp_range_nas_ip_address_incr_format -ancp_range_nas_ip_address_incr_base -ancp_range_nas_ip_address_incr_incr}
    _m_ancp_range_ancp_ip_range_count {-ancp_range_ancp_ip_range_count_base -ancp_range_ancp_ip_range_count_incr}
    _m_ancp_range_ancp_ip_range_ip_type {-ancp_range_ancp_ip_range_ip_type_format -ancp_range_ancp_ip_range_ip_type_base -ancp_range_ancp_ip_range_ip_type_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment_mode {-ancp_range_ancp_ip_range_gateway_increment_mode_format -ancp_range_ancp_ip_range_gateway_increment_mode_base -ancp_range_ancp_ip_range_gateway_increment_mode_incr}
    _m_ancp_range_ancp_ip_range_ip_address {-ancp_range_ancp_ip_range_ip_address_format -ancp_range_ancp_ip_range_ip_address_base -ancp_range_ancp_ip_range_ip_address_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment {-ancp_range_ancp_ip_range_gateway_increment_format -ancp_range_ancp_ip_range_gateway_increment_base -ancp_range_ancp_ip_range_gateway_increment_incr}
    _m_ancp_range_ancp_ip_range_increment_by {-ancp_range_ancp_ip_range_increment_by_format -ancp_range_ancp_ip_range_increment_by_base -ancp_range_ancp_ip_range_increment_by_incr}
    _m_ancp_range_ancp_ip_range_gateway_address {-ancp_range_ancp_ip_range_gateway_address_format -ancp_range_ancp_ip_range_gateway_address_base -ancp_range_ancp_ip_range_gateway_address_incr}
    _m_ancp_range_ancp_ip_range_name {-ancp_range_ancp_ip_range_name_format -ancp_range_ancp_ip_range_name_base -ancp_range_ancp_ip_range_name_incr}
    _m_ancp_range_ancp_ip_range_mss {-ancp_range_ancp_ip_range_mss_base -ancp_range_ancp_ip_range_mss_incr}
    _m_ancp_range_ancp_ip_range_object_id {-ancp_range_ancp_ip_range_object_id_format -ancp_range_ancp_ip_range_object_id_base -ancp_range_ancp_ip_range_object_id_incr}
    _m_ancp_range_ancp_ip_range_prefix {-ancp_range_ancp_ip_range_prefix_base -ancp_range_ancp_ip_range_prefix_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment_step {-ancp_range_ancp_pvc_range_vpi_increment_step_base -ancp_range_ancp_pvc_range_vpi_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vci_unique_count {-ancp_range_ancp_pvc_range_vci_unique_count_base -ancp_range_ancp_pvc_range_vci_unique_count_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment_step {-ancp_range_ancp_pvc_range_vci_increment_step_base -ancp_range_ancp_pvc_range_vci_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vpi_first_id {-ancp_range_ancp_pvc_range_vpi_first_id_base -ancp_range_ancp_pvc_range_vpi_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment {-ancp_range_ancp_pvc_range_vpi_increment_base -ancp_range_ancp_pvc_range_vpi_increment_incr}
    _m_ancp_range_ancp_pvc_range_vci_first_id {-ancp_range_ancp_pvc_range_vci_first_id_base -ancp_range_ancp_pvc_range_vci_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment {-ancp_range_ancp_pvc_range_vci_increment_base -ancp_range_ancp_pvc_range_vci_increment_incr}
    _m_ancp_range_ancp_pvc_range_name {-ancp_range_ancp_pvc_range_name_format -ancp_range_ancp_pvc_range_name_base -ancp_range_ancp_pvc_range_name_incr}
    _m_ancp_range_ancp_pvc_range_increment_mode {-ancp_range_ancp_pvc_range_increment_mode_base -ancp_range_ancp_pvc_range_increment_mode_incr}
    _m_ancp_range_ancp_pvc_range_object_id {-ancp_range_ancp_pvc_range_object_id_format -ancp_range_ancp_pvc_range_object_id_base -ancp_range_ancp_pvc_range_object_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_unique_count {-ancp_range_ancp_pvc_range_vpi_unique_count_base -ancp_range_ancp_pvc_range_vpi_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_first_id {-ancp_range_ancp_vlan_range_inner_first_id_base -ancp_range_ancp_vlan_range_inner_first_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment {-ancp_range_ancp_vlan_range_inner_increment_base -ancp_range_ancp_vlan_range_inner_increment_incr}
    _m_ancp_range_ancp_vlan_range_unique_count {-ancp_range_ancp_vlan_range_unique_count_base -ancp_range_ancp_vlan_range_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_name {-ancp_range_ancp_vlan_range_name_format -ancp_range_ancp_vlan_range_name_base -ancp_range_ancp_vlan_range_name_incr}
    _m_ancp_range_ancp_vlan_range_increment_step {-ancp_range_ancp_vlan_range_increment_step_base -ancp_range_ancp_vlan_range_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_tpid {-ancp_range_ancp_vlan_range_tpid_format -ancp_range_ancp_vlan_range_tpid_base -ancp_range_ancp_vlan_range_tpid_incr}
    _m_ancp_range_ancp_vlan_range_priority {-ancp_range_ancp_vlan_range_priority_base -ancp_range_ancp_vlan_range_priority_incr}
    _m_ancp_range_ancp_vlan_range_object_id {-ancp_range_ancp_vlan_range_object_id_format -ancp_range_ancp_vlan_range_object_id_base -ancp_range_ancp_vlan_range_object_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_unique_count {-ancp_range_ancp_vlan_range_inner_unique_count_base -ancp_range_ancp_vlan_range_inner_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_tpid {-ancp_range_ancp_vlan_range_inner_tpid_format -ancp_range_ancp_vlan_range_inner_tpid_base -ancp_range_ancp_vlan_range_inner_tpid_incr}
    _m_ancp_range_ancp_vlan_range_first_id {-ancp_range_ancp_vlan_range_first_id_base -ancp_range_ancp_vlan_range_first_id_incr}
    _m_ancp_range_ancp_vlan_range_increment {-ancp_range_ancp_vlan_range_increment_base -ancp_range_ancp_vlan_range_increment_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment_step {-ancp_range_ancp_vlan_range_inner_increment_step_base -ancp_range_ancp_vlan_range_inner_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_id_incr_mode {-ancp_range_ancp_vlan_range_id_incr_mode_base -ancp_range_ancp_vlan_range_id_incr_mode_incr}
    _m_ancp_range_ancp_vlan_range_inner_priority {-ancp_range_ancp_vlan_range_inner_priority_base -ancp_range_ancp_vlan_range_inner_priority_incr}
    _m_ancp_range_ancp_mac_range_object_id {-ancp_range_ancp_mac_range_object_id_format -ancp_range_ancp_mac_range_object_id_base -ancp_range_ancp_mac_range_object_id_incr}
    _m_ancp_range_ancp_mac_range_increment_by {-ancp_range_ancp_mac_range_increment_by_format -ancp_range_ancp_mac_range_increment_by_base -ancp_range_ancp_mac_range_increment_by_incr}
    _m_ancp_range_ancp_mac_range_name {-ancp_range_ancp_mac_range_name_format -ancp_range_ancp_mac_range_name_base -ancp_range_ancp_mac_range_name_incr}
    _m_ancp_range_ancp_mac_range_count {-ancp_range_ancp_mac_range_count_base -ancp_range_ancp_mac_range_count_incr}
    _m_ancp_range_ancp_mac_range_mac {-ancp_range_ancp_mac_range_mac_format -ancp_range_ancp_mac_range_mac_base -ancp_range_ancp_mac_range_mac_incr}
    _m_ancp_range_ancp_mac_range_mtu {-ancp_range_ancp_mac_range_mtu_base -ancp_range_ancp_mac_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_object_id {-ancp_range_ancp_atm_range_object_id_format -ancp_range_ancp_atm_range_object_id_base -ancp_range_ancp_atm_range_object_id_incr}
    _m_ancp_range_ancp_atm_range_increment_by {-ancp_range_ancp_atm_range_increment_by_format -ancp_range_ancp_atm_range_increment_by_base -ancp_range_ancp_atm_range_increment_by_incr}
    _m_ancp_range_ancp_atm_range_name {-ancp_range_ancp_atm_range_name_format -ancp_range_ancp_atm_range_name_base -ancp_range_ancp_atm_range_name_incr}
    _m_ancp_range_ancp_atm_range_count {-ancp_range_ancp_atm_range_count_base -ancp_range_ancp_atm_range_count_incr}
    _m_ancp_range_ancp_atm_range_mac {-ancp_range_ancp_atm_range_mac_format -ancp_range_ancp_atm_range_mac_base -ancp_range_ancp_atm_range_mac_incr}
    _m_ancp_range_ancp_atm_range_mtu {-ancp_range_ancp_atm_range_mtu_base -ancp_range_ancp_atm_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_encapsulation {-ancp_range_ancp_atm_range_encapsulation_format -ancp_range_ancp_atm_range_encapsulation_base -ancp_range_ancp_atm_range_encapsulation_incr}
    _m_twamp_control_range_object_id {-twamp_control_range_object_id_format -twamp_control_range_object_id_base -twamp_control_range_object_id_incr}
    _m_twamp_control_range_name {-twamp_control_range_name_format -twamp_control_range_name_base -twamp_control_range_name_incr}
    _m_twamp_control_range_mode {-twamp_control_range_mode_format -twamp_control_range_mode_base -twamp_control_range_mode_incr}
    _m_twamp_control_range_control_server_port {-twamp_control_range_control_server_port_base -twamp_control_range_control_server_port_incr}
    _m_twamp_control_range_count {-twamp_control_range_count_base -twamp_control_range_count_incr}
    _m_twamp_control_range_secret {-twamp_control_range_secret_format -twamp_control_range_secret_base -twamp_control_range_secret_incr}
    _m_twamp_control_range_key_id {-twamp_control_range_key_id_format -twamp_control_range_key_id_base -twamp_control_range_key_id_incr}
    _m_twamp_control_range_control_server_ip_increment {-twamp_control_range_control_server_ip_increment_format -twamp_control_range_control_server_ip_increment_base -twamp_control_range_control_server_ip_increment_incr}
    _m_twamp_control_range_control_start_server_ip {-twamp_control_range_control_start_server_ip_format -twamp_control_range_control_start_server_ip_base -twamp_control_range_control_start_server_ip_incr}
    _m_iptv_range_inter_stb_start_delay {-iptv_range_inter_stb_start_delay_base -iptv_range_inter_stb_start_delay_incr}
    _m_iptv_range_leave_latency_threshold {-iptv_range_leave_latency_threshold_base -iptv_range_leave_latency_threshold_incr}
    _m_iptv_range_join_latency_threshold {-iptv_range_join_latency_threshold_base -iptv_range_join_latency_threshold_incr}
    _m_iptv_range_report_frequency {-iptv_range_report_frequency_base -iptv_range_report_frequency_incr}
    _m_iptv_range_name {-iptv_range_name_format -iptv_range_name_base -iptv_range_name_incr}
    _m_iptv_range_object_id {-iptv_range_object_id_format -iptv_range_object_id_base -iptv_range_object_id_incr}
    _m_iptv_range_join_leave_multiplier {-iptv_range_join_leave_multiplier_base -iptv_range_join_leave_multiplier_incr}
    _m_iptv_range_stb_leave_join_delay {-iptv_range_stb_leave_join_delay_base -iptv_range_stb_leave_join_delay_incr}
    _m_iptv_range_version {-iptv_range_version_format -iptv_range_version_base -iptv_range_version_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/atm/ipEndpoint"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/atm/ipEndpoint
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/atm/ipEndpoint
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -_global_options \
    -cgetmethod _g__global_options -configuremethod _c__global_options -validatemethod _v__global_options \
    -default "" \
    -readonly false
  method _c__global_options {t v} { $self _configure_basic $t $v }
  method _v__global_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__global_options {t} { $self _cget_basic $t }
  option -_port_options \
    -cgetmethod _g__port_options -configuremethod _c__port_options -validatemethod _v__port_options \
    -default "" \
    -readonly false
  method _c__port_options {t v} { $self _configure_basic $t $v }
  method _v__port_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__port_options {t} { $self _cget_basic $t }
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  # XCHILD
  # /vport/protocolStack/atm/ipEndpoint/range
  option -range_handle -default UNDEFINED
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -_global_options _globalOptions
    -_port_options _portOptions
    -object_id objectId
    -name name
    -range_handle range
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_name {-name_format -name_base -name_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/atm/ipEndpoint/range"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/atm/ipEndpoint/range
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint/range]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint/range'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/atm/ipEndpoint/range {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/atm/ipEndpoint/range
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -eapo_udp_range_expected_system_token \
    -configuremethod _c_./eapoUdpRange/expectedSystemToken \
    -cgetmethod _g_./eapoUdpRange/expectedSystemToken \
    -readonly false
  method _c_./eapoUdpRange/expectedSystemToken {t v} { $self _configure_relative ./eapoUdpRange -expected_system_token $v }
  method _g_./eapoUdpRange/expectedSystemToken {t} { $self _cget_relative ./eapoUdpRange -expected_system_token }
  # multiplier 
  method _m_eapo_udp_range_expected_system_token {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_expected_system_token }
  
  option -eapo_udp_range_user_password \
    -configuremethod _c_./eapoUdpRange/userPassword \
    -cgetmethod _g_./eapoUdpRange/userPassword \
    -readonly false
  method _c_./eapoUdpRange/userPassword {t v} { $self _configure_relative ./eapoUdpRange -user_password $v }
  method _g_./eapoUdpRange/userPassword {t} { $self _cget_relative ./eapoUdpRange -user_password }
  # multiplier 
  method _m_eapo_udp_range_user_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_password }
  
  option -eapo_udp_range_enabled \
    -configuremethod _c_./eapoUdpRange/enabled \
    -cgetmethod _g_./eapoUdpRange/enabled \
    -readonly false
  method _c_./eapoUdpRange/enabled {t v} { $self _configure_relative ./eapoUdpRange -enabled $v }
  method _g_./eapoUdpRange/enabled {t} { $self _cget_relative ./eapoUdpRange -enabled }
  option -eapo_udp_range_nac_sequence \
    -configuremethod _c_./eapoUdpRange/nacSequence \
    -cgetmethod _g_./eapoUdpRange/nacSequence \
    -readonly false
  method _c_./eapoUdpRange/nacSequence {t v} { $self _configure_relative ./eapoUdpRange -nac_sequence $v }
  method _g_./eapoUdpRange/nacSequence {t} { $self _cget_relative ./eapoUdpRange -nac_sequence }
  option -eapo_udp_range_fast_stateless_resume \
    -configuremethod _c_./eapoUdpRange/fastStatelessResume \
    -cgetmethod _g_./eapoUdpRange/fastStatelessResume \
    -readonly false
  method _c_./eapoUdpRange/fastStatelessResume {t v} { $self _configure_relative ./eapoUdpRange -fast_stateless_resume $v }
  method _g_./eapoUdpRange/fastStatelessResume {t} { $self _cget_relative ./eapoUdpRange -fast_stateless_resume }
  # multiplier 
  method _m_eapo_udp_range_fast_stateless_resume {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_stateless_resume }
  
  option -eapo_udp_range_user_name \
    -configuremethod _c_./eapoUdpRange/userName \
    -cgetmethod _g_./eapoUdpRange/userName \
    -readonly false
  method _c_./eapoUdpRange/userName {t v} { $self _configure_relative ./eapoUdpRange -user_name $v }
  method _g_./eapoUdpRange/userName {t} { $self _cget_relative ./eapoUdpRange -user_name }
  # multiplier 
  method _m_eapo_udp_range_user_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_name }
  
  option -eapo_udp_range_response_type \
    -configuremethod _c_./eapoUdpRange/responseType \
    -cgetmethod _g_./eapoUdpRange/responseType \
    -readonly false
  method _c_./eapoUdpRange/responseType {t v} { $self _configure_relative ./eapoUdpRange -response_type $v }
  method _g_./eapoUdpRange/responseType {t} { $self _cget_relative ./eapoUdpRange -response_type }
  # multiplier 
  method _m_eapo_udp_range_response_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_response_type }
  
  option -eapo_udp_range_name \
    -configuremethod _c_./eapoUdpRange/name \
    -cgetmethod _g_./eapoUdpRange/name \
    -readonly false
  method _c_./eapoUdpRange/name {t v} { $self _configure_relative ./eapoUdpRange -name $v }
  method _g_./eapoUdpRange/name {t} { $self _cget_relative ./eapoUdpRange -name }
  # multiplier 
  method _m_eapo_udp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_name }
  
  option -eapo_udp_range_protocol \
    -configuremethod _c_./eapoUdpRange/protocol \
    -cgetmethod _g_./eapoUdpRange/protocol \
    -readonly false
  method _c_./eapoUdpRange/protocol {t v} { $self _configure_relative ./eapoUdpRange -protocol $v }
  method _g_./eapoUdpRange/protocol {t} { $self _cget_relative ./eapoUdpRange -protocol }
  # multiplier 
  method _m_eapo_udp_range_protocol {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_protocol }
  
  option -eapo_udp_range_fast_inner_method \
    -configuremethod _c_./eapoUdpRange/fastInnerMethod \
    -cgetmethod _g_./eapoUdpRange/fastInnerMethod \
    -readonly false
  method _c_./eapoUdpRange/fastInnerMethod {t v} { $self _configure_relative ./eapoUdpRange -fast_inner_method $v }
  method _g_./eapoUdpRange/fastInnerMethod {t} { $self _cget_relative ./eapoUdpRange -fast_inner_method }
  # multiplier 
  method _m_eapo_udp_range_fast_inner_method {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_inner_method }
  
  option -eapo_udp_range_fast_provision_mode \
    -configuremethod _c_./eapoUdpRange/fastProvisionMode \
    -cgetmethod _g_./eapoUdpRange/fastProvisionMode \
    -readonly false
  method _c_./eapoUdpRange/fastProvisionMode {t v} { $self _configure_relative ./eapoUdpRange -fast_provision_mode $v }
  method _g_./eapoUdpRange/fastProvisionMode {t} { $self _cget_relative ./eapoUdpRange -fast_provision_mode }
  # multiplier 
  method _m_eapo_udp_range_fast_provision_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_provision_mode }
  
  option -eapo_udp_range_object_id \
    -configuremethod _c_./eapoUdpRange/objectId \
    -cgetmethod _g_./eapoUdpRange/objectId \
    -readonly false
  method _c_./eapoUdpRange/objectId {t v} { $self _configure_relative ./eapoUdpRange -object_id $v }
  method _g_./eapoUdpRange/objectId {t} { $self _cget_relative ./eapoUdpRange -object_id }
  # multiplier 
  method _m_eapo_udp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_object_id }
  
  option -web_auth_range_object_id \
    -configuremethod _c_./webAuthRange/objectId \
    -cgetmethod _g_./webAuthRange/objectId \
    -readonly false
  method _c_./webAuthRange/objectId {t v} { $self _configure_relative ./webAuthRange -object_id $v }
  method _g_./webAuthRange/objectId {t} { $self _cget_relative ./webAuthRange -object_id }
  # multiplier 
  method _m_web_auth_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_object_id }
  
  option -web_auth_range_input_value3 \
    -configuremethod _c_./webAuthRange/inputValue3 \
    -cgetmethod _g_./webAuthRange/inputValue3 \
    -readonly false
  method _c_./webAuthRange/inputValue3 {t v} { $self _configure_relative ./webAuthRange -input_value3 $v }
  method _g_./webAuthRange/inputValue3 {t} { $self _cget_relative ./webAuthRange -input_value3 }
  # multiplier 
  method _m_web_auth_range_input_value3 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value3 }
  
  option -web_auth_range_name \
    -configuremethod _c_./webAuthRange/name \
    -cgetmethod _g_./webAuthRange/name \
    -readonly false
  method _c_./webAuthRange/name {t v} { $self _configure_relative ./webAuthRange -name $v }
  method _g_./webAuthRange/name {t} { $self _cget_relative ./webAuthRange -name }
  # multiplier 
  method _m_web_auth_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_name }
  
  option -web_auth_range_expect \
    -configuremethod _c_./webAuthRange/expect \
    -cgetmethod _g_./webAuthRange/expect \
    -readonly false
  method _c_./webAuthRange/expect {t v} { $self _configure_relative ./webAuthRange -expect $v }
  method _g_./webAuthRange/expect {t} { $self _cget_relative ./webAuthRange -expect }
  # multiplier 
  method _m_web_auth_range_expect {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_expect }
  
  option -web_auth_range_input_value1 \
    -configuremethod _c_./webAuthRange/inputValue1 \
    -cgetmethod _g_./webAuthRange/inputValue1 \
    -readonly false
  method _c_./webAuthRange/inputValue1 {t v} { $self _configure_relative ./webAuthRange -input_value1 $v }
  method _g_./webAuthRange/inputValue1 {t} { $self _cget_relative ./webAuthRange -input_value1 }
  # multiplier 
  method _m_web_auth_range_input_value1 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value1 }
  
  option -web_auth_range_enabled \
    -configuremethod _c_./webAuthRange/enabled \
    -cgetmethod _g_./webAuthRange/enabled \
    -readonly false
  method _c_./webAuthRange/enabled {t v} { $self _configure_relative ./webAuthRange -enabled $v }
  method _g_./webAuthRange/enabled {t} { $self _cget_relative ./webAuthRange -enabled }
  option -web_auth_range_input_value2 \
    -configuremethod _c_./webAuthRange/inputValue2 \
    -cgetmethod _g_./webAuthRange/inputValue2 \
    -readonly false
  method _c_./webAuthRange/inputValue2 {t v} { $self _configure_relative ./webAuthRange -input_value2 $v }
  method _g_./webAuthRange/inputValue2 {t} { $self _cget_relative ./webAuthRange -input_value2 }
  # multiplier 
  method _m_web_auth_range_input_value2 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value2 }
  
  option -twamp_server_range_iteration_count \
    -configuremethod _c_./twampServerRange/iterationCount \
    -cgetmethod _g_./twampServerRange/iterationCount \
    -readonly false
  method _c_./twampServerRange/iterationCount {t v} { $self _configure_relative ./twampServerRange -iteration_count $v }
  method _g_./twampServerRange/iterationCount {t} { $self _cget_relative ./twampServerRange -iteration_count }
  # multiplier 
  method _m_twamp_server_range_iteration_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_iteration_count }
  
  option -twamp_server_range_count \
    -configuremethod _c_./twampServerRange/count \
    -cgetmethod _g_./twampServerRange/count \
    -readonly false
  method _c_./twampServerRange/count {t v} { $self _configure_relative ./twampServerRange -count $v }
  method _g_./twampServerRange/count {t} { $self _cget_relative ./twampServerRange -count }
  # multiplier 
  method _m_twamp_server_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_count }
  
  option -twamp_server_range_enabled \
    -configuremethod _c_./twampServerRange/enabled \
    -cgetmethod _g_./twampServerRange/enabled \
    -readonly false
  method _c_./twampServerRange/enabled {t v} { $self _configure_relative ./twampServerRange -enabled $v }
  method _g_./twampServerRange/enabled {t} { $self _cget_relative ./twampServerRange -enabled }
  option -twamp_server_range_reflector_port \
    -configuremethod _c_./twampServerRange/reflectorPort \
    -cgetmethod _g_./twampServerRange/reflectorPort \
    -readonly false
  method _c_./twampServerRange/reflectorPort {t v} { $self _configure_relative ./twampServerRange -reflector_port $v }
  method _g_./twampServerRange/reflectorPort {t} { $self _cget_relative ./twampServerRange -reflector_port }
  # multiplier 
  method _m_twamp_server_range_reflector_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_reflector_port }
  
  option -twamp_server_range_max_test_sessions \
    -configuremethod _c_./twampServerRange/maxTestSessions \
    -cgetmethod _g_./twampServerRange/maxTestSessions \
    -readonly false
  method _c_./twampServerRange/maxTestSessions {t v} { $self _configure_relative ./twampServerRange -max_test_sessions $v }
  method _g_./twampServerRange/maxTestSessions {t} { $self _cget_relative ./twampServerRange -max_test_sessions }
  # multiplier 
  method _m_twamp_server_range_max_test_sessions {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_max_test_sessions }
  
  option -twamp_server_range_control_port \
    -configuremethod _c_./twampServerRange/controlPort \
    -cgetmethod _g_./twampServerRange/controlPort \
    -readonly false
  method _c_./twampServerRange/controlPort {t v} { $self _configure_relative ./twampServerRange -control_port $v }
  method _g_./twampServerRange/controlPort {t} { $self _cget_relative ./twampServerRange -control_port }
  # multiplier 
  method _m_twamp_server_range_control_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_control_port }
  
  option -twamp_server_range_key_id \
    -configuremethod _c_./twampServerRange/keyId \
    -cgetmethod _g_./twampServerRange/keyId \
    -readonly false
  method _c_./twampServerRange/keyId {t v} { $self _configure_relative ./twampServerRange -key_id $v }
  method _g_./twampServerRange/keyId {t} { $self _cget_relative ./twampServerRange -key_id }
  # multiplier 
  method _m_twamp_server_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_key_id }
  
  option -twamp_server_range_permitted_ip \
    -configuremethod _c_./twampServerRange/permittedIp \
    -cgetmethod _g_./twampServerRange/permittedIp \
    -readonly false
  method _c_./twampServerRange/permittedIp {t v} { $self _configure_relative ./twampServerRange -permitted_ip $v }
  method _g_./twampServerRange/permittedIp {t} { $self _cget_relative ./twampServerRange -permitted_ip }
  # multiplier 
  method _m_twamp_server_range_permitted_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip }
  
  option -twamp_server_range_name \
    -configuremethod _c_./twampServerRange/name \
    -cgetmethod _g_./twampServerRange/name \
    -readonly false
  method _c_./twampServerRange/name {t v} { $self _configure_relative ./twampServerRange -name $v }
  method _g_./twampServerRange/name {t} { $self _cget_relative ./twampServerRange -name }
  # multiplier 
  method _m_twamp_server_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_name }
  
  option -twamp_server_range_enable_access_control \
    -configuremethod _c_./twampServerRange/enableAccessControl \
    -cgetmethod _g_./twampServerRange/enableAccessControl \
    -readonly false
  method _c_./twampServerRange/enableAccessControl {t v} { $self _configure_relative ./twampServerRange -enable_access_control $v }
  method _g_./twampServerRange/enableAccessControl {t} { $self _cget_relative ./twampServerRange -enable_access_control }
  option -twamp_server_range_object_id \
    -configuremethod _c_./twampServerRange/objectId \
    -cgetmethod _g_./twampServerRange/objectId \
    -readonly false
  method _c_./twampServerRange/objectId {t v} { $self _configure_relative ./twampServerRange -object_id $v }
  method _g_./twampServerRange/objectId {t} { $self _cget_relative ./twampServerRange -object_id }
  # multiplier 
  method _m_twamp_server_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_object_id }
  
  option -twamp_server_range_permitted_ip_increment \
    -configuremethod _c_./twampServerRange/permittedIpIncrement \
    -cgetmethod _g_./twampServerRange/permittedIpIncrement \
    -readonly false
  method _c_./twampServerRange/permittedIpIncrement {t v} { $self _configure_relative ./twampServerRange -permitted_ip_increment $v }
  method _g_./twampServerRange/permittedIpIncrement {t} { $self _cget_relative ./twampServerRange -permitted_ip_increment }
  # multiplier 
  method _m_twamp_server_range_permitted_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip_increment }
  
  option -twamp_server_range_permitted_sender_port \
    -configuremethod _c_./twampServerRange/permittedSenderPort \
    -cgetmethod _g_./twampServerRange/permittedSenderPort \
    -readonly false
  method _c_./twampServerRange/permittedSenderPort {t v} { $self _configure_relative ./twampServerRange -permitted_sender_port $v }
  method _g_./twampServerRange/permittedSenderPort {t} { $self _cget_relative ./twampServerRange -permitted_sender_port }
  # multiplier 
  method _m_twamp_server_range_permitted_sender_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_permitted_sender_port }
  
  option -twamp_server_range_mode \
    -configuremethod _c_./twampServerRange/mode \
    -cgetmethod _g_./twampServerRange/mode \
    -readonly false
  method _c_./twampServerRange/mode {t v} { $self _configure_relative ./twampServerRange -mode $v }
  method _g_./twampServerRange/mode {t} { $self _cget_relative ./twampServerRange -mode }
  # multiplier 
  method _m_twamp_server_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_mode }
  
  option -twamp_server_range_secret \
    -configuremethod _c_./twampServerRange/secret \
    -cgetmethod _g_./twampServerRange/secret \
    -readonly false
  method _c_./twampServerRange/secret {t v} { $self _configure_relative ./twampServerRange -secret $v }
  method _g_./twampServerRange/secret {t} { $self _cget_relative ./twampServerRange -secret }
  # multiplier 
  method _m_twamp_server_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_secret }
  
  option -pvc_range_vpi_increment_step \
    -configuremethod _c_./pvcRange/vpiIncrementStep \
    -cgetmethod _g_./pvcRange/vpiIncrementStep \
    -readonly false
  method _c_./pvcRange/vpiIncrementStep {t v} { $self _configure_relative ./pvcRange -vpi_increment_step $v }
  method _g_./pvcRange/vpiIncrementStep {t} { $self _cget_relative ./pvcRange -vpi_increment_step }
  # multiplier 
  method _m_pvc_range_vpi_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_increment_step }
  
  option -pvc_range_vci_unique_count \
    -configuremethod _c_./pvcRange/vciUniqueCount \
    -cgetmethod _g_./pvcRange/vciUniqueCount \
    -readonly false
  method _c_./pvcRange/vciUniqueCount {t v} { $self _configure_relative ./pvcRange -vci_unique_count $v }
  method _g_./pvcRange/vciUniqueCount {t} { $self _cget_relative ./pvcRange -vci_unique_count }
  # multiplier 
  method _m_pvc_range_vci_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_unique_count }
  
  option -pvc_range_vci_increment_step \
    -configuremethod _c_./pvcRange/vciIncrementStep \
    -cgetmethod _g_./pvcRange/vciIncrementStep \
    -readonly false
  method _c_./pvcRange/vciIncrementStep {t v} { $self _configure_relative ./pvcRange -vci_increment_step $v }
  method _g_./pvcRange/vciIncrementStep {t} { $self _cget_relative ./pvcRange -vci_increment_step }
  # multiplier 
  method _m_pvc_range_vci_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_increment_step }
  
  option -pvc_range_enabled \
    -configuremethod _c_./pvcRange/enabled \
    -cgetmethod _g_./pvcRange/enabled \
    -readonly false
  method _c_./pvcRange/enabled {t v} { $self _configure_relative ./pvcRange -enabled $v }
  method _g_./pvcRange/enabled {t} { $self _cget_relative ./pvcRange -enabled }
  option -pvc_range_vpi_first_id \
    -configuremethod _c_./pvcRange/vpiFirstId \
    -cgetmethod _g_./pvcRange/vpiFirstId \
    -readonly false
  method _c_./pvcRange/vpiFirstId {t v} { $self _configure_relative ./pvcRange -vpi_first_id $v }
  method _g_./pvcRange/vpiFirstId {t} { $self _cget_relative ./pvcRange -vpi_first_id }
  # multiplier 
  method _m_pvc_range_vpi_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_first_id }
  
  option -pvc_range_vpi_increment \
    -configuremethod _c_./pvcRange/vpiIncrement \
    -cgetmethod _g_./pvcRange/vpiIncrement \
    -readonly false
  method _c_./pvcRange/vpiIncrement {t v} { $self _configure_relative ./pvcRange -vpi_increment $v }
  method _g_./pvcRange/vpiIncrement {t} { $self _cget_relative ./pvcRange -vpi_increment }
  # multiplier 
  method _m_pvc_range_vpi_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_increment }
  
  option -pvc_range_vci_first_id \
    -configuremethod _c_./pvcRange/vciFirstId \
    -cgetmethod _g_./pvcRange/vciFirstId \
    -readonly false
  method _c_./pvcRange/vciFirstId {t v} { $self _configure_relative ./pvcRange -vci_first_id $v }
  method _g_./pvcRange/vciFirstId {t} { $self _cget_relative ./pvcRange -vci_first_id }
  # multiplier 
  method _m_pvc_range_vci_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_first_id }
  
  option -pvc_range_vci_increment \
    -configuremethod _c_./pvcRange/vciIncrement \
    -cgetmethod _g_./pvcRange/vciIncrement \
    -readonly false
  method _c_./pvcRange/vciIncrement {t v} { $self _configure_relative ./pvcRange -vci_increment $v }
  method _g_./pvcRange/vciIncrement {t} { $self _cget_relative ./pvcRange -vci_increment }
  # multiplier 
  method _m_pvc_range_vci_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vci_increment }
  
  option -pvc_range_name \
    -configuremethod _c_./pvcRange/name \
    -cgetmethod _g_./pvcRange/name \
    -readonly false
  method _c_./pvcRange/name {t v} { $self _configure_relative ./pvcRange -name $v }
  method _g_./pvcRange/name {t} { $self _cget_relative ./pvcRange -name }
  # multiplier 
  method _m_pvc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pvc_range_name }
  
  option -pvc_range_increment_mode \
    -configuremethod _c_./pvcRange/incrementMode \
    -cgetmethod _g_./pvcRange/incrementMode \
    -readonly false
  method _c_./pvcRange/incrementMode {t v} { $self _configure_relative ./pvcRange -increment_mode $v }
  method _g_./pvcRange/incrementMode {t} { $self _cget_relative ./pvcRange -increment_mode }
  # multiplier 
  method _m_pvc_range_increment_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_increment_mode }
  
  option -pvc_range_object_id \
    -configuremethod _c_./pvcRange/objectId \
    -cgetmethod _g_./pvcRange/objectId \
    -readonly false
  method _c_./pvcRange/objectId {t v} { $self _configure_relative ./pvcRange -object_id $v }
  method _g_./pvcRange/objectId {t} { $self _cget_relative ./pvcRange -object_id }
  # multiplier 
  method _m_pvc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -pvc_range_object_id }
  
  option -pvc_range_vpi_unique_count \
    -configuremethod _c_./pvcRange/vpiUniqueCount \
    -cgetmethod _g_./pvcRange/vpiUniqueCount \
    -readonly false
  method _c_./pvcRange/vpiUniqueCount {t v} { $self _configure_relative ./pvcRange -vpi_unique_count $v }
  method _g_./pvcRange/vpiUniqueCount {t} { $self _cget_relative ./pvcRange -vpi_unique_count }
  # multiplier 
  method _m_pvc_range_vpi_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -pvc_range_vpi_unique_count }
  
  option -ptp_range_over_ip_master_mac_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterMacIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_inter_entity }
  
  option -ptp_range_over_ip_communication_mode \
    -configuremethod _c_./ptpRangeOverIp/communicationMode \
    -cgetmethod _g_./ptpRangeOverIp/communicationMode \
    -readonly false
  method _c_./ptpRangeOverIp/communicationMode {t v} { $self _configure_relative ./ptpRangeOverIp -communication_mode $v }
  method _g_./ptpRangeOverIp/communicationMode {t} { $self _cget_relative ./ptpRangeOverIp -communication_mode }
  # multiplier 
  method _m_ptp_range_over_ip_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_communication_mode }
  
  option -ptp_range_over_ip_send_announce_multicast \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceMulticast \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceMulticast \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceMulticast {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_multicast $v }
  method _g_./ptpRangeOverIp/sendAnnounceMulticast {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_multicast }
  option -ptp_range_over_ip_follow_up_delay \
    -configuremethod _c_./ptpRangeOverIp/followUpDelay \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelay \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelay {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay $v }
  method _g_./ptpRangeOverIp/followUpDelay {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay }
  
  option -ptp_range_over_ip_domain \
    -configuremethod _c_./ptpRangeOverIp/domain \
    -cgetmethod _g_./ptpRangeOverIp/domain \
    -readonly false
  method _c_./ptpRangeOverIp/domain {t v} { $self _configure_relative ./ptpRangeOverIp -domain $v }
  method _g_./ptpRangeOverIp/domain {t} { $self _cget_relative ./ptpRangeOverIp -domain }
  # multiplier 
  method _m_ptp_range_over_ip_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_domain }
  
  option -ptp_range_over_ip_announce_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/announceDropRate \
    -cgetmethod _g_./ptpRangeOverIp/announceDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/announceDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -announce_drop_rate $v }
  method _g_./ptpRangeOverIp/announceDropRate {t} { $self _cget_relative ./ptpRangeOverIp -announce_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_drop_rate }
  
  option -ptp_range_over_ip_client_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_increment_by $v }
  method _g_./ptpRangeOverIp/clientIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_increment_by }
  
  option -ptp_range_over_ip_renewal_invited \
    -configuremethod _c_./ptpRangeOverIp/renewalInvited \
    -cgetmethod _g_./ptpRangeOverIp/renewalInvited \
    -readonly false
  method _c_./ptpRangeOverIp/renewalInvited {t v} { $self _configure_relative ./ptpRangeOverIp -renewal_invited $v }
  method _g_./ptpRangeOverIp/renewalInvited {t} { $self _cget_relative ./ptpRangeOverIp -renewal_invited }
  option -ptp_range_over_ip_port_number_increment \
    -configuremethod _c_./ptpRangeOverIp/portNumberIncrement \
    -cgetmethod _g_./ptpRangeOverIp/portNumberIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/portNumberIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -port_number_increment $v }
  method _g_./ptpRangeOverIp/portNumberIncrement {t} { $self _cget_relative ./ptpRangeOverIp -port_number_increment }
  # multiplier 
  method _m_ptp_range_over_ip_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number_increment }
  
  option -ptp_range_over_ip_use_clock_identity \
    -configuremethod _c_./ptpRangeOverIp/useClockIdentity \
    -cgetmethod _g_./ptpRangeOverIp/useClockIdentity \
    -readonly false
  method _c_./ptpRangeOverIp/useClockIdentity {t v} { $self _configure_relative ./ptpRangeOverIp -use_clock_identity $v }
  method _g_./ptpRangeOverIp/useClockIdentity {t} { $self _cget_relative ./ptpRangeOverIp -use_clock_identity }
  option -ptp_range_over_ip_priority1 \
    -configuremethod _c_./ptpRangeOverIp/priority1 \
    -cgetmethod _g_./ptpRangeOverIp/priority1 \
    -readonly false
  method _c_./ptpRangeOverIp/priority1 {t v} { $self _configure_relative ./ptpRangeOverIp -priority1 $v }
  method _g_./ptpRangeOverIp/priority1 {t} { $self _cget_relative ./ptpRangeOverIp -priority1 }
  # multiplier 
  method _m_ptp_range_over_ip_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority1 }
  
  option -ptp_range_over_ip_use_alternate_master_flag \
    -configuremethod _c_./ptpRangeOverIp/useAlternateMasterFlag \
    -cgetmethod _g_./ptpRangeOverIp/useAlternateMasterFlag \
    -readonly false
  method _c_./ptpRangeOverIp/useAlternateMasterFlag {t v} { $self _configure_relative ./ptpRangeOverIp -use_alternate_master_flag $v }
  method _g_./ptpRangeOverIp/useAlternateMasterFlag {t} { $self _cget_relative ./ptpRangeOverIp -use_alternate_master_flag }
  option -ptp_range_over_ip_object_id \
    -configuremethod _c_./ptpRangeOverIp/objectId \
    -cgetmethod _g_./ptpRangeOverIp/objectId \
    -readonly false
  method _c_./ptpRangeOverIp/objectId {t v} { $self _configure_relative ./ptpRangeOverIp -object_id $v }
  method _g_./ptpRangeOverIp/objectId {t} { $self _cget_relative ./ptpRangeOverIp -object_id }
  # multiplier 
  method _m_ptp_range_over_ip_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_object_id }
  
  option -ptp_range_over_ip_delay_resp_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/delayRespReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/delayRespReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_receipt_timeout $v }
  method _g_./ptpRangeOverIp/delayRespReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_receipt_timeout }
  
  option -ptp_range_over_ip_announce_frequency_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceFrequencyTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceFrequencyTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceFrequencyTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_frequency_traceable $v }
  method _g_./ptpRangeOverIp/announceFrequencyTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_frequency_traceable }
  option -ptp_range_over_ip_priority2 \
    -configuremethod _c_./ptpRangeOverIp/priority2 \
    -cgetmethod _g_./ptpRangeOverIp/priority2 \
    -readonly false
  method _c_./ptpRangeOverIp/priority2 {t v} { $self _configure_relative ./ptpRangeOverIp -priority2 $v }
  method _g_./ptpRangeOverIp/priority2 {t} { $self _cget_relative ./ptpRangeOverIp -priority2 }
  # multiplier 
  method _m_ptp_range_over_ip_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority2 }
  
  option -ptp_range_over_ip_announce_current_utc_offset_valid \
    -configuremethod _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -cgetmethod _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -readonly false
  method _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t v} { $self _configure_relative ./ptpRangeOverIp -announce_current_utc_offset_valid $v }
  method _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t} { $self _cget_relative ./ptpRangeOverIp -announce_current_utc_offset_valid }
  option -ptp_range_over_ip_client_mac_address \
    -configuremethod _c_./ptpRangeOverIp/clientMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_address $v }
  method _g_./ptpRangeOverIp/clientMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_address }
  
  option -ptp_range_over_ip_time_source \
    -configuremethod _c_./ptpRangeOverIp/timeSource \
    -cgetmethod _g_./ptpRangeOverIp/timeSource \
    -readonly false
  method _c_./ptpRangeOverIp/timeSource {t v} { $self _configure_relative ./ptpRangeOverIp -time_source $v }
  method _g_./ptpRangeOverIp/timeSource {t} { $self _cget_relative ./ptpRangeOverIp -time_source }
  # multiplier 
  method _m_ptp_range_over_ip_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_time_source }
  
  option -ptp_range_over_ip_steps_removed \
    -configuremethod _c_./ptpRangeOverIp/stepsRemoved \
    -cgetmethod _g_./ptpRangeOverIp/stepsRemoved \
    -readonly false
  method _c_./ptpRangeOverIp/stepsRemoved {t v} { $self _configure_relative ./ptpRangeOverIp -steps_removed $v }
  method _g_./ptpRangeOverIp/stepsRemoved {t} { $self _cget_relative ./ptpRangeOverIp -steps_removed }
  # multiplier 
  method _m_ptp_range_over_ip_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_steps_removed }
  
  option -ptp_range_over_ip_clock_class \
    -configuremethod _c_./ptpRangeOverIp/clockClass \
    -cgetmethod _g_./ptpRangeOverIp/clockClass \
    -readonly false
  method _c_./ptpRangeOverIp/clockClass {t v} { $self _configure_relative ./ptpRangeOverIp -clock_class $v }
  method _g_./ptpRangeOverIp/clockClass {t} { $self _cget_relative ./ptpRangeOverIp -clock_class }
  # multiplier 
  method _m_ptp_range_over_ip_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_class }
  
  option -ptp_range_over_ip_request_attempts \
    -configuremethod _c_./ptpRangeOverIp/requestAttempts \
    -cgetmethod _g_./ptpRangeOverIp/requestAttempts \
    -readonly false
  method _c_./ptpRangeOverIp/requestAttempts {t v} { $self _configure_relative ./ptpRangeOverIp -request_attempts $v }
  method _g_./ptpRangeOverIp/requestAttempts {t} { $self _cget_relative ./ptpRangeOverIp -request_attempts }
  # multiplier 
  method _m_ptp_range_over_ip_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_attempts }
  
  option -ptp_range_over_ip_follow_up_bad_crc_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpBadCrcRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpBadCrcRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpBadCrcRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_bad_crc_rate $v }
  method _g_./ptpRangeOverIp/followUpBadCrcRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_bad_crc_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_bad_crc_rate }
  
  option -ptp_range_over_ip_delay_response_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/delayResponseDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_sync_interval \
    -configuremethod _c_./ptpRangeOverIp/logSyncInterval \
    -cgetmethod _g_./ptpRangeOverIp/logSyncInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logSyncInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_sync_interval $v }
  method _g_./ptpRangeOverIp/logSyncInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_sync_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_sync_interval }
  
  option -ptp_range_over_ip_master_count \
    -configuremethod _c_./ptpRangeOverIp/masterCount \
    -cgetmethod _g_./ptpRangeOverIp/masterCount \
    -readonly false
  method _c_./ptpRangeOverIp/masterCount {t v} { $self _configure_relative ./ptpRangeOverIp -master_count $v }
  method _g_./ptpRangeOverIp/masterCount {t} { $self _cget_relative ./ptpRangeOverIp -master_count }
  # multiplier 
  method _m_ptp_range_over_ip_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_count }
  
  option -ptp_range_over_ip_residence_time \
    -configuremethod _c_./ptpRangeOverIp/residenceTime \
    -cgetmethod _g_./ptpRangeOverIp/residenceTime \
    -readonly false
  method _c_./ptpRangeOverIp/residenceTime {t v} { $self _configure_relative ./ptpRangeOverIp -residence_time $v }
  method _g_./ptpRangeOverIp/residenceTime {t} { $self _cget_relative ./ptpRangeOverIp -residence_time }
  # multiplier 
  method _m_ptp_range_over_ip_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_residence_time }
  
  option -ptp_range_over_ip_signal_interval \
    -configuremethod _c_./ptpRangeOverIp/signalInterval \
    -cgetmethod _g_./ptpRangeOverIp/signalInterval \
    -readonly false
  method _c_./ptpRangeOverIp/signalInterval {t v} { $self _configure_relative ./ptpRangeOverIp -signal_interval $v }
  method _g_./ptpRangeOverIp/signalInterval {t} { $self _cget_relative ./ptpRangeOverIp -signal_interval }
  # multiplier 
  method _m_ptp_range_over_ip_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_interval }
  
  option -ptp_range_over_ip_delay_mechanism \
    -configuremethod _c_./ptpRangeOverIp/delayMechanism \
    -cgetmethod _g_./ptpRangeOverIp/delayMechanism \
    -readonly false
  method _c_./ptpRangeOverIp/delayMechanism {t v} { $self _configure_relative ./ptpRangeOverIp -delay_mechanism $v }
  method _g_./ptpRangeOverIp/delayMechanism {t} { $self _cget_relative ./ptpRangeOverIp -delay_mechanism }
  # multiplier 
  method _m_ptp_range_over_ip_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_mechanism }
  
  option -ptp_range_over_ip_strict_grant \
    -configuremethod _c_./ptpRangeOverIp/strictGrant \
    -cgetmethod _g_./ptpRangeOverIp/strictGrant \
    -readonly false
  method _c_./ptpRangeOverIp/strictGrant {t v} { $self _configure_relative ./ptpRangeOverIp -strict_grant $v }
  method _g_./ptpRangeOverIp/strictGrant {t} { $self _cget_relative ./ptpRangeOverIp -strict_grant }
  option -ptp_range_over_ip_sync_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/syncDropRate \
    -cgetmethod _g_./ptpRangeOverIp/syncDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/syncDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -sync_drop_rate $v }
  method _g_./ptpRangeOverIp/syncDropRate {t} { $self _cget_relative ./ptpRangeOverIp -sync_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_drop_rate }
  
  option -ptp_range_over_ip_drop_signal_req_sync \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqSync \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqSync \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqSync {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_sync $v }
  method _g_./ptpRangeOverIp/dropSignalReqSync {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_sync }
  option -ptp_range_over_ip_clock_increment \
    -configuremethod _c_./ptpRangeOverIp/clockIncrement \
    -cgetmethod _g_./ptpRangeOverIp/clockIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/clockIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -clock_increment $v }
  method _g_./ptpRangeOverIp/clockIncrement {t} { $self _cget_relative ./ptpRangeOverIp -clock_increment }
  # multiplier 
  method _m_ptp_range_over_ip_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_increment }
  
  option -ptp_range_over_ip_announce_ptp_timescale \
    -configuremethod _c_./ptpRangeOverIp/announcePtpTimescale \
    -cgetmethod _g_./ptpRangeOverIp/announcePtpTimescale \
    -readonly false
  method _c_./ptpRangeOverIp/announcePtpTimescale {t v} { $self _configure_relative ./ptpRangeOverIp -announce_ptp_timescale $v }
  method _g_./ptpRangeOverIp/announcePtpTimescale {t} { $self _cget_relative ./ptpRangeOverIp -announce_ptp_timescale }
  option -ptp_range_over_ip_signal_unicast_handling \
    -configuremethod _c_./ptpRangeOverIp/signalUnicastHandling \
    -cgetmethod _g_./ptpRangeOverIp/signalUnicastHandling \
    -readonly false
  method _c_./ptpRangeOverIp/signalUnicastHandling {t v} { $self _configure_relative ./ptpRangeOverIp -signal_unicast_handling $v }
  method _g_./ptpRangeOverIp/signalUnicastHandling {t} { $self _cget_relative ./ptpRangeOverIp -signal_unicast_handling }
  # multiplier 
  method _m_ptp_range_over_ip_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_unicast_handling }
  
  option -ptp_range_over_ip_enabled \
    -configuremethod _c_./ptpRangeOverIp/enabled \
    -cgetmethod _g_./ptpRangeOverIp/enabled \
    -readonly false
  method _c_./ptpRangeOverIp/enabled {t v} { $self _configure_relative ./ptpRangeOverIp -enabled $v }
  method _g_./ptpRangeOverIp/enabled {t} { $self _cget_relative ./ptpRangeOverIp -enabled }
  option -ptp_range_over_ip_timestamp_offset \
    -configuremethod _c_./ptpRangeOverIp/timestampOffset \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffset \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffset {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset $v }
  method _g_./ptpRangeOverIp/timestampOffset {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset }
  
  option -ptp_range_over_ip_master_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_by $v }
  method _g_./ptpRangeOverIp/masterIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_by }
  
  option -ptp_range_over_ip_request_interval \
    -configuremethod _c_./ptpRangeOverIp/requestInterval \
    -cgetmethod _g_./ptpRangeOverIp/requestInterval \
    -readonly false
  method _c_./ptpRangeOverIp/requestInterval {t v} { $self _configure_relative ./ptpRangeOverIp -request_interval $v }
  method _g_./ptpRangeOverIp/requestInterval {t} { $self _cget_relative ./ptpRangeOverIp -request_interval }
  # multiplier 
  method _m_ptp_range_over_ip_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_interval }
  
  option -ptp_range_over_ip_ip_tos \
    -configuremethod _c_./ptpRangeOverIp/ipTos \
    -cgetmethod _g_./ptpRangeOverIp/ipTos \
    -readonly false
  method _c_./ptpRangeOverIp/ipTos {t v} { $self _configure_relative ./ptpRangeOverIp -ip_tos $v }
  method _g_./ptpRangeOverIp/ipTos {t} { $self _cget_relative ./ptpRangeOverIp -ip_tos }
  # multiplier 
  method _m_ptp_range_over_ip_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_ip_tos }
  
  option -ptp_range_over_ip_request_holddown \
    -configuremethod _c_./ptpRangeOverIp/requestHolddown \
    -cgetmethod _g_./ptpRangeOverIp/requestHolddown \
    -readonly false
  method _c_./ptpRangeOverIp/requestHolddown {t v} { $self _configure_relative ./ptpRangeOverIp -request_holddown $v }
  method _g_./ptpRangeOverIp/requestHolddown {t} { $self _cget_relative ./ptpRangeOverIp -request_holddown }
  # multiplier 
  method _m_ptp_range_over_ip_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_holddown }
  
  option -ptp_range_over_ip_client_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_increment_by $v }
  method _g_./ptpRangeOverIp/clientMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_increment_by }
  
  option -ptp_range_over_ip_name \
    -configuremethod _c_./ptpRangeOverIp/name \
    -cgetmethod _g_./ptpRangeOverIp/name \
    -readonly false
  method _c_./ptpRangeOverIp/name {t v} { $self _configure_relative ./ptpRangeOverIp -name $v }
  method _g_./ptpRangeOverIp/name {t} { $self _cget_relative ./ptpRangeOverIp -name }
  # multiplier 
  method _m_ptp_range_over_ip_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_name }
  
  option -ptp_range_over_ip_drop_signal_req_announce \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqAnnounce \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqAnnounce \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqAnnounce {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_announce $v }
  method _g_./ptpRangeOverIp/dropSignalReqAnnounce {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_announce }
  option -ptp_range_over_ip_master_ip_address \
    -configuremethod _c_./ptpRangeOverIp/masterIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_address $v }
  method _g_./ptpRangeOverIp/masterIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_address }
  
  option -ptp_range_over_ip_first_clock \
    -configuremethod _c_./ptpRangeOverIp/firstClock \
    -cgetmethod _g_./ptpRangeOverIp/firstClock \
    -readonly false
  method _c_./ptpRangeOverIp/firstClock {t v} { $self _configure_relative ./ptpRangeOverIp -first_clock $v }
  method _g_./ptpRangeOverIp/firstClock {t} { $self _cget_relative ./ptpRangeOverIp -first_clock }
  # multiplier 
  method _m_ptp_range_over_ip_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_first_clock }
  
  option -ptp_range_over_ip_master_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_by $v }
  method _g_./ptpRangeOverIp/masterMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_by }
  
  option -ptp_range_over_ip_send_cancel_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendCancelTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendCancelTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendCancelTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_cancel_tlv $v }
  method _g_./ptpRangeOverIp/sendCancelTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_cancel_tlv }
  option -ptp_range_over_ip_port_number \
    -configuremethod _c_./ptpRangeOverIp/portNumber \
    -cgetmethod _g_./ptpRangeOverIp/portNumber \
    -readonly false
  method _c_./ptpRangeOverIp/portNumber {t v} { $self _configure_relative ./ptpRangeOverIp -port_number $v }
  method _g_./ptpRangeOverIp/portNumber {t} { $self _cget_relative ./ptpRangeOverIp -port_number }
  # multiplier 
  method _m_ptp_range_over_ip_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number }
  
  option -ptp_range_over_ip_client_ip_address \
    -configuremethod _c_./ptpRangeOverIp/clientIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_address $v }
  method _g_./ptpRangeOverIp/clientIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_address }
  
  option -ptp_range_over_ip_announce_leap59 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap59 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap59 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap59 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap59 $v }
  method _g_./ptpRangeOverIp/announceLeap59 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap59 }
  option -ptp_range_over_ip_send_announce_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_tlv $v }
  method _g_./ptpRangeOverIp/sendAnnounceTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_tlv }
  option -ptp_range_over_ip_sync_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/syncReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/syncReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/syncReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -sync_receipt_timeout $v }
  method _g_./ptpRangeOverIp/syncReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -sync_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_receipt_timeout }
  
  option -ptp_range_over_ip_announce_leap61 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap61 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap61 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap61 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap61 $v }
  method _g_./ptpRangeOverIp/announceLeap61 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap61 }
  option -ptp_range_over_ip_grant_delay_resp_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantDelayRespDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval $v }
  method _g_./ptpRangeOverIp/grantDelayRespDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_delay_resp_duration_interval }
  
  option -ptp_range_over_ip_timestamp_offset_variation \
    -configuremethod _c_./ptpRangeOverIp/timestampOffsetVariation \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffsetVariation \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffsetVariation {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset_variation $v }
  method _g_./ptpRangeOverIp/timestampOffsetVariation {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset_variation }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset_variation }
  
  option -ptp_range_over_ip_follow_up_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDropRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_drop_rate $v }
  method _g_./ptpRangeOverIp/followUpDropRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_drop_rate }
  
  option -ptp_range_over_ip_master_mac_address \
    -configuremethod _c_./ptpRangeOverIp/masterMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_address $v }
  method _g_./ptpRangeOverIp/masterMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_address }
  
  option -ptp_range_over_ip_drop_signal_req_delay_resp \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqDelayResp \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqDelayResp \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqDelayResp {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_delay_resp $v }
  method _g_./ptpRangeOverIp/dropSignalReqDelayResp {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_delay_resp }
  option -ptp_range_over_ip_grant_sync_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantSyncDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantSyncDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantSyncDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_sync_duration_interval $v }
  method _g_./ptpRangeOverIp/grantSyncDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_sync_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_sync_duration_interval }
  
  option -ptp_range_over_ip_learn_port_id \
    -configuremethod _c_./ptpRangeOverIp/learnPortId \
    -cgetmethod _g_./ptpRangeOverIp/learnPortId \
    -readonly false
  method _c_./ptpRangeOverIp/learnPortId {t v} { $self _configure_relative ./ptpRangeOverIp -learn_port_id $v }
  method _g_./ptpRangeOverIp/learnPortId {t} { $self _cget_relative ./ptpRangeOverIp -learn_port_id }
  option -ptp_range_over_ip_delay_response_delay \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelay \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelay \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelay {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay $v }
  method _g_./ptpRangeOverIp/delayResponseDelay {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay }
  
  option -ptp_range_over_ip_grant_unicast_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantUnicastDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantUnicastDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantUnicastDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_unicast_duration_interval $v }
  method _g_./ptpRangeOverIp/grantUnicastDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_unicast_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_unicast_duration_interval }
  
  option -ptp_range_over_ip_follow_up_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/followUpDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_delay_req_interval \
    -configuremethod _c_./ptpRangeOverIp/logDelayReqInterval \
    -cgetmethod _g_./ptpRangeOverIp/logDelayReqInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logDelayReqInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_delay_req_interval $v }
  method _g_./ptpRangeOverIp/logDelayReqInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_delay_req_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_delay_req_interval }
  
  option -ptp_range_over_ip_clock_accuracy \
    -configuremethod _c_./ptpRangeOverIp/clockAccuracy \
    -cgetmethod _g_./ptpRangeOverIp/clockAccuracy \
    -readonly false
  method _c_./ptpRangeOverIp/clockAccuracy {t v} { $self _configure_relative ./ptpRangeOverIp -clock_accuracy $v }
  method _g_./ptpRangeOverIp/clockAccuracy {t} { $self _cget_relative ./ptpRangeOverIp -clock_accuracy }
  # multiplier 
  method _m_ptp_range_over_ip_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_accuracy }
  
  option -ptp_range_over_ip_client_count \
    -configuremethod _c_./ptpRangeOverIp/clientCount \
    -cgetmethod _g_./ptpRangeOverIp/clientCount \
    -readonly false
  method _c_./ptpRangeOverIp/clientCount {t v} { $self _configure_relative ./ptpRangeOverIp -client_count $v }
  method _g_./ptpRangeOverIp/clientCount {t} { $self _cget_relative ./ptpRangeOverIp -client_count }
  # multiplier 
  method _m_ptp_range_over_ip_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_count }
  
  option -ptp_range_over_ip_announce_time_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceTimeTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceTimeTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceTimeTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_time_traceable $v }
  method _g_./ptpRangeOverIp/announceTimeTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_time_traceable }
  option -ptp_range_over_ip_step_mode \
    -configuremethod _c_./ptpRangeOverIp/stepMode \
    -cgetmethod _g_./ptpRangeOverIp/stepMode \
    -readonly false
  method _c_./ptpRangeOverIp/stepMode {t v} { $self _configure_relative ./ptpRangeOverIp -step_mode $v }
  method _g_./ptpRangeOverIp/stepMode {t} { $self _cget_relative ./ptpRangeOverIp -step_mode }
  # multiplier 
  method _m_ptp_range_over_ip_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_step_mode }
  
  option -ptp_range_over_ip_master_ip_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterIpIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_inter_entity }
  
  option -ptp_range_over_ip_delay_resp_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/delayRespDropRate \
    -cgetmethod _g_./ptpRangeOverIp/delayRespDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_drop_rate $v }
  method _g_./ptpRangeOverIp/delayRespDropRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_drop_rate }
  
  option -ptp_range_over_ip_announce_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/announceReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/announceReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/announceReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -announce_receipt_timeout $v }
  method _g_./ptpRangeOverIp/announceReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -announce_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_receipt_timeout }
  
  option -ptp_range_over_ip_rx_calibration \
    -configuremethod _c_./ptpRangeOverIp/rxCalibration \
    -cgetmethod _g_./ptpRangeOverIp/rxCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/rxCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -rx_calibration $v }
  method _g_./ptpRangeOverIp/rxCalibration {t} { $self _cget_relative ./ptpRangeOverIp -rx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_rx_calibration }
  
  option -ptp_range_over_ip_tx_calibration \
    -configuremethod _c_./ptpRangeOverIp/txCalibration \
    -cgetmethod _g_./ptpRangeOverIp/txCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/txCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -tx_calibration $v }
  method _g_./ptpRangeOverIp/txCalibration {t} { $self _cget_relative ./ptpRangeOverIp -tx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_tx_calibration }
  
  option -ptp_range_over_ip_log_announce_interval \
    -configuremethod _c_./ptpRangeOverIp/logAnnounceInterval \
    -cgetmethod _g_./ptpRangeOverIp/logAnnounceInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logAnnounceInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_announce_interval $v }
  method _g_./ptpRangeOverIp/logAnnounceInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_announce_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_announce_interval }
  
  option -igmp_querier_range_object_id \
    -configuremethod _c_./igmpQuerierRange/objectId \
    -cgetmethod _g_./igmpQuerierRange/objectId \
    -readonly false
  method _c_./igmpQuerierRange/objectId {t v} { $self _configure_relative ./igmpQuerierRange -object_id $v }
  method _g_./igmpQuerierRange/objectId {t} { $self _cget_relative ./igmpQuerierRange -object_id }
  # multiplier 
  method _m_igmp_querier_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_object_id }
  
  option -igmp_querier_range_specific_query_response_count \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseCount \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseCount \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseCount {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_count $v }
  method _g_./igmpQuerierRange/specificQueryResponseCount {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_count }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_count }
  
  option -igmp_querier_range_specific_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_interval $v }
  method _g_./igmpQuerierRange/specificQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_interval }
  
  option -igmp_querier_range_general_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_response_interval $v }
  method _g_./igmpQuerierRange/generalQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_response_interval }
  
  option -igmp_querier_range_name \
    -configuremethod _c_./igmpQuerierRange/name \
    -cgetmethod _g_./igmpQuerierRange/name \
    -readonly false
  method _c_./igmpQuerierRange/name {t v} { $self _configure_relative ./igmpQuerierRange -name $v }
  method _g_./igmpQuerierRange/name {t} { $self _cget_relative ./igmpQuerierRange -name }
  # multiplier 
  method _m_igmp_querier_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_name }
  
  option -igmp_querier_range_router_alert \
    -configuremethod _c_./igmpQuerierRange/routerAlert \
    -cgetmethod _g_./igmpQuerierRange/routerAlert \
    -readonly false
  method _c_./igmpQuerierRange/routerAlert {t v} { $self _configure_relative ./igmpQuerierRange -router_alert $v }
  method _g_./igmpQuerierRange/routerAlert {t} { $self _cget_relative ./igmpQuerierRange -router_alert }
  option -igmp_querier_range_general_query_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_interval $v }
  method _g_./igmpQuerierRange/generalQueryInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_interval }
  
  option -igmp_querier_range_robustness_variable \
    -configuremethod _c_./igmpQuerierRange/robustnessVariable \
    -cgetmethod _g_./igmpQuerierRange/robustnessVariable \
    -readonly false
  method _c_./igmpQuerierRange/robustnessVariable {t v} { $self _configure_relative ./igmpQuerierRange -robustness_variable $v }
  method _g_./igmpQuerierRange/robustnessVariable {t} { $self _cget_relative ./igmpQuerierRange -robustness_variable }
  # multiplier 
  method _m_igmp_querier_range_robustness_variable {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_robustness_variable }
  
  option -igmp_querier_range_startup_query_count \
    -configuremethod _c_./igmpQuerierRange/startupQueryCount \
    -cgetmethod _g_./igmpQuerierRange/startupQueryCount \
    -readonly false
  method _c_./igmpQuerierRange/startupQueryCount {t v} { $self _configure_relative ./igmpQuerierRange -startup_query_count $v }
  method _g_./igmpQuerierRange/startupQueryCount {t} { $self _cget_relative ./igmpQuerierRange -startup_query_count }
  # multiplier 
  method _m_igmp_querier_range_startup_query_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_startup_query_count }
  
  option -igmp_querier_range_version \
    -configuremethod _c_./igmpQuerierRange/version \
    -cgetmethod _g_./igmpQuerierRange/version \
    -readonly false
  method _c_./igmpQuerierRange/version {t v} { $self _configure_relative ./igmpQuerierRange -version $v }
  method _g_./igmpQuerierRange/version {t} { $self _cget_relative ./igmpQuerierRange -version }
  # multiplier 
  method _m_igmp_querier_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_version }
  
  option -igmp_querier_range_enabled \
    -configuremethod _c_./igmpQuerierRange/enabled \
    -cgetmethod _g_./igmpQuerierRange/enabled \
    -readonly false
  method _c_./igmpQuerierRange/enabled {t v} { $self _configure_relative ./igmpQuerierRange -enabled $v }
  method _g_./igmpQuerierRange/enabled {t} { $self _cget_relative ./igmpQuerierRange -enabled }
  option -atm_range_object_id \
    -configuremethod _c_./atmRange/objectId \
    -cgetmethod _g_./atmRange/objectId \
    -readonly false
  method _c_./atmRange/objectId {t v} { $self _configure_relative ./atmRange -object_id $v }
  method _g_./atmRange/objectId {t} { $self _cget_relative ./atmRange -object_id }
  # multiplier 
  method _m_atm_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_object_id }
  
  option -atm_range_increment_by \
    -configuremethod _c_./atmRange/incrementBy \
    -cgetmethod _g_./atmRange/incrementBy \
    -readonly false
  method _c_./atmRange/incrementBy {t v} { $self _configure_relative ./atmRange -increment_by $v }
  method _g_./atmRange/incrementBy {t} { $self _cget_relative ./atmRange -increment_by }
  # multiplier 
  method _m_atm_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_increment_by }
  
  option -atm_range_name \
    -configuremethod _c_./atmRange/name \
    -cgetmethod _g_./atmRange/name \
    -readonly false
  method _c_./atmRange/name {t v} { $self _configure_relative ./atmRange -name $v }
  method _g_./atmRange/name {t} { $self _cget_relative ./atmRange -name }
  # multiplier 
  method _m_atm_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_name }
  
  option -atm_range_count \
    -configuremethod _c_./atmRange/count \
    -cgetmethod _g_./atmRange/count \
    -readonly false
  method _c_./atmRange/count {t v} { $self _configure_relative ./atmRange -count $v }
  method _g_./atmRange/count {t} { $self _cget_relative ./atmRange -count }
  # multiplier 
  method _m_atm_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -atm_range_count }
  
  option -atm_range_mac \
    -configuremethod _c_./atmRange/mac \
    -cgetmethod _g_./atmRange/mac \
    -readonly false
  method _c_./atmRange/mac {t v} { $self _configure_relative ./atmRange -mac $v }
  method _g_./atmRange/mac {t} { $self _cget_relative ./atmRange -mac }
  # multiplier 
  method _m_atm_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_mac }
  
  option -atm_range_mtu \
    -configuremethod _c_./atmRange/mtu \
    -cgetmethod _g_./atmRange/mtu \
    -readonly false
  method _c_./atmRange/mtu {t v} { $self _configure_relative ./atmRange -mtu $v }
  method _g_./atmRange/mtu {t} { $self _cget_relative ./atmRange -mtu }
  # multiplier 
  method _m_atm_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -atm_range_mtu }
  
  option -atm_range_encapsulation \
    -configuremethod _c_./atmRange/encapsulation \
    -cgetmethod _g_./atmRange/encapsulation \
    -readonly false
  method _c_./atmRange/encapsulation {t v} { $self _configure_relative ./atmRange -encapsulation $v }
  method _g_./atmRange/encapsulation {t} { $self _cget_relative ./atmRange -encapsulation }
  # multiplier 
  method _m_atm_range_encapsulation {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -atm_range_encapsulation }
  
  option -atm_range_enabled \
    -configuremethod _c_./atmRange/enabled \
    -cgetmethod _g_./atmRange/enabled \
    -readonly false
  method _c_./atmRange/enabled {t v} { $self _configure_relative ./atmRange -enabled $v }
  method _g_./atmRange/enabled {t} { $self _cget_relative ./atmRange -enabled }
  option -ancp_range_circuit_id \
    -configuremethod _c_./ancpRange/circuitId \
    -cgetmethod _g_./ancpRange/circuitId \
    -readonly false
  method _c_./ancpRange/circuitId {t v} { $self _configure_relative ./ancpRange -circuit_id $v }
  method _g_./ancpRange/circuitId {t} { $self _cget_relative ./ancpRange -circuit_id }
  # multiplier 
  method _m_ancp_range_circuit_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_circuit_id }
  
  option -ancp_range_use_dsl_outer_vlan \
    -configuremethod _c_./ancpRange/useDslOuterVlan \
    -cgetmethod _g_./ancpRange/useDslOuterVlan \
    -readonly false
  method _c_./ancpRange/useDslOuterVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_outer_vlan $v }
  method _g_./ancpRange/useDslOuterVlan {t} { $self _cget_relative ./ancpRange -use_dsl_outer_vlan }
  option -ancp_range_distribution_algorithm_percent \
    -configuremethod _c_./ancpRange/distributionAlgorithmPercent \
    -cgetmethod _g_./ancpRange/distributionAlgorithmPercent \
    -readonly false
  method _c_./ancpRange/distributionAlgorithmPercent {t v} { $self _configure_relative ./ancpRange -distribution_algorithm_percent $v }
  method _g_./ancpRange/distributionAlgorithmPercent {t} { $self _cget_relative ./ancpRange -distribution_algorithm_percent }
  # multiplier 
  method _m_ancp_range_distribution_algorithm_percent {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_distribution_algorithm_percent }
  
  option -ancp_range_atm_vpi \
    -configuremethod _c_./ancpRange/atmVpi \
    -cgetmethod _g_./ancpRange/atmVpi \
    -readonly false
  method _c_./ancpRange/atmVpi {t v} { $self _configure_relative ./ancpRange -atm_vpi $v }
  method _g_./ancpRange/atmVpi {t} { $self _cget_relative ./ancpRange -atm_vpi }
  # multiplier 
  method _m_ancp_range_atm_vpi {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vpi }
  
  option -ancp_range_nas_ip_address \
    -configuremethod _c_./ancpRange/nasIpAddress \
    -cgetmethod _g_./ancpRange/nasIpAddress \
    -readonly false
  method _c_./ancpRange/nasIpAddress {t v} { $self _configure_relative ./ancpRange -nas_ip_address $v }
  method _g_./ancpRange/nasIpAddress {t} { $self _cget_relative ./ancpRange -nas_ip_address }
  # multiplier 
  method _m_ancp_range_nas_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address }
  
  option -ancp_range_nas_ancp_service_port \
    -configuremethod _c_./ancpRange/nasAncpServicePort \
    -cgetmethod _g_./ancpRange/nasAncpServicePort \
    -readonly false
  method _c_./ancpRange/nasAncpServicePort {t v} { $self _configure_relative ./ancpRange -nas_ancp_service_port $v }
  method _g_./ancpRange/nasAncpServicePort {t} { $self _cget_relative ./ancpRange -nas_ancp_service_port }
  # multiplier 
  method _m_ancp_range_nas_ancp_service_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_ancp_service_port }
  
  option -ancp_range_inner_vlan_id \
    -configuremethod _c_./ancpRange/innerVlanId \
    -cgetmethod _g_./ancpRange/innerVlanId \
    -readonly false
  method _c_./ancpRange/innerVlanId {t v} { $self _configure_relative ./ancpRange -inner_vlan_id $v }
  method _g_./ancpRange/innerVlanId {t} { $self _cget_relative ./ancpRange -inner_vlan_id }
  # multiplier 
  method _m_ancp_range_inner_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_inner_vlan_id }
  
  option -ancp_range_enabled \
    -configuremethod _c_./ancpRange/enabled \
    -cgetmethod _g_./ancpRange/enabled \
    -readonly false
  method _c_./ancpRange/enabled {t v} { $self _configure_relative ./ancpRange -enabled $v }
  method _g_./ancpRange/enabled {t} { $self _cget_relative ./ancpRange -enabled }
  option -ancp_range_use_dsl_inner_vlan \
    -configuremethod _c_./ancpRange/useDslInnerVlan \
    -cgetmethod _g_./ancpRange/useDslInnerVlan \
    -readonly false
  method _c_./ancpRange/useDslInnerVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_inner_vlan $v }
  method _g_./ancpRange/useDslInnerVlan {t} { $self _cget_relative ./ancpRange -use_dsl_inner_vlan }
  option -ancp_range_access_aggregation_cb_tlv \
    -configuremethod _c_./ancpRange/accessAggregationCbTlv \
    -cgetmethod _g_./ancpRange/accessAggregationCbTlv \
    -readonly false
  method _c_./ancpRange/accessAggregationCbTlv {t v} { $self _configure_relative ./ancpRange -access_aggregation_cb_tlv $v }
  method _g_./ancpRange/accessAggregationCbTlv {t} { $self _cget_relative ./ancpRange -access_aggregation_cb_tlv }
  # multiplier 
  method _m_ancp_range_access_aggregation_cb_tlv {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_access_aggregation_cb_tlv }
  
  option -ancp_range_nas_keep_alive_retries \
    -configuremethod _c_./ancpRange/nasKeepAliveRetries \
    -cgetmethod _g_./ancpRange/nasKeepAliveRetries \
    -readonly false
  method _c_./ancpRange/nasKeepAliveRetries {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_retries $v }
  method _g_./ancpRange/nasKeepAliveRetries {t} { $self _cget_relative ./ancpRange -nas_keep_alive_retries }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_retries }
  
  option -ancp_range_nas_keep_alive_timeout \
    -configuremethod _c_./ancpRange/nasKeepAliveTimeout \
    -cgetmethod _g_./ancpRange/nasKeepAliveTimeout \
    -readonly false
  method _c_./ancpRange/nasKeepAliveTimeout {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_timeout $v }
  method _g_./ancpRange/nasKeepAliveTimeout {t} { $self _cget_relative ./ancpRange -nas_keep_alive_timeout }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_timeout }
  
  option -ancp_range_name \
    -configuremethod _c_./ancpRange/name \
    -cgetmethod _g_./ancpRange/name \
    -readonly false
  method _c_./ancpRange/name {t v} { $self _configure_relative ./ancpRange -name $v }
  method _g_./ancpRange/name {t} { $self _cget_relative ./ancpRange -name }
  # multiplier 
  method _m_ancp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_name }
  
  option -ancp_range_enable_access_aggregation \
    -configuremethod _c_./ancpRange/enableAccessAggregation \
    -cgetmethod _g_./ancpRange/enableAccessAggregation \
    -readonly false
  method _c_./ancpRange/enableAccessAggregation {t v} { $self _configure_relative ./ancpRange -enable_access_aggregation $v }
  method _g_./ancpRange/enableAccessAggregation {t} { $self _cget_relative ./ancpRange -enable_access_aggregation }
  option -ancp_range_object_id \
    -configuremethod _c_./ancpRange/objectId \
    -cgetmethod _g_./ancpRange/objectId \
    -readonly false
  method _c_./ancpRange/objectId {t v} { $self _configure_relative ./ancpRange -object_id $v }
  method _g_./ancpRange/objectId {t} { $self _cget_relative ./ancpRange -object_id }
  # multiplier 
  method _m_ancp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_object_id }
  
  option -ancp_range_atm_vci \
    -configuremethod _c_./ancpRange/atmVci \
    -cgetmethod _g_./ancpRange/atmVci \
    -readonly false
  method _c_./ancpRange/atmVci {t v} { $self _configure_relative ./ancpRange -atm_vci $v }
  method _g_./ancpRange/atmVci {t} { $self _cget_relative ./ancpRange -atm_vci }
  # multiplier 
  method _m_ancp_range_atm_vci {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vci }
  
  option -ancp_range_nas_ipaddress_incr \
    -configuremethod _c_./ancpRange/nasIPAddressIncr \
    -cgetmethod _g_./ancpRange/nasIPAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIPAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ipaddress_incr $v }
  method _g_./ancpRange/nasIPAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ipaddress_incr }
  # multiplier 
  method _m_ancp_range_nas_ipaddress_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ipaddress_incr }
  
  option -ancp_range_outer_vlan_id \
    -configuremethod _c_./ancpRange/outerVlanId \
    -cgetmethod _g_./ancpRange/outerVlanId \
    -readonly false
  method _c_./ancpRange/outerVlanId {t v} { $self _configure_relative ./ancpRange -outer_vlan_id $v }
  method _g_./ancpRange/outerVlanId {t} { $self _cget_relative ./ancpRange -outer_vlan_id }
  # multiplier 
  method _m_ancp_range_outer_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_outer_vlan_id }
  
  option -ancp_range_nas_ip_address_incr \
    -configuremethod _c_./ancpRange/nasIpAddressIncr \
    -cgetmethod _g_./ancpRange/nasIpAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIpAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ip_address_incr $v }
  method _g_./ancpRange/nasIpAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ip_address_incr }
  # multiplier 
  method _m_ancp_range_nas_ip_address_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address_incr }
  
  option -ancp_range_ancp_ip_range \
    -configuremethod _c_./ancpRange/ancpIpRange \
    -cgetmethod _g_./ancpRange/ancpIpRange \
    -readonly false
  method _c_./ancpRange/ancpIpRange {t v} { $self _configure_relative ./ancpRange -ancp_ip_range $v }
  method _g_./ancpRange/ancpIpRange {t} { $self _cget_relative ./ancpRange -ancp_ip_range }
  option -ancp_range_ancp_pvc_range \
    -configuremethod _c_./ancpRange/ancpPvcRange \
    -cgetmethod _g_./ancpRange/ancpPvcRange \
    -readonly false
  method _c_./ancpRange/ancpPvcRange {t v} { $self _configure_relative ./ancpRange -ancp_pvc_range $v }
  method _g_./ancpRange/ancpPvcRange {t} { $self _cget_relative ./ancpRange -ancp_pvc_range }
  option -ancp_range_ancp_vlan_range \
    -configuremethod _c_./ancpRange/ancpVlanRange \
    -cgetmethod _g_./ancpRange/ancpVlanRange \
    -readonly false
  method _c_./ancpRange/ancpVlanRange {t v} { $self _configure_relative ./ancpRange -ancp_vlan_range $v }
  method _g_./ancpRange/ancpVlanRange {t} { $self _cget_relative ./ancpRange -ancp_vlan_range }
  option -ancp_range_ancp_mac_range \
    -configuremethod _c_./ancpRange/ancpMacRange \
    -cgetmethod _g_./ancpRange/ancpMacRange \
    -readonly false
  method _c_./ancpRange/ancpMacRange {t v} { $self _configure_relative ./ancpRange -ancp_mac_range $v }
  method _g_./ancpRange/ancpMacRange {t} { $self _cget_relative ./ancpRange -ancp_mac_range }
  option -ancp_range_ancp_atm_range \
    -configuremethod _c_./ancpRange/ancpAtmRange \
    -cgetmethod _g_./ancpRange/ancpAtmRange \
    -readonly false
  method _c_./ancpRange/ancpAtmRange {t v} { $self _configure_relative ./ancpRange -ancp_atm_range $v }
  method _g_./ancpRange/ancpAtmRange {t} { $self _cget_relative ./ancpRange -ancp_atm_range }
  option -ancp_range_dsl_resync_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslResyncProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslResyncProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslResyncProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_resync_profile_allocation_table $v }
  method _g_./ancpRange/dslResyncProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_resync_profile_allocation_table }
  option -ancp_range_dsl_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_profile_allocation_table $v }
  method _g_./ancpRange/dslProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_profile_allocation_table }
  option -ancp_range_ancp_ip_range_count \
    -configuremethod _c_./ancpRange/ancpIpRange/count \
    -cgetmethod _g_./ancpRange/ancpIpRange/count \
    -readonly false
  method _c_./ancpRange/ancpIpRange/count {t v} { $self _configure_relative ./ancpRange/ancpIpRange -count $v }
  method _g_./ancpRange/ancpIpRange/count {t} { $self _cget_relative ./ancpRange/ancpIpRange -count }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_count }
  
  option -ancp_range_ancp_ip_range_ip_type \
    -configuremethod _c_./ancpRange/ancpIpRange/ipType \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipType \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipType {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_type $v }
  method _g_./ancpRange/ancpIpRange/ipType {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_type }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_type }
  
  option -ancp_range_ancp_ip_range_enabled \
    -configuremethod _c_./ancpRange/ancpIpRange/enabled \
    -cgetmethod _g_./ancpRange/ancpIpRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enabled $v }
  method _g_./ancpRange/ancpIpRange/enabled {t} { $self _cget_relative ./ancpRange/ancpIpRange -enabled }
  option -ancp_range_ancp_ip_range_gateway_increment_mode \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrementMode {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment_mode $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrementMode {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment_mode }
  
  option -ancp_range_ancp_ip_range_enable_gateway_arp \
    -configuremethod _c_./ancpRange/ancpIpRange/enableGatewayArp \
    -cgetmethod _g_./ancpRange/ancpIpRange/enableGatewayArp \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enableGatewayArp {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enable_gateway_arp $v }
  method _g_./ancpRange/ancpIpRange/enableGatewayArp {t} { $self _cget_relative ./ancpRange/ancpIpRange -enable_gateway_arp }
  option -ancp_range_ancp_ip_range_ip_address \
    -configuremethod _c_./ancpRange/ancpIpRange/ipAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_address $v }
  method _g_./ancpRange/ancpIpRange/ipAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_address }
  
  option -ancp_range_ancp_ip_range_gateway_increment \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrement \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrement \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrement {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrement {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment }
  
  option -ancp_range_ancp_ip_range_increment_by \
    -configuremethod _c_./ancpRange/ancpIpRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpIpRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpIpRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpIpRange -increment_by $v }
  method _g_./ancpRange/ancpIpRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpIpRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_increment_by }
  
  option -ancp_range_ancp_ip_range_gateway_address \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_address $v }
  method _g_./ancpRange/ancpIpRange/gatewayAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_address }
  
  option -ancp_range_ancp_ip_range_name \
    -configuremethod _c_./ancpRange/ancpIpRange/name \
    -cgetmethod _g_./ancpRange/ancpIpRange/name \
    -readonly false
  method _c_./ancpRange/ancpIpRange/name {t v} { $self _configure_relative ./ancpRange/ancpIpRange -name $v }
  method _g_./ancpRange/ancpIpRange/name {t} { $self _cget_relative ./ancpRange/ancpIpRange -name }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_name }
  
  option -ancp_range_ancp_ip_range_mss \
    -configuremethod _c_./ancpRange/ancpIpRange/mss \
    -cgetmethod _g_./ancpRange/ancpIpRange/mss \
    -readonly false
  method _c_./ancpRange/ancpIpRange/mss {t v} { $self _configure_relative ./ancpRange/ancpIpRange -mss $v }
  method _g_./ancpRange/ancpIpRange/mss {t} { $self _cget_relative ./ancpRange/ancpIpRange -mss }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_mss }
  
  option -ancp_range_ancp_ip_range_object_id \
    -configuremethod _c_./ancpRange/ancpIpRange/objectId \
    -cgetmethod _g_./ancpRange/ancpIpRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpIpRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpIpRange -object_id $v }
  method _g_./ancpRange/ancpIpRange/objectId {t} { $self _cget_relative ./ancpRange/ancpIpRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_object_id }
  
  option -ancp_range_ancp_ip_range_prefix \
    -configuremethod _c_./ancpRange/ancpIpRange/prefix \
    -cgetmethod _g_./ancpRange/ancpIpRange/prefix \
    -readonly false
  method _c_./ancpRange/ancpIpRange/prefix {t v} { $self _configure_relative ./ancpRange/ancpIpRange -prefix $v }
  method _g_./ancpRange/ancpIpRange/prefix {t} { $self _cget_relative ./ancpRange/ancpIpRange -prefix }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_prefix }
  
  option -ancp_range_ancp_ip_range_auto_mac_generation \
    -configuremethod _c_./ancpRange/ancpIpRange/autoMacGeneration \
    -cgetmethod _g_./ancpRange/ancpIpRange/autoMacGeneration \
    -readonly false
  method _c_./ancpRange/ancpIpRange/autoMacGeneration {t v} { $self _configure_relative ./ancpRange/ancpIpRange -auto_mac_generation $v }
  method _g_./ancpRange/ancpIpRange/autoMacGeneration {t} { $self _cget_relative ./ancpRange/ancpIpRange -auto_mac_generation }
  option -ancp_range_ancp_pvc_range_vpi_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment_step }
  
  option -ancp_range_ancp_pvc_range_vci_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vciUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_unique_count }
  
  option -ancp_range_ancp_pvc_range_vci_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment_step }
  
  option -ancp_range_ancp_pvc_range_enabled \
    -configuremethod _c_./ancpRange/ancpPvcRange/enabled \
    -cgetmethod _g_./ancpRange/ancpPvcRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -enabled $v }
  method _g_./ancpRange/ancpPvcRange/enabled {t} { $self _cget_relative ./ancpRange/ancpPvcRange -enabled }
  option -ancp_range_ancp_pvc_range_vpi_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vpiFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_first_id }
  
  option -ancp_range_ancp_pvc_range_vpi_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment }
  
  option -ancp_range_ancp_pvc_range_vci_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vciFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_first_id }
  
  option -ancp_range_ancp_pvc_range_vci_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment }
  
  option -ancp_range_ancp_pvc_range_name \
    -configuremethod _c_./ancpRange/ancpPvcRange/name \
    -cgetmethod _g_./ancpRange/ancpPvcRange/name \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/name {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -name $v }
  method _g_./ancpRange/ancpPvcRange/name {t} { $self _cget_relative ./ancpRange/ancpPvcRange -name }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_name }
  
  option -ancp_range_ancp_pvc_range_increment_mode \
    -configuremethod _c_./ancpRange/ancpPvcRange/incrementMode \
    -cgetmethod _g_./ancpRange/ancpPvcRange/incrementMode \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/incrementMode {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -increment_mode $v }
  method _g_./ancpRange/ancpPvcRange/incrementMode {t} { $self _cget_relative ./ancpRange/ancpPvcRange -increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_increment_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_increment_mode }
  
  option -ancp_range_ancp_pvc_range_object_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/objectId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -object_id $v }
  method _g_./ancpRange/ancpPvcRange/objectId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_object_id }
  
  option -ancp_range_ancp_pvc_range_vpi_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vpiUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerFirstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerFirstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerFirstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_first_id $v }
  method _g_./ancpRange/ancpVlanRange/innerFirstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_first_id }
  
  option -ancp_range_ancp_vlan_range_inner_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrement \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrement \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrement {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrement {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment }
  
  option -ancp_range_ancp_vlan_range_enabled \
    -configuremethod _c_./ancpRange/ancpVlanRange/enabled \
    -cgetmethod _g_./ancpRange/ancpVlanRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -enabled $v }
  method _g_./ancpRange/ancpVlanRange/enabled {t} { $self _cget_relative ./ancpRange/ancpVlanRange -enabled }
  option -ancp_range_ancp_vlan_range_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/uniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/uniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/uniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -unique_count $v }
  method _g_./ancpRange/ancpVlanRange/uniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_unique_count }
  
  option -ancp_range_ancp_vlan_range_name \
    -configuremethod _c_./ancpRange/ancpVlanRange/name \
    -cgetmethod _g_./ancpRange/ancpVlanRange/name \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/name {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -name $v }
  method _g_./ancpRange/ancpVlanRange/name {t} { $self _cget_relative ./ancpRange/ancpVlanRange -name }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_name }
  
  option -ancp_range_ancp_vlan_range_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/incrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/incrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/incrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment_step $v }
  method _g_./ancpRange/ancpVlanRange/incrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment_step }
  
  option -ancp_range_ancp_vlan_range_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/tpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/tpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/tpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -tpid $v }
  method _g_./ancpRange/ancpVlanRange/tpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_tpid }
  
  option -ancp_range_ancp_vlan_range_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/priority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/priority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/priority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -priority $v }
  method _g_./ancpRange/ancpVlanRange/priority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_priority }
  
  option -ancp_range_ancp_vlan_range_inner_enable \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerEnable \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerEnable \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerEnable {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_enable $v }
  method _g_./ancpRange/ancpVlanRange/innerEnable {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_enable }
  option -ancp_range_ancp_vlan_range_object_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/objectId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -object_id $v }
  method _g_./ancpRange/ancpVlanRange/objectId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_object_id }
  
  option -ancp_range_ancp_vlan_range_inner_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerUniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_unique_count $v }
  method _g_./ancpRange/ancpVlanRange/innerUniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerTpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerTpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerTpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_tpid $v }
  method _g_./ancpRange/ancpVlanRange/innerTpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_tpid }
  
  option -ancp_range_ancp_vlan_range_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/firstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/firstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/firstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -first_id $v }
  method _g_./ancpRange/ancpVlanRange/firstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_first_id }
  
  option -ancp_range_ancp_vlan_range_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/increment \
    -cgetmethod _g_./ancpRange/ancpVlanRange/increment \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/increment {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment $v }
  method _g_./ancpRange/ancpVlanRange/increment {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment }
  
  option -ancp_range_ancp_vlan_range_inner_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment_step $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment_step }
  
  option -ancp_range_ancp_vlan_range_id_incr_mode \
    -configuremethod _c_./ancpRange/ancpVlanRange/idIncrMode \
    -cgetmethod _g_./ancpRange/ancpVlanRange/idIncrMode \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/idIncrMode {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -id_incr_mode $v }
  method _g_./ancpRange/ancpVlanRange/idIncrMode {t} { $self _cget_relative ./ancpRange/ancpVlanRange -id_incr_mode }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_id_incr_mode }
  
  option -ancp_range_ancp_vlan_range_inner_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerPriority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerPriority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerPriority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_priority $v }
  method _g_./ancpRange/ancpVlanRange/innerPriority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_priority }
  
  option -ancp_range_ancp_vlan_range_vlan_id_info \
    -configuremethod _c_./ancpRange/ancpVlanRange/vlanIdInfo \
    -cgetmethod _g_./ancpRange/ancpVlanRange/vlanIdInfo \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/vlanIdInfo {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -vlan_id_info $v }
  method _g_./ancpRange/ancpVlanRange/vlanIdInfo {t} { $self _cget_relative ./ancpRange/ancpVlanRange -vlan_id_info }
  option -ancp_range_ancp_mac_range_object_id \
    -configuremethod _c_./ancpRange/ancpMacRange/objectId \
    -cgetmethod _g_./ancpRange/ancpMacRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpMacRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpMacRange -object_id $v }
  method _g_./ancpRange/ancpMacRange/objectId {t} { $self _cget_relative ./ancpRange/ancpMacRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_object_id }
  
  option -ancp_range_ancp_mac_range_increment_by \
    -configuremethod _c_./ancpRange/ancpMacRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpMacRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpMacRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpMacRange -increment_by $v }
  method _g_./ancpRange/ancpMacRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpMacRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_increment_by }
  
  option -ancp_range_ancp_mac_range_name \
    -configuremethod _c_./ancpRange/ancpMacRange/name \
    -cgetmethod _g_./ancpRange/ancpMacRange/name \
    -readonly false
  method _c_./ancpRange/ancpMacRange/name {t v} { $self _configure_relative ./ancpRange/ancpMacRange -name $v }
  method _g_./ancpRange/ancpMacRange/name {t} { $self _cget_relative ./ancpRange/ancpMacRange -name }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_name }
  
  option -ancp_range_ancp_mac_range_count \
    -configuremethod _c_./ancpRange/ancpMacRange/count \
    -cgetmethod _g_./ancpRange/ancpMacRange/count \
    -readonly false
  method _c_./ancpRange/ancpMacRange/count {t v} { $self _configure_relative ./ancpRange/ancpMacRange -count $v }
  method _g_./ancpRange/ancpMacRange/count {t} { $self _cget_relative ./ancpRange/ancpMacRange -count }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_count }
  
  option -ancp_range_ancp_mac_range_mac \
    -configuremethod _c_./ancpRange/ancpMacRange/mac \
    -cgetmethod _g_./ancpRange/ancpMacRange/mac \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mac {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mac $v }
  method _g_./ancpRange/ancpMacRange/mac {t} { $self _cget_relative ./ancpRange/ancpMacRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mac }
  
  option -ancp_range_ancp_mac_range_mtu \
    -configuremethod _c_./ancpRange/ancpMacRange/mtu \
    -cgetmethod _g_./ancpRange/ancpMacRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mtu $v }
  method _g_./ancpRange/ancpMacRange/mtu {t} { $self _cget_relative ./ancpRange/ancpMacRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mtu }
  
  option -ancp_range_ancp_mac_range_enabled \
    -configuremethod _c_./ancpRange/ancpMacRange/enabled \
    -cgetmethod _g_./ancpRange/ancpMacRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpMacRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpMacRange -enabled $v }
  method _g_./ancpRange/ancpMacRange/enabled {t} { $self _cget_relative ./ancpRange/ancpMacRange -enabled }
  option -ancp_range_ancp_atm_range_object_id \
    -configuremethod _c_./ancpRange/ancpAtmRange/objectId \
    -cgetmethod _g_./ancpRange/ancpAtmRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -object_id $v }
  method _g_./ancpRange/ancpAtmRange/objectId {t} { $self _cget_relative ./ancpRange/ancpAtmRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_object_id }
  
  option -ancp_range_ancp_atm_range_increment_by \
    -configuremethod _c_./ancpRange/ancpAtmRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpAtmRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -increment_by $v }
  method _g_./ancpRange/ancpAtmRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpAtmRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_increment_by }
  
  option -ancp_range_ancp_atm_range_name \
    -configuremethod _c_./ancpRange/ancpAtmRange/name \
    -cgetmethod _g_./ancpRange/ancpAtmRange/name \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/name {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -name $v }
  method _g_./ancpRange/ancpAtmRange/name {t} { $self _cget_relative ./ancpRange/ancpAtmRange -name }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_name }
  
  option -ancp_range_ancp_atm_range_count \
    -configuremethod _c_./ancpRange/ancpAtmRange/count \
    -cgetmethod _g_./ancpRange/ancpAtmRange/count \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/count {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -count $v }
  method _g_./ancpRange/ancpAtmRange/count {t} { $self _cget_relative ./ancpRange/ancpAtmRange -count }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_count }
  
  option -ancp_range_ancp_atm_range_mac \
    -configuremethod _c_./ancpRange/ancpAtmRange/mac \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mac \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mac {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mac $v }
  method _g_./ancpRange/ancpAtmRange/mac {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mac }
  
  option -ancp_range_ancp_atm_range_mtu \
    -configuremethod _c_./ancpRange/ancpAtmRange/mtu \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mtu $v }
  method _g_./ancpRange/ancpAtmRange/mtu {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mtu }
  
  option -ancp_range_ancp_atm_range_encapsulation \
    -configuremethod _c_./ancpRange/ancpAtmRange/encapsulation \
    -cgetmethod _g_./ancpRange/ancpAtmRange/encapsulation \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/encapsulation {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -encapsulation $v }
  method _g_./ancpRange/ancpAtmRange/encapsulation {t} { $self _cget_relative ./ancpRange/ancpAtmRange -encapsulation }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_encapsulation {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_encapsulation }
  
  option -ancp_range_ancp_atm_range_enabled \
    -configuremethod _c_./ancpRange/ancpAtmRange/enabled \
    -cgetmethod _g_./ancpRange/ancpAtmRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -enabled $v }
  method _g_./ancpRange/ancpAtmRange/enabled {t} { $self _cget_relative ./ancpRange/ancpAtmRange -enabled }
  option -twamp_control_range_object_id \
    -configuremethod _c_./twampControlRange/objectId \
    -cgetmethod _g_./twampControlRange/objectId \
    -readonly false
  method _c_./twampControlRange/objectId {t v} { $self _configure_relative ./twampControlRange -object_id $v }
  method _g_./twampControlRange/objectId {t} { $self _cget_relative ./twampControlRange -object_id }
  # multiplier 
  method _m_twamp_control_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_object_id }
  
  option -twamp_control_range_name \
    -configuremethod _c_./twampControlRange/name \
    -cgetmethod _g_./twampControlRange/name \
    -readonly false
  method _c_./twampControlRange/name {t v} { $self _configure_relative ./twampControlRange -name $v }
  method _g_./twampControlRange/name {t} { $self _cget_relative ./twampControlRange -name }
  # multiplier 
  method _m_twamp_control_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_name }
  
  option -twamp_control_range_mode \
    -configuremethod _c_./twampControlRange/mode \
    -cgetmethod _g_./twampControlRange/mode \
    -readonly false
  method _c_./twampControlRange/mode {t v} { $self _configure_relative ./twampControlRange -mode $v }
  method _g_./twampControlRange/mode {t} { $self _cget_relative ./twampControlRange -mode }
  # multiplier 
  method _m_twamp_control_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_mode }
  
  option -twamp_control_range_control_server_port \
    -configuremethod _c_./twampControlRange/controlServerPort \
    -cgetmethod _g_./twampControlRange/controlServerPort \
    -readonly false
  method _c_./twampControlRange/controlServerPort {t v} { $self _configure_relative ./twampControlRange -control_server_port $v }
  method _g_./twampControlRange/controlServerPort {t} { $self _cget_relative ./twampControlRange -control_server_port }
  # multiplier 
  method _m_twamp_control_range_control_server_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_control_server_port }
  
  option -twamp_control_range_count \
    -configuremethod _c_./twampControlRange/count \
    -cgetmethod _g_./twampControlRange/count \
    -readonly false
  method _c_./twampControlRange/count {t v} { $self _configure_relative ./twampControlRange -count $v }
  method _g_./twampControlRange/count {t} { $self _cget_relative ./twampControlRange -count }
  # multiplier 
  method _m_twamp_control_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_count }
  
  option -twamp_control_range_secret \
    -configuremethod _c_./twampControlRange/secret \
    -cgetmethod _g_./twampControlRange/secret \
    -readonly false
  method _c_./twampControlRange/secret {t v} { $self _configure_relative ./twampControlRange -secret $v }
  method _g_./twampControlRange/secret {t} { $self _cget_relative ./twampControlRange -secret }
  # multiplier 
  method _m_twamp_control_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_secret }
  
  option -twamp_control_range_key_id \
    -configuremethod _c_./twampControlRange/keyId \
    -cgetmethod _g_./twampControlRange/keyId \
    -readonly false
  method _c_./twampControlRange/keyId {t v} { $self _configure_relative ./twampControlRange -key_id $v }
  method _g_./twampControlRange/keyId {t} { $self _cget_relative ./twampControlRange -key_id }
  # multiplier 
  method _m_twamp_control_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_key_id }
  
  option -twamp_control_range_control_server_ip_increment \
    -configuremethod _c_./twampControlRange/controlServerIpIncrement \
    -cgetmethod _g_./twampControlRange/controlServerIpIncrement \
    -readonly false
  method _c_./twampControlRange/controlServerIpIncrement {t v} { $self _configure_relative ./twampControlRange -control_server_ip_increment $v }
  method _g_./twampControlRange/controlServerIpIncrement {t} { $self _cget_relative ./twampControlRange -control_server_ip_increment }
  # multiplier 
  method _m_twamp_control_range_control_server_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_server_ip_increment }
  
  option -twamp_control_range_enabled \
    -configuremethod _c_./twampControlRange/enabled \
    -cgetmethod _g_./twampControlRange/enabled \
    -readonly false
  method _c_./twampControlRange/enabled {t v} { $self _configure_relative ./twampControlRange -enabled $v }
  method _g_./twampControlRange/enabled {t} { $self _cget_relative ./twampControlRange -enabled }
  option -twamp_control_range_control_start_server_ip \
    -configuremethod _c_./twampControlRange/controlStartServerIp \
    -cgetmethod _g_./twampControlRange/controlStartServerIp \
    -readonly false
  method _c_./twampControlRange/controlStartServerIp {t v} { $self _configure_relative ./twampControlRange -control_start_server_ip $v }
  method _g_./twampControlRange/controlStartServerIp {t} { $self _cget_relative ./twampControlRange -control_start_server_ip }
  # multiplier 
  method _m_twamp_control_range_control_start_server_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_start_server_ip }
  
  option -igmp_mld_range_meshing_mode \
    -configuremethod _c_./igmpMldRange/meshingMode \
    -cgetmethod _g_./igmpMldRange/meshingMode \
    -readonly false
  method _c_./igmpMldRange/meshingMode {t v} { $self _configure_relative ./igmpMldRange -meshing_mode $v }
  method _g_./igmpMldRange/meshingMode {t} { $self _cget_relative ./igmpMldRange -meshing_mode }
  # multiplier 
  method _m_igmp_mld_range_meshing_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_meshing_mode }
  
  option -igmp_mld_range_router_alert \
    -configuremethod _c_./igmpMldRange/routerAlert \
    -cgetmethod _g_./igmpMldRange/routerAlert \
    -readonly false
  method _c_./igmpMldRange/routerAlert {t v} { $self _configure_relative ./igmpMldRange -router_alert $v }
  method _g_./igmpMldRange/routerAlert {t} { $self _cget_relative ./igmpMldRange -router_alert }
  option -igmp_mld_range_enabled \
    -configuremethod _c_./igmpMldRange/enabled \
    -cgetmethod _g_./igmpMldRange/enabled \
    -readonly false
  method _c_./igmpMldRange/enabled {t v} { $self _configure_relative ./igmpMldRange -enabled $v }
  method _g_./igmpMldRange/enabled {t} { $self _cget_relative ./igmpMldRange -enabled }
  option -igmp_mld_range_report_frequency \
    -configuremethod _c_./igmpMldRange/reportFrequency \
    -cgetmethod _g_./igmpMldRange/reportFrequency \
    -readonly false
  method _c_./igmpMldRange/reportFrequency {t v} { $self _configure_relative ./igmpMldRange -report_frequency $v }
  method _g_./igmpMldRange/reportFrequency {t} { $self _cget_relative ./igmpMldRange -report_frequency }
  # multiplier 
  method _m_igmp_mld_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_report_frequency }
  
  option -igmp_mld_range_unsolicited_response_mode \
    -configuremethod _c_./igmpMldRange/unsolicitedResponseMode \
    -cgetmethod _g_./igmpMldRange/unsolicitedResponseMode \
    -readonly false
  method _c_./igmpMldRange/unsolicitedResponseMode {t v} { $self _configure_relative ./igmpMldRange -unsolicited_response_mode $v }
  method _g_./igmpMldRange/unsolicitedResponseMode {t} { $self _cget_relative ./igmpMldRange -unsolicited_response_mode }
  option -igmp_mld_range_general_query_response_mode \
    -configuremethod _c_./igmpMldRange/generalQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/generalQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/generalQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -general_query_response_mode $v }
  method _g_./igmpMldRange/generalQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -general_query_response_mode }
  option -igmp_mld_range_specific_query_response_mode \
    -configuremethod _c_./igmpMldRange/specificQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/specificQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/specificQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -specific_query_response_mode $v }
  method _g_./igmpMldRange/specificQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -specific_query_response_mode }
  option -igmp_mld_range_name \
    -configuremethod _c_./igmpMldRange/name \
    -cgetmethod _g_./igmpMldRange/name \
    -readonly false
  method _c_./igmpMldRange/name {t v} { $self _configure_relative ./igmpMldRange -name $v }
  method _g_./igmpMldRange/name {t} { $self _cget_relative ./igmpMldRange -name }
  # multiplier 
  method _m_igmp_mld_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_name }
  
  option -igmp_mld_range_join_leave_multiplier \
    -configuremethod _c_./igmpMldRange/joinLeaveMultiplier \
    -cgetmethod _g_./igmpMldRange/joinLeaveMultiplier \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMultiplier {t v} { $self _configure_relative ./igmpMldRange -join_leave_multiplier $v }
  method _g_./igmpMldRange/joinLeaveMultiplier {t} { $self _cget_relative ./igmpMldRange -join_leave_multiplier }
  # multiplier 
  method _m_igmp_mld_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_join_leave_multiplier }
  
  option -igmp_mld_range_object_id \
    -configuremethod _c_./igmpMldRange/objectId \
    -cgetmethod _g_./igmpMldRange/objectId \
    -readonly false
  method _c_./igmpMldRange/objectId {t v} { $self _configure_relative ./igmpMldRange -object_id $v }
  method _g_./igmpMldRange/objectId {t} { $self _cget_relative ./igmpMldRange -object_id }
  # multiplier 
  method _m_igmp_mld_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_object_id }
  
  option -igmp_mld_range_version \
    -configuremethod _c_./igmpMldRange/version \
    -cgetmethod _g_./igmpMldRange/version \
    -readonly false
  method _c_./igmpMldRange/version {t v} { $self _configure_relative ./igmpMldRange -version $v }
  method _g_./igmpMldRange/version {t} { $self _cget_relative ./igmpMldRange -version }
  # multiplier 
  method _m_igmp_mld_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_version }
  
  option -igmp_mld_range_immediate_response \
    -configuremethod _c_./igmpMldRange/immediateResponse \
    -cgetmethod _g_./igmpMldRange/immediateResponse \
    -readonly false
  method _c_./igmpMldRange/immediateResponse {t v} { $self _configure_relative ./igmpMldRange -immediate_response $v }
  method _g_./igmpMldRange/immediateResponse {t} { $self _cget_relative ./igmpMldRange -immediate_response }
  option -igmp_mld_range_multicast_group_range \
    -configuremethod _c_./igmpMldRange/multicastGroupRange \
    -cgetmethod _g_./igmpMldRange/multicastGroupRange \
    -readonly false
  method _c_./igmpMldRange/multicastGroupRange {t v} { $self _configure_relative ./igmpMldRange -multicast_group_range $v }
  method _g_./igmpMldRange/multicastGroupRange {t} { $self _cget_relative ./igmpMldRange -multicast_group_range }
  option -igmp_mld_range_join_leave_multicast_group_range \
    -configuremethod _c_./igmpMldRange/joinLeaveMulticastGroupRange \
    -cgetmethod _g_./igmpMldRange/joinLeaveMulticastGroupRange \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMulticastGroupRange {t v} { $self _configure_relative ./igmpMldRange -join_leave_multicast_group_range $v }
  method _g_./igmpMldRange/joinLeaveMulticastGroupRange {t} { $self _cget_relative ./igmpMldRange -join_leave_multicast_group_range }
  option -iptv_range_inter_stb_start_delay \
    -configuremethod _c_./iptvRange/interStbStartDelay \
    -cgetmethod _g_./iptvRange/interStbStartDelay \
    -readonly false
  method _c_./iptvRange/interStbStartDelay {t v} { $self _configure_relative ./iptvRange -inter_stb_start_delay $v }
  method _g_./iptvRange/interStbStartDelay {t} { $self _cget_relative ./iptvRange -inter_stb_start_delay }
  # multiplier 
  method _m_iptv_range_inter_stb_start_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_inter_stb_start_delay }
  
  option -iptv_range_router_alert \
    -configuremethod _c_./iptvRange/routerAlert \
    -cgetmethod _g_./iptvRange/routerAlert \
    -readonly false
  method _c_./iptvRange/routerAlert {t v} { $self _configure_relative ./iptvRange -router_alert $v }
  method _g_./iptvRange/routerAlert {t} { $self _cget_relative ./iptvRange -router_alert }
  option -iptv_range_viewing_profile \
    -configuremethod _c_./iptvRange/viewingProfile \
    -cgetmethod _g_./iptvRange/viewingProfile \
    -readonly false
  method _c_./iptvRange/viewingProfile {t v} { $self _configure_relative ./iptvRange -viewing_profile $v }
  method _g_./iptvRange/viewingProfile {t} { $self _cget_relative ./iptvRange -viewing_profile }
  option -iptv_range_leave_latency_threshold \
    -configuremethod _c_./iptvRange/leaveLatencyThreshold \
    -cgetmethod _g_./iptvRange/leaveLatencyThreshold \
    -readonly false
  method _c_./iptvRange/leaveLatencyThreshold {t v} { $self _configure_relative ./iptvRange -leave_latency_threshold $v }
  method _g_./iptvRange/leaveLatencyThreshold {t} { $self _cget_relative ./iptvRange -leave_latency_threshold }
  # multiplier 
  method _m_iptv_range_leave_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_leave_latency_threshold }
  
  option -iptv_range_enabled \
    -configuremethod _c_./iptvRange/enabled \
    -cgetmethod _g_./iptvRange/enabled \
    -readonly false
  method _c_./iptvRange/enabled {t v} { $self _configure_relative ./iptvRange -enabled $v }
  method _g_./iptvRange/enabled {t} { $self _cget_relative ./iptvRange -enabled }
  option -iptv_range_join_latency_threshold \
    -configuremethod _c_./iptvRange/joinLatencyThreshold \
    -cgetmethod _g_./iptvRange/joinLatencyThreshold \
    -readonly false
  method _c_./iptvRange/joinLatencyThreshold {t v} { $self _configure_relative ./iptvRange -join_latency_threshold $v }
  method _g_./iptvRange/joinLatencyThreshold {t} { $self _cget_relative ./iptvRange -join_latency_threshold }
  # multiplier 
  method _m_iptv_range_join_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_latency_threshold }
  
  option -iptv_range_report_frequency \
    -configuremethod _c_./iptvRange/reportFrequency \
    -cgetmethod _g_./iptvRange/reportFrequency \
    -readonly false
  method _c_./iptvRange/reportFrequency {t v} { $self _configure_relative ./iptvRange -report_frequency $v }
  method _g_./iptvRange/reportFrequency {t} { $self _cget_relative ./iptvRange -report_frequency }
  # multiplier 
  method _m_iptv_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_report_frequency }
  
  option -iptv_range_unsolicited_response_mode \
    -configuremethod _c_./iptvRange/unsolicitedResponseMode \
    -cgetmethod _g_./iptvRange/unsolicitedResponseMode \
    -readonly false
  method _c_./iptvRange/unsolicitedResponseMode {t v} { $self _configure_relative ./iptvRange -unsolicited_response_mode $v }
  method _g_./iptvRange/unsolicitedResponseMode {t} { $self _cget_relative ./iptvRange -unsolicited_response_mode }
  option -iptv_range_general_query_response_mode \
    -configuremethod _c_./iptvRange/generalQueryResponseMode \
    -cgetmethod _g_./iptvRange/generalQueryResponseMode \
    -readonly false
  method _c_./iptvRange/generalQueryResponseMode {t v} { $self _configure_relative ./iptvRange -general_query_response_mode $v }
  method _g_./iptvRange/generalQueryResponseMode {t} { $self _cget_relative ./iptvRange -general_query_response_mode }
  option -iptv_range_specific_query_response_mode \
    -configuremethod _c_./iptvRange/specificQueryResponseMode \
    -cgetmethod _g_./iptvRange/specificQueryResponseMode \
    -readonly false
  method _c_./iptvRange/specificQueryResponseMode {t v} { $self _configure_relative ./iptvRange -specific_query_response_mode $v }
  method _g_./iptvRange/specificQueryResponseMode {t} { $self _cget_relative ./iptvRange -specific_query_response_mode }
  option -iptv_range_name \
    -configuremethod _c_./iptvRange/name \
    -cgetmethod _g_./iptvRange/name \
    -readonly false
  method _c_./iptvRange/name {t v} { $self _configure_relative ./iptvRange -name $v }
  method _g_./iptvRange/name {t} { $self _cget_relative ./iptvRange -name }
  # multiplier 
  method _m_iptv_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_name }
  
  option -iptv_range_log_failure_timestamps \
    -configuremethod _c_./iptvRange/logFailureTimestamps \
    -cgetmethod _g_./iptvRange/logFailureTimestamps \
    -readonly false
  method _c_./iptvRange/logFailureTimestamps {t v} { $self _configure_relative ./iptvRange -log_failure_timestamps $v }
  method _g_./iptvRange/logFailureTimestamps {t} { $self _cget_relative ./iptvRange -log_failure_timestamps }
  option -iptv_range_object_id \
    -configuremethod _c_./iptvRange/objectId \
    -cgetmethod _g_./iptvRange/objectId \
    -readonly false
  method _c_./iptvRange/objectId {t v} { $self _configure_relative ./iptvRange -object_id $v }
  method _g_./iptvRange/objectId {t} { $self _cget_relative ./iptvRange -object_id }
  # multiplier 
  method _m_iptv_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_object_id }
  
  option -iptv_range_join_leave_multiplier \
    -configuremethod _c_./iptvRange/joinLeaveMultiplier \
    -cgetmethod _g_./iptvRange/joinLeaveMultiplier \
    -readonly false
  method _c_./iptvRange/joinLeaveMultiplier {t v} { $self _configure_relative ./iptvRange -join_leave_multiplier $v }
  method _g_./iptvRange/joinLeaveMultiplier {t} { $self _cget_relative ./iptvRange -join_leave_multiplier }
  # multiplier 
  method _m_iptv_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_leave_multiplier }
  
  option -iptv_range_stb_leave_join_delay \
    -configuremethod _c_./iptvRange/stbLeaveJoinDelay \
    -cgetmethod _g_./iptvRange/stbLeaveJoinDelay \
    -readonly false
  method _c_./iptvRange/stbLeaveJoinDelay {t v} { $self _configure_relative ./iptvRange -stb_leave_join_delay $v }
  method _g_./iptvRange/stbLeaveJoinDelay {t} { $self _cget_relative ./iptvRange -stb_leave_join_delay }
  # multiplier 
  method _m_iptv_range_stb_leave_join_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_stb_leave_join_delay }
  
  option -iptv_range_version \
    -configuremethod _c_./iptvRange/version \
    -cgetmethod _g_./iptvRange/version \
    -readonly false
  method _c_./iptvRange/version {t v} { $self _configure_relative ./iptvRange -version $v }
  method _g_./iptvRange/version {t} { $self _cget_relative ./iptvRange -version }
  # multiplier 
  method _m_iptv_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_version }
  
  option -iptv_range_immediate_response \
    -configuremethod _c_./iptvRange/immediateResponse \
    -cgetmethod _g_./iptvRange/immediateResponse \
    -readonly false
  method _c_./iptvRange/immediateResponse {t v} { $self _configure_relative ./iptvRange -immediate_response $v }
  method _g_./iptvRange/immediateResponse {t} { $self _cget_relative ./iptvRange -immediate_response }
  option -iptv_range_iptv_channels \
    -configuremethod _c_./iptvRange/iptvChannels \
    -cgetmethod _g_./iptvRange/iptvChannels \
    -readonly false
  method _c_./iptvRange/iptvChannels {t v} { $self _configure_relative ./iptvRange -iptv_channels $v }
  method _g_./iptvRange/iptvChannels {t} { $self _cget_relative ./iptvRange -iptv_channels }
  option -ip_range_count \
    -configuremethod _c_./ipRange/count \
    -cgetmethod _g_./ipRange/count \
    -readonly false
  method _c_./ipRange/count {t v} { $self _configure_relative ./ipRange -count $v }
  method _g_./ipRange/count {t} { $self _cget_relative ./ipRange -count }
  # multiplier 
  method _m_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_count }
  
  option -ip_range_ip_type \
    -configuremethod _c_./ipRange/ipType \
    -cgetmethod _g_./ipRange/ipType \
    -readonly false
  method _c_./ipRange/ipType {t v} { $self _configure_relative ./ipRange -ip_type $v }
  method _g_./ipRange/ipType {t} { $self _cget_relative ./ipRange -ip_type }
  # multiplier 
  method _m_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_type }
  
  option -ip_range_enabled \
    -configuremethod _c_./ipRange/enabled \
    -cgetmethod _g_./ipRange/enabled \
    -readonly false
  method _c_./ipRange/enabled {t v} { $self _configure_relative ./ipRange -enabled $v }
  method _g_./ipRange/enabled {t} { $self _cget_relative ./ipRange -enabled }
  option -ip_range_gateway_increment_mode \
    -configuremethod _c_./ipRange/gatewayIncrementMode \
    -cgetmethod _g_./ipRange/gatewayIncrementMode \
    -readonly false
  method _c_./ipRange/gatewayIncrementMode {t v} { $self _configure_relative ./ipRange -gateway_increment_mode $v }
  method _g_./ipRange/gatewayIncrementMode {t} { $self _cget_relative ./ipRange -gateway_increment_mode }
  # multiplier 
  method _m_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment_mode }
  
  option -ip_range_enable_gateway_arp \
    -configuremethod _c_./ipRange/enableGatewayArp \
    -cgetmethod _g_./ipRange/enableGatewayArp \
    -readonly false
  method _c_./ipRange/enableGatewayArp {t v} { $self _configure_relative ./ipRange -enable_gateway_arp $v }
  method _g_./ipRange/enableGatewayArp {t} { $self _cget_relative ./ipRange -enable_gateway_arp }
  option -ip_range_ip_address \
    -configuremethod _c_./ipRange/ipAddress \
    -cgetmethod _g_./ipRange/ipAddress \
    -readonly false
  method _c_./ipRange/ipAddress {t v} { $self _configure_relative ./ipRange -ip_address $v }
  method _g_./ipRange/ipAddress {t} { $self _cget_relative ./ipRange -ip_address }
  # multiplier 
  method _m_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_address }
  
  option -ip_range_gateway_increment \
    -configuremethod _c_./ipRange/gatewayIncrement \
    -cgetmethod _g_./ipRange/gatewayIncrement \
    -readonly false
  method _c_./ipRange/gatewayIncrement {t v} { $self _configure_relative ./ipRange -gateway_increment $v }
  method _g_./ipRange/gatewayIncrement {t} { $self _cget_relative ./ipRange -gateway_increment }
  # multiplier 
  method _m_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment }
  
  option -ip_range_increment_by \
    -configuremethod _c_./ipRange/incrementBy \
    -cgetmethod _g_./ipRange/incrementBy \
    -readonly false
  method _c_./ipRange/incrementBy {t v} { $self _configure_relative ./ipRange -increment_by $v }
  method _g_./ipRange/incrementBy {t} { $self _cget_relative ./ipRange -increment_by }
  # multiplier 
  method _m_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_increment_by }
  
  option -ip_range_gateway_address \
    -configuremethod _c_./ipRange/gatewayAddress \
    -cgetmethod _g_./ipRange/gatewayAddress \
    -readonly false
  method _c_./ipRange/gatewayAddress {t v} { $self _configure_relative ./ipRange -gateway_address $v }
  method _g_./ipRange/gatewayAddress {t} { $self _cget_relative ./ipRange -gateway_address }
  # multiplier 
  method _m_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_address }
  
  option -ip_range_name \
    -configuremethod _c_./ipRange/name \
    -cgetmethod _g_./ipRange/name \
    -readonly false
  method _c_./ipRange/name {t v} { $self _configure_relative ./ipRange -name $v }
  method _g_./ipRange/name {t} { $self _cget_relative ./ipRange -name }
  # multiplier 
  method _m_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_name }
  
  option -ip_range_mss \
    -configuremethod _c_./ipRange/mss \
    -cgetmethod _g_./ipRange/mss \
    -readonly false
  method _c_./ipRange/mss {t v} { $self _configure_relative ./ipRange -mss $v }
  method _g_./ipRange/mss {t} { $self _cget_relative ./ipRange -mss }
  # multiplier 
  method _m_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_mss }
  
  option -ip_range_object_id \
    -configuremethod _c_./ipRange/objectId \
    -cgetmethod _g_./ipRange/objectId \
    -readonly false
  method _c_./ipRange/objectId {t v} { $self _configure_relative ./ipRange -object_id $v }
  method _g_./ipRange/objectId {t} { $self _cget_relative ./ipRange -object_id }
  # multiplier 
  method _m_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_object_id }
  
  option -ip_range_prefix \
    -configuremethod _c_./ipRange/prefix \
    -cgetmethod _g_./ipRange/prefix \
    -readonly false
  method _c_./ipRange/prefix {t v} { $self _configure_relative ./ipRange -prefix $v }
  method _g_./ipRange/prefix {t} { $self _cget_relative ./ipRange -prefix }
  # multiplier 
  method _m_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_prefix }
  
  option -ip_range_auto_mac_generation \
    -configuremethod _c_./ipRange/autoMacGeneration \
    -cgetmethod _g_./ipRange/autoMacGeneration \
    -readonly false
  method _c_./ipRange/autoMacGeneration {t v} { $self _configure_relative ./ipRange -auto_mac_generation $v }
  method _g_./ipRange/autoMacGeneration {t} { $self _cget_relative ./ipRange -auto_mac_generation }
  option -amt_range_use_relay_discovery \
    -configuremethod _c_./amtRange/useRelayDiscovery \
    -cgetmethod _g_./amtRange/useRelayDiscovery \
    -readonly false
  method _c_./amtRange/useRelayDiscovery {t v} { $self _configure_relative ./amtRange -use_relay_discovery $v }
  method _g_./amtRange/useRelayDiscovery {t} { $self _cget_relative ./amtRange -use_relay_discovery }
  option -amt_range_amt_unicast_ip \
    -configuremethod _c_./amtRange/amtUnicastIp \
    -cgetmethod _g_./amtRange/amtUnicastIp \
    -readonly false
  method _c_./amtRange/amtUnicastIp {t v} { $self _configure_relative ./amtRange -amt_unicast_ip $v }
  method _g_./amtRange/amtUnicastIp {t} { $self _cget_relative ./amtRange -amt_unicast_ip }
  # multiplier 
  method _m_amt_range_amt_unicast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip }
  
  option -amt_range_enabled \
    -configuremethod _c_./amtRange/enabled \
    -cgetmethod _g_./amtRange/enabled \
    -readonly false
  method _c_./amtRange/enabled {t v} { $self _configure_relative ./amtRange -enabled $v }
  method _g_./amtRange/enabled {t} { $self _cget_relative ./amtRange -enabled }
  option -amt_range_query_timer_interval \
    -configuremethod _c_./amtRange/queryTimerInterval \
    -cgetmethod _g_./amtRange/queryTimerInterval \
    -readonly false
  method _c_./amtRange/queryTimerInterval {t v} { $self _configure_relative ./amtRange -query_timer_interval $v }
  method _g_./amtRange/queryTimerInterval {t} { $self _cget_relative ./amtRange -query_timer_interval }
  # multiplier 
  method _m_amt_range_query_timer_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_query_timer_interval }
  
  option -amt_range_amt_udp_src_port_increment \
    -configuremethod _c_./amtRange/amtUdpSrcPortIncrement \
    -cgetmethod _g_./amtRange/amtUdpSrcPortIncrement \
    -readonly false
  method _c_./amtRange/amtUdpSrcPortIncrement {t v} { $self _configure_relative ./amtRange -amt_udp_src_port_increment $v }
  method _g_./amtRange/amtUdpSrcPortIncrement {t} { $self _cget_relative ./amtRange -amt_udp_src_port_increment }
  # multiplier 
  method _m_amt_range_amt_udp_src_port_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port_increment }
  
  option -amt_range_send_teardown \
    -configuremethod _c_./amtRange/sendTeardown \
    -cgetmethod _g_./amtRange/sendTeardown \
    -readonly false
  method _c_./amtRange/sendTeardown {t v} { $self _configure_relative ./amtRange -send_teardown $v }
  method _g_./amtRange/sendTeardown {t} { $self _cget_relative ./amtRange -send_teardown }
  option -amt_range_discovery_retries \
    -configuremethod _c_./amtRange/discoveryRetries \
    -cgetmethod _g_./amtRange/discoveryRetries \
    -readonly false
  method _c_./amtRange/discoveryRetries {t v} { $self _configure_relative ./amtRange -discovery_retries $v }
  method _g_./amtRange/discoveryRetries {t} { $self _cget_relative ./amtRange -discovery_retries }
  # multiplier 
  method _m_amt_range_discovery_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_retries }
  
  option -amt_range_discovery_timeout \
    -configuremethod _c_./amtRange/discoveryTimeout \
    -cgetmethod _g_./amtRange/discoveryTimeout \
    -readonly false
  method _c_./amtRange/discoveryTimeout {t v} { $self _configure_relative ./amtRange -discovery_timeout $v }
  method _g_./amtRange/discoveryTimeout {t} { $self _cget_relative ./amtRange -discovery_timeout }
  # multiplier 
  method _m_amt_range_discovery_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_timeout }
  
  option -amt_range_request_retries \
    -configuremethod _c_./amtRange/requestRetries \
    -cgetmethod _g_./amtRange/requestRetries \
    -readonly false
  method _c_./amtRange/requestRetries {t v} { $self _configure_relative ./amtRange -request_retries $v }
  method _g_./amtRange/requestRetries {t} { $self _cget_relative ./amtRange -request_retries }
  # multiplier 
  method _m_amt_range_request_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_retries }
  
  option -amt_range_amt_udp_src_port \
    -configuremethod _c_./amtRange/amtUdpSrcPort \
    -cgetmethod _g_./amtRange/amtUdpSrcPort \
    -readonly false
  method _c_./amtRange/amtUdpSrcPort {t v} { $self _configure_relative ./amtRange -amt_udp_src_port $v }
  method _g_./amtRange/amtUdpSrcPort {t} { $self _cget_relative ./amtRange -amt_udp_src_port }
  # multiplier 
  method _m_amt_range_amt_udp_src_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port }
  
  option -amt_range_request_timeout \
    -configuremethod _c_./amtRange/requestTimeout \
    -cgetmethod _g_./amtRange/requestTimeout \
    -readonly false
  method _c_./amtRange/requestTimeout {t v} { $self _configure_relative ./amtRange -request_timeout $v }
  method _g_./amtRange/requestTimeout {t} { $self _cget_relative ./amtRange -request_timeout }
  # multiplier 
  method _m_amt_range_request_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_timeout }
  
  option -amt_range_name \
    -configuremethod _c_./amtRange/name \
    -cgetmethod _g_./amtRange/name \
    -readonly false
  method _c_./amtRange/name {t v} { $self _configure_relative ./amtRange -name $v }
  method _g_./amtRange/name {t} { $self _cget_relative ./amtRange -name }
  # multiplier 
  method _m_amt_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_name }
  
  option -amt_range_amt_anycast_ip_increment \
    -configuremethod _c_./amtRange/amtAnycastIpIncrement \
    -cgetmethod _g_./amtRange/amtAnycastIpIncrement \
    -readonly false
  method _c_./amtRange/amtAnycastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_anycast_ip_increment $v }
  method _g_./amtRange/amtAnycastIpIncrement {t} { $self _cget_relative ./amtRange -amt_anycast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_anycast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip_increment }
  
  option -amt_range_object_id \
    -configuremethod _c_./amtRange/objectId \
    -cgetmethod _g_./amtRange/objectId \
    -readonly false
  method _c_./amtRange/objectId {t v} { $self _configure_relative ./amtRange -object_id $v }
  method _g_./amtRange/objectId {t} { $self _cget_relative ./amtRange -object_id }
  # multiplier 
  method _m_amt_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_object_id }
  
  option -amt_range_override_qt \
    -configuremethod _c_./amtRange/overrideQt \
    -cgetmethod _g_./amtRange/overrideQt \
    -readonly false
  method _c_./amtRange/overrideQt {t v} { $self _configure_relative ./amtRange -override_qt $v }
  method _g_./amtRange/overrideQt {t} { $self _cget_relative ./amtRange -override_qt }
  option -amt_range_amt_anycast_ip \
    -configuremethod _c_./amtRange/amtAnycastIp \
    -cgetmethod _g_./amtRange/amtAnycastIp \
    -readonly false
  method _c_./amtRange/amtAnycastIp {t v} { $self _configure_relative ./amtRange -amt_anycast_ip $v }
  method _g_./amtRange/amtAnycastIp {t} { $self _cget_relative ./amtRange -amt_anycast_ip }
  # multiplier 
  method _m_amt_range_amt_anycast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip }
  
  option -amt_range_amt_unicast_ip_increment \
    -configuremethod _c_./amtRange/amtUnicastIpIncrement \
    -cgetmethod _g_./amtRange/amtUnicastIpIncrement \
    -readonly false
  method _c_./amtRange/amtUnicastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_unicast_ip_increment $v }
  method _g_./amtRange/amtUnicastIpIncrement {t} { $self _cget_relative ./amtRange -amt_unicast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_unicast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip_increment }
  
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -eapo_udp_range_expected_system_token ./eapoUdpRange/expectedSystemToken
    -eapo_udp_range_user_password ./eapoUdpRange/userPassword
    -eapo_udp_range_enabled ./eapoUdpRange/enabled
    -eapo_udp_range_nac_sequence ./eapoUdpRange/nacSequence
    -eapo_udp_range_fast_stateless_resume ./eapoUdpRange/fastStatelessResume
    -eapo_udp_range_user_name ./eapoUdpRange/userName
    -eapo_udp_range_response_type ./eapoUdpRange/responseType
    -eapo_udp_range_name ./eapoUdpRange/name
    -eapo_udp_range_protocol ./eapoUdpRange/protocol
    -eapo_udp_range_fast_inner_method ./eapoUdpRange/fastInnerMethod
    -eapo_udp_range_fast_provision_mode ./eapoUdpRange/fastProvisionMode
    -eapo_udp_range_object_id ./eapoUdpRange/objectId
    -web_auth_range_object_id ./webAuthRange/objectId
    -web_auth_range_input_value3 ./webAuthRange/inputValue3
    -web_auth_range_name ./webAuthRange/name
    -web_auth_range_expect ./webAuthRange/expect
    -web_auth_range_input_value1 ./webAuthRange/inputValue1
    -web_auth_range_enabled ./webAuthRange/enabled
    -web_auth_range_input_value2 ./webAuthRange/inputValue2
    -twamp_server_range_iteration_count ./twampServerRange/iterationCount
    -twamp_server_range_count ./twampServerRange/count
    -twamp_server_range_enabled ./twampServerRange/enabled
    -twamp_server_range_reflector_port ./twampServerRange/reflectorPort
    -twamp_server_range_max_test_sessions ./twampServerRange/maxTestSessions
    -twamp_server_range_control_port ./twampServerRange/controlPort
    -twamp_server_range_key_id ./twampServerRange/keyId
    -twamp_server_range_permitted_ip ./twampServerRange/permittedIp
    -twamp_server_range_name ./twampServerRange/name
    -twamp_server_range_enable_access_control ./twampServerRange/enableAccessControl
    -twamp_server_range_object_id ./twampServerRange/objectId
    -twamp_server_range_permitted_ip_increment ./twampServerRange/permittedIpIncrement
    -twamp_server_range_permitted_sender_port ./twampServerRange/permittedSenderPort
    -twamp_server_range_mode ./twampServerRange/mode
    -twamp_server_range_secret ./twampServerRange/secret
    -pvc_range_vpi_increment_step ./pvcRange/vpiIncrementStep
    -pvc_range_vci_unique_count ./pvcRange/vciUniqueCount
    -pvc_range_vci_increment_step ./pvcRange/vciIncrementStep
    -pvc_range_enabled ./pvcRange/enabled
    -pvc_range_vpi_first_id ./pvcRange/vpiFirstId
    -pvc_range_vpi_increment ./pvcRange/vpiIncrement
    -pvc_range_vci_first_id ./pvcRange/vciFirstId
    -pvc_range_vci_increment ./pvcRange/vciIncrement
    -pvc_range_name ./pvcRange/name
    -pvc_range_increment_mode ./pvcRange/incrementMode
    -pvc_range_object_id ./pvcRange/objectId
    -pvc_range_vpi_unique_count ./pvcRange/vpiUniqueCount
    -ptp_range_over_ip_master_mac_increment_inter_entity ./ptpRangeOverIp/masterMacIncrementInterEntity
    -ptp_range_over_ip_communication_mode ./ptpRangeOverIp/communicationMode
    -ptp_range_over_ip_send_announce_multicast ./ptpRangeOverIp/sendAnnounceMulticast
    -ptp_range_over_ip_follow_up_delay ./ptpRangeOverIp/followUpDelay
    -ptp_range_over_ip_domain ./ptpRangeOverIp/domain
    -ptp_range_over_ip_announce_drop_rate ./ptpRangeOverIp/announceDropRate
    -ptp_range_over_ip_client_ip_increment_by ./ptpRangeOverIp/clientIpIncrementBy
    -ptp_range_over_ip_renewal_invited ./ptpRangeOverIp/renewalInvited
    -ptp_range_over_ip_port_number_increment ./ptpRangeOverIp/portNumberIncrement
    -ptp_range_over_ip_use_clock_identity ./ptpRangeOverIp/useClockIdentity
    -ptp_range_over_ip_priority1 ./ptpRangeOverIp/priority1
    -ptp_range_over_ip_use_alternate_master_flag ./ptpRangeOverIp/useAlternateMasterFlag
    -ptp_range_over_ip_object_id ./ptpRangeOverIp/objectId
    -ptp_range_over_ip_delay_resp_receipt_timeout ./ptpRangeOverIp/delayRespReceiptTimeout
    -ptp_range_over_ip_announce_frequency_traceable ./ptpRangeOverIp/announceFrequencyTraceable
    -ptp_range_over_ip_priority2 ./ptpRangeOverIp/priority2
    -ptp_range_over_ip_announce_current_utc_offset_valid ./ptpRangeOverIp/announceCurrentUtcOffsetValid
    -ptp_range_over_ip_client_mac_address ./ptpRangeOverIp/clientMacAddress
    -ptp_range_over_ip_time_source ./ptpRangeOverIp/timeSource
    -ptp_range_over_ip_steps_removed ./ptpRangeOverIp/stepsRemoved
    -ptp_range_over_ip_clock_class ./ptpRangeOverIp/clockClass
    -ptp_range_over_ip_request_attempts ./ptpRangeOverIp/requestAttempts
    -ptp_range_over_ip_follow_up_bad_crc_rate ./ptpRangeOverIp/followUpBadCrcRate
    -ptp_range_over_ip_delay_response_delay_insertion_rate ./ptpRangeOverIp/delayResponseDelayInsertionRate
    -ptp_range_over_ip_log_sync_interval ./ptpRangeOverIp/logSyncInterval
    -ptp_range_over_ip_master_count ./ptpRangeOverIp/masterCount
    -ptp_range_over_ip_residence_time ./ptpRangeOverIp/residenceTime
    -ptp_range_over_ip_signal_interval ./ptpRangeOverIp/signalInterval
    -ptp_range_over_ip_delay_mechanism ./ptpRangeOverIp/delayMechanism
    -ptp_range_over_ip_strict_grant ./ptpRangeOverIp/strictGrant
    -ptp_range_over_ip_sync_drop_rate ./ptpRangeOverIp/syncDropRate
    -ptp_range_over_ip_drop_signal_req_sync ./ptpRangeOverIp/dropSignalReqSync
    -ptp_range_over_ip_clock_increment ./ptpRangeOverIp/clockIncrement
    -ptp_range_over_ip_announce_ptp_timescale ./ptpRangeOverIp/announcePtpTimescale
    -ptp_range_over_ip_signal_unicast_handling ./ptpRangeOverIp/signalUnicastHandling
    -ptp_range_over_ip_enabled ./ptpRangeOverIp/enabled
    -ptp_range_over_ip_timestamp_offset ./ptpRangeOverIp/timestampOffset
    -ptp_range_over_ip_master_ip_increment_by ./ptpRangeOverIp/masterIpIncrementBy
    -ptp_range_over_ip_request_interval ./ptpRangeOverIp/requestInterval
    -ptp_range_over_ip_ip_tos ./ptpRangeOverIp/ipTos
    -ptp_range_over_ip_request_holddown ./ptpRangeOverIp/requestHolddown
    -ptp_range_over_ip_client_mac_increment_by ./ptpRangeOverIp/clientMacIncrementBy
    -ptp_range_over_ip_name ./ptpRangeOverIp/name
    -ptp_range_over_ip_drop_signal_req_announce ./ptpRangeOverIp/dropSignalReqAnnounce
    -ptp_range_over_ip_master_ip_address ./ptpRangeOverIp/masterIpAddress
    -ptp_range_over_ip_first_clock ./ptpRangeOverIp/firstClock
    -ptp_range_over_ip_master_mac_increment_by ./ptpRangeOverIp/masterMacIncrementBy
    -ptp_range_over_ip_send_cancel_tlv ./ptpRangeOverIp/sendCancelTlv
    -ptp_range_over_ip_port_number ./ptpRangeOverIp/portNumber
    -ptp_range_over_ip_client_ip_address ./ptpRangeOverIp/clientIpAddress
    -ptp_range_over_ip_announce_leap59 ./ptpRangeOverIp/announceLeap59
    -ptp_range_over_ip_send_announce_tlv ./ptpRangeOverIp/sendAnnounceTlv
    -ptp_range_over_ip_sync_receipt_timeout ./ptpRangeOverIp/syncReceiptTimeout
    -ptp_range_over_ip_announce_leap61 ./ptpRangeOverIp/announceLeap61
    -ptp_range_over_ip_grant_delay_resp_duration_interval ./ptpRangeOverIp/grantDelayRespDurationInterval
    -ptp_range_over_ip_timestamp_offset_variation ./ptpRangeOverIp/timestampOffsetVariation
    -ptp_range_over_ip_follow_up_drop_rate ./ptpRangeOverIp/followUpDropRate
    -ptp_range_over_ip_master_mac_address ./ptpRangeOverIp/masterMacAddress
    -ptp_range_over_ip_drop_signal_req_delay_resp ./ptpRangeOverIp/dropSignalReqDelayResp
    -ptp_range_over_ip_grant_sync_duration_interval ./ptpRangeOverIp/grantSyncDurationInterval
    -ptp_range_over_ip_learn_port_id ./ptpRangeOverIp/learnPortId
    -ptp_range_over_ip_delay_response_delay ./ptpRangeOverIp/delayResponseDelay
    -ptp_range_over_ip_grant_unicast_duration_interval ./ptpRangeOverIp/grantUnicastDurationInterval
    -ptp_range_over_ip_follow_up_delay_insertion_rate ./ptpRangeOverIp/followUpDelayInsertionRate
    -ptp_range_over_ip_log_delay_req_interval ./ptpRangeOverIp/logDelayReqInterval
    -ptp_range_over_ip_clock_accuracy ./ptpRangeOverIp/clockAccuracy
    -ptp_range_over_ip_client_count ./ptpRangeOverIp/clientCount
    -ptp_range_over_ip_announce_time_traceable ./ptpRangeOverIp/announceTimeTraceable
    -ptp_range_over_ip_step_mode ./ptpRangeOverIp/stepMode
    -ptp_range_over_ip_master_ip_increment_inter_entity ./ptpRangeOverIp/masterIpIncrementInterEntity
    -ptp_range_over_ip_delay_resp_drop_rate ./ptpRangeOverIp/delayRespDropRate
    -ptp_range_over_ip_announce_receipt_timeout ./ptpRangeOverIp/announceReceiptTimeout
    -ptp_range_over_ip_rx_calibration ./ptpRangeOverIp/rxCalibration
    -ptp_range_over_ip_tx_calibration ./ptpRangeOverIp/txCalibration
    -ptp_range_over_ip_log_announce_interval ./ptpRangeOverIp/logAnnounceInterval
    -igmp_querier_range_object_id ./igmpQuerierRange/objectId
    -igmp_querier_range_specific_query_response_count ./igmpQuerierRange/specificQueryResponseCount
    -igmp_querier_range_specific_query_response_interval ./igmpQuerierRange/specificQueryResponseInterval
    -igmp_querier_range_general_query_response_interval ./igmpQuerierRange/generalQueryResponseInterval
    -igmp_querier_range_name ./igmpQuerierRange/name
    -igmp_querier_range_router_alert ./igmpQuerierRange/routerAlert
    -igmp_querier_range_general_query_interval ./igmpQuerierRange/generalQueryInterval
    -igmp_querier_range_robustness_variable ./igmpQuerierRange/robustnessVariable
    -igmp_querier_range_startup_query_count ./igmpQuerierRange/startupQueryCount
    -igmp_querier_range_version ./igmpQuerierRange/version
    -igmp_querier_range_enabled ./igmpQuerierRange/enabled
    -atm_range_object_id ./atmRange/objectId
    -atm_range_increment_by ./atmRange/incrementBy
    -atm_range_name ./atmRange/name
    -atm_range_count ./atmRange/count
    -atm_range_mac ./atmRange/mac
    -atm_range_mtu ./atmRange/mtu
    -atm_range_encapsulation ./atmRange/encapsulation
    -atm_range_enabled ./atmRange/enabled
    -ancp_range_circuit_id ./ancpRange/circuitId
    -ancp_range_use_dsl_outer_vlan ./ancpRange/useDslOuterVlan
    -ancp_range_distribution_algorithm_percent ./ancpRange/distributionAlgorithmPercent
    -ancp_range_atm_vpi ./ancpRange/atmVpi
    -ancp_range_nas_ip_address ./ancpRange/nasIpAddress
    -ancp_range_nas_ancp_service_port ./ancpRange/nasAncpServicePort
    -ancp_range_inner_vlan_id ./ancpRange/innerVlanId
    -ancp_range_enabled ./ancpRange/enabled
    -ancp_range_use_dsl_inner_vlan ./ancpRange/useDslInnerVlan
    -ancp_range_access_aggregation_cb_tlv ./ancpRange/accessAggregationCbTlv
    -ancp_range_nas_keep_alive_retries ./ancpRange/nasKeepAliveRetries
    -ancp_range_nas_keep_alive_timeout ./ancpRange/nasKeepAliveTimeout
    -ancp_range_name ./ancpRange/name
    -ancp_range_enable_access_aggregation ./ancpRange/enableAccessAggregation
    -ancp_range_object_id ./ancpRange/objectId
    -ancp_range_atm_vci ./ancpRange/atmVci
    -ancp_range_nas_ipaddress_incr ./ancpRange/nasIPAddressIncr
    -ancp_range_outer_vlan_id ./ancpRange/outerVlanId
    -ancp_range_nas_ip_address_incr ./ancpRange/nasIpAddressIncr
    -ancp_range_ancp_ip_range ./ancpRange/ancpIpRange
    -ancp_range_ancp_pvc_range ./ancpRange/ancpPvcRange
    -ancp_range_ancp_vlan_range ./ancpRange/ancpVlanRange
    -ancp_range_ancp_mac_range ./ancpRange/ancpMacRange
    -ancp_range_ancp_atm_range ./ancpRange/ancpAtmRange
    -ancp_range_dsl_resync_profile_allocation_table ./ancpRange/dslResyncProfileAllocationTable
    -ancp_range_dsl_profile_allocation_table ./ancpRange/dslProfileAllocationTable
    -ancp_range_ancp_ip_range_count ./ancpRange/ancpIpRange/count
    -ancp_range_ancp_ip_range_ip_type ./ancpRange/ancpIpRange/ipType
    -ancp_range_ancp_ip_range_enabled ./ancpRange/ancpIpRange/enabled
    -ancp_range_ancp_ip_range_gateway_increment_mode ./ancpRange/ancpIpRange/gatewayIncrementMode
    -ancp_range_ancp_ip_range_enable_gateway_arp ./ancpRange/ancpIpRange/enableGatewayArp
    -ancp_range_ancp_ip_range_ip_address ./ancpRange/ancpIpRange/ipAddress
    -ancp_range_ancp_ip_range_gateway_increment ./ancpRange/ancpIpRange/gatewayIncrement
    -ancp_range_ancp_ip_range_increment_by ./ancpRange/ancpIpRange/incrementBy
    -ancp_range_ancp_ip_range_gateway_address ./ancpRange/ancpIpRange/gatewayAddress
    -ancp_range_ancp_ip_range_name ./ancpRange/ancpIpRange/name
    -ancp_range_ancp_ip_range_mss ./ancpRange/ancpIpRange/mss
    -ancp_range_ancp_ip_range_object_id ./ancpRange/ancpIpRange/objectId
    -ancp_range_ancp_ip_range_prefix ./ancpRange/ancpIpRange/prefix
    -ancp_range_ancp_ip_range_auto_mac_generation ./ancpRange/ancpIpRange/autoMacGeneration
    -ancp_range_ancp_pvc_range_vpi_increment_step ./ancpRange/ancpPvcRange/vpiIncrementStep
    -ancp_range_ancp_pvc_range_vci_unique_count ./ancpRange/ancpPvcRange/vciUniqueCount
    -ancp_range_ancp_pvc_range_vci_increment_step ./ancpRange/ancpPvcRange/vciIncrementStep
    -ancp_range_ancp_pvc_range_enabled ./ancpRange/ancpPvcRange/enabled
    -ancp_range_ancp_pvc_range_vpi_first_id ./ancpRange/ancpPvcRange/vpiFirstId
    -ancp_range_ancp_pvc_range_vpi_increment ./ancpRange/ancpPvcRange/vpiIncrement
    -ancp_range_ancp_pvc_range_vci_first_id ./ancpRange/ancpPvcRange/vciFirstId
    -ancp_range_ancp_pvc_range_vci_increment ./ancpRange/ancpPvcRange/vciIncrement
    -ancp_range_ancp_pvc_range_name ./ancpRange/ancpPvcRange/name
    -ancp_range_ancp_pvc_range_increment_mode ./ancpRange/ancpPvcRange/incrementMode
    -ancp_range_ancp_pvc_range_object_id ./ancpRange/ancpPvcRange/objectId
    -ancp_range_ancp_pvc_range_vpi_unique_count ./ancpRange/ancpPvcRange/vpiUniqueCount
    -ancp_range_ancp_vlan_range_inner_first_id ./ancpRange/ancpVlanRange/innerFirstId
    -ancp_range_ancp_vlan_range_inner_increment ./ancpRange/ancpVlanRange/innerIncrement
    -ancp_range_ancp_vlan_range_enabled ./ancpRange/ancpVlanRange/enabled
    -ancp_range_ancp_vlan_range_unique_count ./ancpRange/ancpVlanRange/uniqueCount
    -ancp_range_ancp_vlan_range_name ./ancpRange/ancpVlanRange/name
    -ancp_range_ancp_vlan_range_increment_step ./ancpRange/ancpVlanRange/incrementStep
    -ancp_range_ancp_vlan_range_tpid ./ancpRange/ancpVlanRange/tpid
    -ancp_range_ancp_vlan_range_priority ./ancpRange/ancpVlanRange/priority
    -ancp_range_ancp_vlan_range_inner_enable ./ancpRange/ancpVlanRange/innerEnable
    -ancp_range_ancp_vlan_range_object_id ./ancpRange/ancpVlanRange/objectId
    -ancp_range_ancp_vlan_range_inner_unique_count ./ancpRange/ancpVlanRange/innerUniqueCount
    -ancp_range_ancp_vlan_range_inner_tpid ./ancpRange/ancpVlanRange/innerTpid
    -ancp_range_ancp_vlan_range_first_id ./ancpRange/ancpVlanRange/firstId
    -ancp_range_ancp_vlan_range_increment ./ancpRange/ancpVlanRange/increment
    -ancp_range_ancp_vlan_range_inner_increment_step ./ancpRange/ancpVlanRange/innerIncrementStep
    -ancp_range_ancp_vlan_range_id_incr_mode ./ancpRange/ancpVlanRange/idIncrMode
    -ancp_range_ancp_vlan_range_inner_priority ./ancpRange/ancpVlanRange/innerPriority
    -ancp_range_ancp_vlan_range_vlan_id_info ./ancpRange/ancpVlanRange/vlanIdInfo
    -ancp_range_ancp_mac_range_object_id ./ancpRange/ancpMacRange/objectId
    -ancp_range_ancp_mac_range_increment_by ./ancpRange/ancpMacRange/incrementBy
    -ancp_range_ancp_mac_range_name ./ancpRange/ancpMacRange/name
    -ancp_range_ancp_mac_range_count ./ancpRange/ancpMacRange/count
    -ancp_range_ancp_mac_range_mac ./ancpRange/ancpMacRange/mac
    -ancp_range_ancp_mac_range_mtu ./ancpRange/ancpMacRange/mtu
    -ancp_range_ancp_mac_range_enabled ./ancpRange/ancpMacRange/enabled
    -ancp_range_ancp_atm_range_object_id ./ancpRange/ancpAtmRange/objectId
    -ancp_range_ancp_atm_range_increment_by ./ancpRange/ancpAtmRange/incrementBy
    -ancp_range_ancp_atm_range_name ./ancpRange/ancpAtmRange/name
    -ancp_range_ancp_atm_range_count ./ancpRange/ancpAtmRange/count
    -ancp_range_ancp_atm_range_mac ./ancpRange/ancpAtmRange/mac
    -ancp_range_ancp_atm_range_mtu ./ancpRange/ancpAtmRange/mtu
    -ancp_range_ancp_atm_range_encapsulation ./ancpRange/ancpAtmRange/encapsulation
    -ancp_range_ancp_atm_range_enabled ./ancpRange/ancpAtmRange/enabled
    -twamp_control_range_object_id ./twampControlRange/objectId
    -twamp_control_range_name ./twampControlRange/name
    -twamp_control_range_mode ./twampControlRange/mode
    -twamp_control_range_control_server_port ./twampControlRange/controlServerPort
    -twamp_control_range_count ./twampControlRange/count
    -twamp_control_range_secret ./twampControlRange/secret
    -twamp_control_range_key_id ./twampControlRange/keyId
    -twamp_control_range_control_server_ip_increment ./twampControlRange/controlServerIpIncrement
    -twamp_control_range_enabled ./twampControlRange/enabled
    -twamp_control_range_control_start_server_ip ./twampControlRange/controlStartServerIp
    -igmp_mld_range_meshing_mode ./igmpMldRange/meshingMode
    -igmp_mld_range_router_alert ./igmpMldRange/routerAlert
    -igmp_mld_range_enabled ./igmpMldRange/enabled
    -igmp_mld_range_report_frequency ./igmpMldRange/reportFrequency
    -igmp_mld_range_unsolicited_response_mode ./igmpMldRange/unsolicitedResponseMode
    -igmp_mld_range_general_query_response_mode ./igmpMldRange/generalQueryResponseMode
    -igmp_mld_range_specific_query_response_mode ./igmpMldRange/specificQueryResponseMode
    -igmp_mld_range_name ./igmpMldRange/name
    -igmp_mld_range_join_leave_multiplier ./igmpMldRange/joinLeaveMultiplier
    -igmp_mld_range_object_id ./igmpMldRange/objectId
    -igmp_mld_range_version ./igmpMldRange/version
    -igmp_mld_range_immediate_response ./igmpMldRange/immediateResponse
    -igmp_mld_range_multicast_group_range ./igmpMldRange/multicastGroupRange
    -igmp_mld_range_join_leave_multicast_group_range ./igmpMldRange/joinLeaveMulticastGroupRange
    -iptv_range_inter_stb_start_delay ./iptvRange/interStbStartDelay
    -iptv_range_router_alert ./iptvRange/routerAlert
    -iptv_range_viewing_profile ./iptvRange/viewingProfile
    -iptv_range_leave_latency_threshold ./iptvRange/leaveLatencyThreshold
    -iptv_range_enabled ./iptvRange/enabled
    -iptv_range_join_latency_threshold ./iptvRange/joinLatencyThreshold
    -iptv_range_report_frequency ./iptvRange/reportFrequency
    -iptv_range_unsolicited_response_mode ./iptvRange/unsolicitedResponseMode
    -iptv_range_general_query_response_mode ./iptvRange/generalQueryResponseMode
    -iptv_range_specific_query_response_mode ./iptvRange/specificQueryResponseMode
    -iptv_range_name ./iptvRange/name
    -iptv_range_log_failure_timestamps ./iptvRange/logFailureTimestamps
    -iptv_range_object_id ./iptvRange/objectId
    -iptv_range_join_leave_multiplier ./iptvRange/joinLeaveMultiplier
    -iptv_range_stb_leave_join_delay ./iptvRange/stbLeaveJoinDelay
    -iptv_range_version ./iptvRange/version
    -iptv_range_immediate_response ./iptvRange/immediateResponse
    -iptv_range_iptv_channels ./iptvRange/iptvChannels
    -ip_range_count ./ipRange/count
    -ip_range_ip_type ./ipRange/ipType
    -ip_range_enabled ./ipRange/enabled
    -ip_range_gateway_increment_mode ./ipRange/gatewayIncrementMode
    -ip_range_enable_gateway_arp ./ipRange/enableGatewayArp
    -ip_range_ip_address ./ipRange/ipAddress
    -ip_range_gateway_increment ./ipRange/gatewayIncrement
    -ip_range_increment_by ./ipRange/incrementBy
    -ip_range_gateway_address ./ipRange/gatewayAddress
    -ip_range_name ./ipRange/name
    -ip_range_mss ./ipRange/mss
    -ip_range_object_id ./ipRange/objectId
    -ip_range_prefix ./ipRange/prefix
    -ip_range_auto_mac_generation ./ipRange/autoMacGeneration
    -amt_range_use_relay_discovery ./amtRange/useRelayDiscovery
    -amt_range_amt_unicast_ip ./amtRange/amtUnicastIp
    -amt_range_enabled ./amtRange/enabled
    -amt_range_query_timer_interval ./amtRange/queryTimerInterval
    -amt_range_amt_udp_src_port_increment ./amtRange/amtUdpSrcPortIncrement
    -amt_range_send_teardown ./amtRange/sendTeardown
    -amt_range_discovery_retries ./amtRange/discoveryRetries
    -amt_range_discovery_timeout ./amtRange/discoveryTimeout
    -amt_range_request_retries ./amtRange/requestRetries
    -amt_range_amt_udp_src_port ./amtRange/amtUdpSrcPort
    -amt_range_request_timeout ./amtRange/requestTimeout
    -amt_range_name ./amtRange/name
    -amt_range_amt_anycast_ip_increment ./amtRange/amtAnycastIpIncrement
    -amt_range_object_id ./amtRange/objectId
    -amt_range_override_qt ./amtRange/overrideQt
    -amt_range_amt_anycast_ip ./amtRange/amtAnycastIp
    -amt_range_amt_unicast_ip_increment ./amtRange/amtUnicastIpIncrement
  }
  #
  variable MultiplierOptionGroups {
    _m_eapo_udp_range_expected_system_token {-eapo_udp_range_expected_system_token_format -eapo_udp_range_expected_system_token_base -eapo_udp_range_expected_system_token_incr}
    _m_eapo_udp_range_user_password {-eapo_udp_range_user_password_format -eapo_udp_range_user_password_base -eapo_udp_range_user_password_incr}
    _m_eapo_udp_range_fast_stateless_resume {-eapo_udp_range_fast_stateless_resume_format -eapo_udp_range_fast_stateless_resume_base -eapo_udp_range_fast_stateless_resume_incr}
    _m_eapo_udp_range_user_name {-eapo_udp_range_user_name_format -eapo_udp_range_user_name_base -eapo_udp_range_user_name_incr}
    _m_eapo_udp_range_response_type {-eapo_udp_range_response_type_format -eapo_udp_range_response_type_base -eapo_udp_range_response_type_incr}
    _m_eapo_udp_range_name {-eapo_udp_range_name_format -eapo_udp_range_name_base -eapo_udp_range_name_incr}
    _m_eapo_udp_range_protocol {-eapo_udp_range_protocol_format -eapo_udp_range_protocol_base -eapo_udp_range_protocol_incr}
    _m_eapo_udp_range_fast_inner_method {-eapo_udp_range_fast_inner_method_format -eapo_udp_range_fast_inner_method_base -eapo_udp_range_fast_inner_method_incr}
    _m_eapo_udp_range_fast_provision_mode {-eapo_udp_range_fast_provision_mode_format -eapo_udp_range_fast_provision_mode_base -eapo_udp_range_fast_provision_mode_incr}
    _m_eapo_udp_range_object_id {-eapo_udp_range_object_id_format -eapo_udp_range_object_id_base -eapo_udp_range_object_id_incr}
    _m_web_auth_range_object_id {-web_auth_range_object_id_format -web_auth_range_object_id_base -web_auth_range_object_id_incr}
    _m_web_auth_range_input_value3 {-web_auth_range_input_value3_format -web_auth_range_input_value3_base -web_auth_range_input_value3_incr}
    _m_web_auth_range_name {-web_auth_range_name_format -web_auth_range_name_base -web_auth_range_name_incr}
    _m_web_auth_range_expect {-web_auth_range_expect_format -web_auth_range_expect_base -web_auth_range_expect_incr}
    _m_web_auth_range_input_value1 {-web_auth_range_input_value1_format -web_auth_range_input_value1_base -web_auth_range_input_value1_incr}
    _m_web_auth_range_input_value2 {-web_auth_range_input_value2_format -web_auth_range_input_value2_base -web_auth_range_input_value2_incr}
    _m_twamp_server_range_iteration_count {-twamp_server_range_iteration_count_base -twamp_server_range_iteration_count_incr}
    _m_twamp_server_range_count {-twamp_server_range_count_base -twamp_server_range_count_incr}
    _m_twamp_server_range_reflector_port {-twamp_server_range_reflector_port_base -twamp_server_range_reflector_port_incr}
    _m_twamp_server_range_max_test_sessions {-twamp_server_range_max_test_sessions_base -twamp_server_range_max_test_sessions_incr}
    _m_twamp_server_range_control_port {-twamp_server_range_control_port_base -twamp_server_range_control_port_incr}
    _m_twamp_server_range_key_id {-twamp_server_range_key_id_format -twamp_server_range_key_id_base -twamp_server_range_key_id_incr}
    _m_twamp_server_range_permitted_ip {-twamp_server_range_permitted_ip_format -twamp_server_range_permitted_ip_base -twamp_server_range_permitted_ip_incr}
    _m_twamp_server_range_name {-twamp_server_range_name_format -twamp_server_range_name_base -twamp_server_range_name_incr}
    _m_twamp_server_range_object_id {-twamp_server_range_object_id_format -twamp_server_range_object_id_base -twamp_server_range_object_id_incr}
    _m_twamp_server_range_permitted_ip_increment {-twamp_server_range_permitted_ip_increment_format -twamp_server_range_permitted_ip_increment_base -twamp_server_range_permitted_ip_increment_incr}
    _m_twamp_server_range_permitted_sender_port {-twamp_server_range_permitted_sender_port_base -twamp_server_range_permitted_sender_port_incr}
    _m_twamp_server_range_mode {-twamp_server_range_mode_format -twamp_server_range_mode_base -twamp_server_range_mode_incr}
    _m_twamp_server_range_secret {-twamp_server_range_secret_format -twamp_server_range_secret_base -twamp_server_range_secret_incr}
    _m_pvc_range_vpi_increment_step {-pvc_range_vpi_increment_step_base -pvc_range_vpi_increment_step_incr}
    _m_pvc_range_vci_unique_count {-pvc_range_vci_unique_count_base -pvc_range_vci_unique_count_incr}
    _m_pvc_range_vci_increment_step {-pvc_range_vci_increment_step_base -pvc_range_vci_increment_step_incr}
    _m_pvc_range_vpi_first_id {-pvc_range_vpi_first_id_base -pvc_range_vpi_first_id_incr}
    _m_pvc_range_vpi_increment {-pvc_range_vpi_increment_base -pvc_range_vpi_increment_incr}
    _m_pvc_range_vci_first_id {-pvc_range_vci_first_id_base -pvc_range_vci_first_id_incr}
    _m_pvc_range_vci_increment {-pvc_range_vci_increment_base -pvc_range_vci_increment_incr}
    _m_pvc_range_name {-pvc_range_name_format -pvc_range_name_base -pvc_range_name_incr}
    _m_pvc_range_increment_mode {-pvc_range_increment_mode_base -pvc_range_increment_mode_incr}
    _m_pvc_range_object_id {-pvc_range_object_id_format -pvc_range_object_id_base -pvc_range_object_id_incr}
    _m_pvc_range_vpi_unique_count {-pvc_range_vpi_unique_count_base -pvc_range_vpi_unique_count_incr}
    _m_ptp_range_over_ip_master_mac_increment_inter_entity {-ptp_range_over_ip_master_mac_increment_inter_entity_format -ptp_range_over_ip_master_mac_increment_inter_entity_base -ptp_range_over_ip_master_mac_increment_inter_entity_incr}
    _m_ptp_range_over_ip_communication_mode {-ptp_range_over_ip_communication_mode_format -ptp_range_over_ip_communication_mode_base -ptp_range_over_ip_communication_mode_incr}
    _m_ptp_range_over_ip_follow_up_delay {-ptp_range_over_ip_follow_up_delay_base -ptp_range_over_ip_follow_up_delay_incr}
    _m_ptp_range_over_ip_domain {-ptp_range_over_ip_domain_base -ptp_range_over_ip_domain_incr}
    _m_ptp_range_over_ip_announce_drop_rate {-ptp_range_over_ip_announce_drop_rate_base -ptp_range_over_ip_announce_drop_rate_incr}
    _m_ptp_range_over_ip_client_ip_increment_by {-ptp_range_over_ip_client_ip_increment_by_format -ptp_range_over_ip_client_ip_increment_by_base -ptp_range_over_ip_client_ip_increment_by_incr}
    _m_ptp_range_over_ip_port_number_increment {-ptp_range_over_ip_port_number_increment_base -ptp_range_over_ip_port_number_increment_incr}
    _m_ptp_range_over_ip_priority1 {-ptp_range_over_ip_priority1_base -ptp_range_over_ip_priority1_incr}
    _m_ptp_range_over_ip_object_id {-ptp_range_over_ip_object_id_format -ptp_range_over_ip_object_id_base -ptp_range_over_ip_object_id_incr}
    _m_ptp_range_over_ip_delay_resp_receipt_timeout {-ptp_range_over_ip_delay_resp_receipt_timeout_base -ptp_range_over_ip_delay_resp_receipt_timeout_incr}
    _m_ptp_range_over_ip_priority2 {-ptp_range_over_ip_priority2_base -ptp_range_over_ip_priority2_incr}
    _m_ptp_range_over_ip_client_mac_address {-ptp_range_over_ip_client_mac_address_format -ptp_range_over_ip_client_mac_address_base -ptp_range_over_ip_client_mac_address_incr}
    _m_ptp_range_over_ip_time_source {-ptp_range_over_ip_time_source_format -ptp_range_over_ip_time_source_base -ptp_range_over_ip_time_source_incr}
    _m_ptp_range_over_ip_steps_removed {-ptp_range_over_ip_steps_removed_base -ptp_range_over_ip_steps_removed_incr}
    _m_ptp_range_over_ip_clock_class {-ptp_range_over_ip_clock_class_base -ptp_range_over_ip_clock_class_incr}
    _m_ptp_range_over_ip_request_attempts {-ptp_range_over_ip_request_attempts_base -ptp_range_over_ip_request_attempts_incr}
    _m_ptp_range_over_ip_follow_up_bad_crc_rate {-ptp_range_over_ip_follow_up_bad_crc_rate_base -ptp_range_over_ip_follow_up_bad_crc_rate_incr}
    _m_ptp_range_over_ip_delay_response_delay_insertion_rate {-ptp_range_over_ip_delay_response_delay_insertion_rate_base -ptp_range_over_ip_delay_response_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_sync_interval {-ptp_range_over_ip_log_sync_interval_base -ptp_range_over_ip_log_sync_interval_incr}
    _m_ptp_range_over_ip_master_count {-ptp_range_over_ip_master_count_base -ptp_range_over_ip_master_count_incr}
    _m_ptp_range_over_ip_residence_time {-ptp_range_over_ip_residence_time_base -ptp_range_over_ip_residence_time_incr}
    _m_ptp_range_over_ip_signal_interval {-ptp_range_over_ip_signal_interval_base -ptp_range_over_ip_signal_interval_incr}
    _m_ptp_range_over_ip_delay_mechanism {-ptp_range_over_ip_delay_mechanism_format -ptp_range_over_ip_delay_mechanism_base -ptp_range_over_ip_delay_mechanism_incr}
    _m_ptp_range_over_ip_sync_drop_rate {-ptp_range_over_ip_sync_drop_rate_base -ptp_range_over_ip_sync_drop_rate_incr}
    _m_ptp_range_over_ip_clock_increment {-ptp_range_over_ip_clock_increment_format -ptp_range_over_ip_clock_increment_base -ptp_range_over_ip_clock_increment_incr}
    _m_ptp_range_over_ip_signal_unicast_handling {-ptp_range_over_ip_signal_unicast_handling_format -ptp_range_over_ip_signal_unicast_handling_base -ptp_range_over_ip_signal_unicast_handling_incr}
    _m_ptp_range_over_ip_timestamp_offset {-ptp_range_over_ip_timestamp_offset_base -ptp_range_over_ip_timestamp_offset_incr}
    _m_ptp_range_over_ip_master_ip_increment_by {-ptp_range_over_ip_master_ip_increment_by_format -ptp_range_over_ip_master_ip_increment_by_base -ptp_range_over_ip_master_ip_increment_by_incr}
    _m_ptp_range_over_ip_request_interval {-ptp_range_over_ip_request_interval_base -ptp_range_over_ip_request_interval_incr}
    _m_ptp_range_over_ip_ip_tos {-ptp_range_over_ip_ip_tos_base -ptp_range_over_ip_ip_tos_incr}
    _m_ptp_range_over_ip_request_holddown {-ptp_range_over_ip_request_holddown_base -ptp_range_over_ip_request_holddown_incr}
    _m_ptp_range_over_ip_client_mac_increment_by {-ptp_range_over_ip_client_mac_increment_by_format -ptp_range_over_ip_client_mac_increment_by_base -ptp_range_over_ip_client_mac_increment_by_incr}
    _m_ptp_range_over_ip_name {-ptp_range_over_ip_name_format -ptp_range_over_ip_name_base -ptp_range_over_ip_name_incr}
    _m_ptp_range_over_ip_master_ip_address {-ptp_range_over_ip_master_ip_address_format -ptp_range_over_ip_master_ip_address_base -ptp_range_over_ip_master_ip_address_incr}
    _m_ptp_range_over_ip_first_clock {-ptp_range_over_ip_first_clock_format -ptp_range_over_ip_first_clock_base -ptp_range_over_ip_first_clock_incr}
    _m_ptp_range_over_ip_master_mac_increment_by {-ptp_range_over_ip_master_mac_increment_by_format -ptp_range_over_ip_master_mac_increment_by_base -ptp_range_over_ip_master_mac_increment_by_incr}
    _m_ptp_range_over_ip_port_number {-ptp_range_over_ip_port_number_base -ptp_range_over_ip_port_number_incr}
    _m_ptp_range_over_ip_client_ip_address {-ptp_range_over_ip_client_ip_address_format -ptp_range_over_ip_client_ip_address_base -ptp_range_over_ip_client_ip_address_incr}
    _m_ptp_range_over_ip_sync_receipt_timeout {-ptp_range_over_ip_sync_receipt_timeout_base -ptp_range_over_ip_sync_receipt_timeout_incr}
    _m_ptp_range_over_ip_grant_delay_resp_duration_interval {-ptp_range_over_ip_grant_delay_resp_duration_interval_base -ptp_range_over_ip_grant_delay_resp_duration_interval_incr}
    _m_ptp_range_over_ip_timestamp_offset_variation {-ptp_range_over_ip_timestamp_offset_variation_base -ptp_range_over_ip_timestamp_offset_variation_incr}
    _m_ptp_range_over_ip_follow_up_drop_rate {-ptp_range_over_ip_follow_up_drop_rate_base -ptp_range_over_ip_follow_up_drop_rate_incr}
    _m_ptp_range_over_ip_master_mac_address {-ptp_range_over_ip_master_mac_address_format -ptp_range_over_ip_master_mac_address_base -ptp_range_over_ip_master_mac_address_incr}
    _m_ptp_range_over_ip_grant_sync_duration_interval {-ptp_range_over_ip_grant_sync_duration_interval_base -ptp_range_over_ip_grant_sync_duration_interval_incr}
    _m_ptp_range_over_ip_delay_response_delay {-ptp_range_over_ip_delay_response_delay_base -ptp_range_over_ip_delay_response_delay_incr}
    _m_ptp_range_over_ip_grant_unicast_duration_interval {-ptp_range_over_ip_grant_unicast_duration_interval_base -ptp_range_over_ip_grant_unicast_duration_interval_incr}
    _m_ptp_range_over_ip_follow_up_delay_insertion_rate {-ptp_range_over_ip_follow_up_delay_insertion_rate_base -ptp_range_over_ip_follow_up_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_delay_req_interval {-ptp_range_over_ip_log_delay_req_interval_base -ptp_range_over_ip_log_delay_req_interval_incr}
    _m_ptp_range_over_ip_clock_accuracy {-ptp_range_over_ip_clock_accuracy_format -ptp_range_over_ip_clock_accuracy_base -ptp_range_over_ip_clock_accuracy_incr}
    _m_ptp_range_over_ip_client_count {-ptp_range_over_ip_client_count_base -ptp_range_over_ip_client_count_incr}
    _m_ptp_range_over_ip_step_mode {-ptp_range_over_ip_step_mode_format -ptp_range_over_ip_step_mode_base -ptp_range_over_ip_step_mode_incr}
    _m_ptp_range_over_ip_master_ip_increment_inter_entity {-ptp_range_over_ip_master_ip_increment_inter_entity_format -ptp_range_over_ip_master_ip_increment_inter_entity_base -ptp_range_over_ip_master_ip_increment_inter_entity_incr}
    _m_ptp_range_over_ip_delay_resp_drop_rate {-ptp_range_over_ip_delay_resp_drop_rate_base -ptp_range_over_ip_delay_resp_drop_rate_incr}
    _m_ptp_range_over_ip_announce_receipt_timeout {-ptp_range_over_ip_announce_receipt_timeout_base -ptp_range_over_ip_announce_receipt_timeout_incr}
    _m_ptp_range_over_ip_rx_calibration {-ptp_range_over_ip_rx_calibration_base -ptp_range_over_ip_rx_calibration_incr}
    _m_ptp_range_over_ip_tx_calibration {-ptp_range_over_ip_tx_calibration_base -ptp_range_over_ip_tx_calibration_incr}
    _m_ptp_range_over_ip_log_announce_interval {-ptp_range_over_ip_log_announce_interval_base -ptp_range_over_ip_log_announce_interval_incr}
    _m_igmp_querier_range_object_id {-igmp_querier_range_object_id_format -igmp_querier_range_object_id_base -igmp_querier_range_object_id_incr}
    _m_igmp_querier_range_specific_query_response_count {-igmp_querier_range_specific_query_response_count_base -igmp_querier_range_specific_query_response_count_incr}
    _m_igmp_querier_range_specific_query_response_interval {-igmp_querier_range_specific_query_response_interval_base -igmp_querier_range_specific_query_response_interval_incr}
    _m_igmp_querier_range_general_query_response_interval {-igmp_querier_range_general_query_response_interval_base -igmp_querier_range_general_query_response_interval_incr}
    _m_igmp_querier_range_name {-igmp_querier_range_name_format -igmp_querier_range_name_base -igmp_querier_range_name_incr}
    _m_igmp_querier_range_general_query_interval {-igmp_querier_range_general_query_interval_base -igmp_querier_range_general_query_interval_incr}
    _m_igmp_querier_range_robustness_variable {-igmp_querier_range_robustness_variable_base -igmp_querier_range_robustness_variable_incr}
    _m_igmp_querier_range_startup_query_count {-igmp_querier_range_startup_query_count_base -igmp_querier_range_startup_query_count_incr}
    _m_igmp_querier_range_version {-igmp_querier_range_version_format -igmp_querier_range_version_base -igmp_querier_range_version_incr}
    _m_atm_range_object_id {-atm_range_object_id_format -atm_range_object_id_base -atm_range_object_id_incr}
    _m_atm_range_increment_by {-atm_range_increment_by_format -atm_range_increment_by_base -atm_range_increment_by_incr}
    _m_atm_range_name {-atm_range_name_format -atm_range_name_base -atm_range_name_incr}
    _m_atm_range_count {-atm_range_count_base -atm_range_count_incr}
    _m_atm_range_mac {-atm_range_mac_format -atm_range_mac_base -atm_range_mac_incr}
    _m_atm_range_mtu {-atm_range_mtu_base -atm_range_mtu_incr}
    _m_atm_range_encapsulation {-atm_range_encapsulation_format -atm_range_encapsulation_base -atm_range_encapsulation_incr}
    _m_ancp_range_circuit_id {-ancp_range_circuit_id_format -ancp_range_circuit_id_base -ancp_range_circuit_id_incr}
    _m_ancp_range_distribution_algorithm_percent {-ancp_range_distribution_algorithm_percent_base -ancp_range_distribution_algorithm_percent_incr}
    _m_ancp_range_atm_vpi {-ancp_range_atm_vpi_base -ancp_range_atm_vpi_incr}
    _m_ancp_range_nas_ip_address {-ancp_range_nas_ip_address_format -ancp_range_nas_ip_address_base -ancp_range_nas_ip_address_incr}
    _m_ancp_range_nas_ancp_service_port {-ancp_range_nas_ancp_service_port_base -ancp_range_nas_ancp_service_port_incr}
    _m_ancp_range_inner_vlan_id {-ancp_range_inner_vlan_id_base -ancp_range_inner_vlan_id_incr}
    _m_ancp_range_access_aggregation_cb_tlv {-ancp_range_access_aggregation_cb_tlv_format -ancp_range_access_aggregation_cb_tlv_base -ancp_range_access_aggregation_cb_tlv_incr}
    _m_ancp_range_nas_keep_alive_retries {-ancp_range_nas_keep_alive_retries_base -ancp_range_nas_keep_alive_retries_incr}
    _m_ancp_range_nas_keep_alive_timeout {-ancp_range_nas_keep_alive_timeout_base -ancp_range_nas_keep_alive_timeout_incr}
    _m_ancp_range_name {-ancp_range_name_format -ancp_range_name_base -ancp_range_name_incr}
    _m_ancp_range_object_id {-ancp_range_object_id_format -ancp_range_object_id_base -ancp_range_object_id_incr}
    _m_ancp_range_atm_vci {-ancp_range_atm_vci_base -ancp_range_atm_vci_incr}
    _m_ancp_range_nas_ipaddress_incr {-ancp_range_nas_ipaddress_incr_format -ancp_range_nas_ipaddress_incr_base -ancp_range_nas_ipaddress_incr_incr}
    _m_ancp_range_outer_vlan_id {-ancp_range_outer_vlan_id_base -ancp_range_outer_vlan_id_incr}
    _m_ancp_range_nas_ip_address_incr {-ancp_range_nas_ip_address_incr_format -ancp_range_nas_ip_address_incr_base -ancp_range_nas_ip_address_incr_incr}
    _m_ancp_range_ancp_ip_range_count {-ancp_range_ancp_ip_range_count_base -ancp_range_ancp_ip_range_count_incr}
    _m_ancp_range_ancp_ip_range_ip_type {-ancp_range_ancp_ip_range_ip_type_format -ancp_range_ancp_ip_range_ip_type_base -ancp_range_ancp_ip_range_ip_type_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment_mode {-ancp_range_ancp_ip_range_gateway_increment_mode_format -ancp_range_ancp_ip_range_gateway_increment_mode_base -ancp_range_ancp_ip_range_gateway_increment_mode_incr}
    _m_ancp_range_ancp_ip_range_ip_address {-ancp_range_ancp_ip_range_ip_address_format -ancp_range_ancp_ip_range_ip_address_base -ancp_range_ancp_ip_range_ip_address_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment {-ancp_range_ancp_ip_range_gateway_increment_format -ancp_range_ancp_ip_range_gateway_increment_base -ancp_range_ancp_ip_range_gateway_increment_incr}
    _m_ancp_range_ancp_ip_range_increment_by {-ancp_range_ancp_ip_range_increment_by_format -ancp_range_ancp_ip_range_increment_by_base -ancp_range_ancp_ip_range_increment_by_incr}
    _m_ancp_range_ancp_ip_range_gateway_address {-ancp_range_ancp_ip_range_gateway_address_format -ancp_range_ancp_ip_range_gateway_address_base -ancp_range_ancp_ip_range_gateway_address_incr}
    _m_ancp_range_ancp_ip_range_name {-ancp_range_ancp_ip_range_name_format -ancp_range_ancp_ip_range_name_base -ancp_range_ancp_ip_range_name_incr}
    _m_ancp_range_ancp_ip_range_mss {-ancp_range_ancp_ip_range_mss_base -ancp_range_ancp_ip_range_mss_incr}
    _m_ancp_range_ancp_ip_range_object_id {-ancp_range_ancp_ip_range_object_id_format -ancp_range_ancp_ip_range_object_id_base -ancp_range_ancp_ip_range_object_id_incr}
    _m_ancp_range_ancp_ip_range_prefix {-ancp_range_ancp_ip_range_prefix_base -ancp_range_ancp_ip_range_prefix_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment_step {-ancp_range_ancp_pvc_range_vpi_increment_step_base -ancp_range_ancp_pvc_range_vpi_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vci_unique_count {-ancp_range_ancp_pvc_range_vci_unique_count_base -ancp_range_ancp_pvc_range_vci_unique_count_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment_step {-ancp_range_ancp_pvc_range_vci_increment_step_base -ancp_range_ancp_pvc_range_vci_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vpi_first_id {-ancp_range_ancp_pvc_range_vpi_first_id_base -ancp_range_ancp_pvc_range_vpi_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment {-ancp_range_ancp_pvc_range_vpi_increment_base -ancp_range_ancp_pvc_range_vpi_increment_incr}
    _m_ancp_range_ancp_pvc_range_vci_first_id {-ancp_range_ancp_pvc_range_vci_first_id_base -ancp_range_ancp_pvc_range_vci_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment {-ancp_range_ancp_pvc_range_vci_increment_base -ancp_range_ancp_pvc_range_vci_increment_incr}
    _m_ancp_range_ancp_pvc_range_name {-ancp_range_ancp_pvc_range_name_format -ancp_range_ancp_pvc_range_name_base -ancp_range_ancp_pvc_range_name_incr}
    _m_ancp_range_ancp_pvc_range_increment_mode {-ancp_range_ancp_pvc_range_increment_mode_base -ancp_range_ancp_pvc_range_increment_mode_incr}
    _m_ancp_range_ancp_pvc_range_object_id {-ancp_range_ancp_pvc_range_object_id_format -ancp_range_ancp_pvc_range_object_id_base -ancp_range_ancp_pvc_range_object_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_unique_count {-ancp_range_ancp_pvc_range_vpi_unique_count_base -ancp_range_ancp_pvc_range_vpi_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_first_id {-ancp_range_ancp_vlan_range_inner_first_id_base -ancp_range_ancp_vlan_range_inner_first_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment {-ancp_range_ancp_vlan_range_inner_increment_base -ancp_range_ancp_vlan_range_inner_increment_incr}
    _m_ancp_range_ancp_vlan_range_unique_count {-ancp_range_ancp_vlan_range_unique_count_base -ancp_range_ancp_vlan_range_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_name {-ancp_range_ancp_vlan_range_name_format -ancp_range_ancp_vlan_range_name_base -ancp_range_ancp_vlan_range_name_incr}
    _m_ancp_range_ancp_vlan_range_increment_step {-ancp_range_ancp_vlan_range_increment_step_base -ancp_range_ancp_vlan_range_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_tpid {-ancp_range_ancp_vlan_range_tpid_format -ancp_range_ancp_vlan_range_tpid_base -ancp_range_ancp_vlan_range_tpid_incr}
    _m_ancp_range_ancp_vlan_range_priority {-ancp_range_ancp_vlan_range_priority_base -ancp_range_ancp_vlan_range_priority_incr}
    _m_ancp_range_ancp_vlan_range_object_id {-ancp_range_ancp_vlan_range_object_id_format -ancp_range_ancp_vlan_range_object_id_base -ancp_range_ancp_vlan_range_object_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_unique_count {-ancp_range_ancp_vlan_range_inner_unique_count_base -ancp_range_ancp_vlan_range_inner_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_tpid {-ancp_range_ancp_vlan_range_inner_tpid_format -ancp_range_ancp_vlan_range_inner_tpid_base -ancp_range_ancp_vlan_range_inner_tpid_incr}
    _m_ancp_range_ancp_vlan_range_first_id {-ancp_range_ancp_vlan_range_first_id_base -ancp_range_ancp_vlan_range_first_id_incr}
    _m_ancp_range_ancp_vlan_range_increment {-ancp_range_ancp_vlan_range_increment_base -ancp_range_ancp_vlan_range_increment_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment_step {-ancp_range_ancp_vlan_range_inner_increment_step_base -ancp_range_ancp_vlan_range_inner_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_id_incr_mode {-ancp_range_ancp_vlan_range_id_incr_mode_base -ancp_range_ancp_vlan_range_id_incr_mode_incr}
    _m_ancp_range_ancp_vlan_range_inner_priority {-ancp_range_ancp_vlan_range_inner_priority_base -ancp_range_ancp_vlan_range_inner_priority_incr}
    _m_ancp_range_ancp_mac_range_object_id {-ancp_range_ancp_mac_range_object_id_format -ancp_range_ancp_mac_range_object_id_base -ancp_range_ancp_mac_range_object_id_incr}
    _m_ancp_range_ancp_mac_range_increment_by {-ancp_range_ancp_mac_range_increment_by_format -ancp_range_ancp_mac_range_increment_by_base -ancp_range_ancp_mac_range_increment_by_incr}
    _m_ancp_range_ancp_mac_range_name {-ancp_range_ancp_mac_range_name_format -ancp_range_ancp_mac_range_name_base -ancp_range_ancp_mac_range_name_incr}
    _m_ancp_range_ancp_mac_range_count {-ancp_range_ancp_mac_range_count_base -ancp_range_ancp_mac_range_count_incr}
    _m_ancp_range_ancp_mac_range_mac {-ancp_range_ancp_mac_range_mac_format -ancp_range_ancp_mac_range_mac_base -ancp_range_ancp_mac_range_mac_incr}
    _m_ancp_range_ancp_mac_range_mtu {-ancp_range_ancp_mac_range_mtu_base -ancp_range_ancp_mac_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_object_id {-ancp_range_ancp_atm_range_object_id_format -ancp_range_ancp_atm_range_object_id_base -ancp_range_ancp_atm_range_object_id_incr}
    _m_ancp_range_ancp_atm_range_increment_by {-ancp_range_ancp_atm_range_increment_by_format -ancp_range_ancp_atm_range_increment_by_base -ancp_range_ancp_atm_range_increment_by_incr}
    _m_ancp_range_ancp_atm_range_name {-ancp_range_ancp_atm_range_name_format -ancp_range_ancp_atm_range_name_base -ancp_range_ancp_atm_range_name_incr}
    _m_ancp_range_ancp_atm_range_count {-ancp_range_ancp_atm_range_count_base -ancp_range_ancp_atm_range_count_incr}
    _m_ancp_range_ancp_atm_range_mac {-ancp_range_ancp_atm_range_mac_format -ancp_range_ancp_atm_range_mac_base -ancp_range_ancp_atm_range_mac_incr}
    _m_ancp_range_ancp_atm_range_mtu {-ancp_range_ancp_atm_range_mtu_base -ancp_range_ancp_atm_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_encapsulation {-ancp_range_ancp_atm_range_encapsulation_format -ancp_range_ancp_atm_range_encapsulation_base -ancp_range_ancp_atm_range_encapsulation_incr}
    _m_twamp_control_range_object_id {-twamp_control_range_object_id_format -twamp_control_range_object_id_base -twamp_control_range_object_id_incr}
    _m_twamp_control_range_name {-twamp_control_range_name_format -twamp_control_range_name_base -twamp_control_range_name_incr}
    _m_twamp_control_range_mode {-twamp_control_range_mode_format -twamp_control_range_mode_base -twamp_control_range_mode_incr}
    _m_twamp_control_range_control_server_port {-twamp_control_range_control_server_port_base -twamp_control_range_control_server_port_incr}
    _m_twamp_control_range_count {-twamp_control_range_count_base -twamp_control_range_count_incr}
    _m_twamp_control_range_secret {-twamp_control_range_secret_format -twamp_control_range_secret_base -twamp_control_range_secret_incr}
    _m_twamp_control_range_key_id {-twamp_control_range_key_id_format -twamp_control_range_key_id_base -twamp_control_range_key_id_incr}
    _m_twamp_control_range_control_server_ip_increment {-twamp_control_range_control_server_ip_increment_format -twamp_control_range_control_server_ip_increment_base -twamp_control_range_control_server_ip_increment_incr}
    _m_twamp_control_range_control_start_server_ip {-twamp_control_range_control_start_server_ip_format -twamp_control_range_control_start_server_ip_base -twamp_control_range_control_start_server_ip_incr}
    _m_igmp_mld_range_meshing_mode {-igmp_mld_range_meshing_mode_format -igmp_mld_range_meshing_mode_base -igmp_mld_range_meshing_mode_incr}
    _m_igmp_mld_range_report_frequency {-igmp_mld_range_report_frequency_base -igmp_mld_range_report_frequency_incr}
    _m_igmp_mld_range_name {-igmp_mld_range_name_format -igmp_mld_range_name_base -igmp_mld_range_name_incr}
    _m_igmp_mld_range_join_leave_multiplier {-igmp_mld_range_join_leave_multiplier_base -igmp_mld_range_join_leave_multiplier_incr}
    _m_igmp_mld_range_object_id {-igmp_mld_range_object_id_format -igmp_mld_range_object_id_base -igmp_mld_range_object_id_incr}
    _m_igmp_mld_range_version {-igmp_mld_range_version_format -igmp_mld_range_version_base -igmp_mld_range_version_incr}
    _m_iptv_range_inter_stb_start_delay {-iptv_range_inter_stb_start_delay_base -iptv_range_inter_stb_start_delay_incr}
    _m_iptv_range_leave_latency_threshold {-iptv_range_leave_latency_threshold_base -iptv_range_leave_latency_threshold_incr}
    _m_iptv_range_join_latency_threshold {-iptv_range_join_latency_threshold_base -iptv_range_join_latency_threshold_incr}
    _m_iptv_range_report_frequency {-iptv_range_report_frequency_base -iptv_range_report_frequency_incr}
    _m_iptv_range_name {-iptv_range_name_format -iptv_range_name_base -iptv_range_name_incr}
    _m_iptv_range_object_id {-iptv_range_object_id_format -iptv_range_object_id_base -iptv_range_object_id_incr}
    _m_iptv_range_join_leave_multiplier {-iptv_range_join_leave_multiplier_base -iptv_range_join_leave_multiplier_incr}
    _m_iptv_range_stb_leave_join_delay {-iptv_range_stb_leave_join_delay_base -iptv_range_stb_leave_join_delay_incr}
    _m_iptv_range_version {-iptv_range_version_format -iptv_range_version_base -iptv_range_version_incr}
    _m_ip_range_count {-ip_range_count_base -ip_range_count_incr}
    _m_ip_range_ip_type {-ip_range_ip_type_format -ip_range_ip_type_base -ip_range_ip_type_incr}
    _m_ip_range_gateway_increment_mode {-ip_range_gateway_increment_mode_format -ip_range_gateway_increment_mode_base -ip_range_gateway_increment_mode_incr}
    _m_ip_range_ip_address {-ip_range_ip_address_format -ip_range_ip_address_base -ip_range_ip_address_incr}
    _m_ip_range_gateway_increment {-ip_range_gateway_increment_format -ip_range_gateway_increment_base -ip_range_gateway_increment_incr}
    _m_ip_range_increment_by {-ip_range_increment_by_format -ip_range_increment_by_base -ip_range_increment_by_incr}
    _m_ip_range_gateway_address {-ip_range_gateway_address_format -ip_range_gateway_address_base -ip_range_gateway_address_incr}
    _m_ip_range_name {-ip_range_name_format -ip_range_name_base -ip_range_name_incr}
    _m_ip_range_mss {-ip_range_mss_base -ip_range_mss_incr}
    _m_ip_range_object_id {-ip_range_object_id_format -ip_range_object_id_base -ip_range_object_id_incr}
    _m_ip_range_prefix {-ip_range_prefix_base -ip_range_prefix_incr}
    _m_amt_range_amt_unicast_ip {-amt_range_amt_unicast_ip_format -amt_range_amt_unicast_ip_base -amt_range_amt_unicast_ip_incr}
    _m_amt_range_query_timer_interval {-amt_range_query_timer_interval_base -amt_range_query_timer_interval_incr}
    _m_amt_range_amt_udp_src_port_increment {-amt_range_amt_udp_src_port_increment_base -amt_range_amt_udp_src_port_increment_incr}
    _m_amt_range_discovery_retries {-amt_range_discovery_retries_base -amt_range_discovery_retries_incr}
    _m_amt_range_discovery_timeout {-amt_range_discovery_timeout_base -amt_range_discovery_timeout_incr}
    _m_amt_range_request_retries {-amt_range_request_retries_base -amt_range_request_retries_incr}
    _m_amt_range_amt_udp_src_port {-amt_range_amt_udp_src_port_base -amt_range_amt_udp_src_port_incr}
    _m_amt_range_request_timeout {-amt_range_request_timeout_base -amt_range_request_timeout_incr}
    _m_amt_range_name {-amt_range_name_format -amt_range_name_base -amt_range_name_incr}
    _m_amt_range_amt_anycast_ip_increment {-amt_range_amt_anycast_ip_increment_format -amt_range_amt_anycast_ip_increment_base -amt_range_amt_anycast_ip_increment_incr}
    _m_amt_range_object_id {-amt_range_object_id_format -amt_range_object_id_base -amt_range_object_id_incr}
    _m_amt_range_amt_anycast_ip {-amt_range_amt_anycast_ip_format -amt_range_amt_anycast_ip_base -amt_range_amt_anycast_ip_incr}
    _m_amt_range_amt_unicast_ip_increment {-amt_range_amt_unicast_ip_increment_format -amt_range_amt_unicast_ip_increment_base -amt_range_amt_unicast_ip_increment_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -_global_options \
    -cgetmethod _g__global_options -configuremethod _c__global_options -validatemethod _v__global_options \
    -default "" \
    -readonly false
  method _c__global_options {t v} { $self _configure_basic $t $v }
  method _v__global_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__global_options {t} { $self _cget_basic $t }
  option -_port_options \
    -cgetmethod _g__port_options -configuremethod _c__port_options -validatemethod _v__port_options \
    -default "" \
    -readonly false
  method _c__port_options {t v} { $self _configure_basic $t $v }
  method _v__port_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__port_options {t} { $self _cget_basic $t }
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  # XCHILD
  # /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range
  option -range_handle -default UNDEFINED
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -_global_options _globalOptions
    -_port_options _portOptions
    -object_id objectId
    -name name
    -range_handle range
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_name {-name_format -name_base -name_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -esmc_range_object_id \
    -configuremethod _c_./esmcRange/objectId \
    -cgetmethod _g_./esmcRange/objectId \
    -readonly false
  method _c_./esmcRange/objectId {t v} { $self _configure_relative ./esmcRange -object_id $v }
  method _g_./esmcRange/objectId {t} { $self _cget_relative ./esmcRange -object_id }
  # multiplier 
  method _m_esmc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_object_id }
  
  option -esmc_range_rate \
    -configuremethod _c_./esmcRange/rate \
    -cgetmethod _g_./esmcRange/rate \
    -readonly false
  method _c_./esmcRange/rate {t v} { $self _configure_relative ./esmcRange -rate $v }
  method _g_./esmcRange/rate {t} { $self _cget_relative ./esmcRange -rate }
  # multiplier 
  method _m_esmc_range_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -esmc_range_rate }
  
  option -esmc_range_name \
    -configuremethod _c_./esmcRange/name \
    -cgetmethod _g_./esmcRange/name \
    -readonly false
  method _c_./esmcRange/name {t v} { $self _configure_relative ./esmcRange -name $v }
  method _g_./esmcRange/name {t} { $self _cget_relative ./esmcRange -name }
  # multiplier 
  method _m_esmc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_name }
  
  option -esmc_range_ql \
    -configuremethod _c_./esmcRange/ql \
    -cgetmethod _g_./esmcRange/ql \
    -readonly false
  method _c_./esmcRange/ql {t v} { $self _configure_relative ./esmcRange -ql $v }
  method _g_./esmcRange/ql {t} { $self _cget_relative ./esmcRange -ql }
  # multiplier 
  method _m_esmc_range_ql {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_ql }
  
  option -esmc_range_wait_id \
    -configuremethod _c_./esmcRange/waitId \
    -cgetmethod _g_./esmcRange/waitId \
    -readonly false
  method _c_./esmcRange/waitId {t v} { $self _configure_relative ./esmcRange -wait_id $v }
  method _g_./esmcRange/waitId {t} { $self _cget_relative ./esmcRange -wait_id }
  option -esmc_range_enabled \
    -configuremethod _c_./esmcRange/enabled \
    -cgetmethod _g_./esmcRange/enabled \
    -readonly false
  method _c_./esmcRange/enabled {t v} { $self _configure_relative ./esmcRange -enabled $v }
  method _g_./esmcRange/enabled {t} { $self _cget_relative ./esmcRange -enabled }
  option -esmc_range_flag_mode \
    -configuremethod _c_./esmcRange/flagMode \
    -cgetmethod _g_./esmcRange/flagMode \
    -readonly false
  method _c_./esmcRange/flagMode {t v} { $self _configure_relative ./esmcRange -flag_mode $v }
  method _g_./esmcRange/flagMode {t} { $self _cget_relative ./esmcRange -flag_mode }
  # multiplier 
  method _m_esmc_range_flag_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_flag_mode }
  
  option -ip_range_count \
    -configuremethod _c_./ipRange/count \
    -cgetmethod _g_./ipRange/count \
    -readonly false
  method _c_./ipRange/count {t v} { $self _configure_relative ./ipRange -count $v }
  method _g_./ipRange/count {t} { $self _cget_relative ./ipRange -count }
  # multiplier 
  method _m_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_count }
  
  option -ip_range_ip_type \
    -configuremethod _c_./ipRange/ipType \
    -cgetmethod _g_./ipRange/ipType \
    -readonly false
  method _c_./ipRange/ipType {t v} { $self _configure_relative ./ipRange -ip_type $v }
  method _g_./ipRange/ipType {t} { $self _cget_relative ./ipRange -ip_type }
  # multiplier 
  method _m_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_type }
  
  option -ip_range_enabled \
    -configuremethod _c_./ipRange/enabled \
    -cgetmethod _g_./ipRange/enabled \
    -readonly false
  method _c_./ipRange/enabled {t v} { $self _configure_relative ./ipRange -enabled $v }
  method _g_./ipRange/enabled {t} { $self _cget_relative ./ipRange -enabled }
  option -ip_range_gateway_increment_mode \
    -configuremethod _c_./ipRange/gatewayIncrementMode \
    -cgetmethod _g_./ipRange/gatewayIncrementMode \
    -readonly false
  method _c_./ipRange/gatewayIncrementMode {t v} { $self _configure_relative ./ipRange -gateway_increment_mode $v }
  method _g_./ipRange/gatewayIncrementMode {t} { $self _cget_relative ./ipRange -gateway_increment_mode }
  # multiplier 
  method _m_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment_mode }
  
  option -ip_range_enable_gateway_arp \
    -configuremethod _c_./ipRange/enableGatewayArp \
    -cgetmethod _g_./ipRange/enableGatewayArp \
    -readonly false
  method _c_./ipRange/enableGatewayArp {t v} { $self _configure_relative ./ipRange -enable_gateway_arp $v }
  method _g_./ipRange/enableGatewayArp {t} { $self _cget_relative ./ipRange -enable_gateway_arp }
  option -ip_range_ip_address \
    -configuremethod _c_./ipRange/ipAddress \
    -cgetmethod _g_./ipRange/ipAddress \
    -readonly false
  method _c_./ipRange/ipAddress {t v} { $self _configure_relative ./ipRange -ip_address $v }
  method _g_./ipRange/ipAddress {t} { $self _cget_relative ./ipRange -ip_address }
  # multiplier 
  method _m_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_address }
  
  option -ip_range_gateway_increment \
    -configuremethod _c_./ipRange/gatewayIncrement \
    -cgetmethod _g_./ipRange/gatewayIncrement \
    -readonly false
  method _c_./ipRange/gatewayIncrement {t v} { $self _configure_relative ./ipRange -gateway_increment $v }
  method _g_./ipRange/gatewayIncrement {t} { $self _cget_relative ./ipRange -gateway_increment }
  # multiplier 
  method _m_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment }
  
  option -ip_range_increment_by \
    -configuremethod _c_./ipRange/incrementBy \
    -cgetmethod _g_./ipRange/incrementBy \
    -readonly false
  method _c_./ipRange/incrementBy {t v} { $self _configure_relative ./ipRange -increment_by $v }
  method _g_./ipRange/incrementBy {t} { $self _cget_relative ./ipRange -increment_by }
  # multiplier 
  method _m_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_increment_by }
  
  option -ip_range_gateway_address \
    -configuremethod _c_./ipRange/gatewayAddress \
    -cgetmethod _g_./ipRange/gatewayAddress \
    -readonly false
  method _c_./ipRange/gatewayAddress {t v} { $self _configure_relative ./ipRange -gateway_address $v }
  method _g_./ipRange/gatewayAddress {t} { $self _cget_relative ./ipRange -gateway_address }
  # multiplier 
  method _m_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_address }
  
  option -ip_range_name \
    -configuremethod _c_./ipRange/name \
    -cgetmethod _g_./ipRange/name \
    -readonly false
  method _c_./ipRange/name {t v} { $self _configure_relative ./ipRange -name $v }
  method _g_./ipRange/name {t} { $self _cget_relative ./ipRange -name }
  # multiplier 
  method _m_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_name }
  
  option -ip_range_mss \
    -configuremethod _c_./ipRange/mss \
    -cgetmethod _g_./ipRange/mss \
    -readonly false
  method _c_./ipRange/mss {t v} { $self _configure_relative ./ipRange -mss $v }
  method _g_./ipRange/mss {t} { $self _cget_relative ./ipRange -mss }
  # multiplier 
  method _m_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_mss }
  
  option -ip_range_object_id \
    -configuremethod _c_./ipRange/objectId \
    -cgetmethod _g_./ipRange/objectId \
    -readonly false
  method _c_./ipRange/objectId {t v} { $self _configure_relative ./ipRange -object_id $v }
  method _g_./ipRange/objectId {t} { $self _cget_relative ./ipRange -object_id }
  # multiplier 
  method _m_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_object_id }
  
  option -ip_range_prefix \
    -configuremethod _c_./ipRange/prefix \
    -cgetmethod _g_./ipRange/prefix \
    -readonly false
  method _c_./ipRange/prefix {t v} { $self _configure_relative ./ipRange -prefix $v }
  method _g_./ipRange/prefix {t} { $self _cget_relative ./ipRange -prefix }
  # multiplier 
  method _m_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_prefix }
  
  option -ip_range_auto_mac_generation \
    -configuremethod _c_./ipRange/autoMacGeneration \
    -cgetmethod _g_./ipRange/autoMacGeneration \
    -readonly false
  method _c_./ipRange/autoMacGeneration {t v} { $self _configure_relative ./ipRange -auto_mac_generation $v }
  method _g_./ipRange/autoMacGeneration {t} { $self _cget_relative ./ipRange -auto_mac_generation }
  option -amt_range_use_relay_discovery \
    -configuremethod _c_./amtRange/useRelayDiscovery \
    -cgetmethod _g_./amtRange/useRelayDiscovery \
    -readonly false
  method _c_./amtRange/useRelayDiscovery {t v} { $self _configure_relative ./amtRange -use_relay_discovery $v }
  method _g_./amtRange/useRelayDiscovery {t} { $self _cget_relative ./amtRange -use_relay_discovery }
  option -amt_range_amt_unicast_ip \
    -configuremethod _c_./amtRange/amtUnicastIp \
    -cgetmethod _g_./amtRange/amtUnicastIp \
    -readonly false
  method _c_./amtRange/amtUnicastIp {t v} { $self _configure_relative ./amtRange -amt_unicast_ip $v }
  method _g_./amtRange/amtUnicastIp {t} { $self _cget_relative ./amtRange -amt_unicast_ip }
  # multiplier 
  method _m_amt_range_amt_unicast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip }
  
  option -amt_range_enabled \
    -configuremethod _c_./amtRange/enabled \
    -cgetmethod _g_./amtRange/enabled \
    -readonly false
  method _c_./amtRange/enabled {t v} { $self _configure_relative ./amtRange -enabled $v }
  method _g_./amtRange/enabled {t} { $self _cget_relative ./amtRange -enabled }
  option -amt_range_query_timer_interval \
    -configuremethod _c_./amtRange/queryTimerInterval \
    -cgetmethod _g_./amtRange/queryTimerInterval \
    -readonly false
  method _c_./amtRange/queryTimerInterval {t v} { $self _configure_relative ./amtRange -query_timer_interval $v }
  method _g_./amtRange/queryTimerInterval {t} { $self _cget_relative ./amtRange -query_timer_interval }
  # multiplier 
  method _m_amt_range_query_timer_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_query_timer_interval }
  
  option -amt_range_amt_udp_src_port_increment \
    -configuremethod _c_./amtRange/amtUdpSrcPortIncrement \
    -cgetmethod _g_./amtRange/amtUdpSrcPortIncrement \
    -readonly false
  method _c_./amtRange/amtUdpSrcPortIncrement {t v} { $self _configure_relative ./amtRange -amt_udp_src_port_increment $v }
  method _g_./amtRange/amtUdpSrcPortIncrement {t} { $self _cget_relative ./amtRange -amt_udp_src_port_increment }
  # multiplier 
  method _m_amt_range_amt_udp_src_port_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port_increment }
  
  option -amt_range_send_teardown \
    -configuremethod _c_./amtRange/sendTeardown \
    -cgetmethod _g_./amtRange/sendTeardown \
    -readonly false
  method _c_./amtRange/sendTeardown {t v} { $self _configure_relative ./amtRange -send_teardown $v }
  method _g_./amtRange/sendTeardown {t} { $self _cget_relative ./amtRange -send_teardown }
  option -amt_range_discovery_retries \
    -configuremethod _c_./amtRange/discoveryRetries \
    -cgetmethod _g_./amtRange/discoveryRetries \
    -readonly false
  method _c_./amtRange/discoveryRetries {t v} { $self _configure_relative ./amtRange -discovery_retries $v }
  method _g_./amtRange/discoveryRetries {t} { $self _cget_relative ./amtRange -discovery_retries }
  # multiplier 
  method _m_amt_range_discovery_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_retries }
  
  option -amt_range_discovery_timeout \
    -configuremethod _c_./amtRange/discoveryTimeout \
    -cgetmethod _g_./amtRange/discoveryTimeout \
    -readonly false
  method _c_./amtRange/discoveryTimeout {t v} { $self _configure_relative ./amtRange -discovery_timeout $v }
  method _g_./amtRange/discoveryTimeout {t} { $self _cget_relative ./amtRange -discovery_timeout }
  # multiplier 
  method _m_amt_range_discovery_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_timeout }
  
  option -amt_range_request_retries \
    -configuremethod _c_./amtRange/requestRetries \
    -cgetmethod _g_./amtRange/requestRetries \
    -readonly false
  method _c_./amtRange/requestRetries {t v} { $self _configure_relative ./amtRange -request_retries $v }
  method _g_./amtRange/requestRetries {t} { $self _cget_relative ./amtRange -request_retries }
  # multiplier 
  method _m_amt_range_request_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_retries }
  
  option -amt_range_amt_udp_src_port \
    -configuremethod _c_./amtRange/amtUdpSrcPort \
    -cgetmethod _g_./amtRange/amtUdpSrcPort \
    -readonly false
  method _c_./amtRange/amtUdpSrcPort {t v} { $self _configure_relative ./amtRange -amt_udp_src_port $v }
  method _g_./amtRange/amtUdpSrcPort {t} { $self _cget_relative ./amtRange -amt_udp_src_port }
  # multiplier 
  method _m_amt_range_amt_udp_src_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port }
  
  option -amt_range_request_timeout \
    -configuremethod _c_./amtRange/requestTimeout \
    -cgetmethod _g_./amtRange/requestTimeout \
    -readonly false
  method _c_./amtRange/requestTimeout {t v} { $self _configure_relative ./amtRange -request_timeout $v }
  method _g_./amtRange/requestTimeout {t} { $self _cget_relative ./amtRange -request_timeout }
  # multiplier 
  method _m_amt_range_request_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_timeout }
  
  option -amt_range_name \
    -configuremethod _c_./amtRange/name \
    -cgetmethod _g_./amtRange/name \
    -readonly false
  method _c_./amtRange/name {t v} { $self _configure_relative ./amtRange -name $v }
  method _g_./amtRange/name {t} { $self _cget_relative ./amtRange -name }
  # multiplier 
  method _m_amt_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_name }
  
  option -amt_range_amt_anycast_ip_increment \
    -configuremethod _c_./amtRange/amtAnycastIpIncrement \
    -cgetmethod _g_./amtRange/amtAnycastIpIncrement \
    -readonly false
  method _c_./amtRange/amtAnycastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_anycast_ip_increment $v }
  method _g_./amtRange/amtAnycastIpIncrement {t} { $self _cget_relative ./amtRange -amt_anycast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_anycast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip_increment }
  
  option -amt_range_object_id \
    -configuremethod _c_./amtRange/objectId \
    -cgetmethod _g_./amtRange/objectId \
    -readonly false
  method _c_./amtRange/objectId {t v} { $self _configure_relative ./amtRange -object_id $v }
  method _g_./amtRange/objectId {t} { $self _cget_relative ./amtRange -object_id }
  # multiplier 
  method _m_amt_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_object_id }
  
  option -amt_range_override_qt \
    -configuremethod _c_./amtRange/overrideQt \
    -cgetmethod _g_./amtRange/overrideQt \
    -readonly false
  method _c_./amtRange/overrideQt {t v} { $self _configure_relative ./amtRange -override_qt $v }
  method _g_./amtRange/overrideQt {t} { $self _cget_relative ./amtRange -override_qt }
  option -amt_range_amt_anycast_ip \
    -configuremethod _c_./amtRange/amtAnycastIp \
    -cgetmethod _g_./amtRange/amtAnycastIp \
    -readonly false
  method _c_./amtRange/amtAnycastIp {t v} { $self _configure_relative ./amtRange -amt_anycast_ip $v }
  method _g_./amtRange/amtAnycastIp {t} { $self _cget_relative ./amtRange -amt_anycast_ip }
  # multiplier 
  method _m_amt_range_amt_anycast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip }
  
  option -amt_range_amt_unicast_ip_increment \
    -configuremethod _c_./amtRange/amtUnicastIpIncrement \
    -cgetmethod _g_./amtRange/amtUnicastIpIncrement \
    -readonly false
  method _c_./amtRange/amtUnicastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_unicast_ip_increment $v }
  method _g_./amtRange/amtUnicastIpIncrement {t} { $self _cget_relative ./amtRange -amt_unicast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_unicast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip_increment }
  
  option -eapo_udp_range_expected_system_token \
    -configuremethod _c_./eapoUdpRange/expectedSystemToken \
    -cgetmethod _g_./eapoUdpRange/expectedSystemToken \
    -readonly false
  method _c_./eapoUdpRange/expectedSystemToken {t v} { $self _configure_relative ./eapoUdpRange -expected_system_token $v }
  method _g_./eapoUdpRange/expectedSystemToken {t} { $self _cget_relative ./eapoUdpRange -expected_system_token }
  # multiplier 
  method _m_eapo_udp_range_expected_system_token {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_expected_system_token }
  
  option -eapo_udp_range_user_password \
    -configuremethod _c_./eapoUdpRange/userPassword \
    -cgetmethod _g_./eapoUdpRange/userPassword \
    -readonly false
  method _c_./eapoUdpRange/userPassword {t v} { $self _configure_relative ./eapoUdpRange -user_password $v }
  method _g_./eapoUdpRange/userPassword {t} { $self _cget_relative ./eapoUdpRange -user_password }
  # multiplier 
  method _m_eapo_udp_range_user_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_password }
  
  option -eapo_udp_range_enabled \
    -configuremethod _c_./eapoUdpRange/enabled \
    -cgetmethod _g_./eapoUdpRange/enabled \
    -readonly false
  method _c_./eapoUdpRange/enabled {t v} { $self _configure_relative ./eapoUdpRange -enabled $v }
  method _g_./eapoUdpRange/enabled {t} { $self _cget_relative ./eapoUdpRange -enabled }
  option -eapo_udp_range_nac_sequence \
    -configuremethod _c_./eapoUdpRange/nacSequence \
    -cgetmethod _g_./eapoUdpRange/nacSequence \
    -readonly false
  method _c_./eapoUdpRange/nacSequence {t v} { $self _configure_relative ./eapoUdpRange -nac_sequence $v }
  method _g_./eapoUdpRange/nacSequence {t} { $self _cget_relative ./eapoUdpRange -nac_sequence }
  option -eapo_udp_range_fast_stateless_resume \
    -configuremethod _c_./eapoUdpRange/fastStatelessResume \
    -cgetmethod _g_./eapoUdpRange/fastStatelessResume \
    -readonly false
  method _c_./eapoUdpRange/fastStatelessResume {t v} { $self _configure_relative ./eapoUdpRange -fast_stateless_resume $v }
  method _g_./eapoUdpRange/fastStatelessResume {t} { $self _cget_relative ./eapoUdpRange -fast_stateless_resume }
  # multiplier 
  method _m_eapo_udp_range_fast_stateless_resume {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_stateless_resume }
  
  option -eapo_udp_range_user_name \
    -configuremethod _c_./eapoUdpRange/userName \
    -cgetmethod _g_./eapoUdpRange/userName \
    -readonly false
  method _c_./eapoUdpRange/userName {t v} { $self _configure_relative ./eapoUdpRange -user_name $v }
  method _g_./eapoUdpRange/userName {t} { $self _cget_relative ./eapoUdpRange -user_name }
  # multiplier 
  method _m_eapo_udp_range_user_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_name }
  
  option -eapo_udp_range_response_type \
    -configuremethod _c_./eapoUdpRange/responseType \
    -cgetmethod _g_./eapoUdpRange/responseType \
    -readonly false
  method _c_./eapoUdpRange/responseType {t v} { $self _configure_relative ./eapoUdpRange -response_type $v }
  method _g_./eapoUdpRange/responseType {t} { $self _cget_relative ./eapoUdpRange -response_type }
  # multiplier 
  method _m_eapo_udp_range_response_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_response_type }
  
  option -eapo_udp_range_name \
    -configuremethod _c_./eapoUdpRange/name \
    -cgetmethod _g_./eapoUdpRange/name \
    -readonly false
  method _c_./eapoUdpRange/name {t v} { $self _configure_relative ./eapoUdpRange -name $v }
  method _g_./eapoUdpRange/name {t} { $self _cget_relative ./eapoUdpRange -name }
  # multiplier 
  method _m_eapo_udp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_name }
  
  option -eapo_udp_range_protocol \
    -configuremethod _c_./eapoUdpRange/protocol \
    -cgetmethod _g_./eapoUdpRange/protocol \
    -readonly false
  method _c_./eapoUdpRange/protocol {t v} { $self _configure_relative ./eapoUdpRange -protocol $v }
  method _g_./eapoUdpRange/protocol {t} { $self _cget_relative ./eapoUdpRange -protocol }
  # multiplier 
  method _m_eapo_udp_range_protocol {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_protocol }
  
  option -eapo_udp_range_fast_inner_method \
    -configuremethod _c_./eapoUdpRange/fastInnerMethod \
    -cgetmethod _g_./eapoUdpRange/fastInnerMethod \
    -readonly false
  method _c_./eapoUdpRange/fastInnerMethod {t v} { $self _configure_relative ./eapoUdpRange -fast_inner_method $v }
  method _g_./eapoUdpRange/fastInnerMethod {t} { $self _cget_relative ./eapoUdpRange -fast_inner_method }
  # multiplier 
  method _m_eapo_udp_range_fast_inner_method {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_inner_method }
  
  option -eapo_udp_range_fast_provision_mode \
    -configuremethod _c_./eapoUdpRange/fastProvisionMode \
    -cgetmethod _g_./eapoUdpRange/fastProvisionMode \
    -readonly false
  method _c_./eapoUdpRange/fastProvisionMode {t v} { $self _configure_relative ./eapoUdpRange -fast_provision_mode $v }
  method _g_./eapoUdpRange/fastProvisionMode {t} { $self _cget_relative ./eapoUdpRange -fast_provision_mode }
  # multiplier 
  method _m_eapo_udp_range_fast_provision_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_provision_mode }
  
  option -eapo_udp_range_object_id \
    -configuremethod _c_./eapoUdpRange/objectId \
    -cgetmethod _g_./eapoUdpRange/objectId \
    -readonly false
  method _c_./eapoUdpRange/objectId {t v} { $self _configure_relative ./eapoUdpRange -object_id $v }
  method _g_./eapoUdpRange/objectId {t} { $self _cget_relative ./eapoUdpRange -object_id }
  # multiplier 
  method _m_eapo_udp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_object_id }
  
  option -twamp_server_range_iteration_count \
    -configuremethod _c_./twampServerRange/iterationCount \
    -cgetmethod _g_./twampServerRange/iterationCount \
    -readonly false
  method _c_./twampServerRange/iterationCount {t v} { $self _configure_relative ./twampServerRange -iteration_count $v }
  method _g_./twampServerRange/iterationCount {t} { $self _cget_relative ./twampServerRange -iteration_count }
  # multiplier 
  method _m_twamp_server_range_iteration_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_iteration_count }
  
  option -twamp_server_range_count \
    -configuremethod _c_./twampServerRange/count \
    -cgetmethod _g_./twampServerRange/count \
    -readonly false
  method _c_./twampServerRange/count {t v} { $self _configure_relative ./twampServerRange -count $v }
  method _g_./twampServerRange/count {t} { $self _cget_relative ./twampServerRange -count }
  # multiplier 
  method _m_twamp_server_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_count }
  
  option -twamp_server_range_enabled \
    -configuremethod _c_./twampServerRange/enabled \
    -cgetmethod _g_./twampServerRange/enabled \
    -readonly false
  method _c_./twampServerRange/enabled {t v} { $self _configure_relative ./twampServerRange -enabled $v }
  method _g_./twampServerRange/enabled {t} { $self _cget_relative ./twampServerRange -enabled }
  option -twamp_server_range_reflector_port \
    -configuremethod _c_./twampServerRange/reflectorPort \
    -cgetmethod _g_./twampServerRange/reflectorPort \
    -readonly false
  method _c_./twampServerRange/reflectorPort {t v} { $self _configure_relative ./twampServerRange -reflector_port $v }
  method _g_./twampServerRange/reflectorPort {t} { $self _cget_relative ./twampServerRange -reflector_port }
  # multiplier 
  method _m_twamp_server_range_reflector_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_reflector_port }
  
  option -twamp_server_range_max_test_sessions \
    -configuremethod _c_./twampServerRange/maxTestSessions \
    -cgetmethod _g_./twampServerRange/maxTestSessions \
    -readonly false
  method _c_./twampServerRange/maxTestSessions {t v} { $self _configure_relative ./twampServerRange -max_test_sessions $v }
  method _g_./twampServerRange/maxTestSessions {t} { $self _cget_relative ./twampServerRange -max_test_sessions }
  # multiplier 
  method _m_twamp_server_range_max_test_sessions {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_max_test_sessions }
  
  option -twamp_server_range_control_port \
    -configuremethod _c_./twampServerRange/controlPort \
    -cgetmethod _g_./twampServerRange/controlPort \
    -readonly false
  method _c_./twampServerRange/controlPort {t v} { $self _configure_relative ./twampServerRange -control_port $v }
  method _g_./twampServerRange/controlPort {t} { $self _cget_relative ./twampServerRange -control_port }
  # multiplier 
  method _m_twamp_server_range_control_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_control_port }
  
  option -twamp_server_range_key_id \
    -configuremethod _c_./twampServerRange/keyId \
    -cgetmethod _g_./twampServerRange/keyId \
    -readonly false
  method _c_./twampServerRange/keyId {t v} { $self _configure_relative ./twampServerRange -key_id $v }
  method _g_./twampServerRange/keyId {t} { $self _cget_relative ./twampServerRange -key_id }
  # multiplier 
  method _m_twamp_server_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_key_id }
  
  option -twamp_server_range_permitted_ip \
    -configuremethod _c_./twampServerRange/permittedIp \
    -cgetmethod _g_./twampServerRange/permittedIp \
    -readonly false
  method _c_./twampServerRange/permittedIp {t v} { $self _configure_relative ./twampServerRange -permitted_ip $v }
  method _g_./twampServerRange/permittedIp {t} { $self _cget_relative ./twampServerRange -permitted_ip }
  # multiplier 
  method _m_twamp_server_range_permitted_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip }
  
  option -twamp_server_range_name \
    -configuremethod _c_./twampServerRange/name \
    -cgetmethod _g_./twampServerRange/name \
    -readonly false
  method _c_./twampServerRange/name {t v} { $self _configure_relative ./twampServerRange -name $v }
  method _g_./twampServerRange/name {t} { $self _cget_relative ./twampServerRange -name }
  # multiplier 
  method _m_twamp_server_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_name }
  
  option -twamp_server_range_enable_access_control \
    -configuremethod _c_./twampServerRange/enableAccessControl \
    -cgetmethod _g_./twampServerRange/enableAccessControl \
    -readonly false
  method _c_./twampServerRange/enableAccessControl {t v} { $self _configure_relative ./twampServerRange -enable_access_control $v }
  method _g_./twampServerRange/enableAccessControl {t} { $self _cget_relative ./twampServerRange -enable_access_control }
  option -twamp_server_range_object_id \
    -configuremethod _c_./twampServerRange/objectId \
    -cgetmethod _g_./twampServerRange/objectId \
    -readonly false
  method _c_./twampServerRange/objectId {t v} { $self _configure_relative ./twampServerRange -object_id $v }
  method _g_./twampServerRange/objectId {t} { $self _cget_relative ./twampServerRange -object_id }
  # multiplier 
  method _m_twamp_server_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_object_id }
  
  option -twamp_server_range_permitted_ip_increment \
    -configuremethod _c_./twampServerRange/permittedIpIncrement \
    -cgetmethod _g_./twampServerRange/permittedIpIncrement \
    -readonly false
  method _c_./twampServerRange/permittedIpIncrement {t v} { $self _configure_relative ./twampServerRange -permitted_ip_increment $v }
  method _g_./twampServerRange/permittedIpIncrement {t} { $self _cget_relative ./twampServerRange -permitted_ip_increment }
  # multiplier 
  method _m_twamp_server_range_permitted_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip_increment }
  
  option -twamp_server_range_permitted_sender_port \
    -configuremethod _c_./twampServerRange/permittedSenderPort \
    -cgetmethod _g_./twampServerRange/permittedSenderPort \
    -readonly false
  method _c_./twampServerRange/permittedSenderPort {t v} { $self _configure_relative ./twampServerRange -permitted_sender_port $v }
  method _g_./twampServerRange/permittedSenderPort {t} { $self _cget_relative ./twampServerRange -permitted_sender_port }
  # multiplier 
  method _m_twamp_server_range_permitted_sender_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_permitted_sender_port }
  
  option -twamp_server_range_mode \
    -configuremethod _c_./twampServerRange/mode \
    -cgetmethod _g_./twampServerRange/mode \
    -readonly false
  method _c_./twampServerRange/mode {t v} { $self _configure_relative ./twampServerRange -mode $v }
  method _g_./twampServerRange/mode {t} { $self _cget_relative ./twampServerRange -mode }
  # multiplier 
  method _m_twamp_server_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_mode }
  
  option -twamp_server_range_secret \
    -configuremethod _c_./twampServerRange/secret \
    -cgetmethod _g_./twampServerRange/secret \
    -readonly false
  method _c_./twampServerRange/secret {t v} { $self _configure_relative ./twampServerRange -secret $v }
  method _g_./twampServerRange/secret {t} { $self _cget_relative ./twampServerRange -secret }
  # multiplier 
  method _m_twamp_server_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_secret }
  
  option -dot1x_range_user_password \
    -configuremethod _c_./dot1xRange/userPassword \
    -cgetmethod _g_./dot1xRange/userPassword \
    -readonly false
  method _c_./dot1xRange/userPassword {t v} { $self _configure_relative ./dot1xRange -user_password $v }
  method _g_./dot1xRange/userPassword {t} { $self _cget_relative ./dot1xRange -user_password }
  # multiplier 
  method _m_dot1x_range_user_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_user_password }
  
  option -dot1x_range_nac_sequence \
    -configuremethod _c_./dot1xRange/nacSequence \
    -cgetmethod _g_./dot1xRange/nacSequence \
    -readonly false
  method _c_./dot1xRange/nacSequence {t v} { $self _configure_relative ./dot1xRange -nac_sequence $v }
  method _g_./dot1xRange/nacSequence {t} { $self _cget_relative ./dot1xRange -nac_sequence }
  option -dot1x_range_enabled \
    -configuremethod _c_./dot1xRange/enabled \
    -cgetmethod _g_./dot1xRange/enabled \
    -readonly false
  method _c_./dot1xRange/enabled {t v} { $self _configure_relative ./dot1xRange -enabled $v }
  method _g_./dot1xRange/enabled {t} { $self _cget_relative ./dot1xRange -enabled }
  option -dot1x_range_fast_stateless_resume \
    -configuremethod _c_./dot1xRange/fastStatelessResume \
    -cgetmethod _g_./dot1xRange/fastStatelessResume \
    -readonly false
  method _c_./dot1xRange/fastStatelessResume {t v} { $self _configure_relative ./dot1xRange -fast_stateless_resume $v }
  method _g_./dot1xRange/fastStatelessResume {t} { $self _cget_relative ./dot1xRange -fast_stateless_resume }
  # multiplier 
  method _m_dot1x_range_fast_stateless_resume {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_stateless_resume }
  
  option -dot1x_range_user_name \
    -configuremethod _c_./dot1xRange/userName \
    -cgetmethod _g_./dot1xRange/userName \
    -readonly false
  method _c_./dot1xRange/userName {t v} { $self _configure_relative ./dot1xRange -user_name $v }
  method _g_./dot1xRange/userName {t} { $self _cget_relative ./dot1xRange -user_name }
  # multiplier 
  method _m_dot1x_range_user_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_user_name }
  
  option -dot1x_range_host_password \
    -configuremethod _c_./dot1xRange/hostPassword \
    -cgetmethod _g_./dot1xRange/hostPassword \
    -readonly false
  method _c_./dot1xRange/hostPassword {t v} { $self _configure_relative ./dot1xRange -host_password $v }
  method _g_./dot1xRange/hostPassword {t} { $self _cget_relative ./dot1xRange -host_password }
  # multiplier 
  method _m_dot1x_range_host_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_password }
  
  option -dot1x_range_name \
    -configuremethod _c_./dot1xRange/name \
    -cgetmethod _g_./dot1xRange/name \
    -readonly false
  method _c_./dot1xRange/name {t v} { $self _configure_relative ./dot1xRange -name $v }
  method _g_./dot1xRange/name {t} { $self _cget_relative ./dot1xRange -name }
  # multiplier 
  method _m_dot1x_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_name }
  
  option -dot1x_range_wait_id \
    -configuremethod _c_./dot1xRange/waitId \
    -cgetmethod _g_./dot1xRange/waitId \
    -readonly false
  method _c_./dot1xRange/waitId {t v} { $self _configure_relative ./dot1xRange -wait_id $v }
  method _g_./dot1xRange/waitId {t} { $self _cget_relative ./dot1xRange -wait_id }
  option -dot1x_range_protocol \
    -configuremethod _c_./dot1xRange/protocol \
    -cgetmethod _g_./dot1xRange/protocol \
    -readonly false
  method _c_./dot1xRange/protocol {t v} { $self _configure_relative ./dot1xRange -protocol $v }
  method _g_./dot1xRange/protocol {t} { $self _cget_relative ./dot1xRange -protocol }
  # multiplier 
  method _m_dot1x_range_protocol {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_protocol }
  
  option -dot1x_range_fast_inner_method \
    -configuremethod _c_./dot1xRange/fastInnerMethod \
    -cgetmethod _g_./dot1xRange/fastInnerMethod \
    -readonly false
  method _c_./dot1xRange/fastInnerMethod {t v} { $self _configure_relative ./dot1xRange -fast_inner_method $v }
  method _g_./dot1xRange/fastInnerMethod {t} { $self _cget_relative ./dot1xRange -fast_inner_method }
  # multiplier 
  method _m_dot1x_range_fast_inner_method {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_inner_method }
  
  option -dot1x_range_object_id \
    -configuremethod _c_./dot1xRange/objectId \
    -cgetmethod _g_./dot1xRange/objectId \
    -readonly false
  method _c_./dot1xRange/objectId {t v} { $self _configure_relative ./dot1xRange -object_id $v }
  method _g_./dot1xRange/objectId {t} { $self _cget_relative ./dot1xRange -object_id }
  # multiplier 
  method _m_dot1x_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_object_id }
  
  option -dot1x_range_fast_provision_mode \
    -configuremethod _c_./dot1xRange/fastProvisionMode \
    -cgetmethod _g_./dot1xRange/fastProvisionMode \
    -readonly false
  method _c_./dot1xRange/fastProvisionMode {t v} { $self _configure_relative ./dot1xRange -fast_provision_mode $v }
  method _g_./dot1xRange/fastProvisionMode {t} { $self _cget_relative ./dot1xRange -fast_provision_mode }
  # multiplier 
  method _m_dot1x_range_fast_provision_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_provision_mode }
  
  option -dot1x_range_host_auth_mode \
    -configuremethod _c_./dot1xRange/hostAuthMode \
    -cgetmethod _g_./dot1xRange/hostAuthMode \
    -readonly false
  method _c_./dot1xRange/hostAuthMode {t v} { $self _configure_relative ./dot1xRange -host_auth_mode $v }
  method _g_./dot1xRange/hostAuthMode {t} { $self _cget_relative ./dot1xRange -host_auth_mode }
  # multiplier 
  method _m_dot1x_range_host_auth_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_auth_mode }
  
  option -dot1x_range_host_name \
    -configuremethod _c_./dot1xRange/hostName \
    -cgetmethod _g_./dot1xRange/hostName \
    -readonly false
  method _c_./dot1xRange/hostName {t v} { $self _configure_relative ./dot1xRange -host_name $v }
  method _g_./dot1xRange/hostName {t} { $self _cget_relative ./dot1xRange -host_name }
  # multiplier 
  method _m_dot1x_range_host_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_name }
  
  option -web_auth_range_object_id \
    -configuremethod _c_./webAuthRange/objectId \
    -cgetmethod _g_./webAuthRange/objectId \
    -readonly false
  method _c_./webAuthRange/objectId {t v} { $self _configure_relative ./webAuthRange -object_id $v }
  method _g_./webAuthRange/objectId {t} { $self _cget_relative ./webAuthRange -object_id }
  # multiplier 
  method _m_web_auth_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_object_id }
  
  option -web_auth_range_input_value3 \
    -configuremethod _c_./webAuthRange/inputValue3 \
    -cgetmethod _g_./webAuthRange/inputValue3 \
    -readonly false
  method _c_./webAuthRange/inputValue3 {t v} { $self _configure_relative ./webAuthRange -input_value3 $v }
  method _g_./webAuthRange/inputValue3 {t} { $self _cget_relative ./webAuthRange -input_value3 }
  # multiplier 
  method _m_web_auth_range_input_value3 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value3 }
  
  option -web_auth_range_name \
    -configuremethod _c_./webAuthRange/name \
    -cgetmethod _g_./webAuthRange/name \
    -readonly false
  method _c_./webAuthRange/name {t v} { $self _configure_relative ./webAuthRange -name $v }
  method _g_./webAuthRange/name {t} { $self _cget_relative ./webAuthRange -name }
  # multiplier 
  method _m_web_auth_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_name }
  
  option -web_auth_range_expect \
    -configuremethod _c_./webAuthRange/expect \
    -cgetmethod _g_./webAuthRange/expect \
    -readonly false
  method _c_./webAuthRange/expect {t v} { $self _configure_relative ./webAuthRange -expect $v }
  method _g_./webAuthRange/expect {t} { $self _cget_relative ./webAuthRange -expect }
  # multiplier 
  method _m_web_auth_range_expect {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_expect }
  
  option -web_auth_range_input_value1 \
    -configuremethod _c_./webAuthRange/inputValue1 \
    -cgetmethod _g_./webAuthRange/inputValue1 \
    -readonly false
  method _c_./webAuthRange/inputValue1 {t v} { $self _configure_relative ./webAuthRange -input_value1 $v }
  method _g_./webAuthRange/inputValue1 {t} { $self _cget_relative ./webAuthRange -input_value1 }
  # multiplier 
  method _m_web_auth_range_input_value1 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value1 }
  
  option -web_auth_range_enabled \
    -configuremethod _c_./webAuthRange/enabled \
    -cgetmethod _g_./webAuthRange/enabled \
    -readonly false
  method _c_./webAuthRange/enabled {t v} { $self _configure_relative ./webAuthRange -enabled $v }
  method _g_./webAuthRange/enabled {t} { $self _cget_relative ./webAuthRange -enabled }
  option -web_auth_range_input_value2 \
    -configuremethod _c_./webAuthRange/inputValue2 \
    -cgetmethod _g_./webAuthRange/inputValue2 \
    -readonly false
  method _c_./webAuthRange/inputValue2 {t v} { $self _configure_relative ./webAuthRange -input_value2 $v }
  method _g_./webAuthRange/inputValue2 {t} { $self _cget_relative ./webAuthRange -input_value2 }
  # multiplier 
  method _m_web_auth_range_input_value2 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value2 }
  
  option -ptp_range_over_ip_master_mac_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterMacIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_inter_entity }
  
  option -ptp_range_over_ip_communication_mode \
    -configuremethod _c_./ptpRangeOverIp/communicationMode \
    -cgetmethod _g_./ptpRangeOverIp/communicationMode \
    -readonly false
  method _c_./ptpRangeOverIp/communicationMode {t v} { $self _configure_relative ./ptpRangeOverIp -communication_mode $v }
  method _g_./ptpRangeOverIp/communicationMode {t} { $self _cget_relative ./ptpRangeOverIp -communication_mode }
  # multiplier 
  method _m_ptp_range_over_ip_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_communication_mode }
  
  option -ptp_range_over_ip_send_announce_multicast \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceMulticast \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceMulticast \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceMulticast {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_multicast $v }
  method _g_./ptpRangeOverIp/sendAnnounceMulticast {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_multicast }
  option -ptp_range_over_ip_follow_up_delay \
    -configuremethod _c_./ptpRangeOverIp/followUpDelay \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelay \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelay {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay $v }
  method _g_./ptpRangeOverIp/followUpDelay {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay }
  
  option -ptp_range_over_ip_domain \
    -configuremethod _c_./ptpRangeOverIp/domain \
    -cgetmethod _g_./ptpRangeOverIp/domain \
    -readonly false
  method _c_./ptpRangeOverIp/domain {t v} { $self _configure_relative ./ptpRangeOverIp -domain $v }
  method _g_./ptpRangeOverIp/domain {t} { $self _cget_relative ./ptpRangeOverIp -domain }
  # multiplier 
  method _m_ptp_range_over_ip_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_domain }
  
  option -ptp_range_over_ip_announce_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/announceDropRate \
    -cgetmethod _g_./ptpRangeOverIp/announceDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/announceDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -announce_drop_rate $v }
  method _g_./ptpRangeOverIp/announceDropRate {t} { $self _cget_relative ./ptpRangeOverIp -announce_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_drop_rate }
  
  option -ptp_range_over_ip_client_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_increment_by $v }
  method _g_./ptpRangeOverIp/clientIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_increment_by }
  
  option -ptp_range_over_ip_renewal_invited \
    -configuremethod _c_./ptpRangeOverIp/renewalInvited \
    -cgetmethod _g_./ptpRangeOverIp/renewalInvited \
    -readonly false
  method _c_./ptpRangeOverIp/renewalInvited {t v} { $self _configure_relative ./ptpRangeOverIp -renewal_invited $v }
  method _g_./ptpRangeOverIp/renewalInvited {t} { $self _cget_relative ./ptpRangeOverIp -renewal_invited }
  option -ptp_range_over_ip_port_number_increment \
    -configuremethod _c_./ptpRangeOverIp/portNumberIncrement \
    -cgetmethod _g_./ptpRangeOverIp/portNumberIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/portNumberIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -port_number_increment $v }
  method _g_./ptpRangeOverIp/portNumberIncrement {t} { $self _cget_relative ./ptpRangeOverIp -port_number_increment }
  # multiplier 
  method _m_ptp_range_over_ip_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number_increment }
  
  option -ptp_range_over_ip_use_clock_identity \
    -configuremethod _c_./ptpRangeOverIp/useClockIdentity \
    -cgetmethod _g_./ptpRangeOverIp/useClockIdentity \
    -readonly false
  method _c_./ptpRangeOverIp/useClockIdentity {t v} { $self _configure_relative ./ptpRangeOverIp -use_clock_identity $v }
  method _g_./ptpRangeOverIp/useClockIdentity {t} { $self _cget_relative ./ptpRangeOverIp -use_clock_identity }
  option -ptp_range_over_ip_priority1 \
    -configuremethod _c_./ptpRangeOverIp/priority1 \
    -cgetmethod _g_./ptpRangeOverIp/priority1 \
    -readonly false
  method _c_./ptpRangeOverIp/priority1 {t v} { $self _configure_relative ./ptpRangeOverIp -priority1 $v }
  method _g_./ptpRangeOverIp/priority1 {t} { $self _cget_relative ./ptpRangeOverIp -priority1 }
  # multiplier 
  method _m_ptp_range_over_ip_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority1 }
  
  option -ptp_range_over_ip_use_alternate_master_flag \
    -configuremethod _c_./ptpRangeOverIp/useAlternateMasterFlag \
    -cgetmethod _g_./ptpRangeOverIp/useAlternateMasterFlag \
    -readonly false
  method _c_./ptpRangeOverIp/useAlternateMasterFlag {t v} { $self _configure_relative ./ptpRangeOverIp -use_alternate_master_flag $v }
  method _g_./ptpRangeOverIp/useAlternateMasterFlag {t} { $self _cget_relative ./ptpRangeOverIp -use_alternate_master_flag }
  option -ptp_range_over_ip_object_id \
    -configuremethod _c_./ptpRangeOverIp/objectId \
    -cgetmethod _g_./ptpRangeOverIp/objectId \
    -readonly false
  method _c_./ptpRangeOverIp/objectId {t v} { $self _configure_relative ./ptpRangeOverIp -object_id $v }
  method _g_./ptpRangeOverIp/objectId {t} { $self _cget_relative ./ptpRangeOverIp -object_id }
  # multiplier 
  method _m_ptp_range_over_ip_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_object_id }
  
  option -ptp_range_over_ip_delay_resp_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/delayRespReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/delayRespReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_receipt_timeout $v }
  method _g_./ptpRangeOverIp/delayRespReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_receipt_timeout }
  
  option -ptp_range_over_ip_announce_frequency_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceFrequencyTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceFrequencyTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceFrequencyTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_frequency_traceable $v }
  method _g_./ptpRangeOverIp/announceFrequencyTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_frequency_traceable }
  option -ptp_range_over_ip_priority2 \
    -configuremethod _c_./ptpRangeOverIp/priority2 \
    -cgetmethod _g_./ptpRangeOverIp/priority2 \
    -readonly false
  method _c_./ptpRangeOverIp/priority2 {t v} { $self _configure_relative ./ptpRangeOverIp -priority2 $v }
  method _g_./ptpRangeOverIp/priority2 {t} { $self _cget_relative ./ptpRangeOverIp -priority2 }
  # multiplier 
  method _m_ptp_range_over_ip_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority2 }
  
  option -ptp_range_over_ip_announce_current_utc_offset_valid \
    -configuremethod _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -cgetmethod _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -readonly false
  method _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t v} { $self _configure_relative ./ptpRangeOverIp -announce_current_utc_offset_valid $v }
  method _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t} { $self _cget_relative ./ptpRangeOverIp -announce_current_utc_offset_valid }
  option -ptp_range_over_ip_client_mac_address \
    -configuremethod _c_./ptpRangeOverIp/clientMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_address $v }
  method _g_./ptpRangeOverIp/clientMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_address }
  
  option -ptp_range_over_ip_time_source \
    -configuremethod _c_./ptpRangeOverIp/timeSource \
    -cgetmethod _g_./ptpRangeOverIp/timeSource \
    -readonly false
  method _c_./ptpRangeOverIp/timeSource {t v} { $self _configure_relative ./ptpRangeOverIp -time_source $v }
  method _g_./ptpRangeOverIp/timeSource {t} { $self _cget_relative ./ptpRangeOverIp -time_source }
  # multiplier 
  method _m_ptp_range_over_ip_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_time_source }
  
  option -ptp_range_over_ip_steps_removed \
    -configuremethod _c_./ptpRangeOverIp/stepsRemoved \
    -cgetmethod _g_./ptpRangeOverIp/stepsRemoved \
    -readonly false
  method _c_./ptpRangeOverIp/stepsRemoved {t v} { $self _configure_relative ./ptpRangeOverIp -steps_removed $v }
  method _g_./ptpRangeOverIp/stepsRemoved {t} { $self _cget_relative ./ptpRangeOverIp -steps_removed }
  # multiplier 
  method _m_ptp_range_over_ip_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_steps_removed }
  
  option -ptp_range_over_ip_clock_class \
    -configuremethod _c_./ptpRangeOverIp/clockClass \
    -cgetmethod _g_./ptpRangeOverIp/clockClass \
    -readonly false
  method _c_./ptpRangeOverIp/clockClass {t v} { $self _configure_relative ./ptpRangeOverIp -clock_class $v }
  method _g_./ptpRangeOverIp/clockClass {t} { $self _cget_relative ./ptpRangeOverIp -clock_class }
  # multiplier 
  method _m_ptp_range_over_ip_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_class }
  
  option -ptp_range_over_ip_request_attempts \
    -configuremethod _c_./ptpRangeOverIp/requestAttempts \
    -cgetmethod _g_./ptpRangeOverIp/requestAttempts \
    -readonly false
  method _c_./ptpRangeOverIp/requestAttempts {t v} { $self _configure_relative ./ptpRangeOverIp -request_attempts $v }
  method _g_./ptpRangeOverIp/requestAttempts {t} { $self _cget_relative ./ptpRangeOverIp -request_attempts }
  # multiplier 
  method _m_ptp_range_over_ip_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_attempts }
  
  option -ptp_range_over_ip_follow_up_bad_crc_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpBadCrcRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpBadCrcRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpBadCrcRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_bad_crc_rate $v }
  method _g_./ptpRangeOverIp/followUpBadCrcRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_bad_crc_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_bad_crc_rate }
  
  option -ptp_range_over_ip_delay_response_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/delayResponseDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_sync_interval \
    -configuremethod _c_./ptpRangeOverIp/logSyncInterval \
    -cgetmethod _g_./ptpRangeOverIp/logSyncInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logSyncInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_sync_interval $v }
  method _g_./ptpRangeOverIp/logSyncInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_sync_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_sync_interval }
  
  option -ptp_range_over_ip_master_count \
    -configuremethod _c_./ptpRangeOverIp/masterCount \
    -cgetmethod _g_./ptpRangeOverIp/masterCount \
    -readonly false
  method _c_./ptpRangeOverIp/masterCount {t v} { $self _configure_relative ./ptpRangeOverIp -master_count $v }
  method _g_./ptpRangeOverIp/masterCount {t} { $self _cget_relative ./ptpRangeOverIp -master_count }
  # multiplier 
  method _m_ptp_range_over_ip_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_count }
  
  option -ptp_range_over_ip_residence_time \
    -configuremethod _c_./ptpRangeOverIp/residenceTime \
    -cgetmethod _g_./ptpRangeOverIp/residenceTime \
    -readonly false
  method _c_./ptpRangeOverIp/residenceTime {t v} { $self _configure_relative ./ptpRangeOverIp -residence_time $v }
  method _g_./ptpRangeOverIp/residenceTime {t} { $self _cget_relative ./ptpRangeOverIp -residence_time }
  # multiplier 
  method _m_ptp_range_over_ip_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_residence_time }
  
  option -ptp_range_over_ip_signal_interval \
    -configuremethod _c_./ptpRangeOverIp/signalInterval \
    -cgetmethod _g_./ptpRangeOverIp/signalInterval \
    -readonly false
  method _c_./ptpRangeOverIp/signalInterval {t v} { $self _configure_relative ./ptpRangeOverIp -signal_interval $v }
  method _g_./ptpRangeOverIp/signalInterval {t} { $self _cget_relative ./ptpRangeOverIp -signal_interval }
  # multiplier 
  method _m_ptp_range_over_ip_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_interval }
  
  option -ptp_range_over_ip_delay_mechanism \
    -configuremethod _c_./ptpRangeOverIp/delayMechanism \
    -cgetmethod _g_./ptpRangeOverIp/delayMechanism \
    -readonly false
  method _c_./ptpRangeOverIp/delayMechanism {t v} { $self _configure_relative ./ptpRangeOverIp -delay_mechanism $v }
  method _g_./ptpRangeOverIp/delayMechanism {t} { $self _cget_relative ./ptpRangeOverIp -delay_mechanism }
  # multiplier 
  method _m_ptp_range_over_ip_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_mechanism }
  
  option -ptp_range_over_ip_strict_grant \
    -configuremethod _c_./ptpRangeOverIp/strictGrant \
    -cgetmethod _g_./ptpRangeOverIp/strictGrant \
    -readonly false
  method _c_./ptpRangeOverIp/strictGrant {t v} { $self _configure_relative ./ptpRangeOverIp -strict_grant $v }
  method _g_./ptpRangeOverIp/strictGrant {t} { $self _cget_relative ./ptpRangeOverIp -strict_grant }
  option -ptp_range_over_ip_sync_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/syncDropRate \
    -cgetmethod _g_./ptpRangeOverIp/syncDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/syncDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -sync_drop_rate $v }
  method _g_./ptpRangeOverIp/syncDropRate {t} { $self _cget_relative ./ptpRangeOverIp -sync_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_drop_rate }
  
  option -ptp_range_over_ip_drop_signal_req_sync \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqSync \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqSync \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqSync {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_sync $v }
  method _g_./ptpRangeOverIp/dropSignalReqSync {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_sync }
  option -ptp_range_over_ip_clock_increment \
    -configuremethod _c_./ptpRangeOverIp/clockIncrement \
    -cgetmethod _g_./ptpRangeOverIp/clockIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/clockIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -clock_increment $v }
  method _g_./ptpRangeOverIp/clockIncrement {t} { $self _cget_relative ./ptpRangeOverIp -clock_increment }
  # multiplier 
  method _m_ptp_range_over_ip_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_increment }
  
  option -ptp_range_over_ip_announce_ptp_timescale \
    -configuremethod _c_./ptpRangeOverIp/announcePtpTimescale \
    -cgetmethod _g_./ptpRangeOverIp/announcePtpTimescale \
    -readonly false
  method _c_./ptpRangeOverIp/announcePtpTimescale {t v} { $self _configure_relative ./ptpRangeOverIp -announce_ptp_timescale $v }
  method _g_./ptpRangeOverIp/announcePtpTimescale {t} { $self _cget_relative ./ptpRangeOverIp -announce_ptp_timescale }
  option -ptp_range_over_ip_signal_unicast_handling \
    -configuremethod _c_./ptpRangeOverIp/signalUnicastHandling \
    -cgetmethod _g_./ptpRangeOverIp/signalUnicastHandling \
    -readonly false
  method _c_./ptpRangeOverIp/signalUnicastHandling {t v} { $self _configure_relative ./ptpRangeOverIp -signal_unicast_handling $v }
  method _g_./ptpRangeOverIp/signalUnicastHandling {t} { $self _cget_relative ./ptpRangeOverIp -signal_unicast_handling }
  # multiplier 
  method _m_ptp_range_over_ip_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_unicast_handling }
  
  option -ptp_range_over_ip_enabled \
    -configuremethod _c_./ptpRangeOverIp/enabled \
    -cgetmethod _g_./ptpRangeOverIp/enabled \
    -readonly false
  method _c_./ptpRangeOverIp/enabled {t v} { $self _configure_relative ./ptpRangeOverIp -enabled $v }
  method _g_./ptpRangeOverIp/enabled {t} { $self _cget_relative ./ptpRangeOverIp -enabled }
  option -ptp_range_over_ip_timestamp_offset \
    -configuremethod _c_./ptpRangeOverIp/timestampOffset \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffset \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffset {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset $v }
  method _g_./ptpRangeOverIp/timestampOffset {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset }
  
  option -ptp_range_over_ip_master_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_by $v }
  method _g_./ptpRangeOverIp/masterIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_by }
  
  option -ptp_range_over_ip_request_interval \
    -configuremethod _c_./ptpRangeOverIp/requestInterval \
    -cgetmethod _g_./ptpRangeOverIp/requestInterval \
    -readonly false
  method _c_./ptpRangeOverIp/requestInterval {t v} { $self _configure_relative ./ptpRangeOverIp -request_interval $v }
  method _g_./ptpRangeOverIp/requestInterval {t} { $self _cget_relative ./ptpRangeOverIp -request_interval }
  # multiplier 
  method _m_ptp_range_over_ip_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_interval }
  
  option -ptp_range_over_ip_ip_tos \
    -configuremethod _c_./ptpRangeOverIp/ipTos \
    -cgetmethod _g_./ptpRangeOverIp/ipTos \
    -readonly false
  method _c_./ptpRangeOverIp/ipTos {t v} { $self _configure_relative ./ptpRangeOverIp -ip_tos $v }
  method _g_./ptpRangeOverIp/ipTos {t} { $self _cget_relative ./ptpRangeOverIp -ip_tos }
  # multiplier 
  method _m_ptp_range_over_ip_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_ip_tos }
  
  option -ptp_range_over_ip_request_holddown \
    -configuremethod _c_./ptpRangeOverIp/requestHolddown \
    -cgetmethod _g_./ptpRangeOverIp/requestHolddown \
    -readonly false
  method _c_./ptpRangeOverIp/requestHolddown {t v} { $self _configure_relative ./ptpRangeOverIp -request_holddown $v }
  method _g_./ptpRangeOverIp/requestHolddown {t} { $self _cget_relative ./ptpRangeOverIp -request_holddown }
  # multiplier 
  method _m_ptp_range_over_ip_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_holddown }
  
  option -ptp_range_over_ip_client_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_increment_by $v }
  method _g_./ptpRangeOverIp/clientMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_increment_by }
  
  option -ptp_range_over_ip_name \
    -configuremethod _c_./ptpRangeOverIp/name \
    -cgetmethod _g_./ptpRangeOverIp/name \
    -readonly false
  method _c_./ptpRangeOverIp/name {t v} { $self _configure_relative ./ptpRangeOverIp -name $v }
  method _g_./ptpRangeOverIp/name {t} { $self _cget_relative ./ptpRangeOverIp -name }
  # multiplier 
  method _m_ptp_range_over_ip_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_name }
  
  option -ptp_range_over_ip_drop_signal_req_announce \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqAnnounce \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqAnnounce \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqAnnounce {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_announce $v }
  method _g_./ptpRangeOverIp/dropSignalReqAnnounce {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_announce }
  option -ptp_range_over_ip_master_ip_address \
    -configuremethod _c_./ptpRangeOverIp/masterIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_address $v }
  method _g_./ptpRangeOverIp/masterIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_address }
  
  option -ptp_range_over_ip_first_clock \
    -configuremethod _c_./ptpRangeOverIp/firstClock \
    -cgetmethod _g_./ptpRangeOverIp/firstClock \
    -readonly false
  method _c_./ptpRangeOverIp/firstClock {t v} { $self _configure_relative ./ptpRangeOverIp -first_clock $v }
  method _g_./ptpRangeOverIp/firstClock {t} { $self _cget_relative ./ptpRangeOverIp -first_clock }
  # multiplier 
  method _m_ptp_range_over_ip_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_first_clock }
  
  option -ptp_range_over_ip_master_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_by $v }
  method _g_./ptpRangeOverIp/masterMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_by }
  
  option -ptp_range_over_ip_send_cancel_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendCancelTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendCancelTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendCancelTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_cancel_tlv $v }
  method _g_./ptpRangeOverIp/sendCancelTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_cancel_tlv }
  option -ptp_range_over_ip_port_number \
    -configuremethod _c_./ptpRangeOverIp/portNumber \
    -cgetmethod _g_./ptpRangeOverIp/portNumber \
    -readonly false
  method _c_./ptpRangeOverIp/portNumber {t v} { $self _configure_relative ./ptpRangeOverIp -port_number $v }
  method _g_./ptpRangeOverIp/portNumber {t} { $self _cget_relative ./ptpRangeOverIp -port_number }
  # multiplier 
  method _m_ptp_range_over_ip_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number }
  
  option -ptp_range_over_ip_client_ip_address \
    -configuremethod _c_./ptpRangeOverIp/clientIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_address $v }
  method _g_./ptpRangeOverIp/clientIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_address }
  
  option -ptp_range_over_ip_announce_leap59 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap59 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap59 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap59 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap59 $v }
  method _g_./ptpRangeOverIp/announceLeap59 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap59 }
  option -ptp_range_over_ip_send_announce_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_tlv $v }
  method _g_./ptpRangeOverIp/sendAnnounceTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_tlv }
  option -ptp_range_over_ip_sync_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/syncReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/syncReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/syncReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -sync_receipt_timeout $v }
  method _g_./ptpRangeOverIp/syncReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -sync_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_receipt_timeout }
  
  option -ptp_range_over_ip_announce_leap61 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap61 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap61 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap61 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap61 $v }
  method _g_./ptpRangeOverIp/announceLeap61 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap61 }
  option -ptp_range_over_ip_grant_delay_resp_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantDelayRespDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval $v }
  method _g_./ptpRangeOverIp/grantDelayRespDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_delay_resp_duration_interval }
  
  option -ptp_range_over_ip_timestamp_offset_variation \
    -configuremethod _c_./ptpRangeOverIp/timestampOffsetVariation \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffsetVariation \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffsetVariation {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset_variation $v }
  method _g_./ptpRangeOverIp/timestampOffsetVariation {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset_variation }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset_variation }
  
  option -ptp_range_over_ip_follow_up_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDropRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_drop_rate $v }
  method _g_./ptpRangeOverIp/followUpDropRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_drop_rate }
  
  option -ptp_range_over_ip_master_mac_address \
    -configuremethod _c_./ptpRangeOverIp/masterMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_address $v }
  method _g_./ptpRangeOverIp/masterMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_address }
  
  option -ptp_range_over_ip_drop_signal_req_delay_resp \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqDelayResp \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqDelayResp \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqDelayResp {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_delay_resp $v }
  method _g_./ptpRangeOverIp/dropSignalReqDelayResp {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_delay_resp }
  option -ptp_range_over_ip_grant_sync_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantSyncDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantSyncDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantSyncDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_sync_duration_interval $v }
  method _g_./ptpRangeOverIp/grantSyncDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_sync_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_sync_duration_interval }
  
  option -ptp_range_over_ip_learn_port_id \
    -configuremethod _c_./ptpRangeOverIp/learnPortId \
    -cgetmethod _g_./ptpRangeOverIp/learnPortId \
    -readonly false
  method _c_./ptpRangeOverIp/learnPortId {t v} { $self _configure_relative ./ptpRangeOverIp -learn_port_id $v }
  method _g_./ptpRangeOverIp/learnPortId {t} { $self _cget_relative ./ptpRangeOverIp -learn_port_id }
  option -ptp_range_over_ip_delay_response_delay \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelay \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelay \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelay {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay $v }
  method _g_./ptpRangeOverIp/delayResponseDelay {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay }
  
  option -ptp_range_over_ip_grant_unicast_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantUnicastDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantUnicastDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantUnicastDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_unicast_duration_interval $v }
  method _g_./ptpRangeOverIp/grantUnicastDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_unicast_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_unicast_duration_interval }
  
  option -ptp_range_over_ip_follow_up_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/followUpDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_delay_req_interval \
    -configuremethod _c_./ptpRangeOverIp/logDelayReqInterval \
    -cgetmethod _g_./ptpRangeOverIp/logDelayReqInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logDelayReqInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_delay_req_interval $v }
  method _g_./ptpRangeOverIp/logDelayReqInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_delay_req_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_delay_req_interval }
  
  option -ptp_range_over_ip_clock_accuracy \
    -configuremethod _c_./ptpRangeOverIp/clockAccuracy \
    -cgetmethod _g_./ptpRangeOverIp/clockAccuracy \
    -readonly false
  method _c_./ptpRangeOverIp/clockAccuracy {t v} { $self _configure_relative ./ptpRangeOverIp -clock_accuracy $v }
  method _g_./ptpRangeOverIp/clockAccuracy {t} { $self _cget_relative ./ptpRangeOverIp -clock_accuracy }
  # multiplier 
  method _m_ptp_range_over_ip_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_accuracy }
  
  option -ptp_range_over_ip_client_count \
    -configuremethod _c_./ptpRangeOverIp/clientCount \
    -cgetmethod _g_./ptpRangeOverIp/clientCount \
    -readonly false
  method _c_./ptpRangeOverIp/clientCount {t v} { $self _configure_relative ./ptpRangeOverIp -client_count $v }
  method _g_./ptpRangeOverIp/clientCount {t} { $self _cget_relative ./ptpRangeOverIp -client_count }
  # multiplier 
  method _m_ptp_range_over_ip_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_count }
  
  option -ptp_range_over_ip_announce_time_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceTimeTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceTimeTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceTimeTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_time_traceable $v }
  method _g_./ptpRangeOverIp/announceTimeTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_time_traceable }
  option -ptp_range_over_ip_step_mode \
    -configuremethod _c_./ptpRangeOverIp/stepMode \
    -cgetmethod _g_./ptpRangeOverIp/stepMode \
    -readonly false
  method _c_./ptpRangeOverIp/stepMode {t v} { $self _configure_relative ./ptpRangeOverIp -step_mode $v }
  method _g_./ptpRangeOverIp/stepMode {t} { $self _cget_relative ./ptpRangeOverIp -step_mode }
  # multiplier 
  method _m_ptp_range_over_ip_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_step_mode }
  
  option -ptp_range_over_ip_master_ip_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterIpIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_inter_entity }
  
  option -ptp_range_over_ip_delay_resp_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/delayRespDropRate \
    -cgetmethod _g_./ptpRangeOverIp/delayRespDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_drop_rate $v }
  method _g_./ptpRangeOverIp/delayRespDropRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_drop_rate }
  
  option -ptp_range_over_ip_announce_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/announceReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/announceReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/announceReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -announce_receipt_timeout $v }
  method _g_./ptpRangeOverIp/announceReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -announce_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_receipt_timeout }
  
  option -ptp_range_over_ip_rx_calibration \
    -configuremethod _c_./ptpRangeOverIp/rxCalibration \
    -cgetmethod _g_./ptpRangeOverIp/rxCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/rxCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -rx_calibration $v }
  method _g_./ptpRangeOverIp/rxCalibration {t} { $self _cget_relative ./ptpRangeOverIp -rx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_rx_calibration }
  
  option -ptp_range_over_ip_tx_calibration \
    -configuremethod _c_./ptpRangeOverIp/txCalibration \
    -cgetmethod _g_./ptpRangeOverIp/txCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/txCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -tx_calibration $v }
  method _g_./ptpRangeOverIp/txCalibration {t} { $self _cget_relative ./ptpRangeOverIp -tx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_tx_calibration }
  
  option -ptp_range_over_ip_log_announce_interval \
    -configuremethod _c_./ptpRangeOverIp/logAnnounceInterval \
    -cgetmethod _g_./ptpRangeOverIp/logAnnounceInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logAnnounceInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_announce_interval $v }
  method _g_./ptpRangeOverIp/logAnnounceInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_announce_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_announce_interval }
  
  option -mac_range_object_id \
    -configuremethod _c_./macRange/objectId \
    -cgetmethod _g_./macRange/objectId \
    -readonly false
  method _c_./macRange/objectId {t v} { $self _configure_relative ./macRange -object_id $v }
  method _g_./macRange/objectId {t} { $self _cget_relative ./macRange -object_id }
  # multiplier 
  method _m_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_object_id }
  
  option -mac_range_increment_by \
    -configuremethod _c_./macRange/incrementBy \
    -cgetmethod _g_./macRange/incrementBy \
    -readonly false
  method _c_./macRange/incrementBy {t v} { $self _configure_relative ./macRange -increment_by $v }
  method _g_./macRange/incrementBy {t} { $self _cget_relative ./macRange -increment_by }
  # multiplier 
  method _m_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_increment_by }
  
  option -mac_range_name \
    -configuremethod _c_./macRange/name \
    -cgetmethod _g_./macRange/name \
    -readonly false
  method _c_./macRange/name {t v} { $self _configure_relative ./macRange -name $v }
  method _g_./macRange/name {t} { $self _cget_relative ./macRange -name }
  # multiplier 
  method _m_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_name }
  
  option -mac_range_count \
    -configuremethod _c_./macRange/count \
    -cgetmethod _g_./macRange/count \
    -readonly false
  method _c_./macRange/count {t v} { $self _configure_relative ./macRange -count $v }
  method _g_./macRange/count {t} { $self _cget_relative ./macRange -count }
  # multiplier 
  method _m_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_count }
  
  option -mac_range_mac \
    -configuremethod _c_./macRange/mac \
    -cgetmethod _g_./macRange/mac \
    -readonly false
  method _c_./macRange/mac {t v} { $self _configure_relative ./macRange -mac $v }
  method _g_./macRange/mac {t} { $self _cget_relative ./macRange -mac }
  # multiplier 
  method _m_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_mac }
  
  option -mac_range_mtu \
    -configuremethod _c_./macRange/mtu \
    -cgetmethod _g_./macRange/mtu \
    -readonly false
  method _c_./macRange/mtu {t v} { $self _configure_relative ./macRange -mtu $v }
  method _g_./macRange/mtu {t} { $self _cget_relative ./macRange -mtu }
  # multiplier 
  method _m_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_mtu }
  
  option -mac_range_enabled \
    -configuremethod _c_./macRange/enabled \
    -cgetmethod _g_./macRange/enabled \
    -readonly false
  method _c_./macRange/enabled {t v} { $self _configure_relative ./macRange -enabled $v }
  method _g_./macRange/enabled {t} { $self _cget_relative ./macRange -enabled }
  option -vlan_range_inner_first_id \
    -configuremethod _c_./vlanRange/innerFirstId \
    -cgetmethod _g_./vlanRange/innerFirstId \
    -readonly false
  method _c_./vlanRange/innerFirstId {t v} { $self _configure_relative ./vlanRange -inner_first_id $v }
  method _g_./vlanRange/innerFirstId {t} { $self _cget_relative ./vlanRange -inner_first_id }
  # multiplier 
  method _m_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_first_id }
  
  option -vlan_range_inner_increment \
    -configuremethod _c_./vlanRange/innerIncrement \
    -cgetmethod _g_./vlanRange/innerIncrement \
    -readonly false
  method _c_./vlanRange/innerIncrement {t v} { $self _configure_relative ./vlanRange -inner_increment $v }
  method _g_./vlanRange/innerIncrement {t} { $self _cget_relative ./vlanRange -inner_increment }
  # multiplier 
  method _m_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment }
  
  option -vlan_range_enabled \
    -configuremethod _c_./vlanRange/enabled \
    -cgetmethod _g_./vlanRange/enabled \
    -readonly false
  method _c_./vlanRange/enabled {t v} { $self _configure_relative ./vlanRange -enabled $v }
  method _g_./vlanRange/enabled {t} { $self _cget_relative ./vlanRange -enabled }
  option -vlan_range_unique_count \
    -configuremethod _c_./vlanRange/uniqueCount \
    -cgetmethod _g_./vlanRange/uniqueCount \
    -readonly false
  method _c_./vlanRange/uniqueCount {t v} { $self _configure_relative ./vlanRange -unique_count $v }
  method _g_./vlanRange/uniqueCount {t} { $self _cget_relative ./vlanRange -unique_count }
  # multiplier 
  method _m_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_unique_count }
  
  option -vlan_range_name \
    -configuremethod _c_./vlanRange/name \
    -cgetmethod _g_./vlanRange/name \
    -readonly false
  method _c_./vlanRange/name {t v} { $self _configure_relative ./vlanRange -name $v }
  method _g_./vlanRange/name {t} { $self _cget_relative ./vlanRange -name }
  # multiplier 
  method _m_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_name }
  
  option -vlan_range_increment_step \
    -configuremethod _c_./vlanRange/incrementStep \
    -cgetmethod _g_./vlanRange/incrementStep \
    -readonly false
  method _c_./vlanRange/incrementStep {t v} { $self _configure_relative ./vlanRange -increment_step $v }
  method _g_./vlanRange/incrementStep {t} { $self _cget_relative ./vlanRange -increment_step }
  # multiplier 
  method _m_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment_step }
  
  option -vlan_range_tpid \
    -configuremethod _c_./vlanRange/tpid \
    -cgetmethod _g_./vlanRange/tpid \
    -readonly false
  method _c_./vlanRange/tpid {t v} { $self _configure_relative ./vlanRange -tpid $v }
  method _g_./vlanRange/tpid {t} { $self _cget_relative ./vlanRange -tpid }
  # multiplier 
  method _m_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_tpid }
  
  option -vlan_range_priority \
    -configuremethod _c_./vlanRange/priority \
    -cgetmethod _g_./vlanRange/priority \
    -readonly false
  method _c_./vlanRange/priority {t v} { $self _configure_relative ./vlanRange -priority $v }
  method _g_./vlanRange/priority {t} { $self _cget_relative ./vlanRange -priority }
  # multiplier 
  method _m_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_priority }
  
  option -vlan_range_inner_enable \
    -configuremethod _c_./vlanRange/innerEnable \
    -cgetmethod _g_./vlanRange/innerEnable \
    -readonly false
  method _c_./vlanRange/innerEnable {t v} { $self _configure_relative ./vlanRange -inner_enable $v }
  method _g_./vlanRange/innerEnable {t} { $self _cget_relative ./vlanRange -inner_enable }
  option -vlan_range_object_id \
    -configuremethod _c_./vlanRange/objectId \
    -cgetmethod _g_./vlanRange/objectId \
    -readonly false
  method _c_./vlanRange/objectId {t v} { $self _configure_relative ./vlanRange -object_id $v }
  method _g_./vlanRange/objectId {t} { $self _cget_relative ./vlanRange -object_id }
  # multiplier 
  method _m_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_object_id }
  
  option -vlan_range_inner_unique_count \
    -configuremethod _c_./vlanRange/innerUniqueCount \
    -cgetmethod _g_./vlanRange/innerUniqueCount \
    -readonly false
  method _c_./vlanRange/innerUniqueCount {t v} { $self _configure_relative ./vlanRange -inner_unique_count $v }
  method _g_./vlanRange/innerUniqueCount {t} { $self _cget_relative ./vlanRange -inner_unique_count }
  # multiplier 
  method _m_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_unique_count }
  
  option -vlan_range_inner_tpid \
    -configuremethod _c_./vlanRange/innerTpid \
    -cgetmethod _g_./vlanRange/innerTpid \
    -readonly false
  method _c_./vlanRange/innerTpid {t v} { $self _configure_relative ./vlanRange -inner_tpid $v }
  method _g_./vlanRange/innerTpid {t} { $self _cget_relative ./vlanRange -inner_tpid }
  # multiplier 
  method _m_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_inner_tpid }
  
  option -vlan_range_first_id \
    -configuremethod _c_./vlanRange/firstId \
    -cgetmethod _g_./vlanRange/firstId \
    -readonly false
  method _c_./vlanRange/firstId {t v} { $self _configure_relative ./vlanRange -first_id $v }
  method _g_./vlanRange/firstId {t} { $self _cget_relative ./vlanRange -first_id }
  # multiplier 
  method _m_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_first_id }
  
  option -vlan_range_increment \
    -configuremethod _c_./vlanRange/increment \
    -cgetmethod _g_./vlanRange/increment \
    -readonly false
  method _c_./vlanRange/increment {t v} { $self _configure_relative ./vlanRange -increment $v }
  method _g_./vlanRange/increment {t} { $self _cget_relative ./vlanRange -increment }
  # multiplier 
  method _m_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment }
  
  option -vlan_range_inner_increment_step \
    -configuremethod _c_./vlanRange/innerIncrementStep \
    -cgetmethod _g_./vlanRange/innerIncrementStep \
    -readonly false
  method _c_./vlanRange/innerIncrementStep {t v} { $self _configure_relative ./vlanRange -inner_increment_step $v }
  method _g_./vlanRange/innerIncrementStep {t} { $self _cget_relative ./vlanRange -inner_increment_step }
  # multiplier 
  method _m_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment_step }
  
  option -vlan_range_id_incr_mode \
    -configuremethod _c_./vlanRange/idIncrMode \
    -cgetmethod _g_./vlanRange/idIncrMode \
    -readonly false
  method _c_./vlanRange/idIncrMode {t v} { $self _configure_relative ./vlanRange -id_incr_mode $v }
  method _g_./vlanRange/idIncrMode {t} { $self _cget_relative ./vlanRange -id_incr_mode }
  # multiplier 
  method _m_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_id_incr_mode }
  
  option -vlan_range_inner_priority \
    -configuremethod _c_./vlanRange/innerPriority \
    -cgetmethod _g_./vlanRange/innerPriority \
    -readonly false
  method _c_./vlanRange/innerPriority {t v} { $self _configure_relative ./vlanRange -inner_priority $v }
  method _g_./vlanRange/innerPriority {t} { $self _cget_relative ./vlanRange -inner_priority }
  # multiplier 
  method _m_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_priority }
  
  option -vlan_range_vlan_id_info \
    -configuremethod _c_./vlanRange/vlanIdInfo \
    -cgetmethod _g_./vlanRange/vlanIdInfo \
    -readonly false
  method _c_./vlanRange/vlanIdInfo {t v} { $self _configure_relative ./vlanRange -vlan_id_info $v }
  method _g_./vlanRange/vlanIdInfo {t} { $self _cget_relative ./vlanRange -vlan_id_info }
  option -ptp_range_over_mac_master_mac_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverMac/masterMacIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverMac/masterMacIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_increment_inter_entity $v }
  method _g_./ptpRangeOverMac/masterMacIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_increment_inter_entity }
  
  option -ptp_range_over_mac_communication_mode \
    -configuremethod _c_./ptpRangeOverMac/communicationMode \
    -cgetmethod _g_./ptpRangeOverMac/communicationMode \
    -readonly false
  method _c_./ptpRangeOverMac/communicationMode {t v} { $self _configure_relative ./ptpRangeOverMac -communication_mode $v }
  method _g_./ptpRangeOverMac/communicationMode {t} { $self _cget_relative ./ptpRangeOverMac -communication_mode }
  # multiplier 
  method _m_ptp_range_over_mac_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_communication_mode }
  
  option -ptp_range_over_mac_send_announce_multicast \
    -configuremethod _c_./ptpRangeOverMac/sendAnnounceMulticast \
    -cgetmethod _g_./ptpRangeOverMac/sendAnnounceMulticast \
    -readonly false
  method _c_./ptpRangeOverMac/sendAnnounceMulticast {t v} { $self _configure_relative ./ptpRangeOverMac -send_announce_multicast $v }
  method _g_./ptpRangeOverMac/sendAnnounceMulticast {t} { $self _cget_relative ./ptpRangeOverMac -send_announce_multicast }
  option -ptp_range_over_mac_follow_up_delay \
    -configuremethod _c_./ptpRangeOverMac/followUpDelay \
    -cgetmethod _g_./ptpRangeOverMac/followUpDelay \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDelay {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_delay $v }
  method _g_./ptpRangeOverMac/followUpDelay {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_delay }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_delay }
  
  option -ptp_range_over_mac_domain \
    -configuremethod _c_./ptpRangeOverMac/domain \
    -cgetmethod _g_./ptpRangeOverMac/domain \
    -readonly false
  method _c_./ptpRangeOverMac/domain {t v} { $self _configure_relative ./ptpRangeOverMac -domain $v }
  method _g_./ptpRangeOverMac/domain {t} { $self _cget_relative ./ptpRangeOverMac -domain }
  # multiplier 
  method _m_ptp_range_over_mac_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_domain }
  
  option -ptp_range_over_mac_announce_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/announceDropRate \
    -cgetmethod _g_./ptpRangeOverMac/announceDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/announceDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -announce_drop_rate $v }
  method _g_./ptpRangeOverMac/announceDropRate {t} { $self _cget_relative ./ptpRangeOverMac -announce_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_announce_drop_rate }
  
  option -ptp_range_over_mac_client_ip_increment_by \
    -configuremethod _c_./ptpRangeOverMac/clientIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/clientIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/clientIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -client_ip_increment_by $v }
  method _g_./ptpRangeOverMac/clientIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -client_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_ip_increment_by }
  
  option -ptp_range_over_mac_renewal_invited \
    -configuremethod _c_./ptpRangeOverMac/renewalInvited \
    -cgetmethod _g_./ptpRangeOverMac/renewalInvited \
    -readonly false
  method _c_./ptpRangeOverMac/renewalInvited {t v} { $self _configure_relative ./ptpRangeOverMac -renewal_invited $v }
  method _g_./ptpRangeOverMac/renewalInvited {t} { $self _cget_relative ./ptpRangeOverMac -renewal_invited }
  option -ptp_range_over_mac_port_number_increment \
    -configuremethod _c_./ptpRangeOverMac/portNumberIncrement \
    -cgetmethod _g_./ptpRangeOverMac/portNumberIncrement \
    -readonly false
  method _c_./ptpRangeOverMac/portNumberIncrement {t v} { $self _configure_relative ./ptpRangeOverMac -port_number_increment $v }
  method _g_./ptpRangeOverMac/portNumberIncrement {t} { $self _cget_relative ./ptpRangeOverMac -port_number_increment }
  # multiplier 
  method _m_ptp_range_over_mac_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_port_number_increment }
  
  option -ptp_range_over_mac_use_clock_identity \
    -configuremethod _c_./ptpRangeOverMac/useClockIdentity \
    -cgetmethod _g_./ptpRangeOverMac/useClockIdentity \
    -readonly false
  method _c_./ptpRangeOverMac/useClockIdentity {t v} { $self _configure_relative ./ptpRangeOverMac -use_clock_identity $v }
  method _g_./ptpRangeOverMac/useClockIdentity {t} { $self _cget_relative ./ptpRangeOverMac -use_clock_identity }
  option -ptp_range_over_mac_priority1 \
    -configuremethod _c_./ptpRangeOverMac/priority1 \
    -cgetmethod _g_./ptpRangeOverMac/priority1 \
    -readonly false
  method _c_./ptpRangeOverMac/priority1 {t v} { $self _configure_relative ./ptpRangeOverMac -priority1 $v }
  method _g_./ptpRangeOverMac/priority1 {t} { $self _cget_relative ./ptpRangeOverMac -priority1 }
  # multiplier 
  method _m_ptp_range_over_mac_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_priority1 }
  
  option -ptp_range_over_mac_use_alternate_master_flag \
    -configuremethod _c_./ptpRangeOverMac/useAlternateMasterFlag \
    -cgetmethod _g_./ptpRangeOverMac/useAlternateMasterFlag \
    -readonly false
  method _c_./ptpRangeOverMac/useAlternateMasterFlag {t v} { $self _configure_relative ./ptpRangeOverMac -use_alternate_master_flag $v }
  method _g_./ptpRangeOverMac/useAlternateMasterFlag {t} { $self _cget_relative ./ptpRangeOverMac -use_alternate_master_flag }
  option -ptp_range_over_mac_object_id \
    -configuremethod _c_./ptpRangeOverMac/objectId \
    -cgetmethod _g_./ptpRangeOverMac/objectId \
    -readonly false
  method _c_./ptpRangeOverMac/objectId {t v} { $self _configure_relative ./ptpRangeOverMac -object_id $v }
  method _g_./ptpRangeOverMac/objectId {t} { $self _cget_relative ./ptpRangeOverMac -object_id }
  # multiplier 
  method _m_ptp_range_over_mac_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_object_id }
  
  option -ptp_range_over_mac_delay_resp_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/delayRespReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/delayRespReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/delayRespReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -delay_resp_receipt_timeout $v }
  method _g_./ptpRangeOverMac/delayRespReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -delay_resp_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_resp_receipt_timeout }
  
  option -ptp_range_over_mac_announce_frequency_traceable \
    -configuremethod _c_./ptpRangeOverMac/announceFrequencyTraceable \
    -cgetmethod _g_./ptpRangeOverMac/announceFrequencyTraceable \
    -readonly false
  method _c_./ptpRangeOverMac/announceFrequencyTraceable {t v} { $self _configure_relative ./ptpRangeOverMac -announce_frequency_traceable $v }
  method _g_./ptpRangeOverMac/announceFrequencyTraceable {t} { $self _cget_relative ./ptpRangeOverMac -announce_frequency_traceable }
  option -ptp_range_over_mac_priority2 \
    -configuremethod _c_./ptpRangeOverMac/priority2 \
    -cgetmethod _g_./ptpRangeOverMac/priority2 \
    -readonly false
  method _c_./ptpRangeOverMac/priority2 {t v} { $self _configure_relative ./ptpRangeOverMac -priority2 $v }
  method _g_./ptpRangeOverMac/priority2 {t} { $self _cget_relative ./ptpRangeOverMac -priority2 }
  # multiplier 
  method _m_ptp_range_over_mac_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_priority2 }
  
  option -ptp_range_over_mac_announce_current_utc_offset_valid \
    -configuremethod _c_./ptpRangeOverMac/announceCurrentUtcOffsetValid \
    -cgetmethod _g_./ptpRangeOverMac/announceCurrentUtcOffsetValid \
    -readonly false
  method _c_./ptpRangeOverMac/announceCurrentUtcOffsetValid {t v} { $self _configure_relative ./ptpRangeOverMac -announce_current_utc_offset_valid $v }
  method _g_./ptpRangeOverMac/announceCurrentUtcOffsetValid {t} { $self _cget_relative ./ptpRangeOverMac -announce_current_utc_offset_valid }
  option -ptp_range_over_mac_client_mac_address \
    -configuremethod _c_./ptpRangeOverMac/clientMacAddress \
    -cgetmethod _g_./ptpRangeOverMac/clientMacAddress \
    -readonly false
  method _c_./ptpRangeOverMac/clientMacAddress {t v} { $self _configure_relative ./ptpRangeOverMac -client_mac_address $v }
  method _g_./ptpRangeOverMac/clientMacAddress {t} { $self _cget_relative ./ptpRangeOverMac -client_mac_address }
  # multiplier 
  method _m_ptp_range_over_mac_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_mac_address }
  
  option -ptp_range_over_mac_time_source \
    -configuremethod _c_./ptpRangeOverMac/timeSource \
    -cgetmethod _g_./ptpRangeOverMac/timeSource \
    -readonly false
  method _c_./ptpRangeOverMac/timeSource {t v} { $self _configure_relative ./ptpRangeOverMac -time_source $v }
  method _g_./ptpRangeOverMac/timeSource {t} { $self _cget_relative ./ptpRangeOverMac -time_source }
  # multiplier 
  method _m_ptp_range_over_mac_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_time_source }
  
  option -ptp_range_over_mac_steps_removed \
    -configuremethod _c_./ptpRangeOverMac/stepsRemoved \
    -cgetmethod _g_./ptpRangeOverMac/stepsRemoved \
    -readonly false
  method _c_./ptpRangeOverMac/stepsRemoved {t v} { $self _configure_relative ./ptpRangeOverMac -steps_removed $v }
  method _g_./ptpRangeOverMac/stepsRemoved {t} { $self _cget_relative ./ptpRangeOverMac -steps_removed }
  # multiplier 
  method _m_ptp_range_over_mac_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_steps_removed }
  
  option -ptp_range_over_mac_clock_class \
    -configuremethod _c_./ptpRangeOverMac/clockClass \
    -cgetmethod _g_./ptpRangeOverMac/clockClass \
    -readonly false
  method _c_./ptpRangeOverMac/clockClass {t v} { $self _configure_relative ./ptpRangeOverMac -clock_class $v }
  method _g_./ptpRangeOverMac/clockClass {t} { $self _cget_relative ./ptpRangeOverMac -clock_class }
  # multiplier 
  method _m_ptp_range_over_mac_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_class }
  
  option -ptp_range_over_mac_request_attempts \
    -configuremethod _c_./ptpRangeOverMac/requestAttempts \
    -cgetmethod _g_./ptpRangeOverMac/requestAttempts \
    -readonly false
  method _c_./ptpRangeOverMac/requestAttempts {t v} { $self _configure_relative ./ptpRangeOverMac -request_attempts $v }
  method _g_./ptpRangeOverMac/requestAttempts {t} { $self _cget_relative ./ptpRangeOverMac -request_attempts }
  # multiplier 
  method _m_ptp_range_over_mac_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_attempts }
  
  option -ptp_range_over_mac_follow_up_bad_crc_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpBadCrcRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpBadCrcRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpBadCrcRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_bad_crc_rate $v }
  method _g_./ptpRangeOverMac/followUpBadCrcRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_bad_crc_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_bad_crc_rate }
  
  option -ptp_range_over_mac_delay_response_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverMac/delayResponseDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverMac/delayResponseDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverMac/delayResponseDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverMac -delay_response_delay_insertion_rate $v }
  method _g_./ptpRangeOverMac/delayResponseDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverMac -delay_response_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_mac_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_response_delay_insertion_rate }
  
  option -ptp_range_over_mac_log_sync_interval \
    -configuremethod _c_./ptpRangeOverMac/logSyncInterval \
    -cgetmethod _g_./ptpRangeOverMac/logSyncInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logSyncInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_sync_interval $v }
  method _g_./ptpRangeOverMac/logSyncInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_sync_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_sync_interval }
  
  option -ptp_range_over_mac_master_count \
    -configuremethod _c_./ptpRangeOverMac/masterCount \
    -cgetmethod _g_./ptpRangeOverMac/masterCount \
    -readonly false
  method _c_./ptpRangeOverMac/masterCount {t v} { $self _configure_relative ./ptpRangeOverMac -master_count $v }
  method _g_./ptpRangeOverMac/masterCount {t} { $self _cget_relative ./ptpRangeOverMac -master_count }
  # multiplier 
  method _m_ptp_range_over_mac_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_count }
  
  option -ptp_range_over_mac_residence_time \
    -configuremethod _c_./ptpRangeOverMac/residenceTime \
    -cgetmethod _g_./ptpRangeOverMac/residenceTime \
    -readonly false
  method _c_./ptpRangeOverMac/residenceTime {t v} { $self _configure_relative ./ptpRangeOverMac -residence_time $v }
  method _g_./ptpRangeOverMac/residenceTime {t} { $self _cget_relative ./ptpRangeOverMac -residence_time }
  # multiplier 
  method _m_ptp_range_over_mac_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_residence_time }
  
  option -ptp_range_over_mac_signal_interval \
    -configuremethod _c_./ptpRangeOverMac/signalInterval \
    -cgetmethod _g_./ptpRangeOverMac/signalInterval \
    -readonly false
  method _c_./ptpRangeOverMac/signalInterval {t v} { $self _configure_relative ./ptpRangeOverMac -signal_interval $v }
  method _g_./ptpRangeOverMac/signalInterval {t} { $self _cget_relative ./ptpRangeOverMac -signal_interval }
  # multiplier 
  method _m_ptp_range_over_mac_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_signal_interval }
  
  option -ptp_range_over_mac_delay_mechanism \
    -configuremethod _c_./ptpRangeOverMac/delayMechanism \
    -cgetmethod _g_./ptpRangeOverMac/delayMechanism \
    -readonly false
  method _c_./ptpRangeOverMac/delayMechanism {t v} { $self _configure_relative ./ptpRangeOverMac -delay_mechanism $v }
  method _g_./ptpRangeOverMac/delayMechanism {t} { $self _cget_relative ./ptpRangeOverMac -delay_mechanism }
  # multiplier 
  method _m_ptp_range_over_mac_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_mechanism }
  
  option -ptp_range_over_mac_strict_grant \
    -configuremethod _c_./ptpRangeOverMac/strictGrant \
    -cgetmethod _g_./ptpRangeOverMac/strictGrant \
    -readonly false
  method _c_./ptpRangeOverMac/strictGrant {t v} { $self _configure_relative ./ptpRangeOverMac -strict_grant $v }
  method _g_./ptpRangeOverMac/strictGrant {t} { $self _cget_relative ./ptpRangeOverMac -strict_grant }
  option -ptp_range_over_mac_sync_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/syncDropRate \
    -cgetmethod _g_./ptpRangeOverMac/syncDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/syncDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -sync_drop_rate $v }
  method _g_./ptpRangeOverMac/syncDropRate {t} { $self _cget_relative ./ptpRangeOverMac -sync_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_sync_drop_rate }
  
  option -ptp_range_over_mac_drop_signal_req_sync \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqSync \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqSync \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqSync {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_sync $v }
  method _g_./ptpRangeOverMac/dropSignalReqSync {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_sync }
  option -ptp_range_over_mac_clock_increment \
    -configuremethod _c_./ptpRangeOverMac/clockIncrement \
    -cgetmethod _g_./ptpRangeOverMac/clockIncrement \
    -readonly false
  method _c_./ptpRangeOverMac/clockIncrement {t v} { $self _configure_relative ./ptpRangeOverMac -clock_increment $v }
  method _g_./ptpRangeOverMac/clockIncrement {t} { $self _cget_relative ./ptpRangeOverMac -clock_increment }
  # multiplier 
  method _m_ptp_range_over_mac_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_increment }
  
  option -ptp_range_over_mac_announce_ptp_timescale \
    -configuremethod _c_./ptpRangeOverMac/announcePtpTimescale \
    -cgetmethod _g_./ptpRangeOverMac/announcePtpTimescale \
    -readonly false
  method _c_./ptpRangeOverMac/announcePtpTimescale {t v} { $self _configure_relative ./ptpRangeOverMac -announce_ptp_timescale $v }
  method _g_./ptpRangeOverMac/announcePtpTimescale {t} { $self _cget_relative ./ptpRangeOverMac -announce_ptp_timescale }
  option -ptp_range_over_mac_signal_unicast_handling \
    -configuremethod _c_./ptpRangeOverMac/signalUnicastHandling \
    -cgetmethod _g_./ptpRangeOverMac/signalUnicastHandling \
    -readonly false
  method _c_./ptpRangeOverMac/signalUnicastHandling {t v} { $self _configure_relative ./ptpRangeOverMac -signal_unicast_handling $v }
  method _g_./ptpRangeOverMac/signalUnicastHandling {t} { $self _cget_relative ./ptpRangeOverMac -signal_unicast_handling }
  # multiplier 
  method _m_ptp_range_over_mac_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_signal_unicast_handling }
  
  option -ptp_range_over_mac_enabled \
    -configuremethod _c_./ptpRangeOverMac/enabled \
    -cgetmethod _g_./ptpRangeOverMac/enabled \
    -readonly false
  method _c_./ptpRangeOverMac/enabled {t v} { $self _configure_relative ./ptpRangeOverMac -enabled $v }
  method _g_./ptpRangeOverMac/enabled {t} { $self _cget_relative ./ptpRangeOverMac -enabled }
  option -ptp_range_over_mac_timestamp_offset \
    -configuremethod _c_./ptpRangeOverMac/timestampOffset \
    -cgetmethod _g_./ptpRangeOverMac/timestampOffset \
    -readonly false
  method _c_./ptpRangeOverMac/timestampOffset {t v} { $self _configure_relative ./ptpRangeOverMac -timestamp_offset $v }
  method _g_./ptpRangeOverMac/timestampOffset {t} { $self _cget_relative ./ptpRangeOverMac -timestamp_offset }
  # multiplier 
  method _m_ptp_range_over_mac_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_timestamp_offset }
  
  option -ptp_range_over_mac_master_ip_increment_by \
    -configuremethod _c_./ptpRangeOverMac/masterIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/masterIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_increment_by $v }
  method _g_./ptpRangeOverMac/masterIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_increment_by }
  
  option -ptp_range_over_mac_request_interval \
    -configuremethod _c_./ptpRangeOverMac/requestInterval \
    -cgetmethod _g_./ptpRangeOverMac/requestInterval \
    -readonly false
  method _c_./ptpRangeOverMac/requestInterval {t v} { $self _configure_relative ./ptpRangeOverMac -request_interval $v }
  method _g_./ptpRangeOverMac/requestInterval {t} { $self _cget_relative ./ptpRangeOverMac -request_interval }
  # multiplier 
  method _m_ptp_range_over_mac_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_interval }
  
  option -ptp_range_over_mac_ip_tos \
    -configuremethod _c_./ptpRangeOverMac/ipTos \
    -cgetmethod _g_./ptpRangeOverMac/ipTos \
    -readonly false
  method _c_./ptpRangeOverMac/ipTos {t v} { $self _configure_relative ./ptpRangeOverMac -ip_tos $v }
  method _g_./ptpRangeOverMac/ipTos {t} { $self _cget_relative ./ptpRangeOverMac -ip_tos }
  # multiplier 
  method _m_ptp_range_over_mac_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_ip_tos }
  
  option -ptp_range_over_mac_request_holddown \
    -configuremethod _c_./ptpRangeOverMac/requestHolddown \
    -cgetmethod _g_./ptpRangeOverMac/requestHolddown \
    -readonly false
  method _c_./ptpRangeOverMac/requestHolddown {t v} { $self _configure_relative ./ptpRangeOverMac -request_holddown $v }
  method _g_./ptpRangeOverMac/requestHolddown {t} { $self _cget_relative ./ptpRangeOverMac -request_holddown }
  # multiplier 
  method _m_ptp_range_over_mac_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_holddown }
  
  option -ptp_range_over_mac_client_mac_increment_by \
    -configuremethod _c_./ptpRangeOverMac/clientMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/clientMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/clientMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -client_mac_increment_by $v }
  method _g_./ptpRangeOverMac/clientMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -client_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_mac_increment_by }
  
  option -ptp_range_over_mac_name \
    -configuremethod _c_./ptpRangeOverMac/name \
    -cgetmethod _g_./ptpRangeOverMac/name \
    -readonly false
  method _c_./ptpRangeOverMac/name {t v} { $self _configure_relative ./ptpRangeOverMac -name $v }
  method _g_./ptpRangeOverMac/name {t} { $self _cget_relative ./ptpRangeOverMac -name }
  # multiplier 
  method _m_ptp_range_over_mac_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_name }
  
  option -ptp_range_over_mac_drop_signal_req_announce \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqAnnounce \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqAnnounce \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqAnnounce {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_announce $v }
  method _g_./ptpRangeOverMac/dropSignalReqAnnounce {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_announce }
  option -ptp_range_over_mac_master_ip_address \
    -configuremethod _c_./ptpRangeOverMac/masterIpAddress \
    -cgetmethod _g_./ptpRangeOverMac/masterIpAddress \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpAddress {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_address $v }
  method _g_./ptpRangeOverMac/masterIpAddress {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_address }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_address }
  
  option -ptp_range_over_mac_first_clock \
    -configuremethod _c_./ptpRangeOverMac/firstClock \
    -cgetmethod _g_./ptpRangeOverMac/firstClock \
    -readonly false
  method _c_./ptpRangeOverMac/firstClock {t v} { $self _configure_relative ./ptpRangeOverMac -first_clock $v }
  method _g_./ptpRangeOverMac/firstClock {t} { $self _cget_relative ./ptpRangeOverMac -first_clock }
  # multiplier 
  method _m_ptp_range_over_mac_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_first_clock }
  
  option -ptp_range_over_mac_master_mac_increment_by \
    -configuremethod _c_./ptpRangeOverMac/masterMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/masterMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_increment_by $v }
  method _g_./ptpRangeOverMac/masterMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_increment_by }
  
  option -ptp_range_over_mac_send_cancel_tlv \
    -configuremethod _c_./ptpRangeOverMac/sendCancelTlv \
    -cgetmethod _g_./ptpRangeOverMac/sendCancelTlv \
    -readonly false
  method _c_./ptpRangeOverMac/sendCancelTlv {t v} { $self _configure_relative ./ptpRangeOverMac -send_cancel_tlv $v }
  method _g_./ptpRangeOverMac/sendCancelTlv {t} { $self _cget_relative ./ptpRangeOverMac -send_cancel_tlv }
  option -ptp_range_over_mac_port_number \
    -configuremethod _c_./ptpRangeOverMac/portNumber \
    -cgetmethod _g_./ptpRangeOverMac/portNumber \
    -readonly false
  method _c_./ptpRangeOverMac/portNumber {t v} { $self _configure_relative ./ptpRangeOverMac -port_number $v }
  method _g_./ptpRangeOverMac/portNumber {t} { $self _cget_relative ./ptpRangeOverMac -port_number }
  # multiplier 
  method _m_ptp_range_over_mac_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_port_number }
  
  option -ptp_range_over_mac_client_ip_address \
    -configuremethod _c_./ptpRangeOverMac/clientIpAddress \
    -cgetmethod _g_./ptpRangeOverMac/clientIpAddress \
    -readonly false
  method _c_./ptpRangeOverMac/clientIpAddress {t v} { $self _configure_relative ./ptpRangeOverMac -client_ip_address $v }
  method _g_./ptpRangeOverMac/clientIpAddress {t} { $self _cget_relative ./ptpRangeOverMac -client_ip_address }
  # multiplier 
  method _m_ptp_range_over_mac_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_ip_address }
  
  option -ptp_range_over_mac_announce_leap59 \
    -configuremethod _c_./ptpRangeOverMac/announceLeap59 \
    -cgetmethod _g_./ptpRangeOverMac/announceLeap59 \
    -readonly false
  method _c_./ptpRangeOverMac/announceLeap59 {t v} { $self _configure_relative ./ptpRangeOverMac -announce_leap59 $v }
  method _g_./ptpRangeOverMac/announceLeap59 {t} { $self _cget_relative ./ptpRangeOverMac -announce_leap59 }
  option -ptp_range_over_mac_send_announce_tlv \
    -configuremethod _c_./ptpRangeOverMac/sendAnnounceTlv \
    -cgetmethod _g_./ptpRangeOverMac/sendAnnounceTlv \
    -readonly false
  method _c_./ptpRangeOverMac/sendAnnounceTlv {t v} { $self _configure_relative ./ptpRangeOverMac -send_announce_tlv $v }
  method _g_./ptpRangeOverMac/sendAnnounceTlv {t} { $self _cget_relative ./ptpRangeOverMac -send_announce_tlv }
  option -ptp_range_over_mac_sync_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/syncReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/syncReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/syncReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -sync_receipt_timeout $v }
  method _g_./ptpRangeOverMac/syncReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -sync_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_sync_receipt_timeout }
  
  option -ptp_range_over_mac_announce_leap61 \
    -configuremethod _c_./ptpRangeOverMac/announceLeap61 \
    -cgetmethod _g_./ptpRangeOverMac/announceLeap61 \
    -readonly false
  method _c_./ptpRangeOverMac/announceLeap61 {t v} { $self _configure_relative ./ptpRangeOverMac -announce_leap61 $v }
  method _g_./ptpRangeOverMac/announceLeap61 {t} { $self _cget_relative ./ptpRangeOverMac -announce_leap61 }
  option -ptp_range_over_mac_grant_delay_resp_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantDelayRespDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantDelayRespDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantDelayRespDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_delay_resp_duration_interval $v }
  method _g_./ptpRangeOverMac/grantDelayRespDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_delay_resp_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_delay_resp_duration_interval }
  
  option -ptp_range_over_mac_timestamp_offset_variation \
    -configuremethod _c_./ptpRangeOverMac/timestampOffsetVariation \
    -cgetmethod _g_./ptpRangeOverMac/timestampOffsetVariation \
    -readonly false
  method _c_./ptpRangeOverMac/timestampOffsetVariation {t v} { $self _configure_relative ./ptpRangeOverMac -timestamp_offset_variation $v }
  method _g_./ptpRangeOverMac/timestampOffsetVariation {t} { $self _cget_relative ./ptpRangeOverMac -timestamp_offset_variation }
  # multiplier 
  method _m_ptp_range_over_mac_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_timestamp_offset_variation }
  
  option -ptp_range_over_mac_follow_up_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpDropRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_drop_rate $v }
  method _g_./ptpRangeOverMac/followUpDropRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_drop_rate }
  
  option -ptp_range_over_mac_master_mac_address \
    -configuremethod _c_./ptpRangeOverMac/masterMacAddress \
    -cgetmethod _g_./ptpRangeOverMac/masterMacAddress \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacAddress {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_address $v }
  method _g_./ptpRangeOverMac/masterMacAddress {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_address }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_address }
  
  option -ptp_range_over_mac_drop_signal_req_delay_resp \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqDelayResp \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqDelayResp \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqDelayResp {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_delay_resp $v }
  method _g_./ptpRangeOverMac/dropSignalReqDelayResp {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_delay_resp }
  option -ptp_range_over_mac_grant_sync_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantSyncDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantSyncDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantSyncDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_sync_duration_interval $v }
  method _g_./ptpRangeOverMac/grantSyncDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_sync_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_sync_duration_interval }
  
  option -ptp_range_over_mac_learn_port_id \
    -configuremethod _c_./ptpRangeOverMac/learnPortId \
    -cgetmethod _g_./ptpRangeOverMac/learnPortId \
    -readonly false
  method _c_./ptpRangeOverMac/learnPortId {t v} { $self _configure_relative ./ptpRangeOverMac -learn_port_id $v }
  method _g_./ptpRangeOverMac/learnPortId {t} { $self _cget_relative ./ptpRangeOverMac -learn_port_id }
  option -ptp_range_over_mac_delay_response_delay \
    -configuremethod _c_./ptpRangeOverMac/delayResponseDelay \
    -cgetmethod _g_./ptpRangeOverMac/delayResponseDelay \
    -readonly false
  method _c_./ptpRangeOverMac/delayResponseDelay {t v} { $self _configure_relative ./ptpRangeOverMac -delay_response_delay $v }
  method _g_./ptpRangeOverMac/delayResponseDelay {t} { $self _cget_relative ./ptpRangeOverMac -delay_response_delay }
  # multiplier 
  method _m_ptp_range_over_mac_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_response_delay }
  
  option -ptp_range_over_mac_grant_unicast_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantUnicastDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantUnicastDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantUnicastDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_unicast_duration_interval $v }
  method _g_./ptpRangeOverMac/grantUnicastDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_unicast_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_unicast_duration_interval }
  
  option -ptp_range_over_mac_follow_up_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_delay_insertion_rate $v }
  method _g_./ptpRangeOverMac/followUpDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_delay_insertion_rate }
  
  option -ptp_range_over_mac_log_delay_req_interval \
    -configuremethod _c_./ptpRangeOverMac/logDelayReqInterval \
    -cgetmethod _g_./ptpRangeOverMac/logDelayReqInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logDelayReqInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_delay_req_interval $v }
  method _g_./ptpRangeOverMac/logDelayReqInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_delay_req_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_delay_req_interval }
  
  option -ptp_range_over_mac_clock_accuracy \
    -configuremethod _c_./ptpRangeOverMac/clockAccuracy \
    -cgetmethod _g_./ptpRangeOverMac/clockAccuracy \
    -readonly false
  method _c_./ptpRangeOverMac/clockAccuracy {t v} { $self _configure_relative ./ptpRangeOverMac -clock_accuracy $v }
  method _g_./ptpRangeOverMac/clockAccuracy {t} { $self _cget_relative ./ptpRangeOverMac -clock_accuracy }
  # multiplier 
  method _m_ptp_range_over_mac_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_accuracy }
  
  option -ptp_range_over_mac_client_count \
    -configuremethod _c_./ptpRangeOverMac/clientCount \
    -cgetmethod _g_./ptpRangeOverMac/clientCount \
    -readonly false
  method _c_./ptpRangeOverMac/clientCount {t v} { $self _configure_relative ./ptpRangeOverMac -client_count $v }
  method _g_./ptpRangeOverMac/clientCount {t} { $self _cget_relative ./ptpRangeOverMac -client_count }
  # multiplier 
  method _m_ptp_range_over_mac_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_count }
  
  option -ptp_range_over_mac_announce_time_traceable \
    -configuremethod _c_./ptpRangeOverMac/announceTimeTraceable \
    -cgetmethod _g_./ptpRangeOverMac/announceTimeTraceable \
    -readonly false
  method _c_./ptpRangeOverMac/announceTimeTraceable {t v} { $self _configure_relative ./ptpRangeOverMac -announce_time_traceable $v }
  method _g_./ptpRangeOverMac/announceTimeTraceable {t} { $self _cget_relative ./ptpRangeOverMac -announce_time_traceable }
  option -ptp_range_over_mac_step_mode \
    -configuremethod _c_./ptpRangeOverMac/stepMode \
    -cgetmethod _g_./ptpRangeOverMac/stepMode \
    -readonly false
  method _c_./ptpRangeOverMac/stepMode {t v} { $self _configure_relative ./ptpRangeOverMac -step_mode $v }
  method _g_./ptpRangeOverMac/stepMode {t} { $self _cget_relative ./ptpRangeOverMac -step_mode }
  # multiplier 
  method _m_ptp_range_over_mac_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_step_mode }
  
  option -ptp_range_over_mac_master_ip_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverMac/masterIpIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverMac/masterIpIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_increment_inter_entity $v }
  method _g_./ptpRangeOverMac/masterIpIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_increment_inter_entity }
  
  option -ptp_range_over_mac_delay_resp_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/delayRespDropRate \
    -cgetmethod _g_./ptpRangeOverMac/delayRespDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/delayRespDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -delay_resp_drop_rate $v }
  method _g_./ptpRangeOverMac/delayRespDropRate {t} { $self _cget_relative ./ptpRangeOverMac -delay_resp_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_resp_drop_rate }
  
  option -ptp_range_over_mac_announce_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/announceReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/announceReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/announceReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -announce_receipt_timeout $v }
  method _g_./ptpRangeOverMac/announceReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -announce_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_announce_receipt_timeout }
  
  option -ptp_range_over_mac_rx_calibration \
    -configuremethod _c_./ptpRangeOverMac/rxCalibration \
    -cgetmethod _g_./ptpRangeOverMac/rxCalibration \
    -readonly false
  method _c_./ptpRangeOverMac/rxCalibration {t v} { $self _configure_relative ./ptpRangeOverMac -rx_calibration $v }
  method _g_./ptpRangeOverMac/rxCalibration {t} { $self _cget_relative ./ptpRangeOverMac -rx_calibration }
  # multiplier 
  method _m_ptp_range_over_mac_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_rx_calibration }
  
  option -ptp_range_over_mac_tx_calibration \
    -configuremethod _c_./ptpRangeOverMac/txCalibration \
    -cgetmethod _g_./ptpRangeOverMac/txCalibration \
    -readonly false
  method _c_./ptpRangeOverMac/txCalibration {t v} { $self _configure_relative ./ptpRangeOverMac -tx_calibration $v }
  method _g_./ptpRangeOverMac/txCalibration {t} { $self _cget_relative ./ptpRangeOverMac -tx_calibration }
  # multiplier 
  method _m_ptp_range_over_mac_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_tx_calibration }
  
  option -ptp_range_over_mac_log_announce_interval \
    -configuremethod _c_./ptpRangeOverMac/logAnnounceInterval \
    -cgetmethod _g_./ptpRangeOverMac/logAnnounceInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logAnnounceInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_announce_interval $v }
  method _g_./ptpRangeOverMac/logAnnounceInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_announce_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_announce_interval }
  
  option -vic_client_range_prov_info_tlvs \
    -configuremethod _c_./vicClientRange/provInfoTlvs \
    -cgetmethod _g_./vicClientRange/provInfoTlvs \
    -readonly false
  method _c_./vicClientRange/provInfoTlvs {t v} { $self _configure_relative ./vicClientRange -prov_info_tlvs $v }
  method _g_./vicClientRange/provInfoTlvs {t} { $self _cget_relative ./vicClientRange -prov_info_tlvs }
  option -vic_client_range_object_id \
    -configuremethod _c_./vicClientRange/objectId \
    -cgetmethod _g_./vicClientRange/objectId \
    -readonly false
  method _c_./vicClientRange/objectId {t v} { $self _configure_relative ./vicClientRange -object_id $v }
  method _g_./vicClientRange/objectId {t} { $self _cget_relative ./vicClientRange -object_id }
  # multiplier 
  method _m_vic_client_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_object_id }
  
  option -vic_client_range_macs_per_vif \
    -configuremethod _c_./vicClientRange/macsPerVif \
    -cgetmethod _g_./vicClientRange/macsPerVif \
    -readonly false
  method _c_./vicClientRange/macsPerVif {t v} { $self _configure_relative ./vicClientRange -macs_per_vif $v }
  method _g_./vicClientRange/macsPerVif {t} { $self _cget_relative ./vicClientRange -macs_per_vif }
  # multiplier 
  method _m_vic_client_range_macs_per_vif {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_macs_per_vif }
  
  option -vic_client_range_channel_id_start \
    -configuremethod _c_./vicClientRange/channelIdStart \
    -cgetmethod _g_./vicClientRange/channelIdStart \
    -readonly false
  method _c_./vicClientRange/channelIdStart {t v} { $self _configure_relative ./vicClientRange -channel_id_start $v }
  method _g_./vicClientRange/channelIdStart {t} { $self _cget_relative ./vicClientRange -channel_id_start }
  # multiplier 
  method _m_vic_client_range_channel_id_start {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_channel_id_start }
  
  option -vic_client_range_prov_info_oui \
    -configuremethod _c_./vicClientRange/provInfoOui \
    -cgetmethod _g_./vicClientRange/provInfoOui \
    -readonly false
  method _c_./vicClientRange/provInfoOui {t v} { $self _configure_relative ./vicClientRange -prov_info_oui $v }
  method _g_./vicClientRange/provInfoOui {t} { $self _cget_relative ./vicClientRange -prov_info_oui }
  # multiplier 
  method _m_vic_client_range_prov_info_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_prov_info_oui }
  
  option -vic_client_range_name \
    -configuremethod _c_./vicClientRange/name \
    -cgetmethod _g_./vicClientRange/name \
    -readonly false
  method _c_./vicClientRange/name {t v} { $self _configure_relative ./vicClientRange -name $v }
  method _g_./vicClientRange/name {t} { $self _cget_relative ./vicClientRange -name }
  # multiplier 
  method _m_vic_client_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_name }
  
  option -vic_client_range_vif_active \
    -configuremethod _c_./vicClientRange/vifActive \
    -cgetmethod _g_./vicClientRange/vifActive \
    -readonly false
  method _c_./vicClientRange/vifActive {t v} { $self _configure_relative ./vicClientRange -vif_active $v }
  method _g_./vicClientRange/vifActive {t} { $self _cget_relative ./vicClientRange -vif_active }
  option -vic_client_range_tlv_offset \
    -configuremethod _c_./vicClientRange/tlvOffset \
    -cgetmethod _g_./vicClientRange/tlvOffset \
    -readonly false
  method _c_./vicClientRange/tlvOffset {t v} { $self _configure_relative ./vicClientRange -tlv_offset $v }
  method _g_./vicClientRange/tlvOffset {t} { $self _cget_relative ./vicClientRange -tlv_offset }
  # multiplier 
  method _m_vic_client_range_tlv_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_tlv_offset }
  
  option -vic_client_range_prov_info_type \
    -configuremethod _c_./vicClientRange/provInfoType \
    -cgetmethod _g_./vicClientRange/provInfoType \
    -readonly false
  method _c_./vicClientRange/provInfoType {t v} { $self _configure_relative ./vicClientRange -prov_info_type $v }
  method _g_./vicClientRange/provInfoType {t} { $self _cget_relative ./vicClientRange -prov_info_type }
  # multiplier 
  method _m_vic_client_range_prov_info_type {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_prov_info_type }
  
  option -vic_client_range_enabled \
    -configuremethod _c_./vicClientRange/enabled \
    -cgetmethod _g_./vicClientRange/enabled \
    -readonly false
  method _c_./vicClientRange/enabled {t v} { $self _configure_relative ./vicClientRange -enabled $v }
  method _g_./vicClientRange/enabled {t} { $self _cget_relative ./vicClientRange -enabled }
  option -vic_client_range_channel_id_increment \
    -configuremethod _c_./vicClientRange/channelIdIncrement \
    -cgetmethod _g_./vicClientRange/channelIdIncrement \
    -readonly false
  method _c_./vicClientRange/channelIdIncrement {t v} { $self _configure_relative ./vicClientRange -channel_id_increment $v }
  method _g_./vicClientRange/channelIdIncrement {t} { $self _cget_relative ./vicClientRange -channel_id_increment }
  # multiplier 
  method _m_vic_client_range_channel_id_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_channel_id_increment }
  
  option -igmp_querier_range_object_id \
    -configuremethod _c_./igmpQuerierRange/objectId \
    -cgetmethod _g_./igmpQuerierRange/objectId \
    -readonly false
  method _c_./igmpQuerierRange/objectId {t v} { $self _configure_relative ./igmpQuerierRange -object_id $v }
  method _g_./igmpQuerierRange/objectId {t} { $self _cget_relative ./igmpQuerierRange -object_id }
  # multiplier 
  method _m_igmp_querier_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_object_id }
  
  option -igmp_querier_range_specific_query_response_count \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseCount \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseCount \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseCount {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_count $v }
  method _g_./igmpQuerierRange/specificQueryResponseCount {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_count }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_count }
  
  option -igmp_querier_range_specific_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_interval $v }
  method _g_./igmpQuerierRange/specificQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_interval }
  
  option -igmp_querier_range_general_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_response_interval $v }
  method _g_./igmpQuerierRange/generalQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_response_interval }
  
  option -igmp_querier_range_name \
    -configuremethod _c_./igmpQuerierRange/name \
    -cgetmethod _g_./igmpQuerierRange/name \
    -readonly false
  method _c_./igmpQuerierRange/name {t v} { $self _configure_relative ./igmpQuerierRange -name $v }
  method _g_./igmpQuerierRange/name {t} { $self _cget_relative ./igmpQuerierRange -name }
  # multiplier 
  method _m_igmp_querier_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_name }
  
  option -igmp_querier_range_router_alert \
    -configuremethod _c_./igmpQuerierRange/routerAlert \
    -cgetmethod _g_./igmpQuerierRange/routerAlert \
    -readonly false
  method _c_./igmpQuerierRange/routerAlert {t v} { $self _configure_relative ./igmpQuerierRange -router_alert $v }
  method _g_./igmpQuerierRange/routerAlert {t} { $self _cget_relative ./igmpQuerierRange -router_alert }
  option -igmp_querier_range_general_query_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_interval $v }
  method _g_./igmpQuerierRange/generalQueryInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_interval }
  
  option -igmp_querier_range_robustness_variable \
    -configuremethod _c_./igmpQuerierRange/robustnessVariable \
    -cgetmethod _g_./igmpQuerierRange/robustnessVariable \
    -readonly false
  method _c_./igmpQuerierRange/robustnessVariable {t v} { $self _configure_relative ./igmpQuerierRange -robustness_variable $v }
  method _g_./igmpQuerierRange/robustnessVariable {t} { $self _cget_relative ./igmpQuerierRange -robustness_variable }
  # multiplier 
  method _m_igmp_querier_range_robustness_variable {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_robustness_variable }
  
  option -igmp_querier_range_startup_query_count \
    -configuremethod _c_./igmpQuerierRange/startupQueryCount \
    -cgetmethod _g_./igmpQuerierRange/startupQueryCount \
    -readonly false
  method _c_./igmpQuerierRange/startupQueryCount {t v} { $self _configure_relative ./igmpQuerierRange -startup_query_count $v }
  method _g_./igmpQuerierRange/startupQueryCount {t} { $self _cget_relative ./igmpQuerierRange -startup_query_count }
  # multiplier 
  method _m_igmp_querier_range_startup_query_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_startup_query_count }
  
  option -igmp_querier_range_version \
    -configuremethod _c_./igmpQuerierRange/version \
    -cgetmethod _g_./igmpQuerierRange/version \
    -readonly false
  method _c_./igmpQuerierRange/version {t v} { $self _configure_relative ./igmpQuerierRange -version $v }
  method _g_./igmpQuerierRange/version {t} { $self _cget_relative ./igmpQuerierRange -version }
  # multiplier 
  method _m_igmp_querier_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_version }
  
  option -igmp_querier_range_enabled \
    -configuremethod _c_./igmpQuerierRange/enabled \
    -cgetmethod _g_./igmpQuerierRange/enabled \
    -readonly false
  method _c_./igmpQuerierRange/enabled {t v} { $self _configure_relative ./igmpQuerierRange -enabled $v }
  method _g_./igmpQuerierRange/enabled {t} { $self _cget_relative ./igmpQuerierRange -enabled }
  option -igmp_mld_range_meshing_mode \
    -configuremethod _c_./igmpMldRange/meshingMode \
    -cgetmethod _g_./igmpMldRange/meshingMode \
    -readonly false
  method _c_./igmpMldRange/meshingMode {t v} { $self _configure_relative ./igmpMldRange -meshing_mode $v }
  method _g_./igmpMldRange/meshingMode {t} { $self _cget_relative ./igmpMldRange -meshing_mode }
  # multiplier 
  method _m_igmp_mld_range_meshing_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_meshing_mode }
  
  option -igmp_mld_range_router_alert \
    -configuremethod _c_./igmpMldRange/routerAlert \
    -cgetmethod _g_./igmpMldRange/routerAlert \
    -readonly false
  method _c_./igmpMldRange/routerAlert {t v} { $self _configure_relative ./igmpMldRange -router_alert $v }
  method _g_./igmpMldRange/routerAlert {t} { $self _cget_relative ./igmpMldRange -router_alert }
  option -igmp_mld_range_enabled \
    -configuremethod _c_./igmpMldRange/enabled \
    -cgetmethod _g_./igmpMldRange/enabled \
    -readonly false
  method _c_./igmpMldRange/enabled {t v} { $self _configure_relative ./igmpMldRange -enabled $v }
  method _g_./igmpMldRange/enabled {t} { $self _cget_relative ./igmpMldRange -enabled }
  option -igmp_mld_range_report_frequency \
    -configuremethod _c_./igmpMldRange/reportFrequency \
    -cgetmethod _g_./igmpMldRange/reportFrequency \
    -readonly false
  method _c_./igmpMldRange/reportFrequency {t v} { $self _configure_relative ./igmpMldRange -report_frequency $v }
  method _g_./igmpMldRange/reportFrequency {t} { $self _cget_relative ./igmpMldRange -report_frequency }
  # multiplier 
  method _m_igmp_mld_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_report_frequency }
  
  option -igmp_mld_range_unsolicited_response_mode \
    -configuremethod _c_./igmpMldRange/unsolicitedResponseMode \
    -cgetmethod _g_./igmpMldRange/unsolicitedResponseMode \
    -readonly false
  method _c_./igmpMldRange/unsolicitedResponseMode {t v} { $self _configure_relative ./igmpMldRange -unsolicited_response_mode $v }
  method _g_./igmpMldRange/unsolicitedResponseMode {t} { $self _cget_relative ./igmpMldRange -unsolicited_response_mode }
  option -igmp_mld_range_general_query_response_mode \
    -configuremethod _c_./igmpMldRange/generalQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/generalQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/generalQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -general_query_response_mode $v }
  method _g_./igmpMldRange/generalQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -general_query_response_mode }
  option -igmp_mld_range_specific_query_response_mode \
    -configuremethod _c_./igmpMldRange/specificQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/specificQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/specificQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -specific_query_response_mode $v }
  method _g_./igmpMldRange/specificQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -specific_query_response_mode }
  option -igmp_mld_range_name \
    -configuremethod _c_./igmpMldRange/name \
    -cgetmethod _g_./igmpMldRange/name \
    -readonly false
  method _c_./igmpMldRange/name {t v} { $self _configure_relative ./igmpMldRange -name $v }
  method _g_./igmpMldRange/name {t} { $self _cget_relative ./igmpMldRange -name }
  # multiplier 
  method _m_igmp_mld_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_name }
  
  option -igmp_mld_range_join_leave_multiplier \
    -configuremethod _c_./igmpMldRange/joinLeaveMultiplier \
    -cgetmethod _g_./igmpMldRange/joinLeaveMultiplier \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMultiplier {t v} { $self _configure_relative ./igmpMldRange -join_leave_multiplier $v }
  method _g_./igmpMldRange/joinLeaveMultiplier {t} { $self _cget_relative ./igmpMldRange -join_leave_multiplier }
  # multiplier 
  method _m_igmp_mld_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_join_leave_multiplier }
  
  option -igmp_mld_range_object_id \
    -configuremethod _c_./igmpMldRange/objectId \
    -cgetmethod _g_./igmpMldRange/objectId \
    -readonly false
  method _c_./igmpMldRange/objectId {t v} { $self _configure_relative ./igmpMldRange -object_id $v }
  method _g_./igmpMldRange/objectId {t} { $self _cget_relative ./igmpMldRange -object_id }
  # multiplier 
  method _m_igmp_mld_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_object_id }
  
  option -igmp_mld_range_version \
    -configuremethod _c_./igmpMldRange/version \
    -cgetmethod _g_./igmpMldRange/version \
    -readonly false
  method _c_./igmpMldRange/version {t v} { $self _configure_relative ./igmpMldRange -version $v }
  method _g_./igmpMldRange/version {t} { $self _cget_relative ./igmpMldRange -version }
  # multiplier 
  method _m_igmp_mld_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_version }
  
  option -igmp_mld_range_immediate_response \
    -configuremethod _c_./igmpMldRange/immediateResponse \
    -cgetmethod _g_./igmpMldRange/immediateResponse \
    -readonly false
  method _c_./igmpMldRange/immediateResponse {t v} { $self _configure_relative ./igmpMldRange -immediate_response $v }
  method _g_./igmpMldRange/immediateResponse {t} { $self _cget_relative ./igmpMldRange -immediate_response }
  option -igmp_mld_range_multicast_group_range \
    -configuremethod _c_./igmpMldRange/multicastGroupRange \
    -cgetmethod _g_./igmpMldRange/multicastGroupRange \
    -readonly false
  method _c_./igmpMldRange/multicastGroupRange {t v} { $self _configure_relative ./igmpMldRange -multicast_group_range $v }
  method _g_./igmpMldRange/multicastGroupRange {t} { $self _cget_relative ./igmpMldRange -multicast_group_range }
  option -igmp_mld_range_join_leave_multicast_group_range \
    -configuremethod _c_./igmpMldRange/joinLeaveMulticastGroupRange \
    -cgetmethod _g_./igmpMldRange/joinLeaveMulticastGroupRange \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMulticastGroupRange {t v} { $self _configure_relative ./igmpMldRange -join_leave_multicast_group_range $v }
  method _g_./igmpMldRange/joinLeaveMulticastGroupRange {t} { $self _cget_relative ./igmpMldRange -join_leave_multicast_group_range }
  option -twamp_control_range_object_id \
    -configuremethod _c_./twampControlRange/objectId \
    -cgetmethod _g_./twampControlRange/objectId \
    -readonly false
  method _c_./twampControlRange/objectId {t v} { $self _configure_relative ./twampControlRange -object_id $v }
  method _g_./twampControlRange/objectId {t} { $self _cget_relative ./twampControlRange -object_id }
  # multiplier 
  method _m_twamp_control_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_object_id }
  
  option -twamp_control_range_name \
    -configuremethod _c_./twampControlRange/name \
    -cgetmethod _g_./twampControlRange/name \
    -readonly false
  method _c_./twampControlRange/name {t v} { $self _configure_relative ./twampControlRange -name $v }
  method _g_./twampControlRange/name {t} { $self _cget_relative ./twampControlRange -name }
  # multiplier 
  method _m_twamp_control_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_name }
  
  option -twamp_control_range_mode \
    -configuremethod _c_./twampControlRange/mode \
    -cgetmethod _g_./twampControlRange/mode \
    -readonly false
  method _c_./twampControlRange/mode {t v} { $self _configure_relative ./twampControlRange -mode $v }
  method _g_./twampControlRange/mode {t} { $self _cget_relative ./twampControlRange -mode }
  # multiplier 
  method _m_twamp_control_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_mode }
  
  option -twamp_control_range_control_server_port \
    -configuremethod _c_./twampControlRange/controlServerPort \
    -cgetmethod _g_./twampControlRange/controlServerPort \
    -readonly false
  method _c_./twampControlRange/controlServerPort {t v} { $self _configure_relative ./twampControlRange -control_server_port $v }
  method _g_./twampControlRange/controlServerPort {t} { $self _cget_relative ./twampControlRange -control_server_port }
  # multiplier 
  method _m_twamp_control_range_control_server_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_control_server_port }
  
  option -twamp_control_range_count \
    -configuremethod _c_./twampControlRange/count \
    -cgetmethod _g_./twampControlRange/count \
    -readonly false
  method _c_./twampControlRange/count {t v} { $self _configure_relative ./twampControlRange -count $v }
  method _g_./twampControlRange/count {t} { $self _cget_relative ./twampControlRange -count }
  # multiplier 
  method _m_twamp_control_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_count }
  
  option -twamp_control_range_secret \
    -configuremethod _c_./twampControlRange/secret \
    -cgetmethod _g_./twampControlRange/secret \
    -readonly false
  method _c_./twampControlRange/secret {t v} { $self _configure_relative ./twampControlRange -secret $v }
  method _g_./twampControlRange/secret {t} { $self _cget_relative ./twampControlRange -secret }
  # multiplier 
  method _m_twamp_control_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_secret }
  
  option -twamp_control_range_key_id \
    -configuremethod _c_./twampControlRange/keyId \
    -cgetmethod _g_./twampControlRange/keyId \
    -readonly false
  method _c_./twampControlRange/keyId {t v} { $self _configure_relative ./twampControlRange -key_id $v }
  method _g_./twampControlRange/keyId {t} { $self _cget_relative ./twampControlRange -key_id }
  # multiplier 
  method _m_twamp_control_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_key_id }
  
  option -twamp_control_range_control_server_ip_increment \
    -configuremethod _c_./twampControlRange/controlServerIpIncrement \
    -cgetmethod _g_./twampControlRange/controlServerIpIncrement \
    -readonly false
  method _c_./twampControlRange/controlServerIpIncrement {t v} { $self _configure_relative ./twampControlRange -control_server_ip_increment $v }
  method _g_./twampControlRange/controlServerIpIncrement {t} { $self _cget_relative ./twampControlRange -control_server_ip_increment }
  # multiplier 
  method _m_twamp_control_range_control_server_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_server_ip_increment }
  
  option -twamp_control_range_enabled \
    -configuremethod _c_./twampControlRange/enabled \
    -cgetmethod _g_./twampControlRange/enabled \
    -readonly false
  method _c_./twampControlRange/enabled {t v} { $self _configure_relative ./twampControlRange -enabled $v }
  method _g_./twampControlRange/enabled {t} { $self _cget_relative ./twampControlRange -enabled }
  option -twamp_control_range_control_start_server_ip \
    -configuremethod _c_./twampControlRange/controlStartServerIp \
    -cgetmethod _g_./twampControlRange/controlStartServerIp \
    -readonly false
  method _c_./twampControlRange/controlStartServerIp {t v} { $self _configure_relative ./twampControlRange -control_start_server_ip $v }
  method _g_./twampControlRange/controlStartServerIp {t} { $self _cget_relative ./twampControlRange -control_start_server_ip }
  # multiplier 
  method _m_twamp_control_range_control_start_server_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_start_server_ip }
  
  option -emulated_router_range_count \
    -configuremethod _c_./emulatedRouterRange/count \
    -cgetmethod _g_./emulatedRouterRange/count \
    -readonly false
  method _c_./emulatedRouterRange/count {t v} { $self _configure_relative ./emulatedRouterRange -count $v }
  method _g_./emulatedRouterRange/count {t} { $self _cget_relative ./emulatedRouterRange -count }
  # multiplier 
  method _m_emulated_router_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -emulated_router_range_count }
  
  option -emulated_router_range_enabled \
    -configuremethod _c_./emulatedRouterRange/enabled \
    -cgetmethod _g_./emulatedRouterRange/enabled \
    -readonly false
  method _c_./emulatedRouterRange/enabled {t v} { $self _configure_relative ./emulatedRouterRange -enabled $v }
  method _g_./emulatedRouterRange/enabled {t} { $self _cget_relative ./emulatedRouterRange -enabled }
  option -emulated_router_range_ip_type \
    -configuremethod _c_./emulatedRouterRange/ipType \
    -cgetmethod _g_./emulatedRouterRange/ipType \
    -readonly false
  method _c_./emulatedRouterRange/ipType {t v} { $self _configure_relative ./emulatedRouterRange -ip_type $v }
  method _g_./emulatedRouterRange/ipType {t} { $self _cget_relative ./emulatedRouterRange -ip_type }
  # multiplier 
  method _m_emulated_router_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_ip_type }
  
  option -emulated_router_range_gateway_increment_mode \
    -configuremethod _c_./emulatedRouterRange/gatewayIncrementMode \
    -cgetmethod _g_./emulatedRouterRange/gatewayIncrementMode \
    -readonly false
  method _c_./emulatedRouterRange/gatewayIncrementMode {t v} { $self _configure_relative ./emulatedRouterRange -gateway_increment_mode $v }
  method _g_./emulatedRouterRange/gatewayIncrementMode {t} { $self _cget_relative ./emulatedRouterRange -gateway_increment_mode }
  # multiplier 
  method _m_emulated_router_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_gateway_increment_mode }
  
  option -emulated_router_range_enable_gateway_arp \
    -configuremethod _c_./emulatedRouterRange/enableGatewayArp \
    -cgetmethod _g_./emulatedRouterRange/enableGatewayArp \
    -readonly false
  method _c_./emulatedRouterRange/enableGatewayArp {t v} { $self _configure_relative ./emulatedRouterRange -enable_gateway_arp $v }
  method _g_./emulatedRouterRange/enableGatewayArp {t} { $self _cget_relative ./emulatedRouterRange -enable_gateway_arp }
  option -emulated_router_range_ip_address \
    -configuremethod _c_./emulatedRouterRange/ipAddress \
    -cgetmethod _g_./emulatedRouterRange/ipAddress \
    -readonly false
  method _c_./emulatedRouterRange/ipAddress {t v} { $self _configure_relative ./emulatedRouterRange -ip_address $v }
  method _g_./emulatedRouterRange/ipAddress {t} { $self _cget_relative ./emulatedRouterRange -ip_address }
  # multiplier 
  method _m_emulated_router_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_ip_address }
  
  option -emulated_router_range_gateway_increment \
    -configuremethod _c_./emulatedRouterRange/gatewayIncrement \
    -cgetmethod _g_./emulatedRouterRange/gatewayIncrement \
    -readonly false
  method _c_./emulatedRouterRange/gatewayIncrement {t v} { $self _configure_relative ./emulatedRouterRange -gateway_increment $v }
  method _g_./emulatedRouterRange/gatewayIncrement {t} { $self _cget_relative ./emulatedRouterRange -gateway_increment }
  # multiplier 
  method _m_emulated_router_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_gateway_increment }
  
  option -emulated_router_range_increment_by \
    -configuremethod _c_./emulatedRouterRange/incrementBy \
    -cgetmethod _g_./emulatedRouterRange/incrementBy \
    -readonly false
  method _c_./emulatedRouterRange/incrementBy {t v} { $self _configure_relative ./emulatedRouterRange -increment_by $v }
  method _g_./emulatedRouterRange/incrementBy {t} { $self _cget_relative ./emulatedRouterRange -increment_by }
  # multiplier 
  method _m_emulated_router_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_increment_by }
  
  option -emulated_router_range_gateway_address \
    -configuremethod _c_./emulatedRouterRange/gatewayAddress \
    -cgetmethod _g_./emulatedRouterRange/gatewayAddress \
    -readonly false
  method _c_./emulatedRouterRange/gatewayAddress {t v} { $self _configure_relative ./emulatedRouterRange -gateway_address $v }
  method _g_./emulatedRouterRange/gatewayAddress {t} { $self _cget_relative ./emulatedRouterRange -gateway_address }
  # multiplier 
  method _m_emulated_router_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_gateway_address }
  
  option -emulated_router_range_name \
    -configuremethod _c_./emulatedRouterRange/name \
    -cgetmethod _g_./emulatedRouterRange/name \
    -readonly false
  method _c_./emulatedRouterRange/name {t v} { $self _configure_relative ./emulatedRouterRange -name $v }
  method _g_./emulatedRouterRange/name {t} { $self _cget_relative ./emulatedRouterRange -name }
  # multiplier 
  method _m_emulated_router_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_name }
  
  option -emulated_router_range_mss \
    -configuremethod _c_./emulatedRouterRange/mss \
    -cgetmethod _g_./emulatedRouterRange/mss \
    -readonly false
  method _c_./emulatedRouterRange/mss {t v} { $self _configure_relative ./emulatedRouterRange -mss $v }
  method _g_./emulatedRouterRange/mss {t} { $self _cget_relative ./emulatedRouterRange -mss }
  # multiplier 
  method _m_emulated_router_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -emulated_router_range_mss }
  
  option -emulated_router_range_object_id \
    -configuremethod _c_./emulatedRouterRange/objectId \
    -cgetmethod _g_./emulatedRouterRange/objectId \
    -readonly false
  method _c_./emulatedRouterRange/objectId {t v} { $self _configure_relative ./emulatedRouterRange -object_id $v }
  method _g_./emulatedRouterRange/objectId {t} { $self _cget_relative ./emulatedRouterRange -object_id }
  # multiplier 
  method _m_emulated_router_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -emulated_router_range_object_id }
  
  option -emulated_router_range_auto_count_enabled \
    -configuremethod _c_./emulatedRouterRange/autoCountEnabled \
    -cgetmethod _g_./emulatedRouterRange/autoCountEnabled \
    -readonly false
  method _c_./emulatedRouterRange/autoCountEnabled {t v} { $self _configure_relative ./emulatedRouterRange -auto_count_enabled $v }
  method _g_./emulatedRouterRange/autoCountEnabled {t} { $self _cget_relative ./emulatedRouterRange -auto_count_enabled }
  option -emulated_router_range_prefix \
    -configuremethod _c_./emulatedRouterRange/prefix \
    -cgetmethod _g_./emulatedRouterRange/prefix \
    -readonly false
  method _c_./emulatedRouterRange/prefix {t v} { $self _configure_relative ./emulatedRouterRange -prefix $v }
  method _g_./emulatedRouterRange/prefix {t} { $self _cget_relative ./emulatedRouterRange -prefix }
  # multiplier 
  method _m_emulated_router_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -emulated_router_range_prefix }
  
  option -emulated_router_range_auto_mac_generation \
    -configuremethod _c_./emulatedRouterRange/autoMacGeneration \
    -cgetmethod _g_./emulatedRouterRange/autoMacGeneration \
    -readonly false
  method _c_./emulatedRouterRange/autoMacGeneration {t v} { $self _configure_relative ./emulatedRouterRange -auto_mac_generation $v }
  method _g_./emulatedRouterRange/autoMacGeneration {t} { $self _cget_relative ./emulatedRouterRange -auto_mac_generation }
  option -ancp_range_circuit_id \
    -configuremethod _c_./ancpRange/circuitId \
    -cgetmethod _g_./ancpRange/circuitId \
    -readonly false
  method _c_./ancpRange/circuitId {t v} { $self _configure_relative ./ancpRange -circuit_id $v }
  method _g_./ancpRange/circuitId {t} { $self _cget_relative ./ancpRange -circuit_id }
  # multiplier 
  method _m_ancp_range_circuit_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_circuit_id }
  
  option -ancp_range_use_dsl_outer_vlan \
    -configuremethod _c_./ancpRange/useDslOuterVlan \
    -cgetmethod _g_./ancpRange/useDslOuterVlan \
    -readonly false
  method _c_./ancpRange/useDslOuterVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_outer_vlan $v }
  method _g_./ancpRange/useDslOuterVlan {t} { $self _cget_relative ./ancpRange -use_dsl_outer_vlan }
  option -ancp_range_distribution_algorithm_percent \
    -configuremethod _c_./ancpRange/distributionAlgorithmPercent \
    -cgetmethod _g_./ancpRange/distributionAlgorithmPercent \
    -readonly false
  method _c_./ancpRange/distributionAlgorithmPercent {t v} { $self _configure_relative ./ancpRange -distribution_algorithm_percent $v }
  method _g_./ancpRange/distributionAlgorithmPercent {t} { $self _cget_relative ./ancpRange -distribution_algorithm_percent }
  # multiplier 
  method _m_ancp_range_distribution_algorithm_percent {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_distribution_algorithm_percent }
  
  option -ancp_range_atm_vpi \
    -configuremethod _c_./ancpRange/atmVpi \
    -cgetmethod _g_./ancpRange/atmVpi \
    -readonly false
  method _c_./ancpRange/atmVpi {t v} { $self _configure_relative ./ancpRange -atm_vpi $v }
  method _g_./ancpRange/atmVpi {t} { $self _cget_relative ./ancpRange -atm_vpi }
  # multiplier 
  method _m_ancp_range_atm_vpi {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vpi }
  
  option -ancp_range_nas_ip_address \
    -configuremethod _c_./ancpRange/nasIpAddress \
    -cgetmethod _g_./ancpRange/nasIpAddress \
    -readonly false
  method _c_./ancpRange/nasIpAddress {t v} { $self _configure_relative ./ancpRange -nas_ip_address $v }
  method _g_./ancpRange/nasIpAddress {t} { $self _cget_relative ./ancpRange -nas_ip_address }
  # multiplier 
  method _m_ancp_range_nas_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address }
  
  option -ancp_range_nas_ancp_service_port \
    -configuremethod _c_./ancpRange/nasAncpServicePort \
    -cgetmethod _g_./ancpRange/nasAncpServicePort \
    -readonly false
  method _c_./ancpRange/nasAncpServicePort {t v} { $self _configure_relative ./ancpRange -nas_ancp_service_port $v }
  method _g_./ancpRange/nasAncpServicePort {t} { $self _cget_relative ./ancpRange -nas_ancp_service_port }
  # multiplier 
  method _m_ancp_range_nas_ancp_service_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_ancp_service_port }
  
  option -ancp_range_inner_vlan_id \
    -configuremethod _c_./ancpRange/innerVlanId \
    -cgetmethod _g_./ancpRange/innerVlanId \
    -readonly false
  method _c_./ancpRange/innerVlanId {t v} { $self _configure_relative ./ancpRange -inner_vlan_id $v }
  method _g_./ancpRange/innerVlanId {t} { $self _cget_relative ./ancpRange -inner_vlan_id }
  # multiplier 
  method _m_ancp_range_inner_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_inner_vlan_id }
  
  option -ancp_range_enabled \
    -configuremethod _c_./ancpRange/enabled \
    -cgetmethod _g_./ancpRange/enabled \
    -readonly false
  method _c_./ancpRange/enabled {t v} { $self _configure_relative ./ancpRange -enabled $v }
  method _g_./ancpRange/enabled {t} { $self _cget_relative ./ancpRange -enabled }
  option -ancp_range_use_dsl_inner_vlan \
    -configuremethod _c_./ancpRange/useDslInnerVlan \
    -cgetmethod _g_./ancpRange/useDslInnerVlan \
    -readonly false
  method _c_./ancpRange/useDslInnerVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_inner_vlan $v }
  method _g_./ancpRange/useDslInnerVlan {t} { $self _cget_relative ./ancpRange -use_dsl_inner_vlan }
  option -ancp_range_access_aggregation_cb_tlv \
    -configuremethod _c_./ancpRange/accessAggregationCbTlv \
    -cgetmethod _g_./ancpRange/accessAggregationCbTlv \
    -readonly false
  method _c_./ancpRange/accessAggregationCbTlv {t v} { $self _configure_relative ./ancpRange -access_aggregation_cb_tlv $v }
  method _g_./ancpRange/accessAggregationCbTlv {t} { $self _cget_relative ./ancpRange -access_aggregation_cb_tlv }
  # multiplier 
  method _m_ancp_range_access_aggregation_cb_tlv {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_access_aggregation_cb_tlv }
  
  option -ancp_range_nas_keep_alive_retries \
    -configuremethod _c_./ancpRange/nasKeepAliveRetries \
    -cgetmethod _g_./ancpRange/nasKeepAliveRetries \
    -readonly false
  method _c_./ancpRange/nasKeepAliveRetries {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_retries $v }
  method _g_./ancpRange/nasKeepAliveRetries {t} { $self _cget_relative ./ancpRange -nas_keep_alive_retries }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_retries }
  
  option -ancp_range_nas_keep_alive_timeout \
    -configuremethod _c_./ancpRange/nasKeepAliveTimeout \
    -cgetmethod _g_./ancpRange/nasKeepAliveTimeout \
    -readonly false
  method _c_./ancpRange/nasKeepAliveTimeout {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_timeout $v }
  method _g_./ancpRange/nasKeepAliveTimeout {t} { $self _cget_relative ./ancpRange -nas_keep_alive_timeout }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_timeout }
  
  option -ancp_range_name \
    -configuremethod _c_./ancpRange/name \
    -cgetmethod _g_./ancpRange/name \
    -readonly false
  method _c_./ancpRange/name {t v} { $self _configure_relative ./ancpRange -name $v }
  method _g_./ancpRange/name {t} { $self _cget_relative ./ancpRange -name }
  # multiplier 
  method _m_ancp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_name }
  
  option -ancp_range_enable_access_aggregation \
    -configuremethod _c_./ancpRange/enableAccessAggregation \
    -cgetmethod _g_./ancpRange/enableAccessAggregation \
    -readonly false
  method _c_./ancpRange/enableAccessAggregation {t v} { $self _configure_relative ./ancpRange -enable_access_aggregation $v }
  method _g_./ancpRange/enableAccessAggregation {t} { $self _cget_relative ./ancpRange -enable_access_aggregation }
  option -ancp_range_object_id \
    -configuremethod _c_./ancpRange/objectId \
    -cgetmethod _g_./ancpRange/objectId \
    -readonly false
  method _c_./ancpRange/objectId {t v} { $self _configure_relative ./ancpRange -object_id $v }
  method _g_./ancpRange/objectId {t} { $self _cget_relative ./ancpRange -object_id }
  # multiplier 
  method _m_ancp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_object_id }
  
  option -ancp_range_atm_vci \
    -configuremethod _c_./ancpRange/atmVci \
    -cgetmethod _g_./ancpRange/atmVci \
    -readonly false
  method _c_./ancpRange/atmVci {t v} { $self _configure_relative ./ancpRange -atm_vci $v }
  method _g_./ancpRange/atmVci {t} { $self _cget_relative ./ancpRange -atm_vci }
  # multiplier 
  method _m_ancp_range_atm_vci {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vci }
  
  option -ancp_range_nas_ipaddress_incr \
    -configuremethod _c_./ancpRange/nasIPAddressIncr \
    -cgetmethod _g_./ancpRange/nasIPAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIPAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ipaddress_incr $v }
  method _g_./ancpRange/nasIPAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ipaddress_incr }
  # multiplier 
  method _m_ancp_range_nas_ipaddress_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ipaddress_incr }
  
  option -ancp_range_outer_vlan_id \
    -configuremethod _c_./ancpRange/outerVlanId \
    -cgetmethod _g_./ancpRange/outerVlanId \
    -readonly false
  method _c_./ancpRange/outerVlanId {t v} { $self _configure_relative ./ancpRange -outer_vlan_id $v }
  method _g_./ancpRange/outerVlanId {t} { $self _cget_relative ./ancpRange -outer_vlan_id }
  # multiplier 
  method _m_ancp_range_outer_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_outer_vlan_id }
  
  option -ancp_range_nas_ip_address_incr \
    -configuremethod _c_./ancpRange/nasIpAddressIncr \
    -cgetmethod _g_./ancpRange/nasIpAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIpAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ip_address_incr $v }
  method _g_./ancpRange/nasIpAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ip_address_incr }
  # multiplier 
  method _m_ancp_range_nas_ip_address_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address_incr }
  
  option -ancp_range_dsl_resync_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslResyncProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslResyncProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslResyncProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_resync_profile_allocation_table $v }
  method _g_./ancpRange/dslResyncProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_resync_profile_allocation_table }
  option -ancp_range_dsl_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_profile_allocation_table $v }
  method _g_./ancpRange/dslProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_profile_allocation_table }
  option -ancp_range_ancp_ip_range \
    -configuremethod _c_./ancpRange/ancpIpRange \
    -cgetmethod _g_./ancpRange/ancpIpRange \
    -readonly false
  method _c_./ancpRange/ancpIpRange {t v} { $self _configure_relative ./ancpRange -ancp_ip_range $v }
  method _g_./ancpRange/ancpIpRange {t} { $self _cget_relative ./ancpRange -ancp_ip_range }
  option -ancp_range_ancp_pvc_range \
    -configuremethod _c_./ancpRange/ancpPvcRange \
    -cgetmethod _g_./ancpRange/ancpPvcRange \
    -readonly false
  method _c_./ancpRange/ancpPvcRange {t v} { $self _configure_relative ./ancpRange -ancp_pvc_range $v }
  method _g_./ancpRange/ancpPvcRange {t} { $self _cget_relative ./ancpRange -ancp_pvc_range }
  option -ancp_range_ancp_vlan_range \
    -configuremethod _c_./ancpRange/ancpVlanRange \
    -cgetmethod _g_./ancpRange/ancpVlanRange \
    -readonly false
  method _c_./ancpRange/ancpVlanRange {t v} { $self _configure_relative ./ancpRange -ancp_vlan_range $v }
  method _g_./ancpRange/ancpVlanRange {t} { $self _cget_relative ./ancpRange -ancp_vlan_range }
  option -ancp_range_ancp_mac_range \
    -configuremethod _c_./ancpRange/ancpMacRange \
    -cgetmethod _g_./ancpRange/ancpMacRange \
    -readonly false
  method _c_./ancpRange/ancpMacRange {t v} { $self _configure_relative ./ancpRange -ancp_mac_range $v }
  method _g_./ancpRange/ancpMacRange {t} { $self _cget_relative ./ancpRange -ancp_mac_range }
  option -ancp_range_ancp_atm_range \
    -configuremethod _c_./ancpRange/ancpAtmRange \
    -cgetmethod _g_./ancpRange/ancpAtmRange \
    -readonly false
  method _c_./ancpRange/ancpAtmRange {t v} { $self _configure_relative ./ancpRange -ancp_atm_range $v }
  method _g_./ancpRange/ancpAtmRange {t} { $self _cget_relative ./ancpRange -ancp_atm_range }
  option -ancp_range_ancp_ip_range_count \
    -configuremethod _c_./ancpRange/ancpIpRange/count \
    -cgetmethod _g_./ancpRange/ancpIpRange/count \
    -readonly false
  method _c_./ancpRange/ancpIpRange/count {t v} { $self _configure_relative ./ancpRange/ancpIpRange -count $v }
  method _g_./ancpRange/ancpIpRange/count {t} { $self _cget_relative ./ancpRange/ancpIpRange -count }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_count }
  
  option -ancp_range_ancp_ip_range_ip_type \
    -configuremethod _c_./ancpRange/ancpIpRange/ipType \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipType \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipType {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_type $v }
  method _g_./ancpRange/ancpIpRange/ipType {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_type }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_type }
  
  option -ancp_range_ancp_ip_range_enabled \
    -configuremethod _c_./ancpRange/ancpIpRange/enabled \
    -cgetmethod _g_./ancpRange/ancpIpRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enabled $v }
  method _g_./ancpRange/ancpIpRange/enabled {t} { $self _cget_relative ./ancpRange/ancpIpRange -enabled }
  option -ancp_range_ancp_ip_range_gateway_increment_mode \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrementMode {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment_mode $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrementMode {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment_mode }
  
  option -ancp_range_ancp_ip_range_enable_gateway_arp \
    -configuremethod _c_./ancpRange/ancpIpRange/enableGatewayArp \
    -cgetmethod _g_./ancpRange/ancpIpRange/enableGatewayArp \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enableGatewayArp {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enable_gateway_arp $v }
  method _g_./ancpRange/ancpIpRange/enableGatewayArp {t} { $self _cget_relative ./ancpRange/ancpIpRange -enable_gateway_arp }
  option -ancp_range_ancp_ip_range_ip_address \
    -configuremethod _c_./ancpRange/ancpIpRange/ipAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_address $v }
  method _g_./ancpRange/ancpIpRange/ipAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_address }
  
  option -ancp_range_ancp_ip_range_gateway_increment \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrement \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrement \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrement {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrement {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment }
  
  option -ancp_range_ancp_ip_range_increment_by \
    -configuremethod _c_./ancpRange/ancpIpRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpIpRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpIpRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpIpRange -increment_by $v }
  method _g_./ancpRange/ancpIpRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpIpRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_increment_by }
  
  option -ancp_range_ancp_ip_range_gateway_address \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_address $v }
  method _g_./ancpRange/ancpIpRange/gatewayAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_address }
  
  option -ancp_range_ancp_ip_range_name \
    -configuremethod _c_./ancpRange/ancpIpRange/name \
    -cgetmethod _g_./ancpRange/ancpIpRange/name \
    -readonly false
  method _c_./ancpRange/ancpIpRange/name {t v} { $self _configure_relative ./ancpRange/ancpIpRange -name $v }
  method _g_./ancpRange/ancpIpRange/name {t} { $self _cget_relative ./ancpRange/ancpIpRange -name }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_name }
  
  option -ancp_range_ancp_ip_range_mss \
    -configuremethod _c_./ancpRange/ancpIpRange/mss \
    -cgetmethod _g_./ancpRange/ancpIpRange/mss \
    -readonly false
  method _c_./ancpRange/ancpIpRange/mss {t v} { $self _configure_relative ./ancpRange/ancpIpRange -mss $v }
  method _g_./ancpRange/ancpIpRange/mss {t} { $self _cget_relative ./ancpRange/ancpIpRange -mss }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_mss }
  
  option -ancp_range_ancp_ip_range_object_id \
    -configuremethod _c_./ancpRange/ancpIpRange/objectId \
    -cgetmethod _g_./ancpRange/ancpIpRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpIpRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpIpRange -object_id $v }
  method _g_./ancpRange/ancpIpRange/objectId {t} { $self _cget_relative ./ancpRange/ancpIpRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_object_id }
  
  option -ancp_range_ancp_ip_range_prefix \
    -configuremethod _c_./ancpRange/ancpIpRange/prefix \
    -cgetmethod _g_./ancpRange/ancpIpRange/prefix \
    -readonly false
  method _c_./ancpRange/ancpIpRange/prefix {t v} { $self _configure_relative ./ancpRange/ancpIpRange -prefix $v }
  method _g_./ancpRange/ancpIpRange/prefix {t} { $self _cget_relative ./ancpRange/ancpIpRange -prefix }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_prefix }
  
  option -ancp_range_ancp_ip_range_auto_mac_generation \
    -configuremethod _c_./ancpRange/ancpIpRange/autoMacGeneration \
    -cgetmethod _g_./ancpRange/ancpIpRange/autoMacGeneration \
    -readonly false
  method _c_./ancpRange/ancpIpRange/autoMacGeneration {t v} { $self _configure_relative ./ancpRange/ancpIpRange -auto_mac_generation $v }
  method _g_./ancpRange/ancpIpRange/autoMacGeneration {t} { $self _cget_relative ./ancpRange/ancpIpRange -auto_mac_generation }
  option -ancp_range_ancp_pvc_range_vpi_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment_step }
  
  option -ancp_range_ancp_pvc_range_vci_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vciUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_unique_count }
  
  option -ancp_range_ancp_pvc_range_vci_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment_step }
  
  option -ancp_range_ancp_pvc_range_enabled \
    -configuremethod _c_./ancpRange/ancpPvcRange/enabled \
    -cgetmethod _g_./ancpRange/ancpPvcRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -enabled $v }
  method _g_./ancpRange/ancpPvcRange/enabled {t} { $self _cget_relative ./ancpRange/ancpPvcRange -enabled }
  option -ancp_range_ancp_pvc_range_vpi_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vpiFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_first_id }
  
  option -ancp_range_ancp_pvc_range_vpi_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment }
  
  option -ancp_range_ancp_pvc_range_vci_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vciFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_first_id }
  
  option -ancp_range_ancp_pvc_range_vci_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment }
  
  option -ancp_range_ancp_pvc_range_name \
    -configuremethod _c_./ancpRange/ancpPvcRange/name \
    -cgetmethod _g_./ancpRange/ancpPvcRange/name \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/name {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -name $v }
  method _g_./ancpRange/ancpPvcRange/name {t} { $self _cget_relative ./ancpRange/ancpPvcRange -name }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_name }
  
  option -ancp_range_ancp_pvc_range_increment_mode \
    -configuremethod _c_./ancpRange/ancpPvcRange/incrementMode \
    -cgetmethod _g_./ancpRange/ancpPvcRange/incrementMode \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/incrementMode {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -increment_mode $v }
  method _g_./ancpRange/ancpPvcRange/incrementMode {t} { $self _cget_relative ./ancpRange/ancpPvcRange -increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_increment_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_increment_mode }
  
  option -ancp_range_ancp_pvc_range_object_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/objectId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -object_id $v }
  method _g_./ancpRange/ancpPvcRange/objectId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_object_id }
  
  option -ancp_range_ancp_pvc_range_vpi_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vpiUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerFirstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerFirstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerFirstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_first_id $v }
  method _g_./ancpRange/ancpVlanRange/innerFirstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_first_id }
  
  option -ancp_range_ancp_vlan_range_inner_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrement \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrement \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrement {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrement {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment }
  
  option -ancp_range_ancp_vlan_range_enabled \
    -configuremethod _c_./ancpRange/ancpVlanRange/enabled \
    -cgetmethod _g_./ancpRange/ancpVlanRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -enabled $v }
  method _g_./ancpRange/ancpVlanRange/enabled {t} { $self _cget_relative ./ancpRange/ancpVlanRange -enabled }
  option -ancp_range_ancp_vlan_range_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/uniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/uniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/uniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -unique_count $v }
  method _g_./ancpRange/ancpVlanRange/uniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_unique_count }
  
  option -ancp_range_ancp_vlan_range_name \
    -configuremethod _c_./ancpRange/ancpVlanRange/name \
    -cgetmethod _g_./ancpRange/ancpVlanRange/name \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/name {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -name $v }
  method _g_./ancpRange/ancpVlanRange/name {t} { $self _cget_relative ./ancpRange/ancpVlanRange -name }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_name }
  
  option -ancp_range_ancp_vlan_range_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/incrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/incrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/incrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment_step $v }
  method _g_./ancpRange/ancpVlanRange/incrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment_step }
  
  option -ancp_range_ancp_vlan_range_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/tpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/tpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/tpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -tpid $v }
  method _g_./ancpRange/ancpVlanRange/tpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_tpid }
  
  option -ancp_range_ancp_vlan_range_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/priority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/priority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/priority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -priority $v }
  method _g_./ancpRange/ancpVlanRange/priority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_priority }
  
  option -ancp_range_ancp_vlan_range_inner_enable \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerEnable \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerEnable \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerEnable {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_enable $v }
  method _g_./ancpRange/ancpVlanRange/innerEnable {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_enable }
  option -ancp_range_ancp_vlan_range_object_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/objectId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -object_id $v }
  method _g_./ancpRange/ancpVlanRange/objectId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_object_id }
  
  option -ancp_range_ancp_vlan_range_inner_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerUniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_unique_count $v }
  method _g_./ancpRange/ancpVlanRange/innerUniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerTpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerTpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerTpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_tpid $v }
  method _g_./ancpRange/ancpVlanRange/innerTpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_tpid }
  
  option -ancp_range_ancp_vlan_range_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/firstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/firstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/firstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -first_id $v }
  method _g_./ancpRange/ancpVlanRange/firstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_first_id }
  
  option -ancp_range_ancp_vlan_range_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/increment \
    -cgetmethod _g_./ancpRange/ancpVlanRange/increment \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/increment {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment $v }
  method _g_./ancpRange/ancpVlanRange/increment {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment }
  
  option -ancp_range_ancp_vlan_range_inner_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment_step $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment_step }
  
  option -ancp_range_ancp_vlan_range_id_incr_mode \
    -configuremethod _c_./ancpRange/ancpVlanRange/idIncrMode \
    -cgetmethod _g_./ancpRange/ancpVlanRange/idIncrMode \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/idIncrMode {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -id_incr_mode $v }
  method _g_./ancpRange/ancpVlanRange/idIncrMode {t} { $self _cget_relative ./ancpRange/ancpVlanRange -id_incr_mode }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_id_incr_mode }
  
  option -ancp_range_ancp_vlan_range_inner_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerPriority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerPriority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerPriority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_priority $v }
  method _g_./ancpRange/ancpVlanRange/innerPriority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_priority }
  
  option -ancp_range_ancp_vlan_range_vlan_id_info \
    -configuremethod _c_./ancpRange/ancpVlanRange/vlanIdInfo \
    -cgetmethod _g_./ancpRange/ancpVlanRange/vlanIdInfo \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/vlanIdInfo {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -vlan_id_info $v }
  method _g_./ancpRange/ancpVlanRange/vlanIdInfo {t} { $self _cget_relative ./ancpRange/ancpVlanRange -vlan_id_info }
  option -ancp_range_ancp_mac_range_object_id \
    -configuremethod _c_./ancpRange/ancpMacRange/objectId \
    -cgetmethod _g_./ancpRange/ancpMacRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpMacRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpMacRange -object_id $v }
  method _g_./ancpRange/ancpMacRange/objectId {t} { $self _cget_relative ./ancpRange/ancpMacRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_object_id }
  
  option -ancp_range_ancp_mac_range_increment_by \
    -configuremethod _c_./ancpRange/ancpMacRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpMacRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpMacRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpMacRange -increment_by $v }
  method _g_./ancpRange/ancpMacRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpMacRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_increment_by }
  
  option -ancp_range_ancp_mac_range_name \
    -configuremethod _c_./ancpRange/ancpMacRange/name \
    -cgetmethod _g_./ancpRange/ancpMacRange/name \
    -readonly false
  method _c_./ancpRange/ancpMacRange/name {t v} { $self _configure_relative ./ancpRange/ancpMacRange -name $v }
  method _g_./ancpRange/ancpMacRange/name {t} { $self _cget_relative ./ancpRange/ancpMacRange -name }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_name }
  
  option -ancp_range_ancp_mac_range_count \
    -configuremethod _c_./ancpRange/ancpMacRange/count \
    -cgetmethod _g_./ancpRange/ancpMacRange/count \
    -readonly false
  method _c_./ancpRange/ancpMacRange/count {t v} { $self _configure_relative ./ancpRange/ancpMacRange -count $v }
  method _g_./ancpRange/ancpMacRange/count {t} { $self _cget_relative ./ancpRange/ancpMacRange -count }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_count }
  
  option -ancp_range_ancp_mac_range_mac \
    -configuremethod _c_./ancpRange/ancpMacRange/mac \
    -cgetmethod _g_./ancpRange/ancpMacRange/mac \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mac {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mac $v }
  method _g_./ancpRange/ancpMacRange/mac {t} { $self _cget_relative ./ancpRange/ancpMacRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mac }
  
  option -ancp_range_ancp_mac_range_mtu \
    -configuremethod _c_./ancpRange/ancpMacRange/mtu \
    -cgetmethod _g_./ancpRange/ancpMacRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mtu $v }
  method _g_./ancpRange/ancpMacRange/mtu {t} { $self _cget_relative ./ancpRange/ancpMacRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mtu }
  
  option -ancp_range_ancp_mac_range_enabled \
    -configuremethod _c_./ancpRange/ancpMacRange/enabled \
    -cgetmethod _g_./ancpRange/ancpMacRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpMacRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpMacRange -enabled $v }
  method _g_./ancpRange/ancpMacRange/enabled {t} { $self _cget_relative ./ancpRange/ancpMacRange -enabled }
  option -ancp_range_ancp_atm_range_object_id \
    -configuremethod _c_./ancpRange/ancpAtmRange/objectId \
    -cgetmethod _g_./ancpRange/ancpAtmRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -object_id $v }
  method _g_./ancpRange/ancpAtmRange/objectId {t} { $self _cget_relative ./ancpRange/ancpAtmRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_object_id }
  
  option -ancp_range_ancp_atm_range_increment_by \
    -configuremethod _c_./ancpRange/ancpAtmRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpAtmRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -increment_by $v }
  method _g_./ancpRange/ancpAtmRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpAtmRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_increment_by }
  
  option -ancp_range_ancp_atm_range_name \
    -configuremethod _c_./ancpRange/ancpAtmRange/name \
    -cgetmethod _g_./ancpRange/ancpAtmRange/name \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/name {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -name $v }
  method _g_./ancpRange/ancpAtmRange/name {t} { $self _cget_relative ./ancpRange/ancpAtmRange -name }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_name }
  
  option -ancp_range_ancp_atm_range_count \
    -configuremethod _c_./ancpRange/ancpAtmRange/count \
    -cgetmethod _g_./ancpRange/ancpAtmRange/count \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/count {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -count $v }
  method _g_./ancpRange/ancpAtmRange/count {t} { $self _cget_relative ./ancpRange/ancpAtmRange -count }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_count }
  
  option -ancp_range_ancp_atm_range_mac \
    -configuremethod _c_./ancpRange/ancpAtmRange/mac \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mac \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mac {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mac $v }
  method _g_./ancpRange/ancpAtmRange/mac {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mac }
  
  option -ancp_range_ancp_atm_range_mtu \
    -configuremethod _c_./ancpRange/ancpAtmRange/mtu \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mtu $v }
  method _g_./ancpRange/ancpAtmRange/mtu {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mtu }
  
  option -ancp_range_ancp_atm_range_encapsulation \
    -configuremethod _c_./ancpRange/ancpAtmRange/encapsulation \
    -cgetmethod _g_./ancpRange/ancpAtmRange/encapsulation \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/encapsulation {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -encapsulation $v }
  method _g_./ancpRange/ancpAtmRange/encapsulation {t} { $self _cget_relative ./ancpRange/ancpAtmRange -encapsulation }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_encapsulation {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_encapsulation }
  
  option -ancp_range_ancp_atm_range_enabled \
    -configuremethod _c_./ancpRange/ancpAtmRange/enabled \
    -cgetmethod _g_./ancpRange/ancpAtmRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -enabled $v }
  method _g_./ancpRange/ancpAtmRange/enabled {t} { $self _cget_relative ./ancpRange/ancpAtmRange -enabled }
  option -iptv_range_inter_stb_start_delay \
    -configuremethod _c_./iptvRange/interStbStartDelay \
    -cgetmethod _g_./iptvRange/interStbStartDelay \
    -readonly false
  method _c_./iptvRange/interStbStartDelay {t v} { $self _configure_relative ./iptvRange -inter_stb_start_delay $v }
  method _g_./iptvRange/interStbStartDelay {t} { $self _cget_relative ./iptvRange -inter_stb_start_delay }
  # multiplier 
  method _m_iptv_range_inter_stb_start_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_inter_stb_start_delay }
  
  option -iptv_range_router_alert \
    -configuremethod _c_./iptvRange/routerAlert \
    -cgetmethod _g_./iptvRange/routerAlert \
    -readonly false
  method _c_./iptvRange/routerAlert {t v} { $self _configure_relative ./iptvRange -router_alert $v }
  method _g_./iptvRange/routerAlert {t} { $self _cget_relative ./iptvRange -router_alert }
  option -iptv_range_viewing_profile \
    -configuremethod _c_./iptvRange/viewingProfile \
    -cgetmethod _g_./iptvRange/viewingProfile \
    -readonly false
  method _c_./iptvRange/viewingProfile {t v} { $self _configure_relative ./iptvRange -viewing_profile $v }
  method _g_./iptvRange/viewingProfile {t} { $self _cget_relative ./iptvRange -viewing_profile }
  option -iptv_range_leave_latency_threshold \
    -configuremethod _c_./iptvRange/leaveLatencyThreshold \
    -cgetmethod _g_./iptvRange/leaveLatencyThreshold \
    -readonly false
  method _c_./iptvRange/leaveLatencyThreshold {t v} { $self _configure_relative ./iptvRange -leave_latency_threshold $v }
  method _g_./iptvRange/leaveLatencyThreshold {t} { $self _cget_relative ./iptvRange -leave_latency_threshold }
  # multiplier 
  method _m_iptv_range_leave_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_leave_latency_threshold }
  
  option -iptv_range_enabled \
    -configuremethod _c_./iptvRange/enabled \
    -cgetmethod _g_./iptvRange/enabled \
    -readonly false
  method _c_./iptvRange/enabled {t v} { $self _configure_relative ./iptvRange -enabled $v }
  method _g_./iptvRange/enabled {t} { $self _cget_relative ./iptvRange -enabled }
  option -iptv_range_join_latency_threshold \
    -configuremethod _c_./iptvRange/joinLatencyThreshold \
    -cgetmethod _g_./iptvRange/joinLatencyThreshold \
    -readonly false
  method _c_./iptvRange/joinLatencyThreshold {t v} { $self _configure_relative ./iptvRange -join_latency_threshold $v }
  method _g_./iptvRange/joinLatencyThreshold {t} { $self _cget_relative ./iptvRange -join_latency_threshold }
  # multiplier 
  method _m_iptv_range_join_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_latency_threshold }
  
  option -iptv_range_report_frequency \
    -configuremethod _c_./iptvRange/reportFrequency \
    -cgetmethod _g_./iptvRange/reportFrequency \
    -readonly false
  method _c_./iptvRange/reportFrequency {t v} { $self _configure_relative ./iptvRange -report_frequency $v }
  method _g_./iptvRange/reportFrequency {t} { $self _cget_relative ./iptvRange -report_frequency }
  # multiplier 
  method _m_iptv_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_report_frequency }
  
  option -iptv_range_unsolicited_response_mode \
    -configuremethod _c_./iptvRange/unsolicitedResponseMode \
    -cgetmethod _g_./iptvRange/unsolicitedResponseMode \
    -readonly false
  method _c_./iptvRange/unsolicitedResponseMode {t v} { $self _configure_relative ./iptvRange -unsolicited_response_mode $v }
  method _g_./iptvRange/unsolicitedResponseMode {t} { $self _cget_relative ./iptvRange -unsolicited_response_mode }
  option -iptv_range_general_query_response_mode \
    -configuremethod _c_./iptvRange/generalQueryResponseMode \
    -cgetmethod _g_./iptvRange/generalQueryResponseMode \
    -readonly false
  method _c_./iptvRange/generalQueryResponseMode {t v} { $self _configure_relative ./iptvRange -general_query_response_mode $v }
  method _g_./iptvRange/generalQueryResponseMode {t} { $self _cget_relative ./iptvRange -general_query_response_mode }
  option -iptv_range_specific_query_response_mode \
    -configuremethod _c_./iptvRange/specificQueryResponseMode \
    -cgetmethod _g_./iptvRange/specificQueryResponseMode \
    -readonly false
  method _c_./iptvRange/specificQueryResponseMode {t v} { $self _configure_relative ./iptvRange -specific_query_response_mode $v }
  method _g_./iptvRange/specificQueryResponseMode {t} { $self _cget_relative ./iptvRange -specific_query_response_mode }
  option -iptv_range_name \
    -configuremethod _c_./iptvRange/name \
    -cgetmethod _g_./iptvRange/name \
    -readonly false
  method _c_./iptvRange/name {t v} { $self _configure_relative ./iptvRange -name $v }
  method _g_./iptvRange/name {t} { $self _cget_relative ./iptvRange -name }
  # multiplier 
  method _m_iptv_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_name }
  
  option -iptv_range_log_failure_timestamps \
    -configuremethod _c_./iptvRange/logFailureTimestamps \
    -cgetmethod _g_./iptvRange/logFailureTimestamps \
    -readonly false
  method _c_./iptvRange/logFailureTimestamps {t v} { $self _configure_relative ./iptvRange -log_failure_timestamps $v }
  method _g_./iptvRange/logFailureTimestamps {t} { $self _cget_relative ./iptvRange -log_failure_timestamps }
  option -iptv_range_object_id \
    -configuremethod _c_./iptvRange/objectId \
    -cgetmethod _g_./iptvRange/objectId \
    -readonly false
  method _c_./iptvRange/objectId {t v} { $self _configure_relative ./iptvRange -object_id $v }
  method _g_./iptvRange/objectId {t} { $self _cget_relative ./iptvRange -object_id }
  # multiplier 
  method _m_iptv_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_object_id }
  
  option -iptv_range_join_leave_multiplier \
    -configuremethod _c_./iptvRange/joinLeaveMultiplier \
    -cgetmethod _g_./iptvRange/joinLeaveMultiplier \
    -readonly false
  method _c_./iptvRange/joinLeaveMultiplier {t v} { $self _configure_relative ./iptvRange -join_leave_multiplier $v }
  method _g_./iptvRange/joinLeaveMultiplier {t} { $self _cget_relative ./iptvRange -join_leave_multiplier }
  # multiplier 
  method _m_iptv_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_leave_multiplier }
  
  option -iptv_range_stb_leave_join_delay \
    -configuremethod _c_./iptvRange/stbLeaveJoinDelay \
    -cgetmethod _g_./iptvRange/stbLeaveJoinDelay \
    -readonly false
  method _c_./iptvRange/stbLeaveJoinDelay {t v} { $self _configure_relative ./iptvRange -stb_leave_join_delay $v }
  method _g_./iptvRange/stbLeaveJoinDelay {t} { $self _cget_relative ./iptvRange -stb_leave_join_delay }
  # multiplier 
  method _m_iptv_range_stb_leave_join_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_stb_leave_join_delay }
  
  option -iptv_range_version \
    -configuremethod _c_./iptvRange/version \
    -cgetmethod _g_./iptvRange/version \
    -readonly false
  method _c_./iptvRange/version {t v} { $self _configure_relative ./iptvRange -version $v }
  method _g_./iptvRange/version {t} { $self _cget_relative ./iptvRange -version }
  # multiplier 
  method _m_iptv_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_version }
  
  option -iptv_range_immediate_response \
    -configuremethod _c_./iptvRange/immediateResponse \
    -cgetmethod _g_./iptvRange/immediateResponse \
    -readonly false
  method _c_./iptvRange/immediateResponse {t v} { $self _configure_relative ./iptvRange -immediate_response $v }
  method _g_./iptvRange/immediateResponse {t} { $self _cget_relative ./iptvRange -immediate_response }
  option -iptv_range_iptv_channels \
    -configuremethod _c_./iptvRange/iptvChannels \
    -cgetmethod _g_./iptvRange/iptvChannels \
    -readonly false
  method _c_./iptvRange/iptvChannels {t v} { $self _configure_relative ./iptvRange -iptv_channels $v }
  method _g_./iptvRange/iptvChannels {t} { $self _cget_relative ./iptvRange -iptv_channels }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -esmc_range_object_id ./esmcRange/objectId
    -esmc_range_rate ./esmcRange/rate
    -esmc_range_name ./esmcRange/name
    -esmc_range_ql ./esmcRange/ql
    -esmc_range_wait_id ./esmcRange/waitId
    -esmc_range_enabled ./esmcRange/enabled
    -esmc_range_flag_mode ./esmcRange/flagMode
    -ip_range_count ./ipRange/count
    -ip_range_ip_type ./ipRange/ipType
    -ip_range_enabled ./ipRange/enabled
    -ip_range_gateway_increment_mode ./ipRange/gatewayIncrementMode
    -ip_range_enable_gateway_arp ./ipRange/enableGatewayArp
    -ip_range_ip_address ./ipRange/ipAddress
    -ip_range_gateway_increment ./ipRange/gatewayIncrement
    -ip_range_increment_by ./ipRange/incrementBy
    -ip_range_gateway_address ./ipRange/gatewayAddress
    -ip_range_name ./ipRange/name
    -ip_range_mss ./ipRange/mss
    -ip_range_object_id ./ipRange/objectId
    -ip_range_prefix ./ipRange/prefix
    -ip_range_auto_mac_generation ./ipRange/autoMacGeneration
    -amt_range_use_relay_discovery ./amtRange/useRelayDiscovery
    -amt_range_amt_unicast_ip ./amtRange/amtUnicastIp
    -amt_range_enabled ./amtRange/enabled
    -amt_range_query_timer_interval ./amtRange/queryTimerInterval
    -amt_range_amt_udp_src_port_increment ./amtRange/amtUdpSrcPortIncrement
    -amt_range_send_teardown ./amtRange/sendTeardown
    -amt_range_discovery_retries ./amtRange/discoveryRetries
    -amt_range_discovery_timeout ./amtRange/discoveryTimeout
    -amt_range_request_retries ./amtRange/requestRetries
    -amt_range_amt_udp_src_port ./amtRange/amtUdpSrcPort
    -amt_range_request_timeout ./amtRange/requestTimeout
    -amt_range_name ./amtRange/name
    -amt_range_amt_anycast_ip_increment ./amtRange/amtAnycastIpIncrement
    -amt_range_object_id ./amtRange/objectId
    -amt_range_override_qt ./amtRange/overrideQt
    -amt_range_amt_anycast_ip ./amtRange/amtAnycastIp
    -amt_range_amt_unicast_ip_increment ./amtRange/amtUnicastIpIncrement
    -eapo_udp_range_expected_system_token ./eapoUdpRange/expectedSystemToken
    -eapo_udp_range_user_password ./eapoUdpRange/userPassword
    -eapo_udp_range_enabled ./eapoUdpRange/enabled
    -eapo_udp_range_nac_sequence ./eapoUdpRange/nacSequence
    -eapo_udp_range_fast_stateless_resume ./eapoUdpRange/fastStatelessResume
    -eapo_udp_range_user_name ./eapoUdpRange/userName
    -eapo_udp_range_response_type ./eapoUdpRange/responseType
    -eapo_udp_range_name ./eapoUdpRange/name
    -eapo_udp_range_protocol ./eapoUdpRange/protocol
    -eapo_udp_range_fast_inner_method ./eapoUdpRange/fastInnerMethod
    -eapo_udp_range_fast_provision_mode ./eapoUdpRange/fastProvisionMode
    -eapo_udp_range_object_id ./eapoUdpRange/objectId
    -twamp_server_range_iteration_count ./twampServerRange/iterationCount
    -twamp_server_range_count ./twampServerRange/count
    -twamp_server_range_enabled ./twampServerRange/enabled
    -twamp_server_range_reflector_port ./twampServerRange/reflectorPort
    -twamp_server_range_max_test_sessions ./twampServerRange/maxTestSessions
    -twamp_server_range_control_port ./twampServerRange/controlPort
    -twamp_server_range_key_id ./twampServerRange/keyId
    -twamp_server_range_permitted_ip ./twampServerRange/permittedIp
    -twamp_server_range_name ./twampServerRange/name
    -twamp_server_range_enable_access_control ./twampServerRange/enableAccessControl
    -twamp_server_range_object_id ./twampServerRange/objectId
    -twamp_server_range_permitted_ip_increment ./twampServerRange/permittedIpIncrement
    -twamp_server_range_permitted_sender_port ./twampServerRange/permittedSenderPort
    -twamp_server_range_mode ./twampServerRange/mode
    -twamp_server_range_secret ./twampServerRange/secret
    -dot1x_range_user_password ./dot1xRange/userPassword
    -dot1x_range_nac_sequence ./dot1xRange/nacSequence
    -dot1x_range_enabled ./dot1xRange/enabled
    -dot1x_range_fast_stateless_resume ./dot1xRange/fastStatelessResume
    -dot1x_range_user_name ./dot1xRange/userName
    -dot1x_range_host_password ./dot1xRange/hostPassword
    -dot1x_range_name ./dot1xRange/name
    -dot1x_range_wait_id ./dot1xRange/waitId
    -dot1x_range_protocol ./dot1xRange/protocol
    -dot1x_range_fast_inner_method ./dot1xRange/fastInnerMethod
    -dot1x_range_object_id ./dot1xRange/objectId
    -dot1x_range_fast_provision_mode ./dot1xRange/fastProvisionMode
    -dot1x_range_host_auth_mode ./dot1xRange/hostAuthMode
    -dot1x_range_host_name ./dot1xRange/hostName
    -web_auth_range_object_id ./webAuthRange/objectId
    -web_auth_range_input_value3 ./webAuthRange/inputValue3
    -web_auth_range_name ./webAuthRange/name
    -web_auth_range_expect ./webAuthRange/expect
    -web_auth_range_input_value1 ./webAuthRange/inputValue1
    -web_auth_range_enabled ./webAuthRange/enabled
    -web_auth_range_input_value2 ./webAuthRange/inputValue2
    -ptp_range_over_ip_master_mac_increment_inter_entity ./ptpRangeOverIp/masterMacIncrementInterEntity
    -ptp_range_over_ip_communication_mode ./ptpRangeOverIp/communicationMode
    -ptp_range_over_ip_send_announce_multicast ./ptpRangeOverIp/sendAnnounceMulticast
    -ptp_range_over_ip_follow_up_delay ./ptpRangeOverIp/followUpDelay
    -ptp_range_over_ip_domain ./ptpRangeOverIp/domain
    -ptp_range_over_ip_announce_drop_rate ./ptpRangeOverIp/announceDropRate
    -ptp_range_over_ip_client_ip_increment_by ./ptpRangeOverIp/clientIpIncrementBy
    -ptp_range_over_ip_renewal_invited ./ptpRangeOverIp/renewalInvited
    -ptp_range_over_ip_port_number_increment ./ptpRangeOverIp/portNumberIncrement
    -ptp_range_over_ip_use_clock_identity ./ptpRangeOverIp/useClockIdentity
    -ptp_range_over_ip_priority1 ./ptpRangeOverIp/priority1
    -ptp_range_over_ip_use_alternate_master_flag ./ptpRangeOverIp/useAlternateMasterFlag
    -ptp_range_over_ip_object_id ./ptpRangeOverIp/objectId
    -ptp_range_over_ip_delay_resp_receipt_timeout ./ptpRangeOverIp/delayRespReceiptTimeout
    -ptp_range_over_ip_announce_frequency_traceable ./ptpRangeOverIp/announceFrequencyTraceable
    -ptp_range_over_ip_priority2 ./ptpRangeOverIp/priority2
    -ptp_range_over_ip_announce_current_utc_offset_valid ./ptpRangeOverIp/announceCurrentUtcOffsetValid
    -ptp_range_over_ip_client_mac_address ./ptpRangeOverIp/clientMacAddress
    -ptp_range_over_ip_time_source ./ptpRangeOverIp/timeSource
    -ptp_range_over_ip_steps_removed ./ptpRangeOverIp/stepsRemoved
    -ptp_range_over_ip_clock_class ./ptpRangeOverIp/clockClass
    -ptp_range_over_ip_request_attempts ./ptpRangeOverIp/requestAttempts
    -ptp_range_over_ip_follow_up_bad_crc_rate ./ptpRangeOverIp/followUpBadCrcRate
    -ptp_range_over_ip_delay_response_delay_insertion_rate ./ptpRangeOverIp/delayResponseDelayInsertionRate
    -ptp_range_over_ip_log_sync_interval ./ptpRangeOverIp/logSyncInterval
    -ptp_range_over_ip_master_count ./ptpRangeOverIp/masterCount
    -ptp_range_over_ip_residence_time ./ptpRangeOverIp/residenceTime
    -ptp_range_over_ip_signal_interval ./ptpRangeOverIp/signalInterval
    -ptp_range_over_ip_delay_mechanism ./ptpRangeOverIp/delayMechanism
    -ptp_range_over_ip_strict_grant ./ptpRangeOverIp/strictGrant
    -ptp_range_over_ip_sync_drop_rate ./ptpRangeOverIp/syncDropRate
    -ptp_range_over_ip_drop_signal_req_sync ./ptpRangeOverIp/dropSignalReqSync
    -ptp_range_over_ip_clock_increment ./ptpRangeOverIp/clockIncrement
    -ptp_range_over_ip_announce_ptp_timescale ./ptpRangeOverIp/announcePtpTimescale
    -ptp_range_over_ip_signal_unicast_handling ./ptpRangeOverIp/signalUnicastHandling
    -ptp_range_over_ip_enabled ./ptpRangeOverIp/enabled
    -ptp_range_over_ip_timestamp_offset ./ptpRangeOverIp/timestampOffset
    -ptp_range_over_ip_master_ip_increment_by ./ptpRangeOverIp/masterIpIncrementBy
    -ptp_range_over_ip_request_interval ./ptpRangeOverIp/requestInterval
    -ptp_range_over_ip_ip_tos ./ptpRangeOverIp/ipTos
    -ptp_range_over_ip_request_holddown ./ptpRangeOverIp/requestHolddown
    -ptp_range_over_ip_client_mac_increment_by ./ptpRangeOverIp/clientMacIncrementBy
    -ptp_range_over_ip_name ./ptpRangeOverIp/name
    -ptp_range_over_ip_drop_signal_req_announce ./ptpRangeOverIp/dropSignalReqAnnounce
    -ptp_range_over_ip_master_ip_address ./ptpRangeOverIp/masterIpAddress
    -ptp_range_over_ip_first_clock ./ptpRangeOverIp/firstClock
    -ptp_range_over_ip_master_mac_increment_by ./ptpRangeOverIp/masterMacIncrementBy
    -ptp_range_over_ip_send_cancel_tlv ./ptpRangeOverIp/sendCancelTlv
    -ptp_range_over_ip_port_number ./ptpRangeOverIp/portNumber
    -ptp_range_over_ip_client_ip_address ./ptpRangeOverIp/clientIpAddress
    -ptp_range_over_ip_announce_leap59 ./ptpRangeOverIp/announceLeap59
    -ptp_range_over_ip_send_announce_tlv ./ptpRangeOverIp/sendAnnounceTlv
    -ptp_range_over_ip_sync_receipt_timeout ./ptpRangeOverIp/syncReceiptTimeout
    -ptp_range_over_ip_announce_leap61 ./ptpRangeOverIp/announceLeap61
    -ptp_range_over_ip_grant_delay_resp_duration_interval ./ptpRangeOverIp/grantDelayRespDurationInterval
    -ptp_range_over_ip_timestamp_offset_variation ./ptpRangeOverIp/timestampOffsetVariation
    -ptp_range_over_ip_follow_up_drop_rate ./ptpRangeOverIp/followUpDropRate
    -ptp_range_over_ip_master_mac_address ./ptpRangeOverIp/masterMacAddress
    -ptp_range_over_ip_drop_signal_req_delay_resp ./ptpRangeOverIp/dropSignalReqDelayResp
    -ptp_range_over_ip_grant_sync_duration_interval ./ptpRangeOverIp/grantSyncDurationInterval
    -ptp_range_over_ip_learn_port_id ./ptpRangeOverIp/learnPortId
    -ptp_range_over_ip_delay_response_delay ./ptpRangeOverIp/delayResponseDelay
    -ptp_range_over_ip_grant_unicast_duration_interval ./ptpRangeOverIp/grantUnicastDurationInterval
    -ptp_range_over_ip_follow_up_delay_insertion_rate ./ptpRangeOverIp/followUpDelayInsertionRate
    -ptp_range_over_ip_log_delay_req_interval ./ptpRangeOverIp/logDelayReqInterval
    -ptp_range_over_ip_clock_accuracy ./ptpRangeOverIp/clockAccuracy
    -ptp_range_over_ip_client_count ./ptpRangeOverIp/clientCount
    -ptp_range_over_ip_announce_time_traceable ./ptpRangeOverIp/announceTimeTraceable
    -ptp_range_over_ip_step_mode ./ptpRangeOverIp/stepMode
    -ptp_range_over_ip_master_ip_increment_inter_entity ./ptpRangeOverIp/masterIpIncrementInterEntity
    -ptp_range_over_ip_delay_resp_drop_rate ./ptpRangeOverIp/delayRespDropRate
    -ptp_range_over_ip_announce_receipt_timeout ./ptpRangeOverIp/announceReceiptTimeout
    -ptp_range_over_ip_rx_calibration ./ptpRangeOverIp/rxCalibration
    -ptp_range_over_ip_tx_calibration ./ptpRangeOverIp/txCalibration
    -ptp_range_over_ip_log_announce_interval ./ptpRangeOverIp/logAnnounceInterval
    -mac_range_object_id ./macRange/objectId
    -mac_range_increment_by ./macRange/incrementBy
    -mac_range_name ./macRange/name
    -mac_range_count ./macRange/count
    -mac_range_mac ./macRange/mac
    -mac_range_mtu ./macRange/mtu
    -mac_range_enabled ./macRange/enabled
    -vlan_range_inner_first_id ./vlanRange/innerFirstId
    -vlan_range_inner_increment ./vlanRange/innerIncrement
    -vlan_range_enabled ./vlanRange/enabled
    -vlan_range_unique_count ./vlanRange/uniqueCount
    -vlan_range_name ./vlanRange/name
    -vlan_range_increment_step ./vlanRange/incrementStep
    -vlan_range_tpid ./vlanRange/tpid
    -vlan_range_priority ./vlanRange/priority
    -vlan_range_inner_enable ./vlanRange/innerEnable
    -vlan_range_object_id ./vlanRange/objectId
    -vlan_range_inner_unique_count ./vlanRange/innerUniqueCount
    -vlan_range_inner_tpid ./vlanRange/innerTpid
    -vlan_range_first_id ./vlanRange/firstId
    -vlan_range_increment ./vlanRange/increment
    -vlan_range_inner_increment_step ./vlanRange/innerIncrementStep
    -vlan_range_id_incr_mode ./vlanRange/idIncrMode
    -vlan_range_inner_priority ./vlanRange/innerPriority
    -vlan_range_vlan_id_info ./vlanRange/vlanIdInfo
    -ptp_range_over_mac_master_mac_increment_inter_entity ./ptpRangeOverMac/masterMacIncrementInterEntity
    -ptp_range_over_mac_communication_mode ./ptpRangeOverMac/communicationMode
    -ptp_range_over_mac_send_announce_multicast ./ptpRangeOverMac/sendAnnounceMulticast
    -ptp_range_over_mac_follow_up_delay ./ptpRangeOverMac/followUpDelay
    -ptp_range_over_mac_domain ./ptpRangeOverMac/domain
    -ptp_range_over_mac_announce_drop_rate ./ptpRangeOverMac/announceDropRate
    -ptp_range_over_mac_client_ip_increment_by ./ptpRangeOverMac/clientIpIncrementBy
    -ptp_range_over_mac_renewal_invited ./ptpRangeOverMac/renewalInvited
    -ptp_range_over_mac_port_number_increment ./ptpRangeOverMac/portNumberIncrement
    -ptp_range_over_mac_use_clock_identity ./ptpRangeOverMac/useClockIdentity
    -ptp_range_over_mac_priority1 ./ptpRangeOverMac/priority1
    -ptp_range_over_mac_use_alternate_master_flag ./ptpRangeOverMac/useAlternateMasterFlag
    -ptp_range_over_mac_object_id ./ptpRangeOverMac/objectId
    -ptp_range_over_mac_delay_resp_receipt_timeout ./ptpRangeOverMac/delayRespReceiptTimeout
    -ptp_range_over_mac_announce_frequency_traceable ./ptpRangeOverMac/announceFrequencyTraceable
    -ptp_range_over_mac_priority2 ./ptpRangeOverMac/priority2
    -ptp_range_over_mac_announce_current_utc_offset_valid ./ptpRangeOverMac/announceCurrentUtcOffsetValid
    -ptp_range_over_mac_client_mac_address ./ptpRangeOverMac/clientMacAddress
    -ptp_range_over_mac_time_source ./ptpRangeOverMac/timeSource
    -ptp_range_over_mac_steps_removed ./ptpRangeOverMac/stepsRemoved
    -ptp_range_over_mac_clock_class ./ptpRangeOverMac/clockClass
    -ptp_range_over_mac_request_attempts ./ptpRangeOverMac/requestAttempts
    -ptp_range_over_mac_follow_up_bad_crc_rate ./ptpRangeOverMac/followUpBadCrcRate
    -ptp_range_over_mac_delay_response_delay_insertion_rate ./ptpRangeOverMac/delayResponseDelayInsertionRate
    -ptp_range_over_mac_log_sync_interval ./ptpRangeOverMac/logSyncInterval
    -ptp_range_over_mac_master_count ./ptpRangeOverMac/masterCount
    -ptp_range_over_mac_residence_time ./ptpRangeOverMac/residenceTime
    -ptp_range_over_mac_signal_interval ./ptpRangeOverMac/signalInterval
    -ptp_range_over_mac_delay_mechanism ./ptpRangeOverMac/delayMechanism
    -ptp_range_over_mac_strict_grant ./ptpRangeOverMac/strictGrant
    -ptp_range_over_mac_sync_drop_rate ./ptpRangeOverMac/syncDropRate
    -ptp_range_over_mac_drop_signal_req_sync ./ptpRangeOverMac/dropSignalReqSync
    -ptp_range_over_mac_clock_increment ./ptpRangeOverMac/clockIncrement
    -ptp_range_over_mac_announce_ptp_timescale ./ptpRangeOverMac/announcePtpTimescale
    -ptp_range_over_mac_signal_unicast_handling ./ptpRangeOverMac/signalUnicastHandling
    -ptp_range_over_mac_enabled ./ptpRangeOverMac/enabled
    -ptp_range_over_mac_timestamp_offset ./ptpRangeOverMac/timestampOffset
    -ptp_range_over_mac_master_ip_increment_by ./ptpRangeOverMac/masterIpIncrementBy
    -ptp_range_over_mac_request_interval ./ptpRangeOverMac/requestInterval
    -ptp_range_over_mac_ip_tos ./ptpRangeOverMac/ipTos
    -ptp_range_over_mac_request_holddown ./ptpRangeOverMac/requestHolddown
    -ptp_range_over_mac_client_mac_increment_by ./ptpRangeOverMac/clientMacIncrementBy
    -ptp_range_over_mac_name ./ptpRangeOverMac/name
    -ptp_range_over_mac_drop_signal_req_announce ./ptpRangeOverMac/dropSignalReqAnnounce
    -ptp_range_over_mac_master_ip_address ./ptpRangeOverMac/masterIpAddress
    -ptp_range_over_mac_first_clock ./ptpRangeOverMac/firstClock
    -ptp_range_over_mac_master_mac_increment_by ./ptpRangeOverMac/masterMacIncrementBy
    -ptp_range_over_mac_send_cancel_tlv ./ptpRangeOverMac/sendCancelTlv
    -ptp_range_over_mac_port_number ./ptpRangeOverMac/portNumber
    -ptp_range_over_mac_client_ip_address ./ptpRangeOverMac/clientIpAddress
    -ptp_range_over_mac_announce_leap59 ./ptpRangeOverMac/announceLeap59
    -ptp_range_over_mac_send_announce_tlv ./ptpRangeOverMac/sendAnnounceTlv
    -ptp_range_over_mac_sync_receipt_timeout ./ptpRangeOverMac/syncReceiptTimeout
    -ptp_range_over_mac_announce_leap61 ./ptpRangeOverMac/announceLeap61
    -ptp_range_over_mac_grant_delay_resp_duration_interval ./ptpRangeOverMac/grantDelayRespDurationInterval
    -ptp_range_over_mac_timestamp_offset_variation ./ptpRangeOverMac/timestampOffsetVariation
    -ptp_range_over_mac_follow_up_drop_rate ./ptpRangeOverMac/followUpDropRate
    -ptp_range_over_mac_master_mac_address ./ptpRangeOverMac/masterMacAddress
    -ptp_range_over_mac_drop_signal_req_delay_resp ./ptpRangeOverMac/dropSignalReqDelayResp
    -ptp_range_over_mac_grant_sync_duration_interval ./ptpRangeOverMac/grantSyncDurationInterval
    -ptp_range_over_mac_learn_port_id ./ptpRangeOverMac/learnPortId
    -ptp_range_over_mac_delay_response_delay ./ptpRangeOverMac/delayResponseDelay
    -ptp_range_over_mac_grant_unicast_duration_interval ./ptpRangeOverMac/grantUnicastDurationInterval
    -ptp_range_over_mac_follow_up_delay_insertion_rate ./ptpRangeOverMac/followUpDelayInsertionRate
    -ptp_range_over_mac_log_delay_req_interval ./ptpRangeOverMac/logDelayReqInterval
    -ptp_range_over_mac_clock_accuracy ./ptpRangeOverMac/clockAccuracy
    -ptp_range_over_mac_client_count ./ptpRangeOverMac/clientCount
    -ptp_range_over_mac_announce_time_traceable ./ptpRangeOverMac/announceTimeTraceable
    -ptp_range_over_mac_step_mode ./ptpRangeOverMac/stepMode
    -ptp_range_over_mac_master_ip_increment_inter_entity ./ptpRangeOverMac/masterIpIncrementInterEntity
    -ptp_range_over_mac_delay_resp_drop_rate ./ptpRangeOverMac/delayRespDropRate
    -ptp_range_over_mac_announce_receipt_timeout ./ptpRangeOverMac/announceReceiptTimeout
    -ptp_range_over_mac_rx_calibration ./ptpRangeOverMac/rxCalibration
    -ptp_range_over_mac_tx_calibration ./ptpRangeOverMac/txCalibration
    -ptp_range_over_mac_log_announce_interval ./ptpRangeOverMac/logAnnounceInterval
    -vic_client_range_prov_info_tlvs ./vicClientRange/provInfoTlvs
    -vic_client_range_object_id ./vicClientRange/objectId
    -vic_client_range_macs_per_vif ./vicClientRange/macsPerVif
    -vic_client_range_channel_id_start ./vicClientRange/channelIdStart
    -vic_client_range_prov_info_oui ./vicClientRange/provInfoOui
    -vic_client_range_name ./vicClientRange/name
    -vic_client_range_vif_active ./vicClientRange/vifActive
    -vic_client_range_tlv_offset ./vicClientRange/tlvOffset
    -vic_client_range_prov_info_type ./vicClientRange/provInfoType
    -vic_client_range_enabled ./vicClientRange/enabled
    -vic_client_range_channel_id_increment ./vicClientRange/channelIdIncrement
    -igmp_querier_range_object_id ./igmpQuerierRange/objectId
    -igmp_querier_range_specific_query_response_count ./igmpQuerierRange/specificQueryResponseCount
    -igmp_querier_range_specific_query_response_interval ./igmpQuerierRange/specificQueryResponseInterval
    -igmp_querier_range_general_query_response_interval ./igmpQuerierRange/generalQueryResponseInterval
    -igmp_querier_range_name ./igmpQuerierRange/name
    -igmp_querier_range_router_alert ./igmpQuerierRange/routerAlert
    -igmp_querier_range_general_query_interval ./igmpQuerierRange/generalQueryInterval
    -igmp_querier_range_robustness_variable ./igmpQuerierRange/robustnessVariable
    -igmp_querier_range_startup_query_count ./igmpQuerierRange/startupQueryCount
    -igmp_querier_range_version ./igmpQuerierRange/version
    -igmp_querier_range_enabled ./igmpQuerierRange/enabled
    -igmp_mld_range_meshing_mode ./igmpMldRange/meshingMode
    -igmp_mld_range_router_alert ./igmpMldRange/routerAlert
    -igmp_mld_range_enabled ./igmpMldRange/enabled
    -igmp_mld_range_report_frequency ./igmpMldRange/reportFrequency
    -igmp_mld_range_unsolicited_response_mode ./igmpMldRange/unsolicitedResponseMode
    -igmp_mld_range_general_query_response_mode ./igmpMldRange/generalQueryResponseMode
    -igmp_mld_range_specific_query_response_mode ./igmpMldRange/specificQueryResponseMode
    -igmp_mld_range_name ./igmpMldRange/name
    -igmp_mld_range_join_leave_multiplier ./igmpMldRange/joinLeaveMultiplier
    -igmp_mld_range_object_id ./igmpMldRange/objectId
    -igmp_mld_range_version ./igmpMldRange/version
    -igmp_mld_range_immediate_response ./igmpMldRange/immediateResponse
    -igmp_mld_range_multicast_group_range ./igmpMldRange/multicastGroupRange
    -igmp_mld_range_join_leave_multicast_group_range ./igmpMldRange/joinLeaveMulticastGroupRange
    -twamp_control_range_object_id ./twampControlRange/objectId
    -twamp_control_range_name ./twampControlRange/name
    -twamp_control_range_mode ./twampControlRange/mode
    -twamp_control_range_control_server_port ./twampControlRange/controlServerPort
    -twamp_control_range_count ./twampControlRange/count
    -twamp_control_range_secret ./twampControlRange/secret
    -twamp_control_range_key_id ./twampControlRange/keyId
    -twamp_control_range_control_server_ip_increment ./twampControlRange/controlServerIpIncrement
    -twamp_control_range_enabled ./twampControlRange/enabled
    -twamp_control_range_control_start_server_ip ./twampControlRange/controlStartServerIp
    -emulated_router_range_count ./emulatedRouterRange/count
    -emulated_router_range_enabled ./emulatedRouterRange/enabled
    -emulated_router_range_ip_type ./emulatedRouterRange/ipType
    -emulated_router_range_gateway_increment_mode ./emulatedRouterRange/gatewayIncrementMode
    -emulated_router_range_enable_gateway_arp ./emulatedRouterRange/enableGatewayArp
    -emulated_router_range_ip_address ./emulatedRouterRange/ipAddress
    -emulated_router_range_gateway_increment ./emulatedRouterRange/gatewayIncrement
    -emulated_router_range_increment_by ./emulatedRouterRange/incrementBy
    -emulated_router_range_gateway_address ./emulatedRouterRange/gatewayAddress
    -emulated_router_range_name ./emulatedRouterRange/name
    -emulated_router_range_mss ./emulatedRouterRange/mss
    -emulated_router_range_object_id ./emulatedRouterRange/objectId
    -emulated_router_range_auto_count_enabled ./emulatedRouterRange/autoCountEnabled
    -emulated_router_range_prefix ./emulatedRouterRange/prefix
    -emulated_router_range_auto_mac_generation ./emulatedRouterRange/autoMacGeneration
    -ancp_range_circuit_id ./ancpRange/circuitId
    -ancp_range_use_dsl_outer_vlan ./ancpRange/useDslOuterVlan
    -ancp_range_distribution_algorithm_percent ./ancpRange/distributionAlgorithmPercent
    -ancp_range_atm_vpi ./ancpRange/atmVpi
    -ancp_range_nas_ip_address ./ancpRange/nasIpAddress
    -ancp_range_nas_ancp_service_port ./ancpRange/nasAncpServicePort
    -ancp_range_inner_vlan_id ./ancpRange/innerVlanId
    -ancp_range_enabled ./ancpRange/enabled
    -ancp_range_use_dsl_inner_vlan ./ancpRange/useDslInnerVlan
    -ancp_range_access_aggregation_cb_tlv ./ancpRange/accessAggregationCbTlv
    -ancp_range_nas_keep_alive_retries ./ancpRange/nasKeepAliveRetries
    -ancp_range_nas_keep_alive_timeout ./ancpRange/nasKeepAliveTimeout
    -ancp_range_name ./ancpRange/name
    -ancp_range_enable_access_aggregation ./ancpRange/enableAccessAggregation
    -ancp_range_object_id ./ancpRange/objectId
    -ancp_range_atm_vci ./ancpRange/atmVci
    -ancp_range_nas_ipaddress_incr ./ancpRange/nasIPAddressIncr
    -ancp_range_outer_vlan_id ./ancpRange/outerVlanId
    -ancp_range_nas_ip_address_incr ./ancpRange/nasIpAddressIncr
    -ancp_range_dsl_resync_profile_allocation_table ./ancpRange/dslResyncProfileAllocationTable
    -ancp_range_dsl_profile_allocation_table ./ancpRange/dslProfileAllocationTable
    -ancp_range_ancp_ip_range ./ancpRange/ancpIpRange
    -ancp_range_ancp_pvc_range ./ancpRange/ancpPvcRange
    -ancp_range_ancp_vlan_range ./ancpRange/ancpVlanRange
    -ancp_range_ancp_mac_range ./ancpRange/ancpMacRange
    -ancp_range_ancp_atm_range ./ancpRange/ancpAtmRange
    -ancp_range_ancp_ip_range_count ./ancpRange/ancpIpRange/count
    -ancp_range_ancp_ip_range_ip_type ./ancpRange/ancpIpRange/ipType
    -ancp_range_ancp_ip_range_enabled ./ancpRange/ancpIpRange/enabled
    -ancp_range_ancp_ip_range_gateway_increment_mode ./ancpRange/ancpIpRange/gatewayIncrementMode
    -ancp_range_ancp_ip_range_enable_gateway_arp ./ancpRange/ancpIpRange/enableGatewayArp
    -ancp_range_ancp_ip_range_ip_address ./ancpRange/ancpIpRange/ipAddress
    -ancp_range_ancp_ip_range_gateway_increment ./ancpRange/ancpIpRange/gatewayIncrement
    -ancp_range_ancp_ip_range_increment_by ./ancpRange/ancpIpRange/incrementBy
    -ancp_range_ancp_ip_range_gateway_address ./ancpRange/ancpIpRange/gatewayAddress
    -ancp_range_ancp_ip_range_name ./ancpRange/ancpIpRange/name
    -ancp_range_ancp_ip_range_mss ./ancpRange/ancpIpRange/mss
    -ancp_range_ancp_ip_range_object_id ./ancpRange/ancpIpRange/objectId
    -ancp_range_ancp_ip_range_prefix ./ancpRange/ancpIpRange/prefix
    -ancp_range_ancp_ip_range_auto_mac_generation ./ancpRange/ancpIpRange/autoMacGeneration
    -ancp_range_ancp_pvc_range_vpi_increment_step ./ancpRange/ancpPvcRange/vpiIncrementStep
    -ancp_range_ancp_pvc_range_vci_unique_count ./ancpRange/ancpPvcRange/vciUniqueCount
    -ancp_range_ancp_pvc_range_vci_increment_step ./ancpRange/ancpPvcRange/vciIncrementStep
    -ancp_range_ancp_pvc_range_enabled ./ancpRange/ancpPvcRange/enabled
    -ancp_range_ancp_pvc_range_vpi_first_id ./ancpRange/ancpPvcRange/vpiFirstId
    -ancp_range_ancp_pvc_range_vpi_increment ./ancpRange/ancpPvcRange/vpiIncrement
    -ancp_range_ancp_pvc_range_vci_first_id ./ancpRange/ancpPvcRange/vciFirstId
    -ancp_range_ancp_pvc_range_vci_increment ./ancpRange/ancpPvcRange/vciIncrement
    -ancp_range_ancp_pvc_range_name ./ancpRange/ancpPvcRange/name
    -ancp_range_ancp_pvc_range_increment_mode ./ancpRange/ancpPvcRange/incrementMode
    -ancp_range_ancp_pvc_range_object_id ./ancpRange/ancpPvcRange/objectId
    -ancp_range_ancp_pvc_range_vpi_unique_count ./ancpRange/ancpPvcRange/vpiUniqueCount
    -ancp_range_ancp_vlan_range_inner_first_id ./ancpRange/ancpVlanRange/innerFirstId
    -ancp_range_ancp_vlan_range_inner_increment ./ancpRange/ancpVlanRange/innerIncrement
    -ancp_range_ancp_vlan_range_enabled ./ancpRange/ancpVlanRange/enabled
    -ancp_range_ancp_vlan_range_unique_count ./ancpRange/ancpVlanRange/uniqueCount
    -ancp_range_ancp_vlan_range_name ./ancpRange/ancpVlanRange/name
    -ancp_range_ancp_vlan_range_increment_step ./ancpRange/ancpVlanRange/incrementStep
    -ancp_range_ancp_vlan_range_tpid ./ancpRange/ancpVlanRange/tpid
    -ancp_range_ancp_vlan_range_priority ./ancpRange/ancpVlanRange/priority
    -ancp_range_ancp_vlan_range_inner_enable ./ancpRange/ancpVlanRange/innerEnable
    -ancp_range_ancp_vlan_range_object_id ./ancpRange/ancpVlanRange/objectId
    -ancp_range_ancp_vlan_range_inner_unique_count ./ancpRange/ancpVlanRange/innerUniqueCount
    -ancp_range_ancp_vlan_range_inner_tpid ./ancpRange/ancpVlanRange/innerTpid
    -ancp_range_ancp_vlan_range_first_id ./ancpRange/ancpVlanRange/firstId
    -ancp_range_ancp_vlan_range_increment ./ancpRange/ancpVlanRange/increment
    -ancp_range_ancp_vlan_range_inner_increment_step ./ancpRange/ancpVlanRange/innerIncrementStep
    -ancp_range_ancp_vlan_range_id_incr_mode ./ancpRange/ancpVlanRange/idIncrMode
    -ancp_range_ancp_vlan_range_inner_priority ./ancpRange/ancpVlanRange/innerPriority
    -ancp_range_ancp_vlan_range_vlan_id_info ./ancpRange/ancpVlanRange/vlanIdInfo
    -ancp_range_ancp_mac_range_object_id ./ancpRange/ancpMacRange/objectId
    -ancp_range_ancp_mac_range_increment_by ./ancpRange/ancpMacRange/incrementBy
    -ancp_range_ancp_mac_range_name ./ancpRange/ancpMacRange/name
    -ancp_range_ancp_mac_range_count ./ancpRange/ancpMacRange/count
    -ancp_range_ancp_mac_range_mac ./ancpRange/ancpMacRange/mac
    -ancp_range_ancp_mac_range_mtu ./ancpRange/ancpMacRange/mtu
    -ancp_range_ancp_mac_range_enabled ./ancpRange/ancpMacRange/enabled
    -ancp_range_ancp_atm_range_object_id ./ancpRange/ancpAtmRange/objectId
    -ancp_range_ancp_atm_range_increment_by ./ancpRange/ancpAtmRange/incrementBy
    -ancp_range_ancp_atm_range_name ./ancpRange/ancpAtmRange/name
    -ancp_range_ancp_atm_range_count ./ancpRange/ancpAtmRange/count
    -ancp_range_ancp_atm_range_mac ./ancpRange/ancpAtmRange/mac
    -ancp_range_ancp_atm_range_mtu ./ancpRange/ancpAtmRange/mtu
    -ancp_range_ancp_atm_range_encapsulation ./ancpRange/ancpAtmRange/encapsulation
    -ancp_range_ancp_atm_range_enabled ./ancpRange/ancpAtmRange/enabled
    -iptv_range_inter_stb_start_delay ./iptvRange/interStbStartDelay
    -iptv_range_router_alert ./iptvRange/routerAlert
    -iptv_range_viewing_profile ./iptvRange/viewingProfile
    -iptv_range_leave_latency_threshold ./iptvRange/leaveLatencyThreshold
    -iptv_range_enabled ./iptvRange/enabled
    -iptv_range_join_latency_threshold ./iptvRange/joinLatencyThreshold
    -iptv_range_report_frequency ./iptvRange/reportFrequency
    -iptv_range_unsolicited_response_mode ./iptvRange/unsolicitedResponseMode
    -iptv_range_general_query_response_mode ./iptvRange/generalQueryResponseMode
    -iptv_range_specific_query_response_mode ./iptvRange/specificQueryResponseMode
    -iptv_range_name ./iptvRange/name
    -iptv_range_log_failure_timestamps ./iptvRange/logFailureTimestamps
    -iptv_range_object_id ./iptvRange/objectId
    -iptv_range_join_leave_multiplier ./iptvRange/joinLeaveMultiplier
    -iptv_range_stb_leave_join_delay ./iptvRange/stbLeaveJoinDelay
    -iptv_range_version ./iptvRange/version
    -iptv_range_immediate_response ./iptvRange/immediateResponse
    -iptv_range_iptv_channels ./iptvRange/iptvChannels
  }
  #
  variable MultiplierOptionGroups {
    _m_esmc_range_object_id {-esmc_range_object_id_format -esmc_range_object_id_base -esmc_range_object_id_incr}
    _m_esmc_range_rate {-esmc_range_rate_base -esmc_range_rate_incr}
    _m_esmc_range_name {-esmc_range_name_format -esmc_range_name_base -esmc_range_name_incr}
    _m_esmc_range_ql {-esmc_range_ql_format -esmc_range_ql_base -esmc_range_ql_incr}
    _m_esmc_range_flag_mode {-esmc_range_flag_mode_format -esmc_range_flag_mode_base -esmc_range_flag_mode_incr}
    _m_ip_range_count {-ip_range_count_base -ip_range_count_incr}
    _m_ip_range_ip_type {-ip_range_ip_type_format -ip_range_ip_type_base -ip_range_ip_type_incr}
    _m_ip_range_gateway_increment_mode {-ip_range_gateway_increment_mode_format -ip_range_gateway_increment_mode_base -ip_range_gateway_increment_mode_incr}
    _m_ip_range_ip_address {-ip_range_ip_address_format -ip_range_ip_address_base -ip_range_ip_address_incr}
    _m_ip_range_gateway_increment {-ip_range_gateway_increment_format -ip_range_gateway_increment_base -ip_range_gateway_increment_incr}
    _m_ip_range_increment_by {-ip_range_increment_by_format -ip_range_increment_by_base -ip_range_increment_by_incr}
    _m_ip_range_gateway_address {-ip_range_gateway_address_format -ip_range_gateway_address_base -ip_range_gateway_address_incr}
    _m_ip_range_name {-ip_range_name_format -ip_range_name_base -ip_range_name_incr}
    _m_ip_range_mss {-ip_range_mss_base -ip_range_mss_incr}
    _m_ip_range_object_id {-ip_range_object_id_format -ip_range_object_id_base -ip_range_object_id_incr}
    _m_ip_range_prefix {-ip_range_prefix_base -ip_range_prefix_incr}
    _m_amt_range_amt_unicast_ip {-amt_range_amt_unicast_ip_format -amt_range_amt_unicast_ip_base -amt_range_amt_unicast_ip_incr}
    _m_amt_range_query_timer_interval {-amt_range_query_timer_interval_base -amt_range_query_timer_interval_incr}
    _m_amt_range_amt_udp_src_port_increment {-amt_range_amt_udp_src_port_increment_base -amt_range_amt_udp_src_port_increment_incr}
    _m_amt_range_discovery_retries {-amt_range_discovery_retries_base -amt_range_discovery_retries_incr}
    _m_amt_range_discovery_timeout {-amt_range_discovery_timeout_base -amt_range_discovery_timeout_incr}
    _m_amt_range_request_retries {-amt_range_request_retries_base -amt_range_request_retries_incr}
    _m_amt_range_amt_udp_src_port {-amt_range_amt_udp_src_port_base -amt_range_amt_udp_src_port_incr}
    _m_amt_range_request_timeout {-amt_range_request_timeout_base -amt_range_request_timeout_incr}
    _m_amt_range_name {-amt_range_name_format -amt_range_name_base -amt_range_name_incr}
    _m_amt_range_amt_anycast_ip_increment {-amt_range_amt_anycast_ip_increment_format -amt_range_amt_anycast_ip_increment_base -amt_range_amt_anycast_ip_increment_incr}
    _m_amt_range_object_id {-amt_range_object_id_format -amt_range_object_id_base -amt_range_object_id_incr}
    _m_amt_range_amt_anycast_ip {-amt_range_amt_anycast_ip_format -amt_range_amt_anycast_ip_base -amt_range_amt_anycast_ip_incr}
    _m_amt_range_amt_unicast_ip_increment {-amt_range_amt_unicast_ip_increment_format -amt_range_amt_unicast_ip_increment_base -amt_range_amt_unicast_ip_increment_incr}
    _m_eapo_udp_range_expected_system_token {-eapo_udp_range_expected_system_token_format -eapo_udp_range_expected_system_token_base -eapo_udp_range_expected_system_token_incr}
    _m_eapo_udp_range_user_password {-eapo_udp_range_user_password_format -eapo_udp_range_user_password_base -eapo_udp_range_user_password_incr}
    _m_eapo_udp_range_fast_stateless_resume {-eapo_udp_range_fast_stateless_resume_format -eapo_udp_range_fast_stateless_resume_base -eapo_udp_range_fast_stateless_resume_incr}
    _m_eapo_udp_range_user_name {-eapo_udp_range_user_name_format -eapo_udp_range_user_name_base -eapo_udp_range_user_name_incr}
    _m_eapo_udp_range_response_type {-eapo_udp_range_response_type_format -eapo_udp_range_response_type_base -eapo_udp_range_response_type_incr}
    _m_eapo_udp_range_name {-eapo_udp_range_name_format -eapo_udp_range_name_base -eapo_udp_range_name_incr}
    _m_eapo_udp_range_protocol {-eapo_udp_range_protocol_format -eapo_udp_range_protocol_base -eapo_udp_range_protocol_incr}
    _m_eapo_udp_range_fast_inner_method {-eapo_udp_range_fast_inner_method_format -eapo_udp_range_fast_inner_method_base -eapo_udp_range_fast_inner_method_incr}
    _m_eapo_udp_range_fast_provision_mode {-eapo_udp_range_fast_provision_mode_format -eapo_udp_range_fast_provision_mode_base -eapo_udp_range_fast_provision_mode_incr}
    _m_eapo_udp_range_object_id {-eapo_udp_range_object_id_format -eapo_udp_range_object_id_base -eapo_udp_range_object_id_incr}
    _m_twamp_server_range_iteration_count {-twamp_server_range_iteration_count_base -twamp_server_range_iteration_count_incr}
    _m_twamp_server_range_count {-twamp_server_range_count_base -twamp_server_range_count_incr}
    _m_twamp_server_range_reflector_port {-twamp_server_range_reflector_port_base -twamp_server_range_reflector_port_incr}
    _m_twamp_server_range_max_test_sessions {-twamp_server_range_max_test_sessions_base -twamp_server_range_max_test_sessions_incr}
    _m_twamp_server_range_control_port {-twamp_server_range_control_port_base -twamp_server_range_control_port_incr}
    _m_twamp_server_range_key_id {-twamp_server_range_key_id_format -twamp_server_range_key_id_base -twamp_server_range_key_id_incr}
    _m_twamp_server_range_permitted_ip {-twamp_server_range_permitted_ip_format -twamp_server_range_permitted_ip_base -twamp_server_range_permitted_ip_incr}
    _m_twamp_server_range_name {-twamp_server_range_name_format -twamp_server_range_name_base -twamp_server_range_name_incr}
    _m_twamp_server_range_object_id {-twamp_server_range_object_id_format -twamp_server_range_object_id_base -twamp_server_range_object_id_incr}
    _m_twamp_server_range_permitted_ip_increment {-twamp_server_range_permitted_ip_increment_format -twamp_server_range_permitted_ip_increment_base -twamp_server_range_permitted_ip_increment_incr}
    _m_twamp_server_range_permitted_sender_port {-twamp_server_range_permitted_sender_port_base -twamp_server_range_permitted_sender_port_incr}
    _m_twamp_server_range_mode {-twamp_server_range_mode_format -twamp_server_range_mode_base -twamp_server_range_mode_incr}
    _m_twamp_server_range_secret {-twamp_server_range_secret_format -twamp_server_range_secret_base -twamp_server_range_secret_incr}
    _m_dot1x_range_user_password {-dot1x_range_user_password_format -dot1x_range_user_password_base -dot1x_range_user_password_incr}
    _m_dot1x_range_fast_stateless_resume {-dot1x_range_fast_stateless_resume_format -dot1x_range_fast_stateless_resume_base -dot1x_range_fast_stateless_resume_incr}
    _m_dot1x_range_user_name {-dot1x_range_user_name_format -dot1x_range_user_name_base -dot1x_range_user_name_incr}
    _m_dot1x_range_host_password {-dot1x_range_host_password_format -dot1x_range_host_password_base -dot1x_range_host_password_incr}
    _m_dot1x_range_name {-dot1x_range_name_format -dot1x_range_name_base -dot1x_range_name_incr}
    _m_dot1x_range_protocol {-dot1x_range_protocol_format -dot1x_range_protocol_base -dot1x_range_protocol_incr}
    _m_dot1x_range_fast_inner_method {-dot1x_range_fast_inner_method_format -dot1x_range_fast_inner_method_base -dot1x_range_fast_inner_method_incr}
    _m_dot1x_range_object_id {-dot1x_range_object_id_format -dot1x_range_object_id_base -dot1x_range_object_id_incr}
    _m_dot1x_range_fast_provision_mode {-dot1x_range_fast_provision_mode_format -dot1x_range_fast_provision_mode_base -dot1x_range_fast_provision_mode_incr}
    _m_dot1x_range_host_auth_mode {-dot1x_range_host_auth_mode_format -dot1x_range_host_auth_mode_base -dot1x_range_host_auth_mode_incr}
    _m_dot1x_range_host_name {-dot1x_range_host_name_format -dot1x_range_host_name_base -dot1x_range_host_name_incr}
    _m_web_auth_range_object_id {-web_auth_range_object_id_format -web_auth_range_object_id_base -web_auth_range_object_id_incr}
    _m_web_auth_range_input_value3 {-web_auth_range_input_value3_format -web_auth_range_input_value3_base -web_auth_range_input_value3_incr}
    _m_web_auth_range_name {-web_auth_range_name_format -web_auth_range_name_base -web_auth_range_name_incr}
    _m_web_auth_range_expect {-web_auth_range_expect_format -web_auth_range_expect_base -web_auth_range_expect_incr}
    _m_web_auth_range_input_value1 {-web_auth_range_input_value1_format -web_auth_range_input_value1_base -web_auth_range_input_value1_incr}
    _m_web_auth_range_input_value2 {-web_auth_range_input_value2_format -web_auth_range_input_value2_base -web_auth_range_input_value2_incr}
    _m_ptp_range_over_ip_master_mac_increment_inter_entity {-ptp_range_over_ip_master_mac_increment_inter_entity_format -ptp_range_over_ip_master_mac_increment_inter_entity_base -ptp_range_over_ip_master_mac_increment_inter_entity_incr}
    _m_ptp_range_over_ip_communication_mode {-ptp_range_over_ip_communication_mode_format -ptp_range_over_ip_communication_mode_base -ptp_range_over_ip_communication_mode_incr}
    _m_ptp_range_over_ip_follow_up_delay {-ptp_range_over_ip_follow_up_delay_base -ptp_range_over_ip_follow_up_delay_incr}
    _m_ptp_range_over_ip_domain {-ptp_range_over_ip_domain_base -ptp_range_over_ip_domain_incr}
    _m_ptp_range_over_ip_announce_drop_rate {-ptp_range_over_ip_announce_drop_rate_base -ptp_range_over_ip_announce_drop_rate_incr}
    _m_ptp_range_over_ip_client_ip_increment_by {-ptp_range_over_ip_client_ip_increment_by_format -ptp_range_over_ip_client_ip_increment_by_base -ptp_range_over_ip_client_ip_increment_by_incr}
    _m_ptp_range_over_ip_port_number_increment {-ptp_range_over_ip_port_number_increment_base -ptp_range_over_ip_port_number_increment_incr}
    _m_ptp_range_over_ip_priority1 {-ptp_range_over_ip_priority1_base -ptp_range_over_ip_priority1_incr}
    _m_ptp_range_over_ip_object_id {-ptp_range_over_ip_object_id_format -ptp_range_over_ip_object_id_base -ptp_range_over_ip_object_id_incr}
    _m_ptp_range_over_ip_delay_resp_receipt_timeout {-ptp_range_over_ip_delay_resp_receipt_timeout_base -ptp_range_over_ip_delay_resp_receipt_timeout_incr}
    _m_ptp_range_over_ip_priority2 {-ptp_range_over_ip_priority2_base -ptp_range_over_ip_priority2_incr}
    _m_ptp_range_over_ip_client_mac_address {-ptp_range_over_ip_client_mac_address_format -ptp_range_over_ip_client_mac_address_base -ptp_range_over_ip_client_mac_address_incr}
    _m_ptp_range_over_ip_time_source {-ptp_range_over_ip_time_source_format -ptp_range_over_ip_time_source_base -ptp_range_over_ip_time_source_incr}
    _m_ptp_range_over_ip_steps_removed {-ptp_range_over_ip_steps_removed_base -ptp_range_over_ip_steps_removed_incr}
    _m_ptp_range_over_ip_clock_class {-ptp_range_over_ip_clock_class_base -ptp_range_over_ip_clock_class_incr}
    _m_ptp_range_over_ip_request_attempts {-ptp_range_over_ip_request_attempts_base -ptp_range_over_ip_request_attempts_incr}
    _m_ptp_range_over_ip_follow_up_bad_crc_rate {-ptp_range_over_ip_follow_up_bad_crc_rate_base -ptp_range_over_ip_follow_up_bad_crc_rate_incr}
    _m_ptp_range_over_ip_delay_response_delay_insertion_rate {-ptp_range_over_ip_delay_response_delay_insertion_rate_base -ptp_range_over_ip_delay_response_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_sync_interval {-ptp_range_over_ip_log_sync_interval_base -ptp_range_over_ip_log_sync_interval_incr}
    _m_ptp_range_over_ip_master_count {-ptp_range_over_ip_master_count_base -ptp_range_over_ip_master_count_incr}
    _m_ptp_range_over_ip_residence_time {-ptp_range_over_ip_residence_time_base -ptp_range_over_ip_residence_time_incr}
    _m_ptp_range_over_ip_signal_interval {-ptp_range_over_ip_signal_interval_base -ptp_range_over_ip_signal_interval_incr}
    _m_ptp_range_over_ip_delay_mechanism {-ptp_range_over_ip_delay_mechanism_format -ptp_range_over_ip_delay_mechanism_base -ptp_range_over_ip_delay_mechanism_incr}
    _m_ptp_range_over_ip_sync_drop_rate {-ptp_range_over_ip_sync_drop_rate_base -ptp_range_over_ip_sync_drop_rate_incr}
    _m_ptp_range_over_ip_clock_increment {-ptp_range_over_ip_clock_increment_format -ptp_range_over_ip_clock_increment_base -ptp_range_over_ip_clock_increment_incr}
    _m_ptp_range_over_ip_signal_unicast_handling {-ptp_range_over_ip_signal_unicast_handling_format -ptp_range_over_ip_signal_unicast_handling_base -ptp_range_over_ip_signal_unicast_handling_incr}
    _m_ptp_range_over_ip_timestamp_offset {-ptp_range_over_ip_timestamp_offset_base -ptp_range_over_ip_timestamp_offset_incr}
    _m_ptp_range_over_ip_master_ip_increment_by {-ptp_range_over_ip_master_ip_increment_by_format -ptp_range_over_ip_master_ip_increment_by_base -ptp_range_over_ip_master_ip_increment_by_incr}
    _m_ptp_range_over_ip_request_interval {-ptp_range_over_ip_request_interval_base -ptp_range_over_ip_request_interval_incr}
    _m_ptp_range_over_ip_ip_tos {-ptp_range_over_ip_ip_tos_base -ptp_range_over_ip_ip_tos_incr}
    _m_ptp_range_over_ip_request_holddown {-ptp_range_over_ip_request_holddown_base -ptp_range_over_ip_request_holddown_incr}
    _m_ptp_range_over_ip_client_mac_increment_by {-ptp_range_over_ip_client_mac_increment_by_format -ptp_range_over_ip_client_mac_increment_by_base -ptp_range_over_ip_client_mac_increment_by_incr}
    _m_ptp_range_over_ip_name {-ptp_range_over_ip_name_format -ptp_range_over_ip_name_base -ptp_range_over_ip_name_incr}
    _m_ptp_range_over_ip_master_ip_address {-ptp_range_over_ip_master_ip_address_format -ptp_range_over_ip_master_ip_address_base -ptp_range_over_ip_master_ip_address_incr}
    _m_ptp_range_over_ip_first_clock {-ptp_range_over_ip_first_clock_format -ptp_range_over_ip_first_clock_base -ptp_range_over_ip_first_clock_incr}
    _m_ptp_range_over_ip_master_mac_increment_by {-ptp_range_over_ip_master_mac_increment_by_format -ptp_range_over_ip_master_mac_increment_by_base -ptp_range_over_ip_master_mac_increment_by_incr}
    _m_ptp_range_over_ip_port_number {-ptp_range_over_ip_port_number_base -ptp_range_over_ip_port_number_incr}
    _m_ptp_range_over_ip_client_ip_address {-ptp_range_over_ip_client_ip_address_format -ptp_range_over_ip_client_ip_address_base -ptp_range_over_ip_client_ip_address_incr}
    _m_ptp_range_over_ip_sync_receipt_timeout {-ptp_range_over_ip_sync_receipt_timeout_base -ptp_range_over_ip_sync_receipt_timeout_incr}
    _m_ptp_range_over_ip_grant_delay_resp_duration_interval {-ptp_range_over_ip_grant_delay_resp_duration_interval_base -ptp_range_over_ip_grant_delay_resp_duration_interval_incr}
    _m_ptp_range_over_ip_timestamp_offset_variation {-ptp_range_over_ip_timestamp_offset_variation_base -ptp_range_over_ip_timestamp_offset_variation_incr}
    _m_ptp_range_over_ip_follow_up_drop_rate {-ptp_range_over_ip_follow_up_drop_rate_base -ptp_range_over_ip_follow_up_drop_rate_incr}
    _m_ptp_range_over_ip_master_mac_address {-ptp_range_over_ip_master_mac_address_format -ptp_range_over_ip_master_mac_address_base -ptp_range_over_ip_master_mac_address_incr}
    _m_ptp_range_over_ip_grant_sync_duration_interval {-ptp_range_over_ip_grant_sync_duration_interval_base -ptp_range_over_ip_grant_sync_duration_interval_incr}
    _m_ptp_range_over_ip_delay_response_delay {-ptp_range_over_ip_delay_response_delay_base -ptp_range_over_ip_delay_response_delay_incr}
    _m_ptp_range_over_ip_grant_unicast_duration_interval {-ptp_range_over_ip_grant_unicast_duration_interval_base -ptp_range_over_ip_grant_unicast_duration_interval_incr}
    _m_ptp_range_over_ip_follow_up_delay_insertion_rate {-ptp_range_over_ip_follow_up_delay_insertion_rate_base -ptp_range_over_ip_follow_up_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_delay_req_interval {-ptp_range_over_ip_log_delay_req_interval_base -ptp_range_over_ip_log_delay_req_interval_incr}
    _m_ptp_range_over_ip_clock_accuracy {-ptp_range_over_ip_clock_accuracy_format -ptp_range_over_ip_clock_accuracy_base -ptp_range_over_ip_clock_accuracy_incr}
    _m_ptp_range_over_ip_client_count {-ptp_range_over_ip_client_count_base -ptp_range_over_ip_client_count_incr}
    _m_ptp_range_over_ip_step_mode {-ptp_range_over_ip_step_mode_format -ptp_range_over_ip_step_mode_base -ptp_range_over_ip_step_mode_incr}
    _m_ptp_range_over_ip_master_ip_increment_inter_entity {-ptp_range_over_ip_master_ip_increment_inter_entity_format -ptp_range_over_ip_master_ip_increment_inter_entity_base -ptp_range_over_ip_master_ip_increment_inter_entity_incr}
    _m_ptp_range_over_ip_delay_resp_drop_rate {-ptp_range_over_ip_delay_resp_drop_rate_base -ptp_range_over_ip_delay_resp_drop_rate_incr}
    _m_ptp_range_over_ip_announce_receipt_timeout {-ptp_range_over_ip_announce_receipt_timeout_base -ptp_range_over_ip_announce_receipt_timeout_incr}
    _m_ptp_range_over_ip_rx_calibration {-ptp_range_over_ip_rx_calibration_base -ptp_range_over_ip_rx_calibration_incr}
    _m_ptp_range_over_ip_tx_calibration {-ptp_range_over_ip_tx_calibration_base -ptp_range_over_ip_tx_calibration_incr}
    _m_ptp_range_over_ip_log_announce_interval {-ptp_range_over_ip_log_announce_interval_base -ptp_range_over_ip_log_announce_interval_incr}
    _m_mac_range_object_id {-mac_range_object_id_format -mac_range_object_id_base -mac_range_object_id_incr}
    _m_mac_range_increment_by {-mac_range_increment_by_format -mac_range_increment_by_base -mac_range_increment_by_incr}
    _m_mac_range_name {-mac_range_name_format -mac_range_name_base -mac_range_name_incr}
    _m_mac_range_count {-mac_range_count_base -mac_range_count_incr}
    _m_mac_range_mac {-mac_range_mac_format -mac_range_mac_base -mac_range_mac_incr}
    _m_mac_range_mtu {-mac_range_mtu_base -mac_range_mtu_incr}
    _m_vlan_range_inner_first_id {-vlan_range_inner_first_id_base -vlan_range_inner_first_id_incr}
    _m_vlan_range_inner_increment {-vlan_range_inner_increment_base -vlan_range_inner_increment_incr}
    _m_vlan_range_unique_count {-vlan_range_unique_count_base -vlan_range_unique_count_incr}
    _m_vlan_range_name {-vlan_range_name_format -vlan_range_name_base -vlan_range_name_incr}
    _m_vlan_range_increment_step {-vlan_range_increment_step_base -vlan_range_increment_step_incr}
    _m_vlan_range_tpid {-vlan_range_tpid_format -vlan_range_tpid_base -vlan_range_tpid_incr}
    _m_vlan_range_priority {-vlan_range_priority_base -vlan_range_priority_incr}
    _m_vlan_range_object_id {-vlan_range_object_id_format -vlan_range_object_id_base -vlan_range_object_id_incr}
    _m_vlan_range_inner_unique_count {-vlan_range_inner_unique_count_base -vlan_range_inner_unique_count_incr}
    _m_vlan_range_inner_tpid {-vlan_range_inner_tpid_format -vlan_range_inner_tpid_base -vlan_range_inner_tpid_incr}
    _m_vlan_range_first_id {-vlan_range_first_id_base -vlan_range_first_id_incr}
    _m_vlan_range_increment {-vlan_range_increment_base -vlan_range_increment_incr}
    _m_vlan_range_inner_increment_step {-vlan_range_inner_increment_step_base -vlan_range_inner_increment_step_incr}
    _m_vlan_range_id_incr_mode {-vlan_range_id_incr_mode_base -vlan_range_id_incr_mode_incr}
    _m_vlan_range_inner_priority {-vlan_range_inner_priority_base -vlan_range_inner_priority_incr}
    _m_ptp_range_over_mac_master_mac_increment_inter_entity {-ptp_range_over_mac_master_mac_increment_inter_entity_format -ptp_range_over_mac_master_mac_increment_inter_entity_base -ptp_range_over_mac_master_mac_increment_inter_entity_incr}
    _m_ptp_range_over_mac_communication_mode {-ptp_range_over_mac_communication_mode_format -ptp_range_over_mac_communication_mode_base -ptp_range_over_mac_communication_mode_incr}
    _m_ptp_range_over_mac_follow_up_delay {-ptp_range_over_mac_follow_up_delay_base -ptp_range_over_mac_follow_up_delay_incr}
    _m_ptp_range_over_mac_domain {-ptp_range_over_mac_domain_base -ptp_range_over_mac_domain_incr}
    _m_ptp_range_over_mac_announce_drop_rate {-ptp_range_over_mac_announce_drop_rate_base -ptp_range_over_mac_announce_drop_rate_incr}
    _m_ptp_range_over_mac_client_ip_increment_by {-ptp_range_over_mac_client_ip_increment_by_format -ptp_range_over_mac_client_ip_increment_by_base -ptp_range_over_mac_client_ip_increment_by_incr}
    _m_ptp_range_over_mac_port_number_increment {-ptp_range_over_mac_port_number_increment_base -ptp_range_over_mac_port_number_increment_incr}
    _m_ptp_range_over_mac_priority1 {-ptp_range_over_mac_priority1_base -ptp_range_over_mac_priority1_incr}
    _m_ptp_range_over_mac_object_id {-ptp_range_over_mac_object_id_format -ptp_range_over_mac_object_id_base -ptp_range_over_mac_object_id_incr}
    _m_ptp_range_over_mac_delay_resp_receipt_timeout {-ptp_range_over_mac_delay_resp_receipt_timeout_base -ptp_range_over_mac_delay_resp_receipt_timeout_incr}
    _m_ptp_range_over_mac_priority2 {-ptp_range_over_mac_priority2_base -ptp_range_over_mac_priority2_incr}
    _m_ptp_range_over_mac_client_mac_address {-ptp_range_over_mac_client_mac_address_format -ptp_range_over_mac_client_mac_address_base -ptp_range_over_mac_client_mac_address_incr}
    _m_ptp_range_over_mac_time_source {-ptp_range_over_mac_time_source_format -ptp_range_over_mac_time_source_base -ptp_range_over_mac_time_source_incr}
    _m_ptp_range_over_mac_steps_removed {-ptp_range_over_mac_steps_removed_base -ptp_range_over_mac_steps_removed_incr}
    _m_ptp_range_over_mac_clock_class {-ptp_range_over_mac_clock_class_base -ptp_range_over_mac_clock_class_incr}
    _m_ptp_range_over_mac_request_attempts {-ptp_range_over_mac_request_attempts_base -ptp_range_over_mac_request_attempts_incr}
    _m_ptp_range_over_mac_follow_up_bad_crc_rate {-ptp_range_over_mac_follow_up_bad_crc_rate_base -ptp_range_over_mac_follow_up_bad_crc_rate_incr}
    _m_ptp_range_over_mac_delay_response_delay_insertion_rate {-ptp_range_over_mac_delay_response_delay_insertion_rate_base -ptp_range_over_mac_delay_response_delay_insertion_rate_incr}
    _m_ptp_range_over_mac_log_sync_interval {-ptp_range_over_mac_log_sync_interval_base -ptp_range_over_mac_log_sync_interval_incr}
    _m_ptp_range_over_mac_master_count {-ptp_range_over_mac_master_count_base -ptp_range_over_mac_master_count_incr}
    _m_ptp_range_over_mac_residence_time {-ptp_range_over_mac_residence_time_base -ptp_range_over_mac_residence_time_incr}
    _m_ptp_range_over_mac_signal_interval {-ptp_range_over_mac_signal_interval_base -ptp_range_over_mac_signal_interval_incr}
    _m_ptp_range_over_mac_delay_mechanism {-ptp_range_over_mac_delay_mechanism_format -ptp_range_over_mac_delay_mechanism_base -ptp_range_over_mac_delay_mechanism_incr}
    _m_ptp_range_over_mac_sync_drop_rate {-ptp_range_over_mac_sync_drop_rate_base -ptp_range_over_mac_sync_drop_rate_incr}
    _m_ptp_range_over_mac_clock_increment {-ptp_range_over_mac_clock_increment_format -ptp_range_over_mac_clock_increment_base -ptp_range_over_mac_clock_increment_incr}
    _m_ptp_range_over_mac_signal_unicast_handling {-ptp_range_over_mac_signal_unicast_handling_format -ptp_range_over_mac_signal_unicast_handling_base -ptp_range_over_mac_signal_unicast_handling_incr}
    _m_ptp_range_over_mac_timestamp_offset {-ptp_range_over_mac_timestamp_offset_base -ptp_range_over_mac_timestamp_offset_incr}
    _m_ptp_range_over_mac_master_ip_increment_by {-ptp_range_over_mac_master_ip_increment_by_format -ptp_range_over_mac_master_ip_increment_by_base -ptp_range_over_mac_master_ip_increment_by_incr}
    _m_ptp_range_over_mac_request_interval {-ptp_range_over_mac_request_interval_base -ptp_range_over_mac_request_interval_incr}
    _m_ptp_range_over_mac_ip_tos {-ptp_range_over_mac_ip_tos_base -ptp_range_over_mac_ip_tos_incr}
    _m_ptp_range_over_mac_request_holddown {-ptp_range_over_mac_request_holddown_base -ptp_range_over_mac_request_holddown_incr}
    _m_ptp_range_over_mac_client_mac_increment_by {-ptp_range_over_mac_client_mac_increment_by_format -ptp_range_over_mac_client_mac_increment_by_base -ptp_range_over_mac_client_mac_increment_by_incr}
    _m_ptp_range_over_mac_name {-ptp_range_over_mac_name_format -ptp_range_over_mac_name_base -ptp_range_over_mac_name_incr}
    _m_ptp_range_over_mac_master_ip_address {-ptp_range_over_mac_master_ip_address_format -ptp_range_over_mac_master_ip_address_base -ptp_range_over_mac_master_ip_address_incr}
    _m_ptp_range_over_mac_first_clock {-ptp_range_over_mac_first_clock_format -ptp_range_over_mac_first_clock_base -ptp_range_over_mac_first_clock_incr}
    _m_ptp_range_over_mac_master_mac_increment_by {-ptp_range_over_mac_master_mac_increment_by_format -ptp_range_over_mac_master_mac_increment_by_base -ptp_range_over_mac_master_mac_increment_by_incr}
    _m_ptp_range_over_mac_port_number {-ptp_range_over_mac_port_number_base -ptp_range_over_mac_port_number_incr}
    _m_ptp_range_over_mac_client_ip_address {-ptp_range_over_mac_client_ip_address_format -ptp_range_over_mac_client_ip_address_base -ptp_range_over_mac_client_ip_address_incr}
    _m_ptp_range_over_mac_sync_receipt_timeout {-ptp_range_over_mac_sync_receipt_timeout_base -ptp_range_over_mac_sync_receipt_timeout_incr}
    _m_ptp_range_over_mac_grant_delay_resp_duration_interval {-ptp_range_over_mac_grant_delay_resp_duration_interval_base -ptp_range_over_mac_grant_delay_resp_duration_interval_incr}
    _m_ptp_range_over_mac_timestamp_offset_variation {-ptp_range_over_mac_timestamp_offset_variation_base -ptp_range_over_mac_timestamp_offset_variation_incr}
    _m_ptp_range_over_mac_follow_up_drop_rate {-ptp_range_over_mac_follow_up_drop_rate_base -ptp_range_over_mac_follow_up_drop_rate_incr}
    _m_ptp_range_over_mac_master_mac_address {-ptp_range_over_mac_master_mac_address_format -ptp_range_over_mac_master_mac_address_base -ptp_range_over_mac_master_mac_address_incr}
    _m_ptp_range_over_mac_grant_sync_duration_interval {-ptp_range_over_mac_grant_sync_duration_interval_base -ptp_range_over_mac_grant_sync_duration_interval_incr}
    _m_ptp_range_over_mac_delay_response_delay {-ptp_range_over_mac_delay_response_delay_base -ptp_range_over_mac_delay_response_delay_incr}
    _m_ptp_range_over_mac_grant_unicast_duration_interval {-ptp_range_over_mac_grant_unicast_duration_interval_base -ptp_range_over_mac_grant_unicast_duration_interval_incr}
    _m_ptp_range_over_mac_follow_up_delay_insertion_rate {-ptp_range_over_mac_follow_up_delay_insertion_rate_base -ptp_range_over_mac_follow_up_delay_insertion_rate_incr}
    _m_ptp_range_over_mac_log_delay_req_interval {-ptp_range_over_mac_log_delay_req_interval_base -ptp_range_over_mac_log_delay_req_interval_incr}
    _m_ptp_range_over_mac_clock_accuracy {-ptp_range_over_mac_clock_accuracy_format -ptp_range_over_mac_clock_accuracy_base -ptp_range_over_mac_clock_accuracy_incr}
    _m_ptp_range_over_mac_client_count {-ptp_range_over_mac_client_count_base -ptp_range_over_mac_client_count_incr}
    _m_ptp_range_over_mac_step_mode {-ptp_range_over_mac_step_mode_format -ptp_range_over_mac_step_mode_base -ptp_range_over_mac_step_mode_incr}
    _m_ptp_range_over_mac_master_ip_increment_inter_entity {-ptp_range_over_mac_master_ip_increment_inter_entity_format -ptp_range_over_mac_master_ip_increment_inter_entity_base -ptp_range_over_mac_master_ip_increment_inter_entity_incr}
    _m_ptp_range_over_mac_delay_resp_drop_rate {-ptp_range_over_mac_delay_resp_drop_rate_base -ptp_range_over_mac_delay_resp_drop_rate_incr}
    _m_ptp_range_over_mac_announce_receipt_timeout {-ptp_range_over_mac_announce_receipt_timeout_base -ptp_range_over_mac_announce_receipt_timeout_incr}
    _m_ptp_range_over_mac_rx_calibration {-ptp_range_over_mac_rx_calibration_base -ptp_range_over_mac_rx_calibration_incr}
    _m_ptp_range_over_mac_tx_calibration {-ptp_range_over_mac_tx_calibration_base -ptp_range_over_mac_tx_calibration_incr}
    _m_ptp_range_over_mac_log_announce_interval {-ptp_range_over_mac_log_announce_interval_base -ptp_range_over_mac_log_announce_interval_incr}
    _m_vic_client_range_object_id {-vic_client_range_object_id_format -vic_client_range_object_id_base -vic_client_range_object_id_incr}
    _m_vic_client_range_macs_per_vif {-vic_client_range_macs_per_vif_base -vic_client_range_macs_per_vif_incr}
    _m_vic_client_range_channel_id_start {-vic_client_range_channel_id_start_base -vic_client_range_channel_id_start_incr}
    _m_vic_client_range_prov_info_oui {-vic_client_range_prov_info_oui_format -vic_client_range_prov_info_oui_base -vic_client_range_prov_info_oui_incr}
    _m_vic_client_range_name {-vic_client_range_name_format -vic_client_range_name_base -vic_client_range_name_incr}
    _m_vic_client_range_tlv_offset {-vic_client_range_tlv_offset_base -vic_client_range_tlv_offset_incr}
    _m_vic_client_range_prov_info_type {-vic_client_range_prov_info_type_base -vic_client_range_prov_info_type_incr}
    _m_vic_client_range_channel_id_increment {-vic_client_range_channel_id_increment_base -vic_client_range_channel_id_increment_incr}
    _m_igmp_querier_range_object_id {-igmp_querier_range_object_id_format -igmp_querier_range_object_id_base -igmp_querier_range_object_id_incr}
    _m_igmp_querier_range_specific_query_response_count {-igmp_querier_range_specific_query_response_count_base -igmp_querier_range_specific_query_response_count_incr}
    _m_igmp_querier_range_specific_query_response_interval {-igmp_querier_range_specific_query_response_interval_base -igmp_querier_range_specific_query_response_interval_incr}
    _m_igmp_querier_range_general_query_response_interval {-igmp_querier_range_general_query_response_interval_base -igmp_querier_range_general_query_response_interval_incr}
    _m_igmp_querier_range_name {-igmp_querier_range_name_format -igmp_querier_range_name_base -igmp_querier_range_name_incr}
    _m_igmp_querier_range_general_query_interval {-igmp_querier_range_general_query_interval_base -igmp_querier_range_general_query_interval_incr}
    _m_igmp_querier_range_robustness_variable {-igmp_querier_range_robustness_variable_base -igmp_querier_range_robustness_variable_incr}
    _m_igmp_querier_range_startup_query_count {-igmp_querier_range_startup_query_count_base -igmp_querier_range_startup_query_count_incr}
    _m_igmp_querier_range_version {-igmp_querier_range_version_format -igmp_querier_range_version_base -igmp_querier_range_version_incr}
    _m_igmp_mld_range_meshing_mode {-igmp_mld_range_meshing_mode_format -igmp_mld_range_meshing_mode_base -igmp_mld_range_meshing_mode_incr}
    _m_igmp_mld_range_report_frequency {-igmp_mld_range_report_frequency_base -igmp_mld_range_report_frequency_incr}
    _m_igmp_mld_range_name {-igmp_mld_range_name_format -igmp_mld_range_name_base -igmp_mld_range_name_incr}
    _m_igmp_mld_range_join_leave_multiplier {-igmp_mld_range_join_leave_multiplier_base -igmp_mld_range_join_leave_multiplier_incr}
    _m_igmp_mld_range_object_id {-igmp_mld_range_object_id_format -igmp_mld_range_object_id_base -igmp_mld_range_object_id_incr}
    _m_igmp_mld_range_version {-igmp_mld_range_version_format -igmp_mld_range_version_base -igmp_mld_range_version_incr}
    _m_twamp_control_range_object_id {-twamp_control_range_object_id_format -twamp_control_range_object_id_base -twamp_control_range_object_id_incr}
    _m_twamp_control_range_name {-twamp_control_range_name_format -twamp_control_range_name_base -twamp_control_range_name_incr}
    _m_twamp_control_range_mode {-twamp_control_range_mode_format -twamp_control_range_mode_base -twamp_control_range_mode_incr}
    _m_twamp_control_range_control_server_port {-twamp_control_range_control_server_port_base -twamp_control_range_control_server_port_incr}
    _m_twamp_control_range_count {-twamp_control_range_count_base -twamp_control_range_count_incr}
    _m_twamp_control_range_secret {-twamp_control_range_secret_format -twamp_control_range_secret_base -twamp_control_range_secret_incr}
    _m_twamp_control_range_key_id {-twamp_control_range_key_id_format -twamp_control_range_key_id_base -twamp_control_range_key_id_incr}
    _m_twamp_control_range_control_server_ip_increment {-twamp_control_range_control_server_ip_increment_format -twamp_control_range_control_server_ip_increment_base -twamp_control_range_control_server_ip_increment_incr}
    _m_twamp_control_range_control_start_server_ip {-twamp_control_range_control_start_server_ip_format -twamp_control_range_control_start_server_ip_base -twamp_control_range_control_start_server_ip_incr}
    _m_emulated_router_range_count {-emulated_router_range_count_base -emulated_router_range_count_incr}
    _m_emulated_router_range_ip_type {-emulated_router_range_ip_type_format -emulated_router_range_ip_type_base -emulated_router_range_ip_type_incr}
    _m_emulated_router_range_gateway_increment_mode {-emulated_router_range_gateway_increment_mode_format -emulated_router_range_gateway_increment_mode_base -emulated_router_range_gateway_increment_mode_incr}
    _m_emulated_router_range_ip_address {-emulated_router_range_ip_address_format -emulated_router_range_ip_address_base -emulated_router_range_ip_address_incr}
    _m_emulated_router_range_gateway_increment {-emulated_router_range_gateway_increment_format -emulated_router_range_gateway_increment_base -emulated_router_range_gateway_increment_incr}
    _m_emulated_router_range_increment_by {-emulated_router_range_increment_by_format -emulated_router_range_increment_by_base -emulated_router_range_increment_by_incr}
    _m_emulated_router_range_gateway_address {-emulated_router_range_gateway_address_format -emulated_router_range_gateway_address_base -emulated_router_range_gateway_address_incr}
    _m_emulated_router_range_name {-emulated_router_range_name_format -emulated_router_range_name_base -emulated_router_range_name_incr}
    _m_emulated_router_range_mss {-emulated_router_range_mss_base -emulated_router_range_mss_incr}
    _m_emulated_router_range_object_id {-emulated_router_range_object_id_format -emulated_router_range_object_id_base -emulated_router_range_object_id_incr}
    _m_emulated_router_range_prefix {-emulated_router_range_prefix_base -emulated_router_range_prefix_incr}
    _m_ancp_range_circuit_id {-ancp_range_circuit_id_format -ancp_range_circuit_id_base -ancp_range_circuit_id_incr}
    _m_ancp_range_distribution_algorithm_percent {-ancp_range_distribution_algorithm_percent_base -ancp_range_distribution_algorithm_percent_incr}
    _m_ancp_range_atm_vpi {-ancp_range_atm_vpi_base -ancp_range_atm_vpi_incr}
    _m_ancp_range_nas_ip_address {-ancp_range_nas_ip_address_format -ancp_range_nas_ip_address_base -ancp_range_nas_ip_address_incr}
    _m_ancp_range_nas_ancp_service_port {-ancp_range_nas_ancp_service_port_base -ancp_range_nas_ancp_service_port_incr}
    _m_ancp_range_inner_vlan_id {-ancp_range_inner_vlan_id_base -ancp_range_inner_vlan_id_incr}
    _m_ancp_range_access_aggregation_cb_tlv {-ancp_range_access_aggregation_cb_tlv_format -ancp_range_access_aggregation_cb_tlv_base -ancp_range_access_aggregation_cb_tlv_incr}
    _m_ancp_range_nas_keep_alive_retries {-ancp_range_nas_keep_alive_retries_base -ancp_range_nas_keep_alive_retries_incr}
    _m_ancp_range_nas_keep_alive_timeout {-ancp_range_nas_keep_alive_timeout_base -ancp_range_nas_keep_alive_timeout_incr}
    _m_ancp_range_name {-ancp_range_name_format -ancp_range_name_base -ancp_range_name_incr}
    _m_ancp_range_object_id {-ancp_range_object_id_format -ancp_range_object_id_base -ancp_range_object_id_incr}
    _m_ancp_range_atm_vci {-ancp_range_atm_vci_base -ancp_range_atm_vci_incr}
    _m_ancp_range_nas_ipaddress_incr {-ancp_range_nas_ipaddress_incr_format -ancp_range_nas_ipaddress_incr_base -ancp_range_nas_ipaddress_incr_incr}
    _m_ancp_range_outer_vlan_id {-ancp_range_outer_vlan_id_base -ancp_range_outer_vlan_id_incr}
    _m_ancp_range_nas_ip_address_incr {-ancp_range_nas_ip_address_incr_format -ancp_range_nas_ip_address_incr_base -ancp_range_nas_ip_address_incr_incr}
    _m_ancp_range_ancp_ip_range_count {-ancp_range_ancp_ip_range_count_base -ancp_range_ancp_ip_range_count_incr}
    _m_ancp_range_ancp_ip_range_ip_type {-ancp_range_ancp_ip_range_ip_type_format -ancp_range_ancp_ip_range_ip_type_base -ancp_range_ancp_ip_range_ip_type_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment_mode {-ancp_range_ancp_ip_range_gateway_increment_mode_format -ancp_range_ancp_ip_range_gateway_increment_mode_base -ancp_range_ancp_ip_range_gateway_increment_mode_incr}
    _m_ancp_range_ancp_ip_range_ip_address {-ancp_range_ancp_ip_range_ip_address_format -ancp_range_ancp_ip_range_ip_address_base -ancp_range_ancp_ip_range_ip_address_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment {-ancp_range_ancp_ip_range_gateway_increment_format -ancp_range_ancp_ip_range_gateway_increment_base -ancp_range_ancp_ip_range_gateway_increment_incr}
    _m_ancp_range_ancp_ip_range_increment_by {-ancp_range_ancp_ip_range_increment_by_format -ancp_range_ancp_ip_range_increment_by_base -ancp_range_ancp_ip_range_increment_by_incr}
    _m_ancp_range_ancp_ip_range_gateway_address {-ancp_range_ancp_ip_range_gateway_address_format -ancp_range_ancp_ip_range_gateway_address_base -ancp_range_ancp_ip_range_gateway_address_incr}
    _m_ancp_range_ancp_ip_range_name {-ancp_range_ancp_ip_range_name_format -ancp_range_ancp_ip_range_name_base -ancp_range_ancp_ip_range_name_incr}
    _m_ancp_range_ancp_ip_range_mss {-ancp_range_ancp_ip_range_mss_base -ancp_range_ancp_ip_range_mss_incr}
    _m_ancp_range_ancp_ip_range_object_id {-ancp_range_ancp_ip_range_object_id_format -ancp_range_ancp_ip_range_object_id_base -ancp_range_ancp_ip_range_object_id_incr}
    _m_ancp_range_ancp_ip_range_prefix {-ancp_range_ancp_ip_range_prefix_base -ancp_range_ancp_ip_range_prefix_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment_step {-ancp_range_ancp_pvc_range_vpi_increment_step_base -ancp_range_ancp_pvc_range_vpi_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vci_unique_count {-ancp_range_ancp_pvc_range_vci_unique_count_base -ancp_range_ancp_pvc_range_vci_unique_count_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment_step {-ancp_range_ancp_pvc_range_vci_increment_step_base -ancp_range_ancp_pvc_range_vci_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vpi_first_id {-ancp_range_ancp_pvc_range_vpi_first_id_base -ancp_range_ancp_pvc_range_vpi_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment {-ancp_range_ancp_pvc_range_vpi_increment_base -ancp_range_ancp_pvc_range_vpi_increment_incr}
    _m_ancp_range_ancp_pvc_range_vci_first_id {-ancp_range_ancp_pvc_range_vci_first_id_base -ancp_range_ancp_pvc_range_vci_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment {-ancp_range_ancp_pvc_range_vci_increment_base -ancp_range_ancp_pvc_range_vci_increment_incr}
    _m_ancp_range_ancp_pvc_range_name {-ancp_range_ancp_pvc_range_name_format -ancp_range_ancp_pvc_range_name_base -ancp_range_ancp_pvc_range_name_incr}
    _m_ancp_range_ancp_pvc_range_increment_mode {-ancp_range_ancp_pvc_range_increment_mode_base -ancp_range_ancp_pvc_range_increment_mode_incr}
    _m_ancp_range_ancp_pvc_range_object_id {-ancp_range_ancp_pvc_range_object_id_format -ancp_range_ancp_pvc_range_object_id_base -ancp_range_ancp_pvc_range_object_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_unique_count {-ancp_range_ancp_pvc_range_vpi_unique_count_base -ancp_range_ancp_pvc_range_vpi_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_first_id {-ancp_range_ancp_vlan_range_inner_first_id_base -ancp_range_ancp_vlan_range_inner_first_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment {-ancp_range_ancp_vlan_range_inner_increment_base -ancp_range_ancp_vlan_range_inner_increment_incr}
    _m_ancp_range_ancp_vlan_range_unique_count {-ancp_range_ancp_vlan_range_unique_count_base -ancp_range_ancp_vlan_range_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_name {-ancp_range_ancp_vlan_range_name_format -ancp_range_ancp_vlan_range_name_base -ancp_range_ancp_vlan_range_name_incr}
    _m_ancp_range_ancp_vlan_range_increment_step {-ancp_range_ancp_vlan_range_increment_step_base -ancp_range_ancp_vlan_range_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_tpid {-ancp_range_ancp_vlan_range_tpid_format -ancp_range_ancp_vlan_range_tpid_base -ancp_range_ancp_vlan_range_tpid_incr}
    _m_ancp_range_ancp_vlan_range_priority {-ancp_range_ancp_vlan_range_priority_base -ancp_range_ancp_vlan_range_priority_incr}
    _m_ancp_range_ancp_vlan_range_object_id {-ancp_range_ancp_vlan_range_object_id_format -ancp_range_ancp_vlan_range_object_id_base -ancp_range_ancp_vlan_range_object_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_unique_count {-ancp_range_ancp_vlan_range_inner_unique_count_base -ancp_range_ancp_vlan_range_inner_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_tpid {-ancp_range_ancp_vlan_range_inner_tpid_format -ancp_range_ancp_vlan_range_inner_tpid_base -ancp_range_ancp_vlan_range_inner_tpid_incr}
    _m_ancp_range_ancp_vlan_range_first_id {-ancp_range_ancp_vlan_range_first_id_base -ancp_range_ancp_vlan_range_first_id_incr}
    _m_ancp_range_ancp_vlan_range_increment {-ancp_range_ancp_vlan_range_increment_base -ancp_range_ancp_vlan_range_increment_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment_step {-ancp_range_ancp_vlan_range_inner_increment_step_base -ancp_range_ancp_vlan_range_inner_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_id_incr_mode {-ancp_range_ancp_vlan_range_id_incr_mode_base -ancp_range_ancp_vlan_range_id_incr_mode_incr}
    _m_ancp_range_ancp_vlan_range_inner_priority {-ancp_range_ancp_vlan_range_inner_priority_base -ancp_range_ancp_vlan_range_inner_priority_incr}
    _m_ancp_range_ancp_mac_range_object_id {-ancp_range_ancp_mac_range_object_id_format -ancp_range_ancp_mac_range_object_id_base -ancp_range_ancp_mac_range_object_id_incr}
    _m_ancp_range_ancp_mac_range_increment_by {-ancp_range_ancp_mac_range_increment_by_format -ancp_range_ancp_mac_range_increment_by_base -ancp_range_ancp_mac_range_increment_by_incr}
    _m_ancp_range_ancp_mac_range_name {-ancp_range_ancp_mac_range_name_format -ancp_range_ancp_mac_range_name_base -ancp_range_ancp_mac_range_name_incr}
    _m_ancp_range_ancp_mac_range_count {-ancp_range_ancp_mac_range_count_base -ancp_range_ancp_mac_range_count_incr}
    _m_ancp_range_ancp_mac_range_mac {-ancp_range_ancp_mac_range_mac_format -ancp_range_ancp_mac_range_mac_base -ancp_range_ancp_mac_range_mac_incr}
    _m_ancp_range_ancp_mac_range_mtu {-ancp_range_ancp_mac_range_mtu_base -ancp_range_ancp_mac_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_object_id {-ancp_range_ancp_atm_range_object_id_format -ancp_range_ancp_atm_range_object_id_base -ancp_range_ancp_atm_range_object_id_incr}
    _m_ancp_range_ancp_atm_range_increment_by {-ancp_range_ancp_atm_range_increment_by_format -ancp_range_ancp_atm_range_increment_by_base -ancp_range_ancp_atm_range_increment_by_incr}
    _m_ancp_range_ancp_atm_range_name {-ancp_range_ancp_atm_range_name_format -ancp_range_ancp_atm_range_name_base -ancp_range_ancp_atm_range_name_incr}
    _m_ancp_range_ancp_atm_range_count {-ancp_range_ancp_atm_range_count_base -ancp_range_ancp_atm_range_count_incr}
    _m_ancp_range_ancp_atm_range_mac {-ancp_range_ancp_atm_range_mac_format -ancp_range_ancp_atm_range_mac_base -ancp_range_ancp_atm_range_mac_incr}
    _m_ancp_range_ancp_atm_range_mtu {-ancp_range_ancp_atm_range_mtu_base -ancp_range_ancp_atm_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_encapsulation {-ancp_range_ancp_atm_range_encapsulation_format -ancp_range_ancp_atm_range_encapsulation_base -ancp_range_ancp_atm_range_encapsulation_incr}
    _m_iptv_range_inter_stb_start_delay {-iptv_range_inter_stb_start_delay_base -iptv_range_inter_stb_start_delay_incr}
    _m_iptv_range_leave_latency_threshold {-iptv_range_leave_latency_threshold_base -iptv_range_leave_latency_threshold_incr}
    _m_iptv_range_join_latency_threshold {-iptv_range_join_latency_threshold_base -iptv_range_join_latency_threshold_incr}
    _m_iptv_range_report_frequency {-iptv_range_report_frequency_base -iptv_range_report_frequency_incr}
    _m_iptv_range_name {-iptv_range_name_format -iptv_range_name_base -iptv_range_name_incr}
    _m_iptv_range_object_id {-iptv_range_object_id_format -iptv_range_object_id_base -iptv_range_object_id_incr}
    _m_iptv_range_join_leave_multiplier {-iptv_range_join_leave_multiplier_base -iptv_range_join_leave_multiplier_incr}
    _m_iptv_range_stb_leave_join_delay {-iptv_range_stb_leave_join_delay_base -iptv_range_stb_leave_join_delay_incr}
    _m_iptv_range_version {-iptv_range_version_format -iptv_range_version_base -iptv_range_version_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/ipEndpoint
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/ipEndpoint
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -_global_options \
    -cgetmethod _g__global_options -configuremethod _c__global_options -validatemethod _v__global_options \
    -default "" \
    -readonly false
  method _c__global_options {t v} { $self _configure_basic $t $v }
  method _v__global_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__global_options {t} { $self _cget_basic $t }
  option -_port_options \
    -cgetmethod _g__port_options -configuremethod _c__port_options -validatemethod _v__port_options \
    -default "" \
    -readonly false
  method _c__port_options {t v} { $self _configure_basic $t $v }
  method _v__port_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__port_options {t} { $self _cget_basic $t }
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  # XCHILD
  # /vport/protocolStack/ethernet/ipEndpoint/range
  option -range_handle -default UNDEFINED
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -_global_options _globalOptions
    -_port_options _portOptions
    -object_id objectId
    -name name
    -range_handle range
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_name {-name_format -name_base -name_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint/range"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/ipEndpoint/range
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name iprange
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 0
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command ipEndpoint/range/ipRange
    -use-settings-for iprange_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/ipEndpoint/range
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -dot1x_range_user_password \
    -configuremethod _c_./dot1xRange/userPassword \
    -cgetmethod _g_./dot1xRange/userPassword \
    -readonly false
  method _c_./dot1xRange/userPassword {t v} { $self _configure_relative ./dot1xRange -user_password $v }
  method _g_./dot1xRange/userPassword {t} { $self _cget_relative ./dot1xRange -user_password }
  # multiplier 
  method _m_dot1x_range_user_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_user_password }
  
  option -dot1x_range_nac_sequence \
    -configuremethod _c_./dot1xRange/nacSequence \
    -cgetmethod _g_./dot1xRange/nacSequence \
    -readonly false
  method _c_./dot1xRange/nacSequence {t v} { $self _configure_relative ./dot1xRange -nac_sequence $v }
  method _g_./dot1xRange/nacSequence {t} { $self _cget_relative ./dot1xRange -nac_sequence }
  option -dot1x_range_enabled \
    -configuremethod _c_./dot1xRange/enabled \
    -cgetmethod _g_./dot1xRange/enabled \
    -readonly false
  method _c_./dot1xRange/enabled {t v} { $self _configure_relative ./dot1xRange -enabled $v }
  method _g_./dot1xRange/enabled {t} { $self _cget_relative ./dot1xRange -enabled }
  option -dot1x_range_fast_stateless_resume \
    -configuremethod _c_./dot1xRange/fastStatelessResume \
    -cgetmethod _g_./dot1xRange/fastStatelessResume \
    -readonly false
  method _c_./dot1xRange/fastStatelessResume {t v} { $self _configure_relative ./dot1xRange -fast_stateless_resume $v }
  method _g_./dot1xRange/fastStatelessResume {t} { $self _cget_relative ./dot1xRange -fast_stateless_resume }
  # multiplier 
  method _m_dot1x_range_fast_stateless_resume {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_stateless_resume }
  
  option -dot1x_range_user_name \
    -configuremethod _c_./dot1xRange/userName \
    -cgetmethod _g_./dot1xRange/userName \
    -readonly false
  method _c_./dot1xRange/userName {t v} { $self _configure_relative ./dot1xRange -user_name $v }
  method _g_./dot1xRange/userName {t} { $self _cget_relative ./dot1xRange -user_name }
  # multiplier 
  method _m_dot1x_range_user_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_user_name }
  
  option -dot1x_range_host_password \
    -configuremethod _c_./dot1xRange/hostPassword \
    -cgetmethod _g_./dot1xRange/hostPassword \
    -readonly false
  method _c_./dot1xRange/hostPassword {t v} { $self _configure_relative ./dot1xRange -host_password $v }
  method _g_./dot1xRange/hostPassword {t} { $self _cget_relative ./dot1xRange -host_password }
  # multiplier 
  method _m_dot1x_range_host_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_password }
  
  option -dot1x_range_name \
    -configuremethod _c_./dot1xRange/name \
    -cgetmethod _g_./dot1xRange/name \
    -readonly false
  method _c_./dot1xRange/name {t v} { $self _configure_relative ./dot1xRange -name $v }
  method _g_./dot1xRange/name {t} { $self _cget_relative ./dot1xRange -name }
  # multiplier 
  method _m_dot1x_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_name }
  
  option -dot1x_range_wait_id \
    -configuremethod _c_./dot1xRange/waitId \
    -cgetmethod _g_./dot1xRange/waitId \
    -readonly false
  method _c_./dot1xRange/waitId {t v} { $self _configure_relative ./dot1xRange -wait_id $v }
  method _g_./dot1xRange/waitId {t} { $self _cget_relative ./dot1xRange -wait_id }
  option -dot1x_range_protocol \
    -configuremethod _c_./dot1xRange/protocol \
    -cgetmethod _g_./dot1xRange/protocol \
    -readonly false
  method _c_./dot1xRange/protocol {t v} { $self _configure_relative ./dot1xRange -protocol $v }
  method _g_./dot1xRange/protocol {t} { $self _cget_relative ./dot1xRange -protocol }
  # multiplier 
  method _m_dot1x_range_protocol {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_protocol }
  
  option -dot1x_range_fast_inner_method \
    -configuremethod _c_./dot1xRange/fastInnerMethod \
    -cgetmethod _g_./dot1xRange/fastInnerMethod \
    -readonly false
  method _c_./dot1xRange/fastInnerMethod {t v} { $self _configure_relative ./dot1xRange -fast_inner_method $v }
  method _g_./dot1xRange/fastInnerMethod {t} { $self _cget_relative ./dot1xRange -fast_inner_method }
  # multiplier 
  method _m_dot1x_range_fast_inner_method {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_inner_method }
  
  option -dot1x_range_object_id \
    -configuremethod _c_./dot1xRange/objectId \
    -cgetmethod _g_./dot1xRange/objectId \
    -readonly false
  method _c_./dot1xRange/objectId {t v} { $self _configure_relative ./dot1xRange -object_id $v }
  method _g_./dot1xRange/objectId {t} { $self _cget_relative ./dot1xRange -object_id }
  # multiplier 
  method _m_dot1x_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_object_id }
  
  option -dot1x_range_fast_provision_mode \
    -configuremethod _c_./dot1xRange/fastProvisionMode \
    -cgetmethod _g_./dot1xRange/fastProvisionMode \
    -readonly false
  method _c_./dot1xRange/fastProvisionMode {t v} { $self _configure_relative ./dot1xRange -fast_provision_mode $v }
  method _g_./dot1xRange/fastProvisionMode {t} { $self _cget_relative ./dot1xRange -fast_provision_mode }
  # multiplier 
  method _m_dot1x_range_fast_provision_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_provision_mode }
  
  option -dot1x_range_host_auth_mode \
    -configuremethod _c_./dot1xRange/hostAuthMode \
    -cgetmethod _g_./dot1xRange/hostAuthMode \
    -readonly false
  method _c_./dot1xRange/hostAuthMode {t v} { $self _configure_relative ./dot1xRange -host_auth_mode $v }
  method _g_./dot1xRange/hostAuthMode {t} { $self _cget_relative ./dot1xRange -host_auth_mode }
  # multiplier 
  method _m_dot1x_range_host_auth_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_auth_mode }
  
  option -dot1x_range_host_name \
    -configuremethod _c_./dot1xRange/hostName \
    -cgetmethod _g_./dot1xRange/hostName \
    -readonly false
  method _c_./dot1xRange/hostName {t v} { $self _configure_relative ./dot1xRange -host_name $v }
  method _g_./dot1xRange/hostName {t} { $self _cget_relative ./dot1xRange -host_name }
  # multiplier 
  method _m_dot1x_range_host_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_name }
  
  option -esmc_range_object_id \
    -configuremethod _c_./esmcRange/objectId \
    -cgetmethod _g_./esmcRange/objectId \
    -readonly false
  method _c_./esmcRange/objectId {t v} { $self _configure_relative ./esmcRange -object_id $v }
  method _g_./esmcRange/objectId {t} { $self _cget_relative ./esmcRange -object_id }
  # multiplier 
  method _m_esmc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_object_id }
  
  option -esmc_range_rate \
    -configuremethod _c_./esmcRange/rate \
    -cgetmethod _g_./esmcRange/rate \
    -readonly false
  method _c_./esmcRange/rate {t v} { $self _configure_relative ./esmcRange -rate $v }
  method _g_./esmcRange/rate {t} { $self _cget_relative ./esmcRange -rate }
  # multiplier 
  method _m_esmc_range_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -esmc_range_rate }
  
  option -esmc_range_name \
    -configuremethod _c_./esmcRange/name \
    -cgetmethod _g_./esmcRange/name \
    -readonly false
  method _c_./esmcRange/name {t v} { $self _configure_relative ./esmcRange -name $v }
  method _g_./esmcRange/name {t} { $self _cget_relative ./esmcRange -name }
  # multiplier 
  method _m_esmc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_name }
  
  option -esmc_range_ql \
    -configuremethod _c_./esmcRange/ql \
    -cgetmethod _g_./esmcRange/ql \
    -readonly false
  method _c_./esmcRange/ql {t v} { $self _configure_relative ./esmcRange -ql $v }
  method _g_./esmcRange/ql {t} { $self _cget_relative ./esmcRange -ql }
  # multiplier 
  method _m_esmc_range_ql {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_ql }
  
  option -esmc_range_wait_id \
    -configuremethod _c_./esmcRange/waitId \
    -cgetmethod _g_./esmcRange/waitId \
    -readonly false
  method _c_./esmcRange/waitId {t v} { $self _configure_relative ./esmcRange -wait_id $v }
  method _g_./esmcRange/waitId {t} { $self _cget_relative ./esmcRange -wait_id }
  option -esmc_range_enabled \
    -configuremethod _c_./esmcRange/enabled \
    -cgetmethod _g_./esmcRange/enabled \
    -readonly false
  method _c_./esmcRange/enabled {t v} { $self _configure_relative ./esmcRange -enabled $v }
  method _g_./esmcRange/enabled {t} { $self _cget_relative ./esmcRange -enabled }
  option -esmc_range_flag_mode \
    -configuremethod _c_./esmcRange/flagMode \
    -cgetmethod _g_./esmcRange/flagMode \
    -readonly false
  method _c_./esmcRange/flagMode {t v} { $self _configure_relative ./esmcRange -flag_mode $v }
  method _g_./esmcRange/flagMode {t} { $self _cget_relative ./esmcRange -flag_mode }
  # multiplier 
  method _m_esmc_range_flag_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_flag_mode }
  
  option -web_auth_range_object_id \
    -configuremethod _c_./webAuthRange/objectId \
    -cgetmethod _g_./webAuthRange/objectId \
    -readonly false
  method _c_./webAuthRange/objectId {t v} { $self _configure_relative ./webAuthRange -object_id $v }
  method _g_./webAuthRange/objectId {t} { $self _cget_relative ./webAuthRange -object_id }
  # multiplier 
  method _m_web_auth_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_object_id }
  
  option -web_auth_range_input_value3 \
    -configuremethod _c_./webAuthRange/inputValue3 \
    -cgetmethod _g_./webAuthRange/inputValue3 \
    -readonly false
  method _c_./webAuthRange/inputValue3 {t v} { $self _configure_relative ./webAuthRange -input_value3 $v }
  method _g_./webAuthRange/inputValue3 {t} { $self _cget_relative ./webAuthRange -input_value3 }
  # multiplier 
  method _m_web_auth_range_input_value3 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value3 }
  
  option -web_auth_range_name \
    -configuremethod _c_./webAuthRange/name \
    -cgetmethod _g_./webAuthRange/name \
    -readonly false
  method _c_./webAuthRange/name {t v} { $self _configure_relative ./webAuthRange -name $v }
  method _g_./webAuthRange/name {t} { $self _cget_relative ./webAuthRange -name }
  # multiplier 
  method _m_web_auth_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_name }
  
  option -web_auth_range_expect \
    -configuremethod _c_./webAuthRange/expect \
    -cgetmethod _g_./webAuthRange/expect \
    -readonly false
  method _c_./webAuthRange/expect {t v} { $self _configure_relative ./webAuthRange -expect $v }
  method _g_./webAuthRange/expect {t} { $self _cget_relative ./webAuthRange -expect }
  # multiplier 
  method _m_web_auth_range_expect {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_expect }
  
  option -web_auth_range_input_value1 \
    -configuremethod _c_./webAuthRange/inputValue1 \
    -cgetmethod _g_./webAuthRange/inputValue1 \
    -readonly false
  method _c_./webAuthRange/inputValue1 {t v} { $self _configure_relative ./webAuthRange -input_value1 $v }
  method _g_./webAuthRange/inputValue1 {t} { $self _cget_relative ./webAuthRange -input_value1 }
  # multiplier 
  method _m_web_auth_range_input_value1 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value1 }
  
  option -web_auth_range_enabled \
    -configuremethod _c_./webAuthRange/enabled \
    -cgetmethod _g_./webAuthRange/enabled \
    -readonly false
  method _c_./webAuthRange/enabled {t v} { $self _configure_relative ./webAuthRange -enabled $v }
  method _g_./webAuthRange/enabled {t} { $self _cget_relative ./webAuthRange -enabled }
  option -web_auth_range_input_value2 \
    -configuremethod _c_./webAuthRange/inputValue2 \
    -cgetmethod _g_./webAuthRange/inputValue2 \
    -readonly false
  method _c_./webAuthRange/inputValue2 {t v} { $self _configure_relative ./webAuthRange -input_value2 $v }
  method _g_./webAuthRange/inputValue2 {t} { $self _cget_relative ./webAuthRange -input_value2 }
  # multiplier 
  method _m_web_auth_range_input_value2 {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -web_auth_range_input_value2 }
  
  option -twamp_server_range_iteration_count \
    -configuremethod _c_./twampServerRange/iterationCount \
    -cgetmethod _g_./twampServerRange/iterationCount \
    -readonly false
  method _c_./twampServerRange/iterationCount {t v} { $self _configure_relative ./twampServerRange -iteration_count $v }
  method _g_./twampServerRange/iterationCount {t} { $self _cget_relative ./twampServerRange -iteration_count }
  # multiplier 
  method _m_twamp_server_range_iteration_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_iteration_count }
  
  option -twamp_server_range_count \
    -configuremethod _c_./twampServerRange/count \
    -cgetmethod _g_./twampServerRange/count \
    -readonly false
  method _c_./twampServerRange/count {t v} { $self _configure_relative ./twampServerRange -count $v }
  method _g_./twampServerRange/count {t} { $self _cget_relative ./twampServerRange -count }
  # multiplier 
  method _m_twamp_server_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_count }
  
  option -twamp_server_range_enabled \
    -configuremethod _c_./twampServerRange/enabled \
    -cgetmethod _g_./twampServerRange/enabled \
    -readonly false
  method _c_./twampServerRange/enabled {t v} { $self _configure_relative ./twampServerRange -enabled $v }
  method _g_./twampServerRange/enabled {t} { $self _cget_relative ./twampServerRange -enabled }
  option -twamp_server_range_reflector_port \
    -configuremethod _c_./twampServerRange/reflectorPort \
    -cgetmethod _g_./twampServerRange/reflectorPort \
    -readonly false
  method _c_./twampServerRange/reflectorPort {t v} { $self _configure_relative ./twampServerRange -reflector_port $v }
  method _g_./twampServerRange/reflectorPort {t} { $self _cget_relative ./twampServerRange -reflector_port }
  # multiplier 
  method _m_twamp_server_range_reflector_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_reflector_port }
  
  option -twamp_server_range_max_test_sessions \
    -configuremethod _c_./twampServerRange/maxTestSessions \
    -cgetmethod _g_./twampServerRange/maxTestSessions \
    -readonly false
  method _c_./twampServerRange/maxTestSessions {t v} { $self _configure_relative ./twampServerRange -max_test_sessions $v }
  method _g_./twampServerRange/maxTestSessions {t} { $self _cget_relative ./twampServerRange -max_test_sessions }
  # multiplier 
  method _m_twamp_server_range_max_test_sessions {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_max_test_sessions }
  
  option -twamp_server_range_control_port \
    -configuremethod _c_./twampServerRange/controlPort \
    -cgetmethod _g_./twampServerRange/controlPort \
    -readonly false
  method _c_./twampServerRange/controlPort {t v} { $self _configure_relative ./twampServerRange -control_port $v }
  method _g_./twampServerRange/controlPort {t} { $self _cget_relative ./twampServerRange -control_port }
  # multiplier 
  method _m_twamp_server_range_control_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_control_port }
  
  option -twamp_server_range_key_id \
    -configuremethod _c_./twampServerRange/keyId \
    -cgetmethod _g_./twampServerRange/keyId \
    -readonly false
  method _c_./twampServerRange/keyId {t v} { $self _configure_relative ./twampServerRange -key_id $v }
  method _g_./twampServerRange/keyId {t} { $self _cget_relative ./twampServerRange -key_id }
  # multiplier 
  method _m_twamp_server_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_key_id }
  
  option -twamp_server_range_permitted_ip \
    -configuremethod _c_./twampServerRange/permittedIp \
    -cgetmethod _g_./twampServerRange/permittedIp \
    -readonly false
  method _c_./twampServerRange/permittedIp {t v} { $self _configure_relative ./twampServerRange -permitted_ip $v }
  method _g_./twampServerRange/permittedIp {t} { $self _cget_relative ./twampServerRange -permitted_ip }
  # multiplier 
  method _m_twamp_server_range_permitted_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip }
  
  option -twamp_server_range_name \
    -configuremethod _c_./twampServerRange/name \
    -cgetmethod _g_./twampServerRange/name \
    -readonly false
  method _c_./twampServerRange/name {t v} { $self _configure_relative ./twampServerRange -name $v }
  method _g_./twampServerRange/name {t} { $self _cget_relative ./twampServerRange -name }
  # multiplier 
  method _m_twamp_server_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_name }
  
  option -twamp_server_range_enable_access_control \
    -configuremethod _c_./twampServerRange/enableAccessControl \
    -cgetmethod _g_./twampServerRange/enableAccessControl \
    -readonly false
  method _c_./twampServerRange/enableAccessControl {t v} { $self _configure_relative ./twampServerRange -enable_access_control $v }
  method _g_./twampServerRange/enableAccessControl {t} { $self _cget_relative ./twampServerRange -enable_access_control }
  option -twamp_server_range_object_id \
    -configuremethod _c_./twampServerRange/objectId \
    -cgetmethod _g_./twampServerRange/objectId \
    -readonly false
  method _c_./twampServerRange/objectId {t v} { $self _configure_relative ./twampServerRange -object_id $v }
  method _g_./twampServerRange/objectId {t} { $self _cget_relative ./twampServerRange -object_id }
  # multiplier 
  method _m_twamp_server_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_object_id }
  
  option -twamp_server_range_permitted_ip_increment \
    -configuremethod _c_./twampServerRange/permittedIpIncrement \
    -cgetmethod _g_./twampServerRange/permittedIpIncrement \
    -readonly false
  method _c_./twampServerRange/permittedIpIncrement {t v} { $self _configure_relative ./twampServerRange -permitted_ip_increment $v }
  method _g_./twampServerRange/permittedIpIncrement {t} { $self _cget_relative ./twampServerRange -permitted_ip_increment }
  # multiplier 
  method _m_twamp_server_range_permitted_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_permitted_ip_increment }
  
  option -twamp_server_range_permitted_sender_port \
    -configuremethod _c_./twampServerRange/permittedSenderPort \
    -cgetmethod _g_./twampServerRange/permittedSenderPort \
    -readonly false
  method _c_./twampServerRange/permittedSenderPort {t v} { $self _configure_relative ./twampServerRange -permitted_sender_port $v }
  method _g_./twampServerRange/permittedSenderPort {t} { $self _cget_relative ./twampServerRange -permitted_sender_port }
  # multiplier 
  method _m_twamp_server_range_permitted_sender_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_server_range_permitted_sender_port }
  
  option -twamp_server_range_mode \
    -configuremethod _c_./twampServerRange/mode \
    -cgetmethod _g_./twampServerRange/mode \
    -readonly false
  method _c_./twampServerRange/mode {t v} { $self _configure_relative ./twampServerRange -mode $v }
  method _g_./twampServerRange/mode {t} { $self _cget_relative ./twampServerRange -mode }
  # multiplier 
  method _m_twamp_server_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_mode }
  
  option -twamp_server_range_secret \
    -configuremethod _c_./twampServerRange/secret \
    -cgetmethod _g_./twampServerRange/secret \
    -readonly false
  method _c_./twampServerRange/secret {t v} { $self _configure_relative ./twampServerRange -secret $v }
  method _g_./twampServerRange/secret {t} { $self _cget_relative ./twampServerRange -secret }
  # multiplier 
  method _m_twamp_server_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_server_range_secret }
  
  option -mac_range_object_id \
    -configuremethod _c_./macRange/objectId \
    -cgetmethod _g_./macRange/objectId \
    -readonly false
  method _c_./macRange/objectId {t v} { $self _configure_relative ./macRange -object_id $v }
  method _g_./macRange/objectId {t} { $self _cget_relative ./macRange -object_id }
  # multiplier 
  method _m_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_object_id }
  
  option -mac_range_increment_by \
    -configuremethod _c_./macRange/incrementBy \
    -cgetmethod _g_./macRange/incrementBy \
    -readonly false
  method _c_./macRange/incrementBy {t v} { $self _configure_relative ./macRange -increment_by $v }
  method _g_./macRange/incrementBy {t} { $self _cget_relative ./macRange -increment_by }
  # multiplier 
  method _m_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_increment_by }
  
  option -mac_range_name \
    -configuremethod _c_./macRange/name \
    -cgetmethod _g_./macRange/name \
    -readonly false
  method _c_./macRange/name {t v} { $self _configure_relative ./macRange -name $v }
  method _g_./macRange/name {t} { $self _cget_relative ./macRange -name }
  # multiplier 
  method _m_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_name }
  
  option -mac_range_count \
    -configuremethod _c_./macRange/count \
    -cgetmethod _g_./macRange/count \
    -readonly false
  method _c_./macRange/count {t v} { $self _configure_relative ./macRange -count $v }
  method _g_./macRange/count {t} { $self _cget_relative ./macRange -count }
  # multiplier 
  method _m_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_count }
  
  option -mac_range_mac \
    -configuremethod _c_./macRange/mac \
    -cgetmethod _g_./macRange/mac \
    -readonly false
  method _c_./macRange/mac {t v} { $self _configure_relative ./macRange -mac $v }
  method _g_./macRange/mac {t} { $self _cget_relative ./macRange -mac }
  # multiplier 
  method _m_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_mac }
  
  option -mac_range_mtu \
    -configuremethod _c_./macRange/mtu \
    -cgetmethod _g_./macRange/mtu \
    -readonly false
  method _c_./macRange/mtu {t v} { $self _configure_relative ./macRange -mtu $v }
  method _g_./macRange/mtu {t} { $self _cget_relative ./macRange -mtu }
  # multiplier 
  method _m_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_mtu }
  
  option -mac_range_enabled \
    -configuremethod _c_./macRange/enabled \
    -cgetmethod _g_./macRange/enabled \
    -readonly false
  method _c_./macRange/enabled {t v} { $self _configure_relative ./macRange -enabled $v }
  method _g_./macRange/enabled {t} { $self _cget_relative ./macRange -enabled }
  option -vic_client_range_prov_info_tlvs \
    -configuremethod _c_./vicClientRange/provInfoTlvs \
    -cgetmethod _g_./vicClientRange/provInfoTlvs \
    -readonly false
  method _c_./vicClientRange/provInfoTlvs {t v} { $self _configure_relative ./vicClientRange -prov_info_tlvs $v }
  method _g_./vicClientRange/provInfoTlvs {t} { $self _cget_relative ./vicClientRange -prov_info_tlvs }
  option -vic_client_range_object_id \
    -configuremethod _c_./vicClientRange/objectId \
    -cgetmethod _g_./vicClientRange/objectId \
    -readonly false
  method _c_./vicClientRange/objectId {t v} { $self _configure_relative ./vicClientRange -object_id $v }
  method _g_./vicClientRange/objectId {t} { $self _cget_relative ./vicClientRange -object_id }
  # multiplier 
  method _m_vic_client_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_object_id }
  
  option -vic_client_range_macs_per_vif \
    -configuremethod _c_./vicClientRange/macsPerVif \
    -cgetmethod _g_./vicClientRange/macsPerVif \
    -readonly false
  method _c_./vicClientRange/macsPerVif {t v} { $self _configure_relative ./vicClientRange -macs_per_vif $v }
  method _g_./vicClientRange/macsPerVif {t} { $self _cget_relative ./vicClientRange -macs_per_vif }
  # multiplier 
  method _m_vic_client_range_macs_per_vif {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_macs_per_vif }
  
  option -vic_client_range_channel_id_start \
    -configuremethod _c_./vicClientRange/channelIdStart \
    -cgetmethod _g_./vicClientRange/channelIdStart \
    -readonly false
  method _c_./vicClientRange/channelIdStart {t v} { $self _configure_relative ./vicClientRange -channel_id_start $v }
  method _g_./vicClientRange/channelIdStart {t} { $self _cget_relative ./vicClientRange -channel_id_start }
  # multiplier 
  method _m_vic_client_range_channel_id_start {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_channel_id_start }
  
  option -vic_client_range_prov_info_oui \
    -configuremethod _c_./vicClientRange/provInfoOui \
    -cgetmethod _g_./vicClientRange/provInfoOui \
    -readonly false
  method _c_./vicClientRange/provInfoOui {t v} { $self _configure_relative ./vicClientRange -prov_info_oui $v }
  method _g_./vicClientRange/provInfoOui {t} { $self _cget_relative ./vicClientRange -prov_info_oui }
  # multiplier 
  method _m_vic_client_range_prov_info_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_prov_info_oui }
  
  option -vic_client_range_name \
    -configuremethod _c_./vicClientRange/name \
    -cgetmethod _g_./vicClientRange/name \
    -readonly false
  method _c_./vicClientRange/name {t v} { $self _configure_relative ./vicClientRange -name $v }
  method _g_./vicClientRange/name {t} { $self _cget_relative ./vicClientRange -name }
  # multiplier 
  method _m_vic_client_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_name }
  
  option -vic_client_range_vif_active \
    -configuremethod _c_./vicClientRange/vifActive \
    -cgetmethod _g_./vicClientRange/vifActive \
    -readonly false
  method _c_./vicClientRange/vifActive {t v} { $self _configure_relative ./vicClientRange -vif_active $v }
  method _g_./vicClientRange/vifActive {t} { $self _cget_relative ./vicClientRange -vif_active }
  option -vic_client_range_tlv_offset \
    -configuremethod _c_./vicClientRange/tlvOffset \
    -cgetmethod _g_./vicClientRange/tlvOffset \
    -readonly false
  method _c_./vicClientRange/tlvOffset {t v} { $self _configure_relative ./vicClientRange -tlv_offset $v }
  method _g_./vicClientRange/tlvOffset {t} { $self _cget_relative ./vicClientRange -tlv_offset }
  # multiplier 
  method _m_vic_client_range_tlv_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_tlv_offset }
  
  option -vic_client_range_prov_info_type \
    -configuremethod _c_./vicClientRange/provInfoType \
    -cgetmethod _g_./vicClientRange/provInfoType \
    -readonly false
  method _c_./vicClientRange/provInfoType {t v} { $self _configure_relative ./vicClientRange -prov_info_type $v }
  method _g_./vicClientRange/provInfoType {t} { $self _cget_relative ./vicClientRange -prov_info_type }
  # multiplier 
  method _m_vic_client_range_prov_info_type {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_prov_info_type }
  
  option -vic_client_range_enabled \
    -configuremethod _c_./vicClientRange/enabled \
    -cgetmethod _g_./vicClientRange/enabled \
    -readonly false
  method _c_./vicClientRange/enabled {t v} { $self _configure_relative ./vicClientRange -enabled $v }
  method _g_./vicClientRange/enabled {t} { $self _cget_relative ./vicClientRange -enabled }
  option -vic_client_range_channel_id_increment \
    -configuremethod _c_./vicClientRange/channelIdIncrement \
    -cgetmethod _g_./vicClientRange/channelIdIncrement \
    -readonly false
  method _c_./vicClientRange/channelIdIncrement {t v} { $self _configure_relative ./vicClientRange -channel_id_increment $v }
  method _g_./vicClientRange/channelIdIncrement {t} { $self _cget_relative ./vicClientRange -channel_id_increment }
  # multiplier 
  method _m_vic_client_range_channel_id_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_channel_id_increment }
  
  option -ip_range_count \
    -configuremethod _c_./ipRange/count \
    -cgetmethod _g_./ipRange/count \
    -readonly false
  method _c_./ipRange/count {t v} { $self _configure_relative ./ipRange -count $v }
  method _g_./ipRange/count {t} { $self _cget_relative ./ipRange -count }
  # multiplier 
  method _m_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_count }
  
  option -ip_range_ip_type \
    -configuremethod _c_./ipRange/ipType \
    -cgetmethod _g_./ipRange/ipType \
    -readonly false
  method _c_./ipRange/ipType {t v} { $self _configure_relative ./ipRange -ip_type $v }
  method _g_./ipRange/ipType {t} { $self _cget_relative ./ipRange -ip_type }
  # multiplier 
  method _m_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_type }
  
  option -ip_range_enabled \
    -configuremethod _c_./ipRange/enabled \
    -cgetmethod _g_./ipRange/enabled \
    -readonly false
  method _c_./ipRange/enabled {t v} { $self _configure_relative ./ipRange -enabled $v }
  method _g_./ipRange/enabled {t} { $self _cget_relative ./ipRange -enabled }
  option -ip_range_gateway_increment_mode \
    -configuremethod _c_./ipRange/gatewayIncrementMode \
    -cgetmethod _g_./ipRange/gatewayIncrementMode \
    -readonly false
  method _c_./ipRange/gatewayIncrementMode {t v} { $self _configure_relative ./ipRange -gateway_increment_mode $v }
  method _g_./ipRange/gatewayIncrementMode {t} { $self _cget_relative ./ipRange -gateway_increment_mode }
  # multiplier 
  method _m_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment_mode }
  
  option -ip_range_enable_gateway_arp \
    -configuremethod _c_./ipRange/enableGatewayArp \
    -cgetmethod _g_./ipRange/enableGatewayArp \
    -readonly false
  method _c_./ipRange/enableGatewayArp {t v} { $self _configure_relative ./ipRange -enable_gateway_arp $v }
  method _g_./ipRange/enableGatewayArp {t} { $self _cget_relative ./ipRange -enable_gateway_arp }
  option -ip_range_ip_address \
    -configuremethod _c_./ipRange/ipAddress \
    -cgetmethod _g_./ipRange/ipAddress \
    -readonly false
  method _c_./ipRange/ipAddress {t v} { $self _configure_relative ./ipRange -ip_address $v }
  method _g_./ipRange/ipAddress {t} { $self _cget_relative ./ipRange -ip_address }
  # multiplier 
  method _m_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_ip_address }
  
  option -ip_range_gateway_increment \
    -configuremethod _c_./ipRange/gatewayIncrement \
    -cgetmethod _g_./ipRange/gatewayIncrement \
    -readonly false
  method _c_./ipRange/gatewayIncrement {t v} { $self _configure_relative ./ipRange -gateway_increment $v }
  method _g_./ipRange/gatewayIncrement {t} { $self _cget_relative ./ipRange -gateway_increment }
  # multiplier 
  method _m_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_increment }
  
  option -ip_range_increment_by \
    -configuremethod _c_./ipRange/incrementBy \
    -cgetmethod _g_./ipRange/incrementBy \
    -readonly false
  method _c_./ipRange/incrementBy {t v} { $self _configure_relative ./ipRange -increment_by $v }
  method _g_./ipRange/incrementBy {t} { $self _cget_relative ./ipRange -increment_by }
  # multiplier 
  method _m_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_increment_by }
  
  option -ip_range_gateway_address \
    -configuremethod _c_./ipRange/gatewayAddress \
    -cgetmethod _g_./ipRange/gatewayAddress \
    -readonly false
  method _c_./ipRange/gatewayAddress {t v} { $self _configure_relative ./ipRange -gateway_address $v }
  method _g_./ipRange/gatewayAddress {t} { $self _cget_relative ./ipRange -gateway_address }
  # multiplier 
  method _m_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_gateway_address }
  
  option -ip_range_name \
    -configuremethod _c_./ipRange/name \
    -cgetmethod _g_./ipRange/name \
    -readonly false
  method _c_./ipRange/name {t v} { $self _configure_relative ./ipRange -name $v }
  method _g_./ipRange/name {t} { $self _cget_relative ./ipRange -name }
  # multiplier 
  method _m_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_name }
  
  option -ip_range_mss \
    -configuremethod _c_./ipRange/mss \
    -cgetmethod _g_./ipRange/mss \
    -readonly false
  method _c_./ipRange/mss {t v} { $self _configure_relative ./ipRange -mss $v }
  method _g_./ipRange/mss {t} { $self _cget_relative ./ipRange -mss }
  # multiplier 
  method _m_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_mss }
  
  option -ip_range_object_id \
    -configuremethod _c_./ipRange/objectId \
    -cgetmethod _g_./ipRange/objectId \
    -readonly false
  method _c_./ipRange/objectId {t v} { $self _configure_relative ./ipRange -object_id $v }
  method _g_./ipRange/objectId {t} { $self _cget_relative ./ipRange -object_id }
  # multiplier 
  method _m_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ip_range_object_id }
  
  option -ip_range_prefix \
    -configuremethod _c_./ipRange/prefix \
    -cgetmethod _g_./ipRange/prefix \
    -readonly false
  method _c_./ipRange/prefix {t v} { $self _configure_relative ./ipRange -prefix $v }
  method _g_./ipRange/prefix {t} { $self _cget_relative ./ipRange -prefix }
  # multiplier 
  method _m_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_range_prefix }
  
  option -ip_range_auto_mac_generation \
    -configuremethod _c_./ipRange/autoMacGeneration \
    -cgetmethod _g_./ipRange/autoMacGeneration \
    -readonly false
  method _c_./ipRange/autoMacGeneration {t v} { $self _configure_relative ./ipRange -auto_mac_generation $v }
  method _g_./ipRange/autoMacGeneration {t} { $self _cget_relative ./ipRange -auto_mac_generation }
  option -ptp_range_over_ip_master_mac_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterMacIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_inter_entity }
  
  option -ptp_range_over_ip_communication_mode \
    -configuremethod _c_./ptpRangeOverIp/communicationMode \
    -cgetmethod _g_./ptpRangeOverIp/communicationMode \
    -readonly false
  method _c_./ptpRangeOverIp/communicationMode {t v} { $self _configure_relative ./ptpRangeOverIp -communication_mode $v }
  method _g_./ptpRangeOverIp/communicationMode {t} { $self _cget_relative ./ptpRangeOverIp -communication_mode }
  # multiplier 
  method _m_ptp_range_over_ip_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_communication_mode }
  
  option -ptp_range_over_ip_send_announce_multicast \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceMulticast \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceMulticast \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceMulticast {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_multicast $v }
  method _g_./ptpRangeOverIp/sendAnnounceMulticast {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_multicast }
  option -ptp_range_over_ip_follow_up_delay \
    -configuremethod _c_./ptpRangeOverIp/followUpDelay \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelay \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelay {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay $v }
  method _g_./ptpRangeOverIp/followUpDelay {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay }
  
  option -ptp_range_over_ip_domain \
    -configuremethod _c_./ptpRangeOverIp/domain \
    -cgetmethod _g_./ptpRangeOverIp/domain \
    -readonly false
  method _c_./ptpRangeOverIp/domain {t v} { $self _configure_relative ./ptpRangeOverIp -domain $v }
  method _g_./ptpRangeOverIp/domain {t} { $self _cget_relative ./ptpRangeOverIp -domain }
  # multiplier 
  method _m_ptp_range_over_ip_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_domain }
  
  option -ptp_range_over_ip_announce_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/announceDropRate \
    -cgetmethod _g_./ptpRangeOverIp/announceDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/announceDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -announce_drop_rate $v }
  method _g_./ptpRangeOverIp/announceDropRate {t} { $self _cget_relative ./ptpRangeOverIp -announce_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_drop_rate }
  
  option -ptp_range_over_ip_client_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_increment_by $v }
  method _g_./ptpRangeOverIp/clientIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_increment_by }
  
  option -ptp_range_over_ip_renewal_invited \
    -configuremethod _c_./ptpRangeOverIp/renewalInvited \
    -cgetmethod _g_./ptpRangeOverIp/renewalInvited \
    -readonly false
  method _c_./ptpRangeOverIp/renewalInvited {t v} { $self _configure_relative ./ptpRangeOverIp -renewal_invited $v }
  method _g_./ptpRangeOverIp/renewalInvited {t} { $self _cget_relative ./ptpRangeOverIp -renewal_invited }
  option -ptp_range_over_ip_port_number_increment \
    -configuremethod _c_./ptpRangeOverIp/portNumberIncrement \
    -cgetmethod _g_./ptpRangeOverIp/portNumberIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/portNumberIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -port_number_increment $v }
  method _g_./ptpRangeOverIp/portNumberIncrement {t} { $self _cget_relative ./ptpRangeOverIp -port_number_increment }
  # multiplier 
  method _m_ptp_range_over_ip_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number_increment }
  
  option -ptp_range_over_ip_use_clock_identity \
    -configuremethod _c_./ptpRangeOverIp/useClockIdentity \
    -cgetmethod _g_./ptpRangeOverIp/useClockIdentity \
    -readonly false
  method _c_./ptpRangeOverIp/useClockIdentity {t v} { $self _configure_relative ./ptpRangeOverIp -use_clock_identity $v }
  method _g_./ptpRangeOverIp/useClockIdentity {t} { $self _cget_relative ./ptpRangeOverIp -use_clock_identity }
  option -ptp_range_over_ip_priority1 \
    -configuremethod _c_./ptpRangeOverIp/priority1 \
    -cgetmethod _g_./ptpRangeOverIp/priority1 \
    -readonly false
  method _c_./ptpRangeOverIp/priority1 {t v} { $self _configure_relative ./ptpRangeOverIp -priority1 $v }
  method _g_./ptpRangeOverIp/priority1 {t} { $self _cget_relative ./ptpRangeOverIp -priority1 }
  # multiplier 
  method _m_ptp_range_over_ip_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority1 }
  
  option -ptp_range_over_ip_use_alternate_master_flag \
    -configuremethod _c_./ptpRangeOverIp/useAlternateMasterFlag \
    -cgetmethod _g_./ptpRangeOverIp/useAlternateMasterFlag \
    -readonly false
  method _c_./ptpRangeOverIp/useAlternateMasterFlag {t v} { $self _configure_relative ./ptpRangeOverIp -use_alternate_master_flag $v }
  method _g_./ptpRangeOverIp/useAlternateMasterFlag {t} { $self _cget_relative ./ptpRangeOverIp -use_alternate_master_flag }
  option -ptp_range_over_ip_object_id \
    -configuremethod _c_./ptpRangeOverIp/objectId \
    -cgetmethod _g_./ptpRangeOverIp/objectId \
    -readonly false
  method _c_./ptpRangeOverIp/objectId {t v} { $self _configure_relative ./ptpRangeOverIp -object_id $v }
  method _g_./ptpRangeOverIp/objectId {t} { $self _cget_relative ./ptpRangeOverIp -object_id }
  # multiplier 
  method _m_ptp_range_over_ip_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_object_id }
  
  option -ptp_range_over_ip_delay_resp_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/delayRespReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/delayRespReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_receipt_timeout $v }
  method _g_./ptpRangeOverIp/delayRespReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_receipt_timeout }
  
  option -ptp_range_over_ip_announce_frequency_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceFrequencyTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceFrequencyTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceFrequencyTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_frequency_traceable $v }
  method _g_./ptpRangeOverIp/announceFrequencyTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_frequency_traceable }
  option -ptp_range_over_ip_priority2 \
    -configuremethod _c_./ptpRangeOverIp/priority2 \
    -cgetmethod _g_./ptpRangeOverIp/priority2 \
    -readonly false
  method _c_./ptpRangeOverIp/priority2 {t v} { $self _configure_relative ./ptpRangeOverIp -priority2 $v }
  method _g_./ptpRangeOverIp/priority2 {t} { $self _cget_relative ./ptpRangeOverIp -priority2 }
  # multiplier 
  method _m_ptp_range_over_ip_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_priority2 }
  
  option -ptp_range_over_ip_announce_current_utc_offset_valid \
    -configuremethod _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -cgetmethod _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid \
    -readonly false
  method _c_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t v} { $self _configure_relative ./ptpRangeOverIp -announce_current_utc_offset_valid $v }
  method _g_./ptpRangeOverIp/announceCurrentUtcOffsetValid {t} { $self _cget_relative ./ptpRangeOverIp -announce_current_utc_offset_valid }
  option -ptp_range_over_ip_client_mac_address \
    -configuremethod _c_./ptpRangeOverIp/clientMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_address $v }
  method _g_./ptpRangeOverIp/clientMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_address }
  
  option -ptp_range_over_ip_time_source \
    -configuremethod _c_./ptpRangeOverIp/timeSource \
    -cgetmethod _g_./ptpRangeOverIp/timeSource \
    -readonly false
  method _c_./ptpRangeOverIp/timeSource {t v} { $self _configure_relative ./ptpRangeOverIp -time_source $v }
  method _g_./ptpRangeOverIp/timeSource {t} { $self _cget_relative ./ptpRangeOverIp -time_source }
  # multiplier 
  method _m_ptp_range_over_ip_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_time_source }
  
  option -ptp_range_over_ip_steps_removed \
    -configuremethod _c_./ptpRangeOverIp/stepsRemoved \
    -cgetmethod _g_./ptpRangeOverIp/stepsRemoved \
    -readonly false
  method _c_./ptpRangeOverIp/stepsRemoved {t v} { $self _configure_relative ./ptpRangeOverIp -steps_removed $v }
  method _g_./ptpRangeOverIp/stepsRemoved {t} { $self _cget_relative ./ptpRangeOverIp -steps_removed }
  # multiplier 
  method _m_ptp_range_over_ip_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_steps_removed }
  
  option -ptp_range_over_ip_clock_class \
    -configuremethod _c_./ptpRangeOverIp/clockClass \
    -cgetmethod _g_./ptpRangeOverIp/clockClass \
    -readonly false
  method _c_./ptpRangeOverIp/clockClass {t v} { $self _configure_relative ./ptpRangeOverIp -clock_class $v }
  method _g_./ptpRangeOverIp/clockClass {t} { $self _cget_relative ./ptpRangeOverIp -clock_class }
  # multiplier 
  method _m_ptp_range_over_ip_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_class }
  
  option -ptp_range_over_ip_request_attempts \
    -configuremethod _c_./ptpRangeOverIp/requestAttempts \
    -cgetmethod _g_./ptpRangeOverIp/requestAttempts \
    -readonly false
  method _c_./ptpRangeOverIp/requestAttempts {t v} { $self _configure_relative ./ptpRangeOverIp -request_attempts $v }
  method _g_./ptpRangeOverIp/requestAttempts {t} { $self _cget_relative ./ptpRangeOverIp -request_attempts }
  # multiplier 
  method _m_ptp_range_over_ip_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_attempts }
  
  option -ptp_range_over_ip_follow_up_bad_crc_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpBadCrcRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpBadCrcRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpBadCrcRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_bad_crc_rate $v }
  method _g_./ptpRangeOverIp/followUpBadCrcRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_bad_crc_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_bad_crc_rate }
  
  option -ptp_range_over_ip_delay_response_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/delayResponseDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_sync_interval \
    -configuremethod _c_./ptpRangeOverIp/logSyncInterval \
    -cgetmethod _g_./ptpRangeOverIp/logSyncInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logSyncInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_sync_interval $v }
  method _g_./ptpRangeOverIp/logSyncInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_sync_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_sync_interval }
  
  option -ptp_range_over_ip_master_count \
    -configuremethod _c_./ptpRangeOverIp/masterCount \
    -cgetmethod _g_./ptpRangeOverIp/masterCount \
    -readonly false
  method _c_./ptpRangeOverIp/masterCount {t v} { $self _configure_relative ./ptpRangeOverIp -master_count $v }
  method _g_./ptpRangeOverIp/masterCount {t} { $self _cget_relative ./ptpRangeOverIp -master_count }
  # multiplier 
  method _m_ptp_range_over_ip_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_count }
  
  option -ptp_range_over_ip_residence_time \
    -configuremethod _c_./ptpRangeOverIp/residenceTime \
    -cgetmethod _g_./ptpRangeOverIp/residenceTime \
    -readonly false
  method _c_./ptpRangeOverIp/residenceTime {t v} { $self _configure_relative ./ptpRangeOverIp -residence_time $v }
  method _g_./ptpRangeOverIp/residenceTime {t} { $self _cget_relative ./ptpRangeOverIp -residence_time }
  # multiplier 
  method _m_ptp_range_over_ip_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_residence_time }
  
  option -ptp_range_over_ip_signal_interval \
    -configuremethod _c_./ptpRangeOverIp/signalInterval \
    -cgetmethod _g_./ptpRangeOverIp/signalInterval \
    -readonly false
  method _c_./ptpRangeOverIp/signalInterval {t v} { $self _configure_relative ./ptpRangeOverIp -signal_interval $v }
  method _g_./ptpRangeOverIp/signalInterval {t} { $self _cget_relative ./ptpRangeOverIp -signal_interval }
  # multiplier 
  method _m_ptp_range_over_ip_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_interval }
  
  option -ptp_range_over_ip_delay_mechanism \
    -configuremethod _c_./ptpRangeOverIp/delayMechanism \
    -cgetmethod _g_./ptpRangeOverIp/delayMechanism \
    -readonly false
  method _c_./ptpRangeOverIp/delayMechanism {t v} { $self _configure_relative ./ptpRangeOverIp -delay_mechanism $v }
  method _g_./ptpRangeOverIp/delayMechanism {t} { $self _cget_relative ./ptpRangeOverIp -delay_mechanism }
  # multiplier 
  method _m_ptp_range_over_ip_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_mechanism }
  
  option -ptp_range_over_ip_strict_grant \
    -configuremethod _c_./ptpRangeOverIp/strictGrant \
    -cgetmethod _g_./ptpRangeOverIp/strictGrant \
    -readonly false
  method _c_./ptpRangeOverIp/strictGrant {t v} { $self _configure_relative ./ptpRangeOverIp -strict_grant $v }
  method _g_./ptpRangeOverIp/strictGrant {t} { $self _cget_relative ./ptpRangeOverIp -strict_grant }
  option -ptp_range_over_ip_sync_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/syncDropRate \
    -cgetmethod _g_./ptpRangeOverIp/syncDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/syncDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -sync_drop_rate $v }
  method _g_./ptpRangeOverIp/syncDropRate {t} { $self _cget_relative ./ptpRangeOverIp -sync_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_drop_rate }
  
  option -ptp_range_over_ip_drop_signal_req_sync \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqSync \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqSync \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqSync {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_sync $v }
  method _g_./ptpRangeOverIp/dropSignalReqSync {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_sync }
  option -ptp_range_over_ip_clock_increment \
    -configuremethod _c_./ptpRangeOverIp/clockIncrement \
    -cgetmethod _g_./ptpRangeOverIp/clockIncrement \
    -readonly false
  method _c_./ptpRangeOverIp/clockIncrement {t v} { $self _configure_relative ./ptpRangeOverIp -clock_increment $v }
  method _g_./ptpRangeOverIp/clockIncrement {t} { $self _cget_relative ./ptpRangeOverIp -clock_increment }
  # multiplier 
  method _m_ptp_range_over_ip_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_increment }
  
  option -ptp_range_over_ip_announce_ptp_timescale \
    -configuremethod _c_./ptpRangeOverIp/announcePtpTimescale \
    -cgetmethod _g_./ptpRangeOverIp/announcePtpTimescale \
    -readonly false
  method _c_./ptpRangeOverIp/announcePtpTimescale {t v} { $self _configure_relative ./ptpRangeOverIp -announce_ptp_timescale $v }
  method _g_./ptpRangeOverIp/announcePtpTimescale {t} { $self _cget_relative ./ptpRangeOverIp -announce_ptp_timescale }
  option -ptp_range_over_ip_signal_unicast_handling \
    -configuremethod _c_./ptpRangeOverIp/signalUnicastHandling \
    -cgetmethod _g_./ptpRangeOverIp/signalUnicastHandling \
    -readonly false
  method _c_./ptpRangeOverIp/signalUnicastHandling {t v} { $self _configure_relative ./ptpRangeOverIp -signal_unicast_handling $v }
  method _g_./ptpRangeOverIp/signalUnicastHandling {t} { $self _cget_relative ./ptpRangeOverIp -signal_unicast_handling }
  # multiplier 
  method _m_ptp_range_over_ip_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_signal_unicast_handling }
  
  option -ptp_range_over_ip_enabled \
    -configuremethod _c_./ptpRangeOverIp/enabled \
    -cgetmethod _g_./ptpRangeOverIp/enabled \
    -readonly false
  method _c_./ptpRangeOverIp/enabled {t v} { $self _configure_relative ./ptpRangeOverIp -enabled $v }
  method _g_./ptpRangeOverIp/enabled {t} { $self _cget_relative ./ptpRangeOverIp -enabled }
  option -ptp_range_over_ip_timestamp_offset \
    -configuremethod _c_./ptpRangeOverIp/timestampOffset \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffset \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffset {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset $v }
  method _g_./ptpRangeOverIp/timestampOffset {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset }
  
  option -ptp_range_over_ip_master_ip_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_by $v }
  method _g_./ptpRangeOverIp/masterIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_by }
  
  option -ptp_range_over_ip_request_interval \
    -configuremethod _c_./ptpRangeOverIp/requestInterval \
    -cgetmethod _g_./ptpRangeOverIp/requestInterval \
    -readonly false
  method _c_./ptpRangeOverIp/requestInterval {t v} { $self _configure_relative ./ptpRangeOverIp -request_interval $v }
  method _g_./ptpRangeOverIp/requestInterval {t} { $self _cget_relative ./ptpRangeOverIp -request_interval }
  # multiplier 
  method _m_ptp_range_over_ip_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_interval }
  
  option -ptp_range_over_ip_ip_tos \
    -configuremethod _c_./ptpRangeOverIp/ipTos \
    -cgetmethod _g_./ptpRangeOverIp/ipTos \
    -readonly false
  method _c_./ptpRangeOverIp/ipTos {t v} { $self _configure_relative ./ptpRangeOverIp -ip_tos $v }
  method _g_./ptpRangeOverIp/ipTos {t} { $self _cget_relative ./ptpRangeOverIp -ip_tos }
  # multiplier 
  method _m_ptp_range_over_ip_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_ip_tos }
  
  option -ptp_range_over_ip_request_holddown \
    -configuremethod _c_./ptpRangeOverIp/requestHolddown \
    -cgetmethod _g_./ptpRangeOverIp/requestHolddown \
    -readonly false
  method _c_./ptpRangeOverIp/requestHolddown {t v} { $self _configure_relative ./ptpRangeOverIp -request_holddown $v }
  method _g_./ptpRangeOverIp/requestHolddown {t} { $self _cget_relative ./ptpRangeOverIp -request_holddown }
  # multiplier 
  method _m_ptp_range_over_ip_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_request_holddown }
  
  option -ptp_range_over_ip_client_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/clientMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/clientMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/clientMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -client_mac_increment_by $v }
  method _g_./ptpRangeOverIp/clientMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -client_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_mac_increment_by }
  
  option -ptp_range_over_ip_name \
    -configuremethod _c_./ptpRangeOverIp/name \
    -cgetmethod _g_./ptpRangeOverIp/name \
    -readonly false
  method _c_./ptpRangeOverIp/name {t v} { $self _configure_relative ./ptpRangeOverIp -name $v }
  method _g_./ptpRangeOverIp/name {t} { $self _cget_relative ./ptpRangeOverIp -name }
  # multiplier 
  method _m_ptp_range_over_ip_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_name }
  
  option -ptp_range_over_ip_drop_signal_req_announce \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqAnnounce \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqAnnounce \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqAnnounce {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_announce $v }
  method _g_./ptpRangeOverIp/dropSignalReqAnnounce {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_announce }
  option -ptp_range_over_ip_master_ip_address \
    -configuremethod _c_./ptpRangeOverIp/masterIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_address $v }
  method _g_./ptpRangeOverIp/masterIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_address }
  
  option -ptp_range_over_ip_first_clock \
    -configuremethod _c_./ptpRangeOverIp/firstClock \
    -cgetmethod _g_./ptpRangeOverIp/firstClock \
    -readonly false
  method _c_./ptpRangeOverIp/firstClock {t v} { $self _configure_relative ./ptpRangeOverIp -first_clock $v }
  method _g_./ptpRangeOverIp/firstClock {t} { $self _cget_relative ./ptpRangeOverIp -first_clock }
  # multiplier 
  method _m_ptp_range_over_ip_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_first_clock }
  
  option -ptp_range_over_ip_master_mac_increment_by \
    -configuremethod _c_./ptpRangeOverIp/masterMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverIp/masterMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_increment_by $v }
  method _g_./ptpRangeOverIp/masterMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_increment_by }
  
  option -ptp_range_over_ip_send_cancel_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendCancelTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendCancelTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendCancelTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_cancel_tlv $v }
  method _g_./ptpRangeOverIp/sendCancelTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_cancel_tlv }
  option -ptp_range_over_ip_port_number \
    -configuremethod _c_./ptpRangeOverIp/portNumber \
    -cgetmethod _g_./ptpRangeOverIp/portNumber \
    -readonly false
  method _c_./ptpRangeOverIp/portNumber {t v} { $self _configure_relative ./ptpRangeOverIp -port_number $v }
  method _g_./ptpRangeOverIp/portNumber {t} { $self _cget_relative ./ptpRangeOverIp -port_number }
  # multiplier 
  method _m_ptp_range_over_ip_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_port_number }
  
  option -ptp_range_over_ip_client_ip_address \
    -configuremethod _c_./ptpRangeOverIp/clientIpAddress \
    -cgetmethod _g_./ptpRangeOverIp/clientIpAddress \
    -readonly false
  method _c_./ptpRangeOverIp/clientIpAddress {t v} { $self _configure_relative ./ptpRangeOverIp -client_ip_address $v }
  method _g_./ptpRangeOverIp/clientIpAddress {t} { $self _cget_relative ./ptpRangeOverIp -client_ip_address }
  # multiplier 
  method _m_ptp_range_over_ip_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_ip_address }
  
  option -ptp_range_over_ip_announce_leap59 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap59 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap59 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap59 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap59 $v }
  method _g_./ptpRangeOverIp/announceLeap59 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap59 }
  option -ptp_range_over_ip_send_announce_tlv \
    -configuremethod _c_./ptpRangeOverIp/sendAnnounceTlv \
    -cgetmethod _g_./ptpRangeOverIp/sendAnnounceTlv \
    -readonly false
  method _c_./ptpRangeOverIp/sendAnnounceTlv {t v} { $self _configure_relative ./ptpRangeOverIp -send_announce_tlv $v }
  method _g_./ptpRangeOverIp/sendAnnounceTlv {t} { $self _cget_relative ./ptpRangeOverIp -send_announce_tlv }
  option -ptp_range_over_ip_sync_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/syncReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/syncReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/syncReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -sync_receipt_timeout $v }
  method _g_./ptpRangeOverIp/syncReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -sync_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_sync_receipt_timeout }
  
  option -ptp_range_over_ip_announce_leap61 \
    -configuremethod _c_./ptpRangeOverIp/announceLeap61 \
    -cgetmethod _g_./ptpRangeOverIp/announceLeap61 \
    -readonly false
  method _c_./ptpRangeOverIp/announceLeap61 {t v} { $self _configure_relative ./ptpRangeOverIp -announce_leap61 $v }
  method _g_./ptpRangeOverIp/announceLeap61 {t} { $self _cget_relative ./ptpRangeOverIp -announce_leap61 }
  option -ptp_range_over_ip_grant_delay_resp_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantDelayRespDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantDelayRespDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval $v }
  method _g_./ptpRangeOverIp/grantDelayRespDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_delay_resp_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_delay_resp_duration_interval }
  
  option -ptp_range_over_ip_timestamp_offset_variation \
    -configuremethod _c_./ptpRangeOverIp/timestampOffsetVariation \
    -cgetmethod _g_./ptpRangeOverIp/timestampOffsetVariation \
    -readonly false
  method _c_./ptpRangeOverIp/timestampOffsetVariation {t v} { $self _configure_relative ./ptpRangeOverIp -timestamp_offset_variation $v }
  method _g_./ptpRangeOverIp/timestampOffsetVariation {t} { $self _cget_relative ./ptpRangeOverIp -timestamp_offset_variation }
  # multiplier 
  method _m_ptp_range_over_ip_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_timestamp_offset_variation }
  
  option -ptp_range_over_ip_follow_up_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDropRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_drop_rate $v }
  method _g_./ptpRangeOverIp/followUpDropRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_drop_rate }
  
  option -ptp_range_over_ip_master_mac_address \
    -configuremethod _c_./ptpRangeOverIp/masterMacAddress \
    -cgetmethod _g_./ptpRangeOverIp/masterMacAddress \
    -readonly false
  method _c_./ptpRangeOverIp/masterMacAddress {t v} { $self _configure_relative ./ptpRangeOverIp -master_mac_address $v }
  method _g_./ptpRangeOverIp/masterMacAddress {t} { $self _cget_relative ./ptpRangeOverIp -master_mac_address }
  # multiplier 
  method _m_ptp_range_over_ip_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_mac_address }
  
  option -ptp_range_over_ip_drop_signal_req_delay_resp \
    -configuremethod _c_./ptpRangeOverIp/dropSignalReqDelayResp \
    -cgetmethod _g_./ptpRangeOverIp/dropSignalReqDelayResp \
    -readonly false
  method _c_./ptpRangeOverIp/dropSignalReqDelayResp {t v} { $self _configure_relative ./ptpRangeOverIp -drop_signal_req_delay_resp $v }
  method _g_./ptpRangeOverIp/dropSignalReqDelayResp {t} { $self _cget_relative ./ptpRangeOverIp -drop_signal_req_delay_resp }
  option -ptp_range_over_ip_grant_sync_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantSyncDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantSyncDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantSyncDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_sync_duration_interval $v }
  method _g_./ptpRangeOverIp/grantSyncDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_sync_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_sync_duration_interval }
  
  option -ptp_range_over_ip_learn_port_id \
    -configuremethod _c_./ptpRangeOverIp/learnPortId \
    -cgetmethod _g_./ptpRangeOverIp/learnPortId \
    -readonly false
  method _c_./ptpRangeOverIp/learnPortId {t v} { $self _configure_relative ./ptpRangeOverIp -learn_port_id $v }
  method _g_./ptpRangeOverIp/learnPortId {t} { $self _cget_relative ./ptpRangeOverIp -learn_port_id }
  option -ptp_range_over_ip_delay_response_delay \
    -configuremethod _c_./ptpRangeOverIp/delayResponseDelay \
    -cgetmethod _g_./ptpRangeOverIp/delayResponseDelay \
    -readonly false
  method _c_./ptpRangeOverIp/delayResponseDelay {t v} { $self _configure_relative ./ptpRangeOverIp -delay_response_delay $v }
  method _g_./ptpRangeOverIp/delayResponseDelay {t} { $self _cget_relative ./ptpRangeOverIp -delay_response_delay }
  # multiplier 
  method _m_ptp_range_over_ip_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_response_delay }
  
  option -ptp_range_over_ip_grant_unicast_duration_interval \
    -configuremethod _c_./ptpRangeOverIp/grantUnicastDurationInterval \
    -cgetmethod _g_./ptpRangeOverIp/grantUnicastDurationInterval \
    -readonly false
  method _c_./ptpRangeOverIp/grantUnicastDurationInterval {t v} { $self _configure_relative ./ptpRangeOverIp -grant_unicast_duration_interval $v }
  method _g_./ptpRangeOverIp/grantUnicastDurationInterval {t} { $self _cget_relative ./ptpRangeOverIp -grant_unicast_duration_interval }
  # multiplier 
  method _m_ptp_range_over_ip_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_grant_unicast_duration_interval }
  
  option -ptp_range_over_ip_follow_up_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverIp/followUpDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverIp/followUpDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverIp/followUpDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate $v }
  method _g_./ptpRangeOverIp/followUpDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverIp -follow_up_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_ip_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_follow_up_delay_insertion_rate }
  
  option -ptp_range_over_ip_log_delay_req_interval \
    -configuremethod _c_./ptpRangeOverIp/logDelayReqInterval \
    -cgetmethod _g_./ptpRangeOverIp/logDelayReqInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logDelayReqInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_delay_req_interval $v }
  method _g_./ptpRangeOverIp/logDelayReqInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_delay_req_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_delay_req_interval }
  
  option -ptp_range_over_ip_clock_accuracy \
    -configuremethod _c_./ptpRangeOverIp/clockAccuracy \
    -cgetmethod _g_./ptpRangeOverIp/clockAccuracy \
    -readonly false
  method _c_./ptpRangeOverIp/clockAccuracy {t v} { $self _configure_relative ./ptpRangeOverIp -clock_accuracy $v }
  method _g_./ptpRangeOverIp/clockAccuracy {t} { $self _cget_relative ./ptpRangeOverIp -clock_accuracy }
  # multiplier 
  method _m_ptp_range_over_ip_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_clock_accuracy }
  
  option -ptp_range_over_ip_client_count \
    -configuremethod _c_./ptpRangeOverIp/clientCount \
    -cgetmethod _g_./ptpRangeOverIp/clientCount \
    -readonly false
  method _c_./ptpRangeOverIp/clientCount {t v} { $self _configure_relative ./ptpRangeOverIp -client_count $v }
  method _g_./ptpRangeOverIp/clientCount {t} { $self _cget_relative ./ptpRangeOverIp -client_count }
  # multiplier 
  method _m_ptp_range_over_ip_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_client_count }
  
  option -ptp_range_over_ip_announce_time_traceable \
    -configuremethod _c_./ptpRangeOverIp/announceTimeTraceable \
    -cgetmethod _g_./ptpRangeOverIp/announceTimeTraceable \
    -readonly false
  method _c_./ptpRangeOverIp/announceTimeTraceable {t v} { $self _configure_relative ./ptpRangeOverIp -announce_time_traceable $v }
  method _g_./ptpRangeOverIp/announceTimeTraceable {t} { $self _cget_relative ./ptpRangeOverIp -announce_time_traceable }
  option -ptp_range_over_ip_step_mode \
    -configuremethod _c_./ptpRangeOverIp/stepMode \
    -cgetmethod _g_./ptpRangeOverIp/stepMode \
    -readonly false
  method _c_./ptpRangeOverIp/stepMode {t v} { $self _configure_relative ./ptpRangeOverIp -step_mode $v }
  method _g_./ptpRangeOverIp/stepMode {t} { $self _cget_relative ./ptpRangeOverIp -step_mode }
  # multiplier 
  method _m_ptp_range_over_ip_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_step_mode }
  
  option -ptp_range_over_ip_master_ip_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverIp/masterIpIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverIp/masterIpIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverIp -master_ip_increment_inter_entity $v }
  method _g_./ptpRangeOverIp/masterIpIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverIp -master_ip_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_ip_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_ip_master_ip_increment_inter_entity }
  
  option -ptp_range_over_ip_delay_resp_drop_rate \
    -configuremethod _c_./ptpRangeOverIp/delayRespDropRate \
    -cgetmethod _g_./ptpRangeOverIp/delayRespDropRate \
    -readonly false
  method _c_./ptpRangeOverIp/delayRespDropRate {t v} { $self _configure_relative ./ptpRangeOverIp -delay_resp_drop_rate $v }
  method _g_./ptpRangeOverIp/delayRespDropRate {t} { $self _cget_relative ./ptpRangeOverIp -delay_resp_drop_rate }
  # multiplier 
  method _m_ptp_range_over_ip_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_delay_resp_drop_rate }
  
  option -ptp_range_over_ip_announce_receipt_timeout \
    -configuremethod _c_./ptpRangeOverIp/announceReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverIp/announceReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverIp/announceReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverIp -announce_receipt_timeout $v }
  method _g_./ptpRangeOverIp/announceReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverIp -announce_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_ip_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_announce_receipt_timeout }
  
  option -ptp_range_over_ip_rx_calibration \
    -configuremethod _c_./ptpRangeOverIp/rxCalibration \
    -cgetmethod _g_./ptpRangeOverIp/rxCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/rxCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -rx_calibration $v }
  method _g_./ptpRangeOverIp/rxCalibration {t} { $self _cget_relative ./ptpRangeOverIp -rx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_rx_calibration }
  
  option -ptp_range_over_ip_tx_calibration \
    -configuremethod _c_./ptpRangeOverIp/txCalibration \
    -cgetmethod _g_./ptpRangeOverIp/txCalibration \
    -readonly false
  method _c_./ptpRangeOverIp/txCalibration {t v} { $self _configure_relative ./ptpRangeOverIp -tx_calibration $v }
  method _g_./ptpRangeOverIp/txCalibration {t} { $self _cget_relative ./ptpRangeOverIp -tx_calibration }
  # multiplier 
  method _m_ptp_range_over_ip_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_tx_calibration }
  
  option -ptp_range_over_ip_log_announce_interval \
    -configuremethod _c_./ptpRangeOverIp/logAnnounceInterval \
    -cgetmethod _g_./ptpRangeOverIp/logAnnounceInterval \
    -readonly false
  method _c_./ptpRangeOverIp/logAnnounceInterval {t v} { $self _configure_relative ./ptpRangeOverIp -log_announce_interval $v }
  method _g_./ptpRangeOverIp/logAnnounceInterval {t} { $self _cget_relative ./ptpRangeOverIp -log_announce_interval }
  # multiplier 
  method _m_ptp_range_over_ip_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_ip_log_announce_interval }
  
  option -igmp_querier_range_object_id \
    -configuremethod _c_./igmpQuerierRange/objectId \
    -cgetmethod _g_./igmpQuerierRange/objectId \
    -readonly false
  method _c_./igmpQuerierRange/objectId {t v} { $self _configure_relative ./igmpQuerierRange -object_id $v }
  method _g_./igmpQuerierRange/objectId {t} { $self _cget_relative ./igmpQuerierRange -object_id }
  # multiplier 
  method _m_igmp_querier_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_object_id }
  
  option -igmp_querier_range_specific_query_response_count \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseCount \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseCount \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseCount {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_count $v }
  method _g_./igmpQuerierRange/specificQueryResponseCount {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_count }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_count }
  
  option -igmp_querier_range_specific_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/specificQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/specificQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/specificQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -specific_query_response_interval $v }
  method _g_./igmpQuerierRange/specificQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -specific_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_specific_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_specific_query_response_interval }
  
  option -igmp_querier_range_general_query_response_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryResponseInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryResponseInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryResponseInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_response_interval $v }
  method _g_./igmpQuerierRange/generalQueryResponseInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_response_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_response_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_response_interval }
  
  option -igmp_querier_range_name \
    -configuremethod _c_./igmpQuerierRange/name \
    -cgetmethod _g_./igmpQuerierRange/name \
    -readonly false
  method _c_./igmpQuerierRange/name {t v} { $self _configure_relative ./igmpQuerierRange -name $v }
  method _g_./igmpQuerierRange/name {t} { $self _cget_relative ./igmpQuerierRange -name }
  # multiplier 
  method _m_igmp_querier_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_name }
  
  option -igmp_querier_range_router_alert \
    -configuremethod _c_./igmpQuerierRange/routerAlert \
    -cgetmethod _g_./igmpQuerierRange/routerAlert \
    -readonly false
  method _c_./igmpQuerierRange/routerAlert {t v} { $self _configure_relative ./igmpQuerierRange -router_alert $v }
  method _g_./igmpQuerierRange/routerAlert {t} { $self _cget_relative ./igmpQuerierRange -router_alert }
  option -igmp_querier_range_general_query_interval \
    -configuremethod _c_./igmpQuerierRange/generalQueryInterval \
    -cgetmethod _g_./igmpQuerierRange/generalQueryInterval \
    -readonly false
  method _c_./igmpQuerierRange/generalQueryInterval {t v} { $self _configure_relative ./igmpQuerierRange -general_query_interval $v }
  method _g_./igmpQuerierRange/generalQueryInterval {t} { $self _cget_relative ./igmpQuerierRange -general_query_interval }
  # multiplier 
  method _m_igmp_querier_range_general_query_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_general_query_interval }
  
  option -igmp_querier_range_robustness_variable \
    -configuremethod _c_./igmpQuerierRange/robustnessVariable \
    -cgetmethod _g_./igmpQuerierRange/robustnessVariable \
    -readonly false
  method _c_./igmpQuerierRange/robustnessVariable {t v} { $self _configure_relative ./igmpQuerierRange -robustness_variable $v }
  method _g_./igmpQuerierRange/robustnessVariable {t} { $self _cget_relative ./igmpQuerierRange -robustness_variable }
  # multiplier 
  method _m_igmp_querier_range_robustness_variable {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_robustness_variable }
  
  option -igmp_querier_range_startup_query_count \
    -configuremethod _c_./igmpQuerierRange/startupQueryCount \
    -cgetmethod _g_./igmpQuerierRange/startupQueryCount \
    -readonly false
  method _c_./igmpQuerierRange/startupQueryCount {t v} { $self _configure_relative ./igmpQuerierRange -startup_query_count $v }
  method _g_./igmpQuerierRange/startupQueryCount {t} { $self _cget_relative ./igmpQuerierRange -startup_query_count }
  # multiplier 
  method _m_igmp_querier_range_startup_query_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_querier_range_startup_query_count }
  
  option -igmp_querier_range_version \
    -configuremethod _c_./igmpQuerierRange/version \
    -cgetmethod _g_./igmpQuerierRange/version \
    -readonly false
  method _c_./igmpQuerierRange/version {t v} { $self _configure_relative ./igmpQuerierRange -version $v }
  method _g_./igmpQuerierRange/version {t} { $self _cget_relative ./igmpQuerierRange -version }
  # multiplier 
  method _m_igmp_querier_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_querier_range_version }
  
  option -igmp_querier_range_enabled \
    -configuremethod _c_./igmpQuerierRange/enabled \
    -cgetmethod _g_./igmpQuerierRange/enabled \
    -readonly false
  method _c_./igmpQuerierRange/enabled {t v} { $self _configure_relative ./igmpQuerierRange -enabled $v }
  method _g_./igmpQuerierRange/enabled {t} { $self _cget_relative ./igmpQuerierRange -enabled }
  option -igmp_mld_range_meshing_mode \
    -configuremethod _c_./igmpMldRange/meshingMode \
    -cgetmethod _g_./igmpMldRange/meshingMode \
    -readonly false
  method _c_./igmpMldRange/meshingMode {t v} { $self _configure_relative ./igmpMldRange -meshing_mode $v }
  method _g_./igmpMldRange/meshingMode {t} { $self _cget_relative ./igmpMldRange -meshing_mode }
  # multiplier 
  method _m_igmp_mld_range_meshing_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_meshing_mode }
  
  option -igmp_mld_range_router_alert \
    -configuremethod _c_./igmpMldRange/routerAlert \
    -cgetmethod _g_./igmpMldRange/routerAlert \
    -readonly false
  method _c_./igmpMldRange/routerAlert {t v} { $self _configure_relative ./igmpMldRange -router_alert $v }
  method _g_./igmpMldRange/routerAlert {t} { $self _cget_relative ./igmpMldRange -router_alert }
  option -igmp_mld_range_enabled \
    -configuremethod _c_./igmpMldRange/enabled \
    -cgetmethod _g_./igmpMldRange/enabled \
    -readonly false
  method _c_./igmpMldRange/enabled {t v} { $self _configure_relative ./igmpMldRange -enabled $v }
  method _g_./igmpMldRange/enabled {t} { $self _cget_relative ./igmpMldRange -enabled }
  option -igmp_mld_range_report_frequency \
    -configuremethod _c_./igmpMldRange/reportFrequency \
    -cgetmethod _g_./igmpMldRange/reportFrequency \
    -readonly false
  method _c_./igmpMldRange/reportFrequency {t v} { $self _configure_relative ./igmpMldRange -report_frequency $v }
  method _g_./igmpMldRange/reportFrequency {t} { $self _cget_relative ./igmpMldRange -report_frequency }
  # multiplier 
  method _m_igmp_mld_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_report_frequency }
  
  option -igmp_mld_range_unsolicited_response_mode \
    -configuremethod _c_./igmpMldRange/unsolicitedResponseMode \
    -cgetmethod _g_./igmpMldRange/unsolicitedResponseMode \
    -readonly false
  method _c_./igmpMldRange/unsolicitedResponseMode {t v} { $self _configure_relative ./igmpMldRange -unsolicited_response_mode $v }
  method _g_./igmpMldRange/unsolicitedResponseMode {t} { $self _cget_relative ./igmpMldRange -unsolicited_response_mode }
  option -igmp_mld_range_general_query_response_mode \
    -configuremethod _c_./igmpMldRange/generalQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/generalQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/generalQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -general_query_response_mode $v }
  method _g_./igmpMldRange/generalQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -general_query_response_mode }
  option -igmp_mld_range_specific_query_response_mode \
    -configuremethod _c_./igmpMldRange/specificQueryResponseMode \
    -cgetmethod _g_./igmpMldRange/specificQueryResponseMode \
    -readonly false
  method _c_./igmpMldRange/specificQueryResponseMode {t v} { $self _configure_relative ./igmpMldRange -specific_query_response_mode $v }
  method _g_./igmpMldRange/specificQueryResponseMode {t} { $self _cget_relative ./igmpMldRange -specific_query_response_mode }
  option -igmp_mld_range_name \
    -configuremethod _c_./igmpMldRange/name \
    -cgetmethod _g_./igmpMldRange/name \
    -readonly false
  method _c_./igmpMldRange/name {t v} { $self _configure_relative ./igmpMldRange -name $v }
  method _g_./igmpMldRange/name {t} { $self _cget_relative ./igmpMldRange -name }
  # multiplier 
  method _m_igmp_mld_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_name }
  
  option -igmp_mld_range_join_leave_multiplier \
    -configuremethod _c_./igmpMldRange/joinLeaveMultiplier \
    -cgetmethod _g_./igmpMldRange/joinLeaveMultiplier \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMultiplier {t v} { $self _configure_relative ./igmpMldRange -join_leave_multiplier $v }
  method _g_./igmpMldRange/joinLeaveMultiplier {t} { $self _cget_relative ./igmpMldRange -join_leave_multiplier }
  # multiplier 
  method _m_igmp_mld_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -igmp_mld_range_join_leave_multiplier }
  
  option -igmp_mld_range_object_id \
    -configuremethod _c_./igmpMldRange/objectId \
    -cgetmethod _g_./igmpMldRange/objectId \
    -readonly false
  method _c_./igmpMldRange/objectId {t v} { $self _configure_relative ./igmpMldRange -object_id $v }
  method _g_./igmpMldRange/objectId {t} { $self _cget_relative ./igmpMldRange -object_id }
  # multiplier 
  method _m_igmp_mld_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_object_id }
  
  option -igmp_mld_range_version \
    -configuremethod _c_./igmpMldRange/version \
    -cgetmethod _g_./igmpMldRange/version \
    -readonly false
  method _c_./igmpMldRange/version {t v} { $self _configure_relative ./igmpMldRange -version $v }
  method _g_./igmpMldRange/version {t} { $self _cget_relative ./igmpMldRange -version }
  # multiplier 
  method _m_igmp_mld_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -igmp_mld_range_version }
  
  option -igmp_mld_range_immediate_response \
    -configuremethod _c_./igmpMldRange/immediateResponse \
    -cgetmethod _g_./igmpMldRange/immediateResponse \
    -readonly false
  method _c_./igmpMldRange/immediateResponse {t v} { $self _configure_relative ./igmpMldRange -immediate_response $v }
  method _g_./igmpMldRange/immediateResponse {t} { $self _cget_relative ./igmpMldRange -immediate_response }
  option -igmp_mld_range_multicast_group_range \
    -configuremethod _c_./igmpMldRange/multicastGroupRange \
    -cgetmethod _g_./igmpMldRange/multicastGroupRange \
    -readonly false
  method _c_./igmpMldRange/multicastGroupRange {t v} { $self _configure_relative ./igmpMldRange -multicast_group_range $v }
  method _g_./igmpMldRange/multicastGroupRange {t} { $self _cget_relative ./igmpMldRange -multicast_group_range }
  option -igmp_mld_range_join_leave_multicast_group_range \
    -configuremethod _c_./igmpMldRange/joinLeaveMulticastGroupRange \
    -cgetmethod _g_./igmpMldRange/joinLeaveMulticastGroupRange \
    -readonly false
  method _c_./igmpMldRange/joinLeaveMulticastGroupRange {t v} { $self _configure_relative ./igmpMldRange -join_leave_multicast_group_range $v }
  method _g_./igmpMldRange/joinLeaveMulticastGroupRange {t} { $self _cget_relative ./igmpMldRange -join_leave_multicast_group_range }
  option -vlan_range_inner_first_id \
    -configuremethod _c_./vlanRange/innerFirstId \
    -cgetmethod _g_./vlanRange/innerFirstId \
    -readonly false
  method _c_./vlanRange/innerFirstId {t v} { $self _configure_relative ./vlanRange -inner_first_id $v }
  method _g_./vlanRange/innerFirstId {t} { $self _cget_relative ./vlanRange -inner_first_id }
  # multiplier 
  method _m_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_first_id }
  
  option -vlan_range_inner_increment \
    -configuremethod _c_./vlanRange/innerIncrement \
    -cgetmethod _g_./vlanRange/innerIncrement \
    -readonly false
  method _c_./vlanRange/innerIncrement {t v} { $self _configure_relative ./vlanRange -inner_increment $v }
  method _g_./vlanRange/innerIncrement {t} { $self _cget_relative ./vlanRange -inner_increment }
  # multiplier 
  method _m_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment }
  
  option -vlan_range_enabled \
    -configuremethod _c_./vlanRange/enabled \
    -cgetmethod _g_./vlanRange/enabled \
    -readonly false
  method _c_./vlanRange/enabled {t v} { $self _configure_relative ./vlanRange -enabled $v }
  method _g_./vlanRange/enabled {t} { $self _cget_relative ./vlanRange -enabled }
  option -vlan_range_unique_count \
    -configuremethod _c_./vlanRange/uniqueCount \
    -cgetmethod _g_./vlanRange/uniqueCount \
    -readonly false
  method _c_./vlanRange/uniqueCount {t v} { $self _configure_relative ./vlanRange -unique_count $v }
  method _g_./vlanRange/uniqueCount {t} { $self _cget_relative ./vlanRange -unique_count }
  # multiplier 
  method _m_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_unique_count }
  
  option -vlan_range_name \
    -configuremethod _c_./vlanRange/name \
    -cgetmethod _g_./vlanRange/name \
    -readonly false
  method _c_./vlanRange/name {t v} { $self _configure_relative ./vlanRange -name $v }
  method _g_./vlanRange/name {t} { $self _cget_relative ./vlanRange -name }
  # multiplier 
  method _m_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_name }
  
  option -vlan_range_increment_step \
    -configuremethod _c_./vlanRange/incrementStep \
    -cgetmethod _g_./vlanRange/incrementStep \
    -readonly false
  method _c_./vlanRange/incrementStep {t v} { $self _configure_relative ./vlanRange -increment_step $v }
  method _g_./vlanRange/incrementStep {t} { $self _cget_relative ./vlanRange -increment_step }
  # multiplier 
  method _m_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment_step }
  
  option -vlan_range_tpid \
    -configuremethod _c_./vlanRange/tpid \
    -cgetmethod _g_./vlanRange/tpid \
    -readonly false
  method _c_./vlanRange/tpid {t v} { $self _configure_relative ./vlanRange -tpid $v }
  method _g_./vlanRange/tpid {t} { $self _cget_relative ./vlanRange -tpid }
  # multiplier 
  method _m_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_tpid }
  
  option -vlan_range_priority \
    -configuremethod _c_./vlanRange/priority \
    -cgetmethod _g_./vlanRange/priority \
    -readonly false
  method _c_./vlanRange/priority {t v} { $self _configure_relative ./vlanRange -priority $v }
  method _g_./vlanRange/priority {t} { $self _cget_relative ./vlanRange -priority }
  # multiplier 
  method _m_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_priority }
  
  option -vlan_range_inner_enable \
    -configuremethod _c_./vlanRange/innerEnable \
    -cgetmethod _g_./vlanRange/innerEnable \
    -readonly false
  method _c_./vlanRange/innerEnable {t v} { $self _configure_relative ./vlanRange -inner_enable $v }
  method _g_./vlanRange/innerEnable {t} { $self _cget_relative ./vlanRange -inner_enable }
  option -vlan_range_object_id \
    -configuremethod _c_./vlanRange/objectId \
    -cgetmethod _g_./vlanRange/objectId \
    -readonly false
  method _c_./vlanRange/objectId {t v} { $self _configure_relative ./vlanRange -object_id $v }
  method _g_./vlanRange/objectId {t} { $self _cget_relative ./vlanRange -object_id }
  # multiplier 
  method _m_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_object_id }
  
  option -vlan_range_inner_unique_count \
    -configuremethod _c_./vlanRange/innerUniqueCount \
    -cgetmethod _g_./vlanRange/innerUniqueCount \
    -readonly false
  method _c_./vlanRange/innerUniqueCount {t v} { $self _configure_relative ./vlanRange -inner_unique_count $v }
  method _g_./vlanRange/innerUniqueCount {t} { $self _cget_relative ./vlanRange -inner_unique_count }
  # multiplier 
  method _m_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_unique_count }
  
  option -vlan_range_inner_tpid \
    -configuremethod _c_./vlanRange/innerTpid \
    -cgetmethod _g_./vlanRange/innerTpid \
    -readonly false
  method _c_./vlanRange/innerTpid {t v} { $self _configure_relative ./vlanRange -inner_tpid $v }
  method _g_./vlanRange/innerTpid {t} { $self _cget_relative ./vlanRange -inner_tpid }
  # multiplier 
  method _m_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_inner_tpid }
  
  option -vlan_range_first_id \
    -configuremethod _c_./vlanRange/firstId \
    -cgetmethod _g_./vlanRange/firstId \
    -readonly false
  method _c_./vlanRange/firstId {t v} { $self _configure_relative ./vlanRange -first_id $v }
  method _g_./vlanRange/firstId {t} { $self _cget_relative ./vlanRange -first_id }
  # multiplier 
  method _m_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_first_id }
  
  option -vlan_range_increment \
    -configuremethod _c_./vlanRange/increment \
    -cgetmethod _g_./vlanRange/increment \
    -readonly false
  method _c_./vlanRange/increment {t v} { $self _configure_relative ./vlanRange -increment $v }
  method _g_./vlanRange/increment {t} { $self _cget_relative ./vlanRange -increment }
  # multiplier 
  method _m_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment }
  
  option -vlan_range_inner_increment_step \
    -configuremethod _c_./vlanRange/innerIncrementStep \
    -cgetmethod _g_./vlanRange/innerIncrementStep \
    -readonly false
  method _c_./vlanRange/innerIncrementStep {t v} { $self _configure_relative ./vlanRange -inner_increment_step $v }
  method _g_./vlanRange/innerIncrementStep {t} { $self _cget_relative ./vlanRange -inner_increment_step }
  # multiplier 
  method _m_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment_step }
  
  option -vlan_range_id_incr_mode \
    -configuremethod _c_./vlanRange/idIncrMode \
    -cgetmethod _g_./vlanRange/idIncrMode \
    -readonly false
  method _c_./vlanRange/idIncrMode {t v} { $self _configure_relative ./vlanRange -id_incr_mode $v }
  method _g_./vlanRange/idIncrMode {t} { $self _cget_relative ./vlanRange -id_incr_mode }
  # multiplier 
  method _m_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_id_incr_mode }
  
  option -vlan_range_inner_priority \
    -configuremethod _c_./vlanRange/innerPriority \
    -cgetmethod _g_./vlanRange/innerPriority \
    -readonly false
  method _c_./vlanRange/innerPriority {t v} { $self _configure_relative ./vlanRange -inner_priority $v }
  method _g_./vlanRange/innerPriority {t} { $self _cget_relative ./vlanRange -inner_priority }
  # multiplier 
  method _m_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_priority }
  
  option -vlan_range_vlan_id_info \
    -configuremethod _c_./vlanRange/vlanIdInfo \
    -cgetmethod _g_./vlanRange/vlanIdInfo \
    -readonly false
  method _c_./vlanRange/vlanIdInfo {t v} { $self _configure_relative ./vlanRange -vlan_id_info $v }
  method _g_./vlanRange/vlanIdInfo {t} { $self _cget_relative ./vlanRange -vlan_id_info }
  option -ptp_range_over_mac_master_mac_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverMac/masterMacIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverMac/masterMacIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_increment_inter_entity $v }
  method _g_./ptpRangeOverMac/masterMacIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_increment_inter_entity }
  
  option -ptp_range_over_mac_communication_mode \
    -configuremethod _c_./ptpRangeOverMac/communicationMode \
    -cgetmethod _g_./ptpRangeOverMac/communicationMode \
    -readonly false
  method _c_./ptpRangeOverMac/communicationMode {t v} { $self _configure_relative ./ptpRangeOverMac -communication_mode $v }
  method _g_./ptpRangeOverMac/communicationMode {t} { $self _cget_relative ./ptpRangeOverMac -communication_mode }
  # multiplier 
  method _m_ptp_range_over_mac_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_communication_mode }
  
  option -ptp_range_over_mac_send_announce_multicast \
    -configuremethod _c_./ptpRangeOverMac/sendAnnounceMulticast \
    -cgetmethod _g_./ptpRangeOverMac/sendAnnounceMulticast \
    -readonly false
  method _c_./ptpRangeOverMac/sendAnnounceMulticast {t v} { $self _configure_relative ./ptpRangeOverMac -send_announce_multicast $v }
  method _g_./ptpRangeOverMac/sendAnnounceMulticast {t} { $self _cget_relative ./ptpRangeOverMac -send_announce_multicast }
  option -ptp_range_over_mac_follow_up_delay \
    -configuremethod _c_./ptpRangeOverMac/followUpDelay \
    -cgetmethod _g_./ptpRangeOverMac/followUpDelay \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDelay {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_delay $v }
  method _g_./ptpRangeOverMac/followUpDelay {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_delay }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_delay }
  
  option -ptp_range_over_mac_domain \
    -configuremethod _c_./ptpRangeOverMac/domain \
    -cgetmethod _g_./ptpRangeOverMac/domain \
    -readonly false
  method _c_./ptpRangeOverMac/domain {t v} { $self _configure_relative ./ptpRangeOverMac -domain $v }
  method _g_./ptpRangeOverMac/domain {t} { $self _cget_relative ./ptpRangeOverMac -domain }
  # multiplier 
  method _m_ptp_range_over_mac_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_domain }
  
  option -ptp_range_over_mac_announce_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/announceDropRate \
    -cgetmethod _g_./ptpRangeOverMac/announceDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/announceDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -announce_drop_rate $v }
  method _g_./ptpRangeOverMac/announceDropRate {t} { $self _cget_relative ./ptpRangeOverMac -announce_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_announce_drop_rate }
  
  option -ptp_range_over_mac_client_ip_increment_by \
    -configuremethod _c_./ptpRangeOverMac/clientIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/clientIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/clientIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -client_ip_increment_by $v }
  method _g_./ptpRangeOverMac/clientIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -client_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_ip_increment_by }
  
  option -ptp_range_over_mac_renewal_invited \
    -configuremethod _c_./ptpRangeOverMac/renewalInvited \
    -cgetmethod _g_./ptpRangeOverMac/renewalInvited \
    -readonly false
  method _c_./ptpRangeOverMac/renewalInvited {t v} { $self _configure_relative ./ptpRangeOverMac -renewal_invited $v }
  method _g_./ptpRangeOverMac/renewalInvited {t} { $self _cget_relative ./ptpRangeOverMac -renewal_invited }
  option -ptp_range_over_mac_port_number_increment \
    -configuremethod _c_./ptpRangeOverMac/portNumberIncrement \
    -cgetmethod _g_./ptpRangeOverMac/portNumberIncrement \
    -readonly false
  method _c_./ptpRangeOverMac/portNumberIncrement {t v} { $self _configure_relative ./ptpRangeOverMac -port_number_increment $v }
  method _g_./ptpRangeOverMac/portNumberIncrement {t} { $self _cget_relative ./ptpRangeOverMac -port_number_increment }
  # multiplier 
  method _m_ptp_range_over_mac_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_port_number_increment }
  
  option -ptp_range_over_mac_use_clock_identity \
    -configuremethod _c_./ptpRangeOverMac/useClockIdentity \
    -cgetmethod _g_./ptpRangeOverMac/useClockIdentity \
    -readonly false
  method _c_./ptpRangeOverMac/useClockIdentity {t v} { $self _configure_relative ./ptpRangeOverMac -use_clock_identity $v }
  method _g_./ptpRangeOverMac/useClockIdentity {t} { $self _cget_relative ./ptpRangeOverMac -use_clock_identity }
  option -ptp_range_over_mac_priority1 \
    -configuremethod _c_./ptpRangeOverMac/priority1 \
    -cgetmethod _g_./ptpRangeOverMac/priority1 \
    -readonly false
  method _c_./ptpRangeOverMac/priority1 {t v} { $self _configure_relative ./ptpRangeOverMac -priority1 $v }
  method _g_./ptpRangeOverMac/priority1 {t} { $self _cget_relative ./ptpRangeOverMac -priority1 }
  # multiplier 
  method _m_ptp_range_over_mac_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_priority1 }
  
  option -ptp_range_over_mac_use_alternate_master_flag \
    -configuremethod _c_./ptpRangeOverMac/useAlternateMasterFlag \
    -cgetmethod _g_./ptpRangeOverMac/useAlternateMasterFlag \
    -readonly false
  method _c_./ptpRangeOverMac/useAlternateMasterFlag {t v} { $self _configure_relative ./ptpRangeOverMac -use_alternate_master_flag $v }
  method _g_./ptpRangeOverMac/useAlternateMasterFlag {t} { $self _cget_relative ./ptpRangeOverMac -use_alternate_master_flag }
  option -ptp_range_over_mac_object_id \
    -configuremethod _c_./ptpRangeOverMac/objectId \
    -cgetmethod _g_./ptpRangeOverMac/objectId \
    -readonly false
  method _c_./ptpRangeOverMac/objectId {t v} { $self _configure_relative ./ptpRangeOverMac -object_id $v }
  method _g_./ptpRangeOverMac/objectId {t} { $self _cget_relative ./ptpRangeOverMac -object_id }
  # multiplier 
  method _m_ptp_range_over_mac_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_object_id }
  
  option -ptp_range_over_mac_delay_resp_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/delayRespReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/delayRespReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/delayRespReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -delay_resp_receipt_timeout $v }
  method _g_./ptpRangeOverMac/delayRespReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -delay_resp_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_resp_receipt_timeout }
  
  option -ptp_range_over_mac_announce_frequency_traceable \
    -configuremethod _c_./ptpRangeOverMac/announceFrequencyTraceable \
    -cgetmethod _g_./ptpRangeOverMac/announceFrequencyTraceable \
    -readonly false
  method _c_./ptpRangeOverMac/announceFrequencyTraceable {t v} { $self _configure_relative ./ptpRangeOverMac -announce_frequency_traceable $v }
  method _g_./ptpRangeOverMac/announceFrequencyTraceable {t} { $self _cget_relative ./ptpRangeOverMac -announce_frequency_traceable }
  option -ptp_range_over_mac_priority2 \
    -configuremethod _c_./ptpRangeOverMac/priority2 \
    -cgetmethod _g_./ptpRangeOverMac/priority2 \
    -readonly false
  method _c_./ptpRangeOverMac/priority2 {t v} { $self _configure_relative ./ptpRangeOverMac -priority2 $v }
  method _g_./ptpRangeOverMac/priority2 {t} { $self _cget_relative ./ptpRangeOverMac -priority2 }
  # multiplier 
  method _m_ptp_range_over_mac_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_priority2 }
  
  option -ptp_range_over_mac_announce_current_utc_offset_valid \
    -configuremethod _c_./ptpRangeOverMac/announceCurrentUtcOffsetValid \
    -cgetmethod _g_./ptpRangeOverMac/announceCurrentUtcOffsetValid \
    -readonly false
  method _c_./ptpRangeOverMac/announceCurrentUtcOffsetValid {t v} { $self _configure_relative ./ptpRangeOverMac -announce_current_utc_offset_valid $v }
  method _g_./ptpRangeOverMac/announceCurrentUtcOffsetValid {t} { $self _cget_relative ./ptpRangeOverMac -announce_current_utc_offset_valid }
  option -ptp_range_over_mac_client_mac_address \
    -configuremethod _c_./ptpRangeOverMac/clientMacAddress \
    -cgetmethod _g_./ptpRangeOverMac/clientMacAddress \
    -readonly false
  method _c_./ptpRangeOverMac/clientMacAddress {t v} { $self _configure_relative ./ptpRangeOverMac -client_mac_address $v }
  method _g_./ptpRangeOverMac/clientMacAddress {t} { $self _cget_relative ./ptpRangeOverMac -client_mac_address }
  # multiplier 
  method _m_ptp_range_over_mac_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_mac_address }
  
  option -ptp_range_over_mac_time_source \
    -configuremethod _c_./ptpRangeOverMac/timeSource \
    -cgetmethod _g_./ptpRangeOverMac/timeSource \
    -readonly false
  method _c_./ptpRangeOverMac/timeSource {t v} { $self _configure_relative ./ptpRangeOverMac -time_source $v }
  method _g_./ptpRangeOverMac/timeSource {t} { $self _cget_relative ./ptpRangeOverMac -time_source }
  # multiplier 
  method _m_ptp_range_over_mac_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_time_source }
  
  option -ptp_range_over_mac_steps_removed \
    -configuremethod _c_./ptpRangeOverMac/stepsRemoved \
    -cgetmethod _g_./ptpRangeOverMac/stepsRemoved \
    -readonly false
  method _c_./ptpRangeOverMac/stepsRemoved {t v} { $self _configure_relative ./ptpRangeOverMac -steps_removed $v }
  method _g_./ptpRangeOverMac/stepsRemoved {t} { $self _cget_relative ./ptpRangeOverMac -steps_removed }
  # multiplier 
  method _m_ptp_range_over_mac_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_steps_removed }
  
  option -ptp_range_over_mac_clock_class \
    -configuremethod _c_./ptpRangeOverMac/clockClass \
    -cgetmethod _g_./ptpRangeOverMac/clockClass \
    -readonly false
  method _c_./ptpRangeOverMac/clockClass {t v} { $self _configure_relative ./ptpRangeOverMac -clock_class $v }
  method _g_./ptpRangeOverMac/clockClass {t} { $self _cget_relative ./ptpRangeOverMac -clock_class }
  # multiplier 
  method _m_ptp_range_over_mac_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_class }
  
  option -ptp_range_over_mac_request_attempts \
    -configuremethod _c_./ptpRangeOverMac/requestAttempts \
    -cgetmethod _g_./ptpRangeOverMac/requestAttempts \
    -readonly false
  method _c_./ptpRangeOverMac/requestAttempts {t v} { $self _configure_relative ./ptpRangeOverMac -request_attempts $v }
  method _g_./ptpRangeOverMac/requestAttempts {t} { $self _cget_relative ./ptpRangeOverMac -request_attempts }
  # multiplier 
  method _m_ptp_range_over_mac_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_attempts }
  
  option -ptp_range_over_mac_follow_up_bad_crc_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpBadCrcRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpBadCrcRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpBadCrcRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_bad_crc_rate $v }
  method _g_./ptpRangeOverMac/followUpBadCrcRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_bad_crc_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_bad_crc_rate }
  
  option -ptp_range_over_mac_delay_response_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverMac/delayResponseDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverMac/delayResponseDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverMac/delayResponseDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverMac -delay_response_delay_insertion_rate $v }
  method _g_./ptpRangeOverMac/delayResponseDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverMac -delay_response_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_mac_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_response_delay_insertion_rate }
  
  option -ptp_range_over_mac_log_sync_interval \
    -configuremethod _c_./ptpRangeOverMac/logSyncInterval \
    -cgetmethod _g_./ptpRangeOverMac/logSyncInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logSyncInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_sync_interval $v }
  method _g_./ptpRangeOverMac/logSyncInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_sync_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_sync_interval }
  
  option -ptp_range_over_mac_master_count \
    -configuremethod _c_./ptpRangeOverMac/masterCount \
    -cgetmethod _g_./ptpRangeOverMac/masterCount \
    -readonly false
  method _c_./ptpRangeOverMac/masterCount {t v} { $self _configure_relative ./ptpRangeOverMac -master_count $v }
  method _g_./ptpRangeOverMac/masterCount {t} { $self _cget_relative ./ptpRangeOverMac -master_count }
  # multiplier 
  method _m_ptp_range_over_mac_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_count }
  
  option -ptp_range_over_mac_residence_time \
    -configuremethod _c_./ptpRangeOverMac/residenceTime \
    -cgetmethod _g_./ptpRangeOverMac/residenceTime \
    -readonly false
  method _c_./ptpRangeOverMac/residenceTime {t v} { $self _configure_relative ./ptpRangeOverMac -residence_time $v }
  method _g_./ptpRangeOverMac/residenceTime {t} { $self _cget_relative ./ptpRangeOverMac -residence_time }
  # multiplier 
  method _m_ptp_range_over_mac_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_residence_time }
  
  option -ptp_range_over_mac_signal_interval \
    -configuremethod _c_./ptpRangeOverMac/signalInterval \
    -cgetmethod _g_./ptpRangeOverMac/signalInterval \
    -readonly false
  method _c_./ptpRangeOverMac/signalInterval {t v} { $self _configure_relative ./ptpRangeOverMac -signal_interval $v }
  method _g_./ptpRangeOverMac/signalInterval {t} { $self _cget_relative ./ptpRangeOverMac -signal_interval }
  # multiplier 
  method _m_ptp_range_over_mac_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_signal_interval }
  
  option -ptp_range_over_mac_delay_mechanism \
    -configuremethod _c_./ptpRangeOverMac/delayMechanism \
    -cgetmethod _g_./ptpRangeOverMac/delayMechanism \
    -readonly false
  method _c_./ptpRangeOverMac/delayMechanism {t v} { $self _configure_relative ./ptpRangeOverMac -delay_mechanism $v }
  method _g_./ptpRangeOverMac/delayMechanism {t} { $self _cget_relative ./ptpRangeOverMac -delay_mechanism }
  # multiplier 
  method _m_ptp_range_over_mac_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_mechanism }
  
  option -ptp_range_over_mac_strict_grant \
    -configuremethod _c_./ptpRangeOverMac/strictGrant \
    -cgetmethod _g_./ptpRangeOverMac/strictGrant \
    -readonly false
  method _c_./ptpRangeOverMac/strictGrant {t v} { $self _configure_relative ./ptpRangeOverMac -strict_grant $v }
  method _g_./ptpRangeOverMac/strictGrant {t} { $self _cget_relative ./ptpRangeOverMac -strict_grant }
  option -ptp_range_over_mac_sync_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/syncDropRate \
    -cgetmethod _g_./ptpRangeOverMac/syncDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/syncDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -sync_drop_rate $v }
  method _g_./ptpRangeOverMac/syncDropRate {t} { $self _cget_relative ./ptpRangeOverMac -sync_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_sync_drop_rate }
  
  option -ptp_range_over_mac_drop_signal_req_sync \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqSync \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqSync \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqSync {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_sync $v }
  method _g_./ptpRangeOverMac/dropSignalReqSync {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_sync }
  option -ptp_range_over_mac_clock_increment \
    -configuremethod _c_./ptpRangeOverMac/clockIncrement \
    -cgetmethod _g_./ptpRangeOverMac/clockIncrement \
    -readonly false
  method _c_./ptpRangeOverMac/clockIncrement {t v} { $self _configure_relative ./ptpRangeOverMac -clock_increment $v }
  method _g_./ptpRangeOverMac/clockIncrement {t} { $self _cget_relative ./ptpRangeOverMac -clock_increment }
  # multiplier 
  method _m_ptp_range_over_mac_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_increment }
  
  option -ptp_range_over_mac_announce_ptp_timescale \
    -configuremethod _c_./ptpRangeOverMac/announcePtpTimescale \
    -cgetmethod _g_./ptpRangeOverMac/announcePtpTimescale \
    -readonly false
  method _c_./ptpRangeOverMac/announcePtpTimescale {t v} { $self _configure_relative ./ptpRangeOverMac -announce_ptp_timescale $v }
  method _g_./ptpRangeOverMac/announcePtpTimescale {t} { $self _cget_relative ./ptpRangeOverMac -announce_ptp_timescale }
  option -ptp_range_over_mac_signal_unicast_handling \
    -configuremethod _c_./ptpRangeOverMac/signalUnicastHandling \
    -cgetmethod _g_./ptpRangeOverMac/signalUnicastHandling \
    -readonly false
  method _c_./ptpRangeOverMac/signalUnicastHandling {t v} { $self _configure_relative ./ptpRangeOverMac -signal_unicast_handling $v }
  method _g_./ptpRangeOverMac/signalUnicastHandling {t} { $self _cget_relative ./ptpRangeOverMac -signal_unicast_handling }
  # multiplier 
  method _m_ptp_range_over_mac_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_signal_unicast_handling }
  
  option -ptp_range_over_mac_enabled \
    -configuremethod _c_./ptpRangeOverMac/enabled \
    -cgetmethod _g_./ptpRangeOverMac/enabled \
    -readonly false
  method _c_./ptpRangeOverMac/enabled {t v} { $self _configure_relative ./ptpRangeOverMac -enabled $v }
  method _g_./ptpRangeOverMac/enabled {t} { $self _cget_relative ./ptpRangeOverMac -enabled }
  option -ptp_range_over_mac_timestamp_offset \
    -configuremethod _c_./ptpRangeOverMac/timestampOffset \
    -cgetmethod _g_./ptpRangeOverMac/timestampOffset \
    -readonly false
  method _c_./ptpRangeOverMac/timestampOffset {t v} { $self _configure_relative ./ptpRangeOverMac -timestamp_offset $v }
  method _g_./ptpRangeOverMac/timestampOffset {t} { $self _cget_relative ./ptpRangeOverMac -timestamp_offset }
  # multiplier 
  method _m_ptp_range_over_mac_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_timestamp_offset }
  
  option -ptp_range_over_mac_master_ip_increment_by \
    -configuremethod _c_./ptpRangeOverMac/masterIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/masterIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_increment_by $v }
  method _g_./ptpRangeOverMac/masterIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_increment_by }
  
  option -ptp_range_over_mac_request_interval \
    -configuremethod _c_./ptpRangeOverMac/requestInterval \
    -cgetmethod _g_./ptpRangeOverMac/requestInterval \
    -readonly false
  method _c_./ptpRangeOverMac/requestInterval {t v} { $self _configure_relative ./ptpRangeOverMac -request_interval $v }
  method _g_./ptpRangeOverMac/requestInterval {t} { $self _cget_relative ./ptpRangeOverMac -request_interval }
  # multiplier 
  method _m_ptp_range_over_mac_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_interval }
  
  option -ptp_range_over_mac_ip_tos \
    -configuremethod _c_./ptpRangeOverMac/ipTos \
    -cgetmethod _g_./ptpRangeOverMac/ipTos \
    -readonly false
  method _c_./ptpRangeOverMac/ipTos {t v} { $self _configure_relative ./ptpRangeOverMac -ip_tos $v }
  method _g_./ptpRangeOverMac/ipTos {t} { $self _cget_relative ./ptpRangeOverMac -ip_tos }
  # multiplier 
  method _m_ptp_range_over_mac_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_ip_tos }
  
  option -ptp_range_over_mac_request_holddown \
    -configuremethod _c_./ptpRangeOverMac/requestHolddown \
    -cgetmethod _g_./ptpRangeOverMac/requestHolddown \
    -readonly false
  method _c_./ptpRangeOverMac/requestHolddown {t v} { $self _configure_relative ./ptpRangeOverMac -request_holddown $v }
  method _g_./ptpRangeOverMac/requestHolddown {t} { $self _cget_relative ./ptpRangeOverMac -request_holddown }
  # multiplier 
  method _m_ptp_range_over_mac_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_holddown }
  
  option -ptp_range_over_mac_client_mac_increment_by \
    -configuremethod _c_./ptpRangeOverMac/clientMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/clientMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/clientMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -client_mac_increment_by $v }
  method _g_./ptpRangeOverMac/clientMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -client_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_mac_increment_by }
  
  option -ptp_range_over_mac_name \
    -configuremethod _c_./ptpRangeOverMac/name \
    -cgetmethod _g_./ptpRangeOverMac/name \
    -readonly false
  method _c_./ptpRangeOverMac/name {t v} { $self _configure_relative ./ptpRangeOverMac -name $v }
  method _g_./ptpRangeOverMac/name {t} { $self _cget_relative ./ptpRangeOverMac -name }
  # multiplier 
  method _m_ptp_range_over_mac_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_name }
  
  option -ptp_range_over_mac_drop_signal_req_announce \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqAnnounce \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqAnnounce \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqAnnounce {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_announce $v }
  method _g_./ptpRangeOverMac/dropSignalReqAnnounce {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_announce }
  option -ptp_range_over_mac_master_ip_address \
    -configuremethod _c_./ptpRangeOverMac/masterIpAddress \
    -cgetmethod _g_./ptpRangeOverMac/masterIpAddress \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpAddress {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_address $v }
  method _g_./ptpRangeOverMac/masterIpAddress {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_address }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_address }
  
  option -ptp_range_over_mac_first_clock \
    -configuremethod _c_./ptpRangeOverMac/firstClock \
    -cgetmethod _g_./ptpRangeOverMac/firstClock \
    -readonly false
  method _c_./ptpRangeOverMac/firstClock {t v} { $self _configure_relative ./ptpRangeOverMac -first_clock $v }
  method _g_./ptpRangeOverMac/firstClock {t} { $self _cget_relative ./ptpRangeOverMac -first_clock }
  # multiplier 
  method _m_ptp_range_over_mac_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_first_clock }
  
  option -ptp_range_over_mac_master_mac_increment_by \
    -configuremethod _c_./ptpRangeOverMac/masterMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/masterMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_increment_by $v }
  method _g_./ptpRangeOverMac/masterMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_increment_by }
  
  option -ptp_range_over_mac_send_cancel_tlv \
    -configuremethod _c_./ptpRangeOverMac/sendCancelTlv \
    -cgetmethod _g_./ptpRangeOverMac/sendCancelTlv \
    -readonly false
  method _c_./ptpRangeOverMac/sendCancelTlv {t v} { $self _configure_relative ./ptpRangeOverMac -send_cancel_tlv $v }
  method _g_./ptpRangeOverMac/sendCancelTlv {t} { $self _cget_relative ./ptpRangeOverMac -send_cancel_tlv }
  option -ptp_range_over_mac_port_number \
    -configuremethod _c_./ptpRangeOverMac/portNumber \
    -cgetmethod _g_./ptpRangeOverMac/portNumber \
    -readonly false
  method _c_./ptpRangeOverMac/portNumber {t v} { $self _configure_relative ./ptpRangeOverMac -port_number $v }
  method _g_./ptpRangeOverMac/portNumber {t} { $self _cget_relative ./ptpRangeOverMac -port_number }
  # multiplier 
  method _m_ptp_range_over_mac_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_port_number }
  
  option -ptp_range_over_mac_client_ip_address \
    -configuremethod _c_./ptpRangeOverMac/clientIpAddress \
    -cgetmethod _g_./ptpRangeOverMac/clientIpAddress \
    -readonly false
  method _c_./ptpRangeOverMac/clientIpAddress {t v} { $self _configure_relative ./ptpRangeOverMac -client_ip_address $v }
  method _g_./ptpRangeOverMac/clientIpAddress {t} { $self _cget_relative ./ptpRangeOverMac -client_ip_address }
  # multiplier 
  method _m_ptp_range_over_mac_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_ip_address }
  
  option -ptp_range_over_mac_announce_leap59 \
    -configuremethod _c_./ptpRangeOverMac/announceLeap59 \
    -cgetmethod _g_./ptpRangeOverMac/announceLeap59 \
    -readonly false
  method _c_./ptpRangeOverMac/announceLeap59 {t v} { $self _configure_relative ./ptpRangeOverMac -announce_leap59 $v }
  method _g_./ptpRangeOverMac/announceLeap59 {t} { $self _cget_relative ./ptpRangeOverMac -announce_leap59 }
  option -ptp_range_over_mac_send_announce_tlv \
    -configuremethod _c_./ptpRangeOverMac/sendAnnounceTlv \
    -cgetmethod _g_./ptpRangeOverMac/sendAnnounceTlv \
    -readonly false
  method _c_./ptpRangeOverMac/sendAnnounceTlv {t v} { $self _configure_relative ./ptpRangeOverMac -send_announce_tlv $v }
  method _g_./ptpRangeOverMac/sendAnnounceTlv {t} { $self _cget_relative ./ptpRangeOverMac -send_announce_tlv }
  option -ptp_range_over_mac_sync_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/syncReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/syncReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/syncReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -sync_receipt_timeout $v }
  method _g_./ptpRangeOverMac/syncReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -sync_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_sync_receipt_timeout }
  
  option -ptp_range_over_mac_announce_leap61 \
    -configuremethod _c_./ptpRangeOverMac/announceLeap61 \
    -cgetmethod _g_./ptpRangeOverMac/announceLeap61 \
    -readonly false
  method _c_./ptpRangeOverMac/announceLeap61 {t v} { $self _configure_relative ./ptpRangeOverMac -announce_leap61 $v }
  method _g_./ptpRangeOverMac/announceLeap61 {t} { $self _cget_relative ./ptpRangeOverMac -announce_leap61 }
  option -ptp_range_over_mac_grant_delay_resp_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantDelayRespDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantDelayRespDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantDelayRespDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_delay_resp_duration_interval $v }
  method _g_./ptpRangeOverMac/grantDelayRespDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_delay_resp_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_delay_resp_duration_interval }
  
  option -ptp_range_over_mac_timestamp_offset_variation \
    -configuremethod _c_./ptpRangeOverMac/timestampOffsetVariation \
    -cgetmethod _g_./ptpRangeOverMac/timestampOffsetVariation \
    -readonly false
  method _c_./ptpRangeOverMac/timestampOffsetVariation {t v} { $self _configure_relative ./ptpRangeOverMac -timestamp_offset_variation $v }
  method _g_./ptpRangeOverMac/timestampOffsetVariation {t} { $self _cget_relative ./ptpRangeOverMac -timestamp_offset_variation }
  # multiplier 
  method _m_ptp_range_over_mac_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_timestamp_offset_variation }
  
  option -ptp_range_over_mac_follow_up_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpDropRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_drop_rate $v }
  method _g_./ptpRangeOverMac/followUpDropRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_drop_rate }
  
  option -ptp_range_over_mac_master_mac_address \
    -configuremethod _c_./ptpRangeOverMac/masterMacAddress \
    -cgetmethod _g_./ptpRangeOverMac/masterMacAddress \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacAddress {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_address $v }
  method _g_./ptpRangeOverMac/masterMacAddress {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_address }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_address }
  
  option -ptp_range_over_mac_drop_signal_req_delay_resp \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqDelayResp \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqDelayResp \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqDelayResp {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_delay_resp $v }
  method _g_./ptpRangeOverMac/dropSignalReqDelayResp {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_delay_resp }
  option -ptp_range_over_mac_grant_sync_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantSyncDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantSyncDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantSyncDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_sync_duration_interval $v }
  method _g_./ptpRangeOverMac/grantSyncDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_sync_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_sync_duration_interval }
  
  option -ptp_range_over_mac_learn_port_id \
    -configuremethod _c_./ptpRangeOverMac/learnPortId \
    -cgetmethod _g_./ptpRangeOverMac/learnPortId \
    -readonly false
  method _c_./ptpRangeOverMac/learnPortId {t v} { $self _configure_relative ./ptpRangeOverMac -learn_port_id $v }
  method _g_./ptpRangeOverMac/learnPortId {t} { $self _cget_relative ./ptpRangeOverMac -learn_port_id }
  option -ptp_range_over_mac_delay_response_delay \
    -configuremethod _c_./ptpRangeOverMac/delayResponseDelay \
    -cgetmethod _g_./ptpRangeOverMac/delayResponseDelay \
    -readonly false
  method _c_./ptpRangeOverMac/delayResponseDelay {t v} { $self _configure_relative ./ptpRangeOverMac -delay_response_delay $v }
  method _g_./ptpRangeOverMac/delayResponseDelay {t} { $self _cget_relative ./ptpRangeOverMac -delay_response_delay }
  # multiplier 
  method _m_ptp_range_over_mac_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_response_delay }
  
  option -ptp_range_over_mac_grant_unicast_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantUnicastDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantUnicastDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantUnicastDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_unicast_duration_interval $v }
  method _g_./ptpRangeOverMac/grantUnicastDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_unicast_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_unicast_duration_interval }
  
  option -ptp_range_over_mac_follow_up_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_delay_insertion_rate $v }
  method _g_./ptpRangeOverMac/followUpDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_delay_insertion_rate }
  
  option -ptp_range_over_mac_log_delay_req_interval \
    -configuremethod _c_./ptpRangeOverMac/logDelayReqInterval \
    -cgetmethod _g_./ptpRangeOverMac/logDelayReqInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logDelayReqInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_delay_req_interval $v }
  method _g_./ptpRangeOverMac/logDelayReqInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_delay_req_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_delay_req_interval }
  
  option -ptp_range_over_mac_clock_accuracy \
    -configuremethod _c_./ptpRangeOverMac/clockAccuracy \
    -cgetmethod _g_./ptpRangeOverMac/clockAccuracy \
    -readonly false
  method _c_./ptpRangeOverMac/clockAccuracy {t v} { $self _configure_relative ./ptpRangeOverMac -clock_accuracy $v }
  method _g_./ptpRangeOverMac/clockAccuracy {t} { $self _cget_relative ./ptpRangeOverMac -clock_accuracy }
  # multiplier 
  method _m_ptp_range_over_mac_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_accuracy }
  
  option -ptp_range_over_mac_client_count \
    -configuremethod _c_./ptpRangeOverMac/clientCount \
    -cgetmethod _g_./ptpRangeOverMac/clientCount \
    -readonly false
  method _c_./ptpRangeOverMac/clientCount {t v} { $self _configure_relative ./ptpRangeOverMac -client_count $v }
  method _g_./ptpRangeOverMac/clientCount {t} { $self _cget_relative ./ptpRangeOverMac -client_count }
  # multiplier 
  method _m_ptp_range_over_mac_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_count }
  
  option -ptp_range_over_mac_announce_time_traceable \
    -configuremethod _c_./ptpRangeOverMac/announceTimeTraceable \
    -cgetmethod _g_./ptpRangeOverMac/announceTimeTraceable \
    -readonly false
  method _c_./ptpRangeOverMac/announceTimeTraceable {t v} { $self _configure_relative ./ptpRangeOverMac -announce_time_traceable $v }
  method _g_./ptpRangeOverMac/announceTimeTraceable {t} { $self _cget_relative ./ptpRangeOverMac -announce_time_traceable }
  option -ptp_range_over_mac_step_mode \
    -configuremethod _c_./ptpRangeOverMac/stepMode \
    -cgetmethod _g_./ptpRangeOverMac/stepMode \
    -readonly false
  method _c_./ptpRangeOverMac/stepMode {t v} { $self _configure_relative ./ptpRangeOverMac -step_mode $v }
  method _g_./ptpRangeOverMac/stepMode {t} { $self _cget_relative ./ptpRangeOverMac -step_mode }
  # multiplier 
  method _m_ptp_range_over_mac_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_step_mode }
  
  option -ptp_range_over_mac_master_ip_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverMac/masterIpIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverMac/masterIpIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_increment_inter_entity $v }
  method _g_./ptpRangeOverMac/masterIpIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_increment_inter_entity }
  
  option -ptp_range_over_mac_delay_resp_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/delayRespDropRate \
    -cgetmethod _g_./ptpRangeOverMac/delayRespDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/delayRespDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -delay_resp_drop_rate $v }
  method _g_./ptpRangeOverMac/delayRespDropRate {t} { $self _cget_relative ./ptpRangeOverMac -delay_resp_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_resp_drop_rate }
  
  option -ptp_range_over_mac_announce_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/announceReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/announceReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/announceReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -announce_receipt_timeout $v }
  method _g_./ptpRangeOverMac/announceReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -announce_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_announce_receipt_timeout }
  
  option -ptp_range_over_mac_rx_calibration \
    -configuremethod _c_./ptpRangeOverMac/rxCalibration \
    -cgetmethod _g_./ptpRangeOverMac/rxCalibration \
    -readonly false
  method _c_./ptpRangeOverMac/rxCalibration {t v} { $self _configure_relative ./ptpRangeOverMac -rx_calibration $v }
  method _g_./ptpRangeOverMac/rxCalibration {t} { $self _cget_relative ./ptpRangeOverMac -rx_calibration }
  # multiplier 
  method _m_ptp_range_over_mac_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_rx_calibration }
  
  option -ptp_range_over_mac_tx_calibration \
    -configuremethod _c_./ptpRangeOverMac/txCalibration \
    -cgetmethod _g_./ptpRangeOverMac/txCalibration \
    -readonly false
  method _c_./ptpRangeOverMac/txCalibration {t v} { $self _configure_relative ./ptpRangeOverMac -tx_calibration $v }
  method _g_./ptpRangeOverMac/txCalibration {t} { $self _cget_relative ./ptpRangeOverMac -tx_calibration }
  # multiplier 
  method _m_ptp_range_over_mac_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_tx_calibration }
  
  option -ptp_range_over_mac_log_announce_interval \
    -configuremethod _c_./ptpRangeOverMac/logAnnounceInterval \
    -cgetmethod _g_./ptpRangeOverMac/logAnnounceInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logAnnounceInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_announce_interval $v }
  method _g_./ptpRangeOverMac/logAnnounceInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_announce_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_announce_interval }
  
  option -amt_range_use_relay_discovery \
    -configuremethod _c_./amtRange/useRelayDiscovery \
    -cgetmethod _g_./amtRange/useRelayDiscovery \
    -readonly false
  method _c_./amtRange/useRelayDiscovery {t v} { $self _configure_relative ./amtRange -use_relay_discovery $v }
  method _g_./amtRange/useRelayDiscovery {t} { $self _cget_relative ./amtRange -use_relay_discovery }
  option -amt_range_amt_unicast_ip \
    -configuremethod _c_./amtRange/amtUnicastIp \
    -cgetmethod _g_./amtRange/amtUnicastIp \
    -readonly false
  method _c_./amtRange/amtUnicastIp {t v} { $self _configure_relative ./amtRange -amt_unicast_ip $v }
  method _g_./amtRange/amtUnicastIp {t} { $self _cget_relative ./amtRange -amt_unicast_ip }
  # multiplier 
  method _m_amt_range_amt_unicast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip }
  
  option -amt_range_enabled \
    -configuremethod _c_./amtRange/enabled \
    -cgetmethod _g_./amtRange/enabled \
    -readonly false
  method _c_./amtRange/enabled {t v} { $self _configure_relative ./amtRange -enabled $v }
  method _g_./amtRange/enabled {t} { $self _cget_relative ./amtRange -enabled }
  option -amt_range_query_timer_interval \
    -configuremethod _c_./amtRange/queryTimerInterval \
    -cgetmethod _g_./amtRange/queryTimerInterval \
    -readonly false
  method _c_./amtRange/queryTimerInterval {t v} { $self _configure_relative ./amtRange -query_timer_interval $v }
  method _g_./amtRange/queryTimerInterval {t} { $self _cget_relative ./amtRange -query_timer_interval }
  # multiplier 
  method _m_amt_range_query_timer_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_query_timer_interval }
  
  option -amt_range_amt_udp_src_port_increment \
    -configuremethod _c_./amtRange/amtUdpSrcPortIncrement \
    -cgetmethod _g_./amtRange/amtUdpSrcPortIncrement \
    -readonly false
  method _c_./amtRange/amtUdpSrcPortIncrement {t v} { $self _configure_relative ./amtRange -amt_udp_src_port_increment $v }
  method _g_./amtRange/amtUdpSrcPortIncrement {t} { $self _cget_relative ./amtRange -amt_udp_src_port_increment }
  # multiplier 
  method _m_amt_range_amt_udp_src_port_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port_increment }
  
  option -amt_range_send_teardown \
    -configuremethod _c_./amtRange/sendTeardown \
    -cgetmethod _g_./amtRange/sendTeardown \
    -readonly false
  method _c_./amtRange/sendTeardown {t v} { $self _configure_relative ./amtRange -send_teardown $v }
  method _g_./amtRange/sendTeardown {t} { $self _cget_relative ./amtRange -send_teardown }
  option -amt_range_discovery_retries \
    -configuremethod _c_./amtRange/discoveryRetries \
    -cgetmethod _g_./amtRange/discoveryRetries \
    -readonly false
  method _c_./amtRange/discoveryRetries {t v} { $self _configure_relative ./amtRange -discovery_retries $v }
  method _g_./amtRange/discoveryRetries {t} { $self _cget_relative ./amtRange -discovery_retries }
  # multiplier 
  method _m_amt_range_discovery_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_retries }
  
  option -amt_range_discovery_timeout \
    -configuremethod _c_./amtRange/discoveryTimeout \
    -cgetmethod _g_./amtRange/discoveryTimeout \
    -readonly false
  method _c_./amtRange/discoveryTimeout {t v} { $self _configure_relative ./amtRange -discovery_timeout $v }
  method _g_./amtRange/discoveryTimeout {t} { $self _cget_relative ./amtRange -discovery_timeout }
  # multiplier 
  method _m_amt_range_discovery_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_discovery_timeout }
  
  option -amt_range_request_retries \
    -configuremethod _c_./amtRange/requestRetries \
    -cgetmethod _g_./amtRange/requestRetries \
    -readonly false
  method _c_./amtRange/requestRetries {t v} { $self _configure_relative ./amtRange -request_retries $v }
  method _g_./amtRange/requestRetries {t} { $self _cget_relative ./amtRange -request_retries }
  # multiplier 
  method _m_amt_range_request_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_retries }
  
  option -amt_range_amt_udp_src_port \
    -configuremethod _c_./amtRange/amtUdpSrcPort \
    -cgetmethod _g_./amtRange/amtUdpSrcPort \
    -readonly false
  method _c_./amtRange/amtUdpSrcPort {t v} { $self _configure_relative ./amtRange -amt_udp_src_port $v }
  method _g_./amtRange/amtUdpSrcPort {t} { $self _cget_relative ./amtRange -amt_udp_src_port }
  # multiplier 
  method _m_amt_range_amt_udp_src_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_amt_udp_src_port }
  
  option -amt_range_request_timeout \
    -configuremethod _c_./amtRange/requestTimeout \
    -cgetmethod _g_./amtRange/requestTimeout \
    -readonly false
  method _c_./amtRange/requestTimeout {t v} { $self _configure_relative ./amtRange -request_timeout $v }
  method _g_./amtRange/requestTimeout {t} { $self _cget_relative ./amtRange -request_timeout }
  # multiplier 
  method _m_amt_range_request_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -amt_range_request_timeout }
  
  option -amt_range_name \
    -configuremethod _c_./amtRange/name \
    -cgetmethod _g_./amtRange/name \
    -readonly false
  method _c_./amtRange/name {t v} { $self _configure_relative ./amtRange -name $v }
  method _g_./amtRange/name {t} { $self _cget_relative ./amtRange -name }
  # multiplier 
  method _m_amt_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_name }
  
  option -amt_range_amt_anycast_ip_increment \
    -configuremethod _c_./amtRange/amtAnycastIpIncrement \
    -cgetmethod _g_./amtRange/amtAnycastIpIncrement \
    -readonly false
  method _c_./amtRange/amtAnycastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_anycast_ip_increment $v }
  method _g_./amtRange/amtAnycastIpIncrement {t} { $self _cget_relative ./amtRange -amt_anycast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_anycast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip_increment }
  
  option -amt_range_object_id \
    -configuremethod _c_./amtRange/objectId \
    -cgetmethod _g_./amtRange/objectId \
    -readonly false
  method _c_./amtRange/objectId {t v} { $self _configure_relative ./amtRange -object_id $v }
  method _g_./amtRange/objectId {t} { $self _cget_relative ./amtRange -object_id }
  # multiplier 
  method _m_amt_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_object_id }
  
  option -amt_range_override_qt \
    -configuremethod _c_./amtRange/overrideQt \
    -cgetmethod _g_./amtRange/overrideQt \
    -readonly false
  method _c_./amtRange/overrideQt {t v} { $self _configure_relative ./amtRange -override_qt $v }
  method _g_./amtRange/overrideQt {t} { $self _cget_relative ./amtRange -override_qt }
  option -amt_range_amt_anycast_ip \
    -configuremethod _c_./amtRange/amtAnycastIp \
    -cgetmethod _g_./amtRange/amtAnycastIp \
    -readonly false
  method _c_./amtRange/amtAnycastIp {t v} { $self _configure_relative ./amtRange -amt_anycast_ip $v }
  method _g_./amtRange/amtAnycastIp {t} { $self _cget_relative ./amtRange -amt_anycast_ip }
  # multiplier 
  method _m_amt_range_amt_anycast_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_anycast_ip }
  
  option -amt_range_amt_unicast_ip_increment \
    -configuremethod _c_./amtRange/amtUnicastIpIncrement \
    -cgetmethod _g_./amtRange/amtUnicastIpIncrement \
    -readonly false
  method _c_./amtRange/amtUnicastIpIncrement {t v} { $self _configure_relative ./amtRange -amt_unicast_ip_increment $v }
  method _g_./amtRange/amtUnicastIpIncrement {t} { $self _cget_relative ./amtRange -amt_unicast_ip_increment }
  # multiplier 
  method _m_amt_range_amt_unicast_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -amt_range_amt_unicast_ip_increment }
  
  option -twamp_control_range_object_id \
    -configuremethod _c_./twampControlRange/objectId \
    -cgetmethod _g_./twampControlRange/objectId \
    -readonly false
  method _c_./twampControlRange/objectId {t v} { $self _configure_relative ./twampControlRange -object_id $v }
  method _g_./twampControlRange/objectId {t} { $self _cget_relative ./twampControlRange -object_id }
  # multiplier 
  method _m_twamp_control_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_object_id }
  
  option -twamp_control_range_name \
    -configuremethod _c_./twampControlRange/name \
    -cgetmethod _g_./twampControlRange/name \
    -readonly false
  method _c_./twampControlRange/name {t v} { $self _configure_relative ./twampControlRange -name $v }
  method _g_./twampControlRange/name {t} { $self _cget_relative ./twampControlRange -name }
  # multiplier 
  method _m_twamp_control_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_name }
  
  option -twamp_control_range_mode \
    -configuremethod _c_./twampControlRange/mode \
    -cgetmethod _g_./twampControlRange/mode \
    -readonly false
  method _c_./twampControlRange/mode {t v} { $self _configure_relative ./twampControlRange -mode $v }
  method _g_./twampControlRange/mode {t} { $self _cget_relative ./twampControlRange -mode }
  # multiplier 
  method _m_twamp_control_range_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_mode }
  
  option -twamp_control_range_control_server_port \
    -configuremethod _c_./twampControlRange/controlServerPort \
    -cgetmethod _g_./twampControlRange/controlServerPort \
    -readonly false
  method _c_./twampControlRange/controlServerPort {t v} { $self _configure_relative ./twampControlRange -control_server_port $v }
  method _g_./twampControlRange/controlServerPort {t} { $self _cget_relative ./twampControlRange -control_server_port }
  # multiplier 
  method _m_twamp_control_range_control_server_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_control_server_port }
  
  option -twamp_control_range_count \
    -configuremethod _c_./twampControlRange/count \
    -cgetmethod _g_./twampControlRange/count \
    -readonly false
  method _c_./twampControlRange/count {t v} { $self _configure_relative ./twampControlRange -count $v }
  method _g_./twampControlRange/count {t} { $self _cget_relative ./twampControlRange -count }
  # multiplier 
  method _m_twamp_control_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -twamp_control_range_count }
  
  option -twamp_control_range_secret \
    -configuremethod _c_./twampControlRange/secret \
    -cgetmethod _g_./twampControlRange/secret \
    -readonly false
  method _c_./twampControlRange/secret {t v} { $self _configure_relative ./twampControlRange -secret $v }
  method _g_./twampControlRange/secret {t} { $self _cget_relative ./twampControlRange -secret }
  # multiplier 
  method _m_twamp_control_range_secret {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_secret }
  
  option -twamp_control_range_key_id \
    -configuremethod _c_./twampControlRange/keyId \
    -cgetmethod _g_./twampControlRange/keyId \
    -readonly false
  method _c_./twampControlRange/keyId {t v} { $self _configure_relative ./twampControlRange -key_id $v }
  method _g_./twampControlRange/keyId {t} { $self _cget_relative ./twampControlRange -key_id }
  # multiplier 
  method _m_twamp_control_range_key_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_key_id }
  
  option -twamp_control_range_control_server_ip_increment \
    -configuremethod _c_./twampControlRange/controlServerIpIncrement \
    -cgetmethod _g_./twampControlRange/controlServerIpIncrement \
    -readonly false
  method _c_./twampControlRange/controlServerIpIncrement {t v} { $self _configure_relative ./twampControlRange -control_server_ip_increment $v }
  method _g_./twampControlRange/controlServerIpIncrement {t} { $self _cget_relative ./twampControlRange -control_server_ip_increment }
  # multiplier 
  method _m_twamp_control_range_control_server_ip_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_server_ip_increment }
  
  option -twamp_control_range_enabled \
    -configuremethod _c_./twampControlRange/enabled \
    -cgetmethod _g_./twampControlRange/enabled \
    -readonly false
  method _c_./twampControlRange/enabled {t v} { $self _configure_relative ./twampControlRange -enabled $v }
  method _g_./twampControlRange/enabled {t} { $self _cget_relative ./twampControlRange -enabled }
  option -twamp_control_range_control_start_server_ip \
    -configuremethod _c_./twampControlRange/controlStartServerIp \
    -cgetmethod _g_./twampControlRange/controlStartServerIp \
    -readonly false
  method _c_./twampControlRange/controlStartServerIp {t v} { $self _configure_relative ./twampControlRange -control_start_server_ip $v }
  method _g_./twampControlRange/controlStartServerIp {t} { $self _cget_relative ./twampControlRange -control_start_server_ip }
  # multiplier 
  method _m_twamp_control_range_control_start_server_ip {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -twamp_control_range_control_start_server_ip }
  
  option -ancp_range_circuit_id \
    -configuremethod _c_./ancpRange/circuitId \
    -cgetmethod _g_./ancpRange/circuitId \
    -readonly false
  method _c_./ancpRange/circuitId {t v} { $self _configure_relative ./ancpRange -circuit_id $v }
  method _g_./ancpRange/circuitId {t} { $self _cget_relative ./ancpRange -circuit_id }
  # multiplier 
  method _m_ancp_range_circuit_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_circuit_id }
  
  option -ancp_range_use_dsl_outer_vlan \
    -configuremethod _c_./ancpRange/useDslOuterVlan \
    -cgetmethod _g_./ancpRange/useDslOuterVlan \
    -readonly false
  method _c_./ancpRange/useDslOuterVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_outer_vlan $v }
  method _g_./ancpRange/useDslOuterVlan {t} { $self _cget_relative ./ancpRange -use_dsl_outer_vlan }
  option -ancp_range_distribution_algorithm_percent \
    -configuremethod _c_./ancpRange/distributionAlgorithmPercent \
    -cgetmethod _g_./ancpRange/distributionAlgorithmPercent \
    -readonly false
  method _c_./ancpRange/distributionAlgorithmPercent {t v} { $self _configure_relative ./ancpRange -distribution_algorithm_percent $v }
  method _g_./ancpRange/distributionAlgorithmPercent {t} { $self _cget_relative ./ancpRange -distribution_algorithm_percent }
  # multiplier 
  method _m_ancp_range_distribution_algorithm_percent {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_distribution_algorithm_percent }
  
  option -ancp_range_atm_vpi \
    -configuremethod _c_./ancpRange/atmVpi \
    -cgetmethod _g_./ancpRange/atmVpi \
    -readonly false
  method _c_./ancpRange/atmVpi {t v} { $self _configure_relative ./ancpRange -atm_vpi $v }
  method _g_./ancpRange/atmVpi {t} { $self _cget_relative ./ancpRange -atm_vpi }
  # multiplier 
  method _m_ancp_range_atm_vpi {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vpi }
  
  option -ancp_range_nas_ip_address \
    -configuremethod _c_./ancpRange/nasIpAddress \
    -cgetmethod _g_./ancpRange/nasIpAddress \
    -readonly false
  method _c_./ancpRange/nasIpAddress {t v} { $self _configure_relative ./ancpRange -nas_ip_address $v }
  method _g_./ancpRange/nasIpAddress {t} { $self _cget_relative ./ancpRange -nas_ip_address }
  # multiplier 
  method _m_ancp_range_nas_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address }
  
  option -ancp_range_nas_ancp_service_port \
    -configuremethod _c_./ancpRange/nasAncpServicePort \
    -cgetmethod _g_./ancpRange/nasAncpServicePort \
    -readonly false
  method _c_./ancpRange/nasAncpServicePort {t v} { $self _configure_relative ./ancpRange -nas_ancp_service_port $v }
  method _g_./ancpRange/nasAncpServicePort {t} { $self _cget_relative ./ancpRange -nas_ancp_service_port }
  # multiplier 
  method _m_ancp_range_nas_ancp_service_port {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_ancp_service_port }
  
  option -ancp_range_inner_vlan_id \
    -configuremethod _c_./ancpRange/innerVlanId \
    -cgetmethod _g_./ancpRange/innerVlanId \
    -readonly false
  method _c_./ancpRange/innerVlanId {t v} { $self _configure_relative ./ancpRange -inner_vlan_id $v }
  method _g_./ancpRange/innerVlanId {t} { $self _cget_relative ./ancpRange -inner_vlan_id }
  # multiplier 
  method _m_ancp_range_inner_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_inner_vlan_id }
  
  option -ancp_range_enabled \
    -configuremethod _c_./ancpRange/enabled \
    -cgetmethod _g_./ancpRange/enabled \
    -readonly false
  method _c_./ancpRange/enabled {t v} { $self _configure_relative ./ancpRange -enabled $v }
  method _g_./ancpRange/enabled {t} { $self _cget_relative ./ancpRange -enabled }
  option -ancp_range_use_dsl_inner_vlan \
    -configuremethod _c_./ancpRange/useDslInnerVlan \
    -cgetmethod _g_./ancpRange/useDslInnerVlan \
    -readonly false
  method _c_./ancpRange/useDslInnerVlan {t v} { $self _configure_relative ./ancpRange -use_dsl_inner_vlan $v }
  method _g_./ancpRange/useDslInnerVlan {t} { $self _cget_relative ./ancpRange -use_dsl_inner_vlan }
  option -ancp_range_access_aggregation_cb_tlv \
    -configuremethod _c_./ancpRange/accessAggregationCbTlv \
    -cgetmethod _g_./ancpRange/accessAggregationCbTlv \
    -readonly false
  method _c_./ancpRange/accessAggregationCbTlv {t v} { $self _configure_relative ./ancpRange -access_aggregation_cb_tlv $v }
  method _g_./ancpRange/accessAggregationCbTlv {t} { $self _cget_relative ./ancpRange -access_aggregation_cb_tlv }
  # multiplier 
  method _m_ancp_range_access_aggregation_cb_tlv {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_access_aggregation_cb_tlv }
  
  option -ancp_range_nas_keep_alive_retries \
    -configuremethod _c_./ancpRange/nasKeepAliveRetries \
    -cgetmethod _g_./ancpRange/nasKeepAliveRetries \
    -readonly false
  method _c_./ancpRange/nasKeepAliveRetries {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_retries $v }
  method _g_./ancpRange/nasKeepAliveRetries {t} { $self _cget_relative ./ancpRange -nas_keep_alive_retries }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_retries {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_retries }
  
  option -ancp_range_nas_keep_alive_timeout \
    -configuremethod _c_./ancpRange/nasKeepAliveTimeout \
    -cgetmethod _g_./ancpRange/nasKeepAliveTimeout \
    -readonly false
  method _c_./ancpRange/nasKeepAliveTimeout {t v} { $self _configure_relative ./ancpRange -nas_keep_alive_timeout $v }
  method _g_./ancpRange/nasKeepAliveTimeout {t} { $self _cget_relative ./ancpRange -nas_keep_alive_timeout }
  # multiplier 
  method _m_ancp_range_nas_keep_alive_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_nas_keep_alive_timeout }
  
  option -ancp_range_name \
    -configuremethod _c_./ancpRange/name \
    -cgetmethod _g_./ancpRange/name \
    -readonly false
  method _c_./ancpRange/name {t v} { $self _configure_relative ./ancpRange -name $v }
  method _g_./ancpRange/name {t} { $self _cget_relative ./ancpRange -name }
  # multiplier 
  method _m_ancp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_name }
  
  option -ancp_range_enable_access_aggregation \
    -configuremethod _c_./ancpRange/enableAccessAggregation \
    -cgetmethod _g_./ancpRange/enableAccessAggregation \
    -readonly false
  method _c_./ancpRange/enableAccessAggregation {t v} { $self _configure_relative ./ancpRange -enable_access_aggregation $v }
  method _g_./ancpRange/enableAccessAggregation {t} { $self _cget_relative ./ancpRange -enable_access_aggregation }
  option -ancp_range_object_id \
    -configuremethod _c_./ancpRange/objectId \
    -cgetmethod _g_./ancpRange/objectId \
    -readonly false
  method _c_./ancpRange/objectId {t v} { $self _configure_relative ./ancpRange -object_id $v }
  method _g_./ancpRange/objectId {t} { $self _cget_relative ./ancpRange -object_id }
  # multiplier 
  method _m_ancp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_object_id }
  
  option -ancp_range_atm_vci \
    -configuremethod _c_./ancpRange/atmVci \
    -cgetmethod _g_./ancpRange/atmVci \
    -readonly false
  method _c_./ancpRange/atmVci {t v} { $self _configure_relative ./ancpRange -atm_vci $v }
  method _g_./ancpRange/atmVci {t} { $self _cget_relative ./ancpRange -atm_vci }
  # multiplier 
  method _m_ancp_range_atm_vci {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_atm_vci }
  
  option -ancp_range_nas_ipaddress_incr \
    -configuremethod _c_./ancpRange/nasIPAddressIncr \
    -cgetmethod _g_./ancpRange/nasIPAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIPAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ipaddress_incr $v }
  method _g_./ancpRange/nasIPAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ipaddress_incr }
  # multiplier 
  method _m_ancp_range_nas_ipaddress_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ipaddress_incr }
  
  option -ancp_range_outer_vlan_id \
    -configuremethod _c_./ancpRange/outerVlanId \
    -cgetmethod _g_./ancpRange/outerVlanId \
    -readonly false
  method _c_./ancpRange/outerVlanId {t v} { $self _configure_relative ./ancpRange -outer_vlan_id $v }
  method _g_./ancpRange/outerVlanId {t} { $self _cget_relative ./ancpRange -outer_vlan_id }
  # multiplier 
  method _m_ancp_range_outer_vlan_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_outer_vlan_id }
  
  option -ancp_range_nas_ip_address_incr \
    -configuremethod _c_./ancpRange/nasIpAddressIncr \
    -cgetmethod _g_./ancpRange/nasIpAddressIncr \
    -readonly false
  method _c_./ancpRange/nasIpAddressIncr {t v} { $self _configure_relative ./ancpRange -nas_ip_address_incr $v }
  method _g_./ancpRange/nasIpAddressIncr {t} { $self _cget_relative ./ancpRange -nas_ip_address_incr }
  # multiplier 
  method _m_ancp_range_nas_ip_address_incr {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_nas_ip_address_incr }
  
  option -ancp_range_ancp_ip_range \
    -configuremethod _c_./ancpRange/ancpIpRange \
    -cgetmethod _g_./ancpRange/ancpIpRange \
    -readonly false
  method _c_./ancpRange/ancpIpRange {t v} { $self _configure_relative ./ancpRange -ancp_ip_range $v }
  method _g_./ancpRange/ancpIpRange {t} { $self _cget_relative ./ancpRange -ancp_ip_range }
  option -ancp_range_ancp_pvc_range \
    -configuremethod _c_./ancpRange/ancpPvcRange \
    -cgetmethod _g_./ancpRange/ancpPvcRange \
    -readonly false
  method _c_./ancpRange/ancpPvcRange {t v} { $self _configure_relative ./ancpRange -ancp_pvc_range $v }
  method _g_./ancpRange/ancpPvcRange {t} { $self _cget_relative ./ancpRange -ancp_pvc_range }
  option -ancp_range_ancp_vlan_range \
    -configuremethod _c_./ancpRange/ancpVlanRange \
    -cgetmethod _g_./ancpRange/ancpVlanRange \
    -readonly false
  method _c_./ancpRange/ancpVlanRange {t v} { $self _configure_relative ./ancpRange -ancp_vlan_range $v }
  method _g_./ancpRange/ancpVlanRange {t} { $self _cget_relative ./ancpRange -ancp_vlan_range }
  option -ancp_range_ancp_mac_range \
    -configuremethod _c_./ancpRange/ancpMacRange \
    -cgetmethod _g_./ancpRange/ancpMacRange \
    -readonly false
  method _c_./ancpRange/ancpMacRange {t v} { $self _configure_relative ./ancpRange -ancp_mac_range $v }
  method _g_./ancpRange/ancpMacRange {t} { $self _cget_relative ./ancpRange -ancp_mac_range }
  option -ancp_range_ancp_atm_range \
    -configuremethod _c_./ancpRange/ancpAtmRange \
    -cgetmethod _g_./ancpRange/ancpAtmRange \
    -readonly false
  method _c_./ancpRange/ancpAtmRange {t v} { $self _configure_relative ./ancpRange -ancp_atm_range $v }
  method _g_./ancpRange/ancpAtmRange {t} { $self _cget_relative ./ancpRange -ancp_atm_range }
  option -ancp_range_dsl_resync_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslResyncProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslResyncProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslResyncProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_resync_profile_allocation_table $v }
  method _g_./ancpRange/dslResyncProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_resync_profile_allocation_table }
  option -ancp_range_dsl_profile_allocation_table \
    -configuremethod _c_./ancpRange/dslProfileAllocationTable \
    -cgetmethod _g_./ancpRange/dslProfileAllocationTable \
    -readonly false
  method _c_./ancpRange/dslProfileAllocationTable {t v} { $self _configure_relative ./ancpRange -dsl_profile_allocation_table $v }
  method _g_./ancpRange/dslProfileAllocationTable {t} { $self _cget_relative ./ancpRange -dsl_profile_allocation_table }
  option -ancp_range_ancp_ip_range_count \
    -configuremethod _c_./ancpRange/ancpIpRange/count \
    -cgetmethod _g_./ancpRange/ancpIpRange/count \
    -readonly false
  method _c_./ancpRange/ancpIpRange/count {t v} { $self _configure_relative ./ancpRange/ancpIpRange -count $v }
  method _g_./ancpRange/ancpIpRange/count {t} { $self _cget_relative ./ancpRange/ancpIpRange -count }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_count }
  
  option -ancp_range_ancp_ip_range_ip_type \
    -configuremethod _c_./ancpRange/ancpIpRange/ipType \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipType \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipType {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_type $v }
  method _g_./ancpRange/ancpIpRange/ipType {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_type }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_type }
  
  option -ancp_range_ancp_ip_range_enabled \
    -configuremethod _c_./ancpRange/ancpIpRange/enabled \
    -cgetmethod _g_./ancpRange/ancpIpRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enabled $v }
  method _g_./ancpRange/ancpIpRange/enabled {t} { $self _cget_relative ./ancpRange/ancpIpRange -enabled }
  option -ancp_range_ancp_ip_range_gateway_increment_mode \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrementMode \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrementMode {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment_mode $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrementMode {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment_mode }
  
  option -ancp_range_ancp_ip_range_enable_gateway_arp \
    -configuremethod _c_./ancpRange/ancpIpRange/enableGatewayArp \
    -cgetmethod _g_./ancpRange/ancpIpRange/enableGatewayArp \
    -readonly false
  method _c_./ancpRange/ancpIpRange/enableGatewayArp {t v} { $self _configure_relative ./ancpRange/ancpIpRange -enable_gateway_arp $v }
  method _g_./ancpRange/ancpIpRange/enableGatewayArp {t} { $self _cget_relative ./ancpRange/ancpIpRange -enable_gateway_arp }
  option -ancp_range_ancp_ip_range_ip_address \
    -configuremethod _c_./ancpRange/ancpIpRange/ipAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/ipAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/ipAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -ip_address $v }
  method _g_./ancpRange/ancpIpRange/ipAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -ip_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_ip_address }
  
  option -ancp_range_ancp_ip_range_gateway_increment \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayIncrement \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayIncrement \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayIncrement {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_increment $v }
  method _g_./ancpRange/ancpIpRange/gatewayIncrement {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_increment }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_increment }
  
  option -ancp_range_ancp_ip_range_increment_by \
    -configuremethod _c_./ancpRange/ancpIpRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpIpRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpIpRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpIpRange -increment_by $v }
  method _g_./ancpRange/ancpIpRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpIpRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_increment_by }
  
  option -ancp_range_ancp_ip_range_gateway_address \
    -configuremethod _c_./ancpRange/ancpIpRange/gatewayAddress \
    -cgetmethod _g_./ancpRange/ancpIpRange/gatewayAddress \
    -readonly false
  method _c_./ancpRange/ancpIpRange/gatewayAddress {t v} { $self _configure_relative ./ancpRange/ancpIpRange -gateway_address $v }
  method _g_./ancpRange/ancpIpRange/gatewayAddress {t} { $self _cget_relative ./ancpRange/ancpIpRange -gateway_address }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_gateway_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_gateway_address }
  
  option -ancp_range_ancp_ip_range_name \
    -configuremethod _c_./ancpRange/ancpIpRange/name \
    -cgetmethod _g_./ancpRange/ancpIpRange/name \
    -readonly false
  method _c_./ancpRange/ancpIpRange/name {t v} { $self _configure_relative ./ancpRange/ancpIpRange -name $v }
  method _g_./ancpRange/ancpIpRange/name {t} { $self _cget_relative ./ancpRange/ancpIpRange -name }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_name }
  
  option -ancp_range_ancp_ip_range_mss \
    -configuremethod _c_./ancpRange/ancpIpRange/mss \
    -cgetmethod _g_./ancpRange/ancpIpRange/mss \
    -readonly false
  method _c_./ancpRange/ancpIpRange/mss {t v} { $self _configure_relative ./ancpRange/ancpIpRange -mss $v }
  method _g_./ancpRange/ancpIpRange/mss {t} { $self _cget_relative ./ancpRange/ancpIpRange -mss }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_mss {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_mss }
  
  option -ancp_range_ancp_ip_range_object_id \
    -configuremethod _c_./ancpRange/ancpIpRange/objectId \
    -cgetmethod _g_./ancpRange/ancpIpRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpIpRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpIpRange -object_id $v }
  method _g_./ancpRange/ancpIpRange/objectId {t} { $self _cget_relative ./ancpRange/ancpIpRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_object_id }
  
  option -ancp_range_ancp_ip_range_prefix \
    -configuremethod _c_./ancpRange/ancpIpRange/prefix \
    -cgetmethod _g_./ancpRange/ancpIpRange/prefix \
    -readonly false
  method _c_./ancpRange/ancpIpRange/prefix {t v} { $self _configure_relative ./ancpRange/ancpIpRange -prefix $v }
  method _g_./ancpRange/ancpIpRange/prefix {t} { $self _cget_relative ./ancpRange/ancpIpRange -prefix }
  # multiplier 
  method _m_ancp_range_ancp_ip_range_prefix {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_ip_range_prefix }
  
  option -ancp_range_ancp_ip_range_auto_mac_generation \
    -configuremethod _c_./ancpRange/ancpIpRange/autoMacGeneration \
    -cgetmethod _g_./ancpRange/ancpIpRange/autoMacGeneration \
    -readonly false
  method _c_./ancpRange/ancpIpRange/autoMacGeneration {t v} { $self _configure_relative ./ancpRange/ancpIpRange -auto_mac_generation $v }
  method _g_./ancpRange/ancpIpRange/autoMacGeneration {t} { $self _cget_relative ./ancpRange/ancpIpRange -auto_mac_generation }
  option -ancp_range_ancp_pvc_range_vpi_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment_step }
  
  option -ancp_range_ancp_pvc_range_vci_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vciUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_unique_count }
  
  option -ancp_range_ancp_pvc_range_vci_increment_step \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrementStep \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment_step $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrementStep {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment_step }
  
  option -ancp_range_ancp_pvc_range_enabled \
    -configuremethod _c_./ancpRange/ancpPvcRange/enabled \
    -cgetmethod _g_./ancpRange/ancpPvcRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -enabled $v }
  method _g_./ancpRange/ancpPvcRange/enabled {t} { $self _cget_relative ./ancpRange/ancpPvcRange -enabled }
  option -ancp_range_ancp_pvc_range_vpi_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vpiFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_first_id }
  
  option -ancp_range_ancp_pvc_range_vpi_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_increment $v }
  method _g_./ancpRange/ancpPvcRange/vpiIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_increment }
  
  option -ancp_range_ancp_pvc_range_vci_first_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciFirstId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciFirstId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciFirstId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_first_id $v }
  method _g_./ancpRange/ancpPvcRange/vciFirstId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_first_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_first_id }
  
  option -ancp_range_ancp_pvc_range_vci_increment \
    -configuremethod _c_./ancpRange/ancpPvcRange/vciIncrement \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vciIncrement \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vciIncrement {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vci_increment $v }
  method _g_./ancpRange/ancpPvcRange/vciIncrement {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vci_increment }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vci_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vci_increment }
  
  option -ancp_range_ancp_pvc_range_name \
    -configuremethod _c_./ancpRange/ancpPvcRange/name \
    -cgetmethod _g_./ancpRange/ancpPvcRange/name \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/name {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -name $v }
  method _g_./ancpRange/ancpPvcRange/name {t} { $self _cget_relative ./ancpRange/ancpPvcRange -name }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_name }
  
  option -ancp_range_ancp_pvc_range_increment_mode \
    -configuremethod _c_./ancpRange/ancpPvcRange/incrementMode \
    -cgetmethod _g_./ancpRange/ancpPvcRange/incrementMode \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/incrementMode {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -increment_mode $v }
  method _g_./ancpRange/ancpPvcRange/incrementMode {t} { $self _cget_relative ./ancpRange/ancpPvcRange -increment_mode }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_increment_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_increment_mode }
  
  option -ancp_range_ancp_pvc_range_object_id \
    -configuremethod _c_./ancpRange/ancpPvcRange/objectId \
    -cgetmethod _g_./ancpRange/ancpPvcRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -object_id $v }
  method _g_./ancpRange/ancpPvcRange/objectId {t} { $self _cget_relative ./ancpRange/ancpPvcRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_object_id }
  
  option -ancp_range_ancp_pvc_range_vpi_unique_count \
    -configuremethod _c_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -cgetmethod _g_./ancpRange/ancpPvcRange/vpiUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpPvcRange/vpiUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpPvcRange -vpi_unique_count $v }
  method _g_./ancpRange/ancpPvcRange/vpiUniqueCount {t} { $self _cget_relative ./ancpRange/ancpPvcRange -vpi_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_pvc_range_vpi_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_pvc_range_vpi_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerFirstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerFirstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerFirstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_first_id $v }
  method _g_./ancpRange/ancpVlanRange/innerFirstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_first_id }
  
  option -ancp_range_ancp_vlan_range_inner_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrement \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrement \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrement {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrement {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment }
  
  option -ancp_range_ancp_vlan_range_enabled \
    -configuremethod _c_./ancpRange/ancpVlanRange/enabled \
    -cgetmethod _g_./ancpRange/ancpVlanRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -enabled $v }
  method _g_./ancpRange/ancpVlanRange/enabled {t} { $self _cget_relative ./ancpRange/ancpVlanRange -enabled }
  option -ancp_range_ancp_vlan_range_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/uniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/uniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/uniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -unique_count $v }
  method _g_./ancpRange/ancpVlanRange/uniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_unique_count }
  
  option -ancp_range_ancp_vlan_range_name \
    -configuremethod _c_./ancpRange/ancpVlanRange/name \
    -cgetmethod _g_./ancpRange/ancpVlanRange/name \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/name {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -name $v }
  method _g_./ancpRange/ancpVlanRange/name {t} { $self _cget_relative ./ancpRange/ancpVlanRange -name }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_name }
  
  option -ancp_range_ancp_vlan_range_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/incrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/incrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/incrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment_step $v }
  method _g_./ancpRange/ancpVlanRange/incrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment_step }
  
  option -ancp_range_ancp_vlan_range_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/tpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/tpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/tpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -tpid $v }
  method _g_./ancpRange/ancpVlanRange/tpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_tpid }
  
  option -ancp_range_ancp_vlan_range_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/priority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/priority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/priority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -priority $v }
  method _g_./ancpRange/ancpVlanRange/priority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_priority }
  
  option -ancp_range_ancp_vlan_range_inner_enable \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerEnable \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerEnable \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerEnable {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_enable $v }
  method _g_./ancpRange/ancpVlanRange/innerEnable {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_enable }
  option -ancp_range_ancp_vlan_range_object_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/objectId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -object_id $v }
  method _g_./ancpRange/ancpVlanRange/objectId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_object_id }
  
  option -ancp_range_ancp_vlan_range_inner_unique_count \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerUniqueCount \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerUniqueCount \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerUniqueCount {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_unique_count $v }
  method _g_./ancpRange/ancpVlanRange/innerUniqueCount {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_unique_count }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_unique_count }
  
  option -ancp_range_ancp_vlan_range_inner_tpid \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerTpid \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerTpid \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerTpid {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_tpid $v }
  method _g_./ancpRange/ancpVlanRange/innerTpid {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_tpid }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_tpid }
  
  option -ancp_range_ancp_vlan_range_first_id \
    -configuremethod _c_./ancpRange/ancpVlanRange/firstId \
    -cgetmethod _g_./ancpRange/ancpVlanRange/firstId \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/firstId {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -first_id $v }
  method _g_./ancpRange/ancpVlanRange/firstId {t} { $self _cget_relative ./ancpRange/ancpVlanRange -first_id }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_first_id }
  
  option -ancp_range_ancp_vlan_range_increment \
    -configuremethod _c_./ancpRange/ancpVlanRange/increment \
    -cgetmethod _g_./ancpRange/ancpVlanRange/increment \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/increment {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -increment $v }
  method _g_./ancpRange/ancpVlanRange/increment {t} { $self _cget_relative ./ancpRange/ancpVlanRange -increment }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_increment }
  
  option -ancp_range_ancp_vlan_range_inner_increment_step \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerIncrementStep \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerIncrementStep \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerIncrementStep {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_increment_step $v }
  method _g_./ancpRange/ancpVlanRange/innerIncrementStep {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_increment_step }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_increment_step }
  
  option -ancp_range_ancp_vlan_range_id_incr_mode \
    -configuremethod _c_./ancpRange/ancpVlanRange/idIncrMode \
    -cgetmethod _g_./ancpRange/ancpVlanRange/idIncrMode \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/idIncrMode {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -id_incr_mode $v }
  method _g_./ancpRange/ancpVlanRange/idIncrMode {t} { $self _cget_relative ./ancpRange/ancpVlanRange -id_incr_mode }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_id_incr_mode }
  
  option -ancp_range_ancp_vlan_range_inner_priority \
    -configuremethod _c_./ancpRange/ancpVlanRange/innerPriority \
    -cgetmethod _g_./ancpRange/ancpVlanRange/innerPriority \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/innerPriority {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -inner_priority $v }
  method _g_./ancpRange/ancpVlanRange/innerPriority {t} { $self _cget_relative ./ancpRange/ancpVlanRange -inner_priority }
  # multiplier 
  method _m_ancp_range_ancp_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_vlan_range_inner_priority }
  
  option -ancp_range_ancp_vlan_range_vlan_id_info \
    -configuremethod _c_./ancpRange/ancpVlanRange/vlanIdInfo \
    -cgetmethod _g_./ancpRange/ancpVlanRange/vlanIdInfo \
    -readonly false
  method _c_./ancpRange/ancpVlanRange/vlanIdInfo {t v} { $self _configure_relative ./ancpRange/ancpVlanRange -vlan_id_info $v }
  method _g_./ancpRange/ancpVlanRange/vlanIdInfo {t} { $self _cget_relative ./ancpRange/ancpVlanRange -vlan_id_info }
  option -ancp_range_ancp_mac_range_object_id \
    -configuremethod _c_./ancpRange/ancpMacRange/objectId \
    -cgetmethod _g_./ancpRange/ancpMacRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpMacRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpMacRange -object_id $v }
  method _g_./ancpRange/ancpMacRange/objectId {t} { $self _cget_relative ./ancpRange/ancpMacRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_object_id }
  
  option -ancp_range_ancp_mac_range_increment_by \
    -configuremethod _c_./ancpRange/ancpMacRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpMacRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpMacRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpMacRange -increment_by $v }
  method _g_./ancpRange/ancpMacRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpMacRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_increment_by }
  
  option -ancp_range_ancp_mac_range_name \
    -configuremethod _c_./ancpRange/ancpMacRange/name \
    -cgetmethod _g_./ancpRange/ancpMacRange/name \
    -readonly false
  method _c_./ancpRange/ancpMacRange/name {t v} { $self _configure_relative ./ancpRange/ancpMacRange -name $v }
  method _g_./ancpRange/ancpMacRange/name {t} { $self _cget_relative ./ancpRange/ancpMacRange -name }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_name }
  
  option -ancp_range_ancp_mac_range_count \
    -configuremethod _c_./ancpRange/ancpMacRange/count \
    -cgetmethod _g_./ancpRange/ancpMacRange/count \
    -readonly false
  method _c_./ancpRange/ancpMacRange/count {t v} { $self _configure_relative ./ancpRange/ancpMacRange -count $v }
  method _g_./ancpRange/ancpMacRange/count {t} { $self _cget_relative ./ancpRange/ancpMacRange -count }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_count }
  
  option -ancp_range_ancp_mac_range_mac \
    -configuremethod _c_./ancpRange/ancpMacRange/mac \
    -cgetmethod _g_./ancpRange/ancpMacRange/mac \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mac {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mac $v }
  method _g_./ancpRange/ancpMacRange/mac {t} { $self _cget_relative ./ancpRange/ancpMacRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mac }
  
  option -ancp_range_ancp_mac_range_mtu \
    -configuremethod _c_./ancpRange/ancpMacRange/mtu \
    -cgetmethod _g_./ancpRange/ancpMacRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpMacRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpMacRange -mtu $v }
  method _g_./ancpRange/ancpMacRange/mtu {t} { $self _cget_relative ./ancpRange/ancpMacRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_mac_range_mtu }
  
  option -ancp_range_ancp_mac_range_enabled \
    -configuremethod _c_./ancpRange/ancpMacRange/enabled \
    -cgetmethod _g_./ancpRange/ancpMacRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpMacRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpMacRange -enabled $v }
  method _g_./ancpRange/ancpMacRange/enabled {t} { $self _cget_relative ./ancpRange/ancpMacRange -enabled }
  option -ancp_range_ancp_atm_range_object_id \
    -configuremethod _c_./ancpRange/ancpAtmRange/objectId \
    -cgetmethod _g_./ancpRange/ancpAtmRange/objectId \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/objectId {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -object_id $v }
  method _g_./ancpRange/ancpAtmRange/objectId {t} { $self _cget_relative ./ancpRange/ancpAtmRange -object_id }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_object_id }
  
  option -ancp_range_ancp_atm_range_increment_by \
    -configuremethod _c_./ancpRange/ancpAtmRange/incrementBy \
    -cgetmethod _g_./ancpRange/ancpAtmRange/incrementBy \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/incrementBy {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -increment_by $v }
  method _g_./ancpRange/ancpAtmRange/incrementBy {t} { $self _cget_relative ./ancpRange/ancpAtmRange -increment_by }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_increment_by }
  
  option -ancp_range_ancp_atm_range_name \
    -configuremethod _c_./ancpRange/ancpAtmRange/name \
    -cgetmethod _g_./ancpRange/ancpAtmRange/name \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/name {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -name $v }
  method _g_./ancpRange/ancpAtmRange/name {t} { $self _cget_relative ./ancpRange/ancpAtmRange -name }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_name }
  
  option -ancp_range_ancp_atm_range_count \
    -configuremethod _c_./ancpRange/ancpAtmRange/count \
    -cgetmethod _g_./ancpRange/ancpAtmRange/count \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/count {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -count $v }
  method _g_./ancpRange/ancpAtmRange/count {t} { $self _cget_relative ./ancpRange/ancpAtmRange -count }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_count }
  
  option -ancp_range_ancp_atm_range_mac \
    -configuremethod _c_./ancpRange/ancpAtmRange/mac \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mac \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mac {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mac $v }
  method _g_./ancpRange/ancpAtmRange/mac {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mac }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mac }
  
  option -ancp_range_ancp_atm_range_mtu \
    -configuremethod _c_./ancpRange/ancpAtmRange/mtu \
    -cgetmethod _g_./ancpRange/ancpAtmRange/mtu \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/mtu {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -mtu $v }
  method _g_./ancpRange/ancpAtmRange/mtu {t} { $self _cget_relative ./ancpRange/ancpAtmRange -mtu }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_mtu }
  
  option -ancp_range_ancp_atm_range_encapsulation \
    -configuremethod _c_./ancpRange/ancpAtmRange/encapsulation \
    -cgetmethod _g_./ancpRange/ancpAtmRange/encapsulation \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/encapsulation {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -encapsulation $v }
  method _g_./ancpRange/ancpAtmRange/encapsulation {t} { $self _cget_relative ./ancpRange/ancpAtmRange -encapsulation }
  # multiplier 
  method _m_ancp_range_ancp_atm_range_encapsulation {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ancp_range_ancp_atm_range_encapsulation }
  
  option -ancp_range_ancp_atm_range_enabled \
    -configuremethod _c_./ancpRange/ancpAtmRange/enabled \
    -cgetmethod _g_./ancpRange/ancpAtmRange/enabled \
    -readonly false
  method _c_./ancpRange/ancpAtmRange/enabled {t v} { $self _configure_relative ./ancpRange/ancpAtmRange -enabled $v }
  method _g_./ancpRange/ancpAtmRange/enabled {t} { $self _cget_relative ./ancpRange/ancpAtmRange -enabled }
  option -iptv_range_inter_stb_start_delay \
    -configuremethod _c_./iptvRange/interStbStartDelay \
    -cgetmethod _g_./iptvRange/interStbStartDelay \
    -readonly false
  method _c_./iptvRange/interStbStartDelay {t v} { $self _configure_relative ./iptvRange -inter_stb_start_delay $v }
  method _g_./iptvRange/interStbStartDelay {t} { $self _cget_relative ./iptvRange -inter_stb_start_delay }
  # multiplier 
  method _m_iptv_range_inter_stb_start_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_inter_stb_start_delay }
  
  option -iptv_range_router_alert \
    -configuremethod _c_./iptvRange/routerAlert \
    -cgetmethod _g_./iptvRange/routerAlert \
    -readonly false
  method _c_./iptvRange/routerAlert {t v} { $self _configure_relative ./iptvRange -router_alert $v }
  method _g_./iptvRange/routerAlert {t} { $self _cget_relative ./iptvRange -router_alert }
  option -iptv_range_viewing_profile \
    -configuremethod _c_./iptvRange/viewingProfile \
    -cgetmethod _g_./iptvRange/viewingProfile \
    -readonly false
  method _c_./iptvRange/viewingProfile {t v} { $self _configure_relative ./iptvRange -viewing_profile $v }
  method _g_./iptvRange/viewingProfile {t} { $self _cget_relative ./iptvRange -viewing_profile }
  option -iptv_range_leave_latency_threshold \
    -configuremethod _c_./iptvRange/leaveLatencyThreshold \
    -cgetmethod _g_./iptvRange/leaveLatencyThreshold \
    -readonly false
  method _c_./iptvRange/leaveLatencyThreshold {t v} { $self _configure_relative ./iptvRange -leave_latency_threshold $v }
  method _g_./iptvRange/leaveLatencyThreshold {t} { $self _cget_relative ./iptvRange -leave_latency_threshold }
  # multiplier 
  method _m_iptv_range_leave_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_leave_latency_threshold }
  
  option -iptv_range_enabled \
    -configuremethod _c_./iptvRange/enabled \
    -cgetmethod _g_./iptvRange/enabled \
    -readonly false
  method _c_./iptvRange/enabled {t v} { $self _configure_relative ./iptvRange -enabled $v }
  method _g_./iptvRange/enabled {t} { $self _cget_relative ./iptvRange -enabled }
  option -iptv_range_join_latency_threshold \
    -configuremethod _c_./iptvRange/joinLatencyThreshold \
    -cgetmethod _g_./iptvRange/joinLatencyThreshold \
    -readonly false
  method _c_./iptvRange/joinLatencyThreshold {t v} { $self _configure_relative ./iptvRange -join_latency_threshold $v }
  method _g_./iptvRange/joinLatencyThreshold {t} { $self _cget_relative ./iptvRange -join_latency_threshold }
  # multiplier 
  method _m_iptv_range_join_latency_threshold {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_latency_threshold }
  
  option -iptv_range_report_frequency \
    -configuremethod _c_./iptvRange/reportFrequency \
    -cgetmethod _g_./iptvRange/reportFrequency \
    -readonly false
  method _c_./iptvRange/reportFrequency {t v} { $self _configure_relative ./iptvRange -report_frequency $v }
  method _g_./iptvRange/reportFrequency {t} { $self _cget_relative ./iptvRange -report_frequency }
  # multiplier 
  method _m_iptv_range_report_frequency {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_report_frequency }
  
  option -iptv_range_unsolicited_response_mode \
    -configuremethod _c_./iptvRange/unsolicitedResponseMode \
    -cgetmethod _g_./iptvRange/unsolicitedResponseMode \
    -readonly false
  method _c_./iptvRange/unsolicitedResponseMode {t v} { $self _configure_relative ./iptvRange -unsolicited_response_mode $v }
  method _g_./iptvRange/unsolicitedResponseMode {t} { $self _cget_relative ./iptvRange -unsolicited_response_mode }
  option -iptv_range_general_query_response_mode \
    -configuremethod _c_./iptvRange/generalQueryResponseMode \
    -cgetmethod _g_./iptvRange/generalQueryResponseMode \
    -readonly false
  method _c_./iptvRange/generalQueryResponseMode {t v} { $self _configure_relative ./iptvRange -general_query_response_mode $v }
  method _g_./iptvRange/generalQueryResponseMode {t} { $self _cget_relative ./iptvRange -general_query_response_mode }
  option -iptv_range_specific_query_response_mode \
    -configuremethod _c_./iptvRange/specificQueryResponseMode \
    -cgetmethod _g_./iptvRange/specificQueryResponseMode \
    -readonly false
  method _c_./iptvRange/specificQueryResponseMode {t v} { $self _configure_relative ./iptvRange -specific_query_response_mode $v }
  method _g_./iptvRange/specificQueryResponseMode {t} { $self _cget_relative ./iptvRange -specific_query_response_mode }
  option -iptv_range_name \
    -configuremethod _c_./iptvRange/name \
    -cgetmethod _g_./iptvRange/name \
    -readonly false
  method _c_./iptvRange/name {t v} { $self _configure_relative ./iptvRange -name $v }
  method _g_./iptvRange/name {t} { $self _cget_relative ./iptvRange -name }
  # multiplier 
  method _m_iptv_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_name }
  
  option -iptv_range_log_failure_timestamps \
    -configuremethod _c_./iptvRange/logFailureTimestamps \
    -cgetmethod _g_./iptvRange/logFailureTimestamps \
    -readonly false
  method _c_./iptvRange/logFailureTimestamps {t v} { $self _configure_relative ./iptvRange -log_failure_timestamps $v }
  method _g_./iptvRange/logFailureTimestamps {t} { $self _cget_relative ./iptvRange -log_failure_timestamps }
  option -iptv_range_object_id \
    -configuremethod _c_./iptvRange/objectId \
    -cgetmethod _g_./iptvRange/objectId \
    -readonly false
  method _c_./iptvRange/objectId {t v} { $self _configure_relative ./iptvRange -object_id $v }
  method _g_./iptvRange/objectId {t} { $self _cget_relative ./iptvRange -object_id }
  # multiplier 
  method _m_iptv_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_object_id }
  
  option -iptv_range_join_leave_multiplier \
    -configuremethod _c_./iptvRange/joinLeaveMultiplier \
    -cgetmethod _g_./iptvRange/joinLeaveMultiplier \
    -readonly false
  method _c_./iptvRange/joinLeaveMultiplier {t v} { $self _configure_relative ./iptvRange -join_leave_multiplier $v }
  method _g_./iptvRange/joinLeaveMultiplier {t} { $self _cget_relative ./iptvRange -join_leave_multiplier }
  # multiplier 
  method _m_iptv_range_join_leave_multiplier {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_join_leave_multiplier }
  
  option -iptv_range_stb_leave_join_delay \
    -configuremethod _c_./iptvRange/stbLeaveJoinDelay \
    -cgetmethod _g_./iptvRange/stbLeaveJoinDelay \
    -readonly false
  method _c_./iptvRange/stbLeaveJoinDelay {t v} { $self _configure_relative ./iptvRange -stb_leave_join_delay $v }
  method _g_./iptvRange/stbLeaveJoinDelay {t} { $self _cget_relative ./iptvRange -stb_leave_join_delay }
  # multiplier 
  method _m_iptv_range_stb_leave_join_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -iptv_range_stb_leave_join_delay }
  
  option -iptv_range_version \
    -configuremethod _c_./iptvRange/version \
    -cgetmethod _g_./iptvRange/version \
    -readonly false
  method _c_./iptvRange/version {t v} { $self _configure_relative ./iptvRange -version $v }
  method _g_./iptvRange/version {t} { $self _cget_relative ./iptvRange -version }
  # multiplier 
  method _m_iptv_range_version {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -iptv_range_version }
  
  option -iptv_range_immediate_response \
    -configuremethod _c_./iptvRange/immediateResponse \
    -cgetmethod _g_./iptvRange/immediateResponse \
    -readonly false
  method _c_./iptvRange/immediateResponse {t v} { $self _configure_relative ./iptvRange -immediate_response $v }
  method _g_./iptvRange/immediateResponse {t} { $self _cget_relative ./iptvRange -immediate_response }
  option -iptv_range_iptv_channels \
    -configuremethod _c_./iptvRange/iptvChannels \
    -cgetmethod _g_./iptvRange/iptvChannels \
    -readonly false
  method _c_./iptvRange/iptvChannels {t v} { $self _configure_relative ./iptvRange -iptv_channels $v }
  method _g_./iptvRange/iptvChannels {t} { $self _cget_relative ./iptvRange -iptv_channels }
  option -eapo_udp_range_expected_system_token \
    -configuremethod _c_./eapoUdpRange/expectedSystemToken \
    -cgetmethod _g_./eapoUdpRange/expectedSystemToken \
    -readonly false
  method _c_./eapoUdpRange/expectedSystemToken {t v} { $self _configure_relative ./eapoUdpRange -expected_system_token $v }
  method _g_./eapoUdpRange/expectedSystemToken {t} { $self _cget_relative ./eapoUdpRange -expected_system_token }
  # multiplier 
  method _m_eapo_udp_range_expected_system_token {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_expected_system_token }
  
  option -eapo_udp_range_user_password \
    -configuremethod _c_./eapoUdpRange/userPassword \
    -cgetmethod _g_./eapoUdpRange/userPassword \
    -readonly false
  method _c_./eapoUdpRange/userPassword {t v} { $self _configure_relative ./eapoUdpRange -user_password $v }
  method _g_./eapoUdpRange/userPassword {t} { $self _cget_relative ./eapoUdpRange -user_password }
  # multiplier 
  method _m_eapo_udp_range_user_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_password }
  
  option -eapo_udp_range_enabled \
    -configuremethod _c_./eapoUdpRange/enabled \
    -cgetmethod _g_./eapoUdpRange/enabled \
    -readonly false
  method _c_./eapoUdpRange/enabled {t v} { $self _configure_relative ./eapoUdpRange -enabled $v }
  method _g_./eapoUdpRange/enabled {t} { $self _cget_relative ./eapoUdpRange -enabled }
  option -eapo_udp_range_nac_sequence \
    -configuremethod _c_./eapoUdpRange/nacSequence \
    -cgetmethod _g_./eapoUdpRange/nacSequence \
    -readonly false
  method _c_./eapoUdpRange/nacSequence {t v} { $self _configure_relative ./eapoUdpRange -nac_sequence $v }
  method _g_./eapoUdpRange/nacSequence {t} { $self _cget_relative ./eapoUdpRange -nac_sequence }
  option -eapo_udp_range_fast_stateless_resume \
    -configuremethod _c_./eapoUdpRange/fastStatelessResume \
    -cgetmethod _g_./eapoUdpRange/fastStatelessResume \
    -readonly false
  method _c_./eapoUdpRange/fastStatelessResume {t v} { $self _configure_relative ./eapoUdpRange -fast_stateless_resume $v }
  method _g_./eapoUdpRange/fastStatelessResume {t} { $self _cget_relative ./eapoUdpRange -fast_stateless_resume }
  # multiplier 
  method _m_eapo_udp_range_fast_stateless_resume {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_stateless_resume }
  
  option -eapo_udp_range_user_name \
    -configuremethod _c_./eapoUdpRange/userName \
    -cgetmethod _g_./eapoUdpRange/userName \
    -readonly false
  method _c_./eapoUdpRange/userName {t v} { $self _configure_relative ./eapoUdpRange -user_name $v }
  method _g_./eapoUdpRange/userName {t} { $self _cget_relative ./eapoUdpRange -user_name }
  # multiplier 
  method _m_eapo_udp_range_user_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_user_name }
  
  option -eapo_udp_range_response_type \
    -configuremethod _c_./eapoUdpRange/responseType \
    -cgetmethod _g_./eapoUdpRange/responseType \
    -readonly false
  method _c_./eapoUdpRange/responseType {t v} { $self _configure_relative ./eapoUdpRange -response_type $v }
  method _g_./eapoUdpRange/responseType {t} { $self _cget_relative ./eapoUdpRange -response_type }
  # multiplier 
  method _m_eapo_udp_range_response_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_response_type }
  
  option -eapo_udp_range_name \
    -configuremethod _c_./eapoUdpRange/name \
    -cgetmethod _g_./eapoUdpRange/name \
    -readonly false
  method _c_./eapoUdpRange/name {t v} { $self _configure_relative ./eapoUdpRange -name $v }
  method _g_./eapoUdpRange/name {t} { $self _cget_relative ./eapoUdpRange -name }
  # multiplier 
  method _m_eapo_udp_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_name }
  
  option -eapo_udp_range_protocol \
    -configuremethod _c_./eapoUdpRange/protocol \
    -cgetmethod _g_./eapoUdpRange/protocol \
    -readonly false
  method _c_./eapoUdpRange/protocol {t v} { $self _configure_relative ./eapoUdpRange -protocol $v }
  method _g_./eapoUdpRange/protocol {t} { $self _cget_relative ./eapoUdpRange -protocol }
  # multiplier 
  method _m_eapo_udp_range_protocol {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_protocol }
  
  option -eapo_udp_range_fast_inner_method \
    -configuremethod _c_./eapoUdpRange/fastInnerMethod \
    -cgetmethod _g_./eapoUdpRange/fastInnerMethod \
    -readonly false
  method _c_./eapoUdpRange/fastInnerMethod {t v} { $self _configure_relative ./eapoUdpRange -fast_inner_method $v }
  method _g_./eapoUdpRange/fastInnerMethod {t} { $self _cget_relative ./eapoUdpRange -fast_inner_method }
  # multiplier 
  method _m_eapo_udp_range_fast_inner_method {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_inner_method }
  
  option -eapo_udp_range_fast_provision_mode \
    -configuremethod _c_./eapoUdpRange/fastProvisionMode \
    -cgetmethod _g_./eapoUdpRange/fastProvisionMode \
    -readonly false
  method _c_./eapoUdpRange/fastProvisionMode {t v} { $self _configure_relative ./eapoUdpRange -fast_provision_mode $v }
  method _g_./eapoUdpRange/fastProvisionMode {t} { $self _cget_relative ./eapoUdpRange -fast_provision_mode }
  # multiplier 
  method _m_eapo_udp_range_fast_provision_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_fast_provision_mode }
  
  option -eapo_udp_range_object_id \
    -configuremethod _c_./eapoUdpRange/objectId \
    -cgetmethod _g_./eapoUdpRange/objectId \
    -readonly false
  method _c_./eapoUdpRange/objectId {t v} { $self _configure_relative ./eapoUdpRange -object_id $v }
  method _g_./eapoUdpRange/objectId {t} { $self _cget_relative ./eapoUdpRange -object_id }
  # multiplier 
  method _m_eapo_udp_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -eapo_udp_range_object_id }
  
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -dot1x_range_user_password ./dot1xRange/userPassword
    -dot1x_range_nac_sequence ./dot1xRange/nacSequence
    -dot1x_range_enabled ./dot1xRange/enabled
    -dot1x_range_fast_stateless_resume ./dot1xRange/fastStatelessResume
    -dot1x_range_user_name ./dot1xRange/userName
    -dot1x_range_host_password ./dot1xRange/hostPassword
    -dot1x_range_name ./dot1xRange/name
    -dot1x_range_wait_id ./dot1xRange/waitId
    -dot1x_range_protocol ./dot1xRange/protocol
    -dot1x_range_fast_inner_method ./dot1xRange/fastInnerMethod
    -dot1x_range_object_id ./dot1xRange/objectId
    -dot1x_range_fast_provision_mode ./dot1xRange/fastProvisionMode
    -dot1x_range_host_auth_mode ./dot1xRange/hostAuthMode
    -dot1x_range_host_name ./dot1xRange/hostName
    -esmc_range_object_id ./esmcRange/objectId
    -esmc_range_rate ./esmcRange/rate
    -esmc_range_name ./esmcRange/name
    -esmc_range_ql ./esmcRange/ql
    -esmc_range_wait_id ./esmcRange/waitId
    -esmc_range_enabled ./esmcRange/enabled
    -esmc_range_flag_mode ./esmcRange/flagMode
    -web_auth_range_object_id ./webAuthRange/objectId
    -web_auth_range_input_value3 ./webAuthRange/inputValue3
    -web_auth_range_name ./webAuthRange/name
    -web_auth_range_expect ./webAuthRange/expect
    -web_auth_range_input_value1 ./webAuthRange/inputValue1
    -web_auth_range_enabled ./webAuthRange/enabled
    -web_auth_range_input_value2 ./webAuthRange/inputValue2
    -twamp_server_range_iteration_count ./twampServerRange/iterationCount
    -twamp_server_range_count ./twampServerRange/count
    -twamp_server_range_enabled ./twampServerRange/enabled
    -twamp_server_range_reflector_port ./twampServerRange/reflectorPort
    -twamp_server_range_max_test_sessions ./twampServerRange/maxTestSessions
    -twamp_server_range_control_port ./twampServerRange/controlPort
    -twamp_server_range_key_id ./twampServerRange/keyId
    -twamp_server_range_permitted_ip ./twampServerRange/permittedIp
    -twamp_server_range_name ./twampServerRange/name
    -twamp_server_range_enable_access_control ./twampServerRange/enableAccessControl
    -twamp_server_range_object_id ./twampServerRange/objectId
    -twamp_server_range_permitted_ip_increment ./twampServerRange/permittedIpIncrement
    -twamp_server_range_permitted_sender_port ./twampServerRange/permittedSenderPort
    -twamp_server_range_mode ./twampServerRange/mode
    -twamp_server_range_secret ./twampServerRange/secret
    -mac_range_object_id ./macRange/objectId
    -mac_range_increment_by ./macRange/incrementBy
    -mac_range_name ./macRange/name
    -mac_range_count ./macRange/count
    -mac_range_mac ./macRange/mac
    -mac_range_mtu ./macRange/mtu
    -mac_range_enabled ./macRange/enabled
    -vic_client_range_prov_info_tlvs ./vicClientRange/provInfoTlvs
    -vic_client_range_object_id ./vicClientRange/objectId
    -vic_client_range_macs_per_vif ./vicClientRange/macsPerVif
    -vic_client_range_channel_id_start ./vicClientRange/channelIdStart
    -vic_client_range_prov_info_oui ./vicClientRange/provInfoOui
    -vic_client_range_name ./vicClientRange/name
    -vic_client_range_vif_active ./vicClientRange/vifActive
    -vic_client_range_tlv_offset ./vicClientRange/tlvOffset
    -vic_client_range_prov_info_type ./vicClientRange/provInfoType
    -vic_client_range_enabled ./vicClientRange/enabled
    -vic_client_range_channel_id_increment ./vicClientRange/channelIdIncrement
    -ip_range_count ./ipRange/count
    -ip_range_ip_type ./ipRange/ipType
    -ip_range_enabled ./ipRange/enabled
    -ip_range_gateway_increment_mode ./ipRange/gatewayIncrementMode
    -ip_range_enable_gateway_arp ./ipRange/enableGatewayArp
    -ip_range_ip_address ./ipRange/ipAddress
    -ip_range_gateway_increment ./ipRange/gatewayIncrement
    -ip_range_increment_by ./ipRange/incrementBy
    -ip_range_gateway_address ./ipRange/gatewayAddress
    -ip_range_name ./ipRange/name
    -ip_range_mss ./ipRange/mss
    -ip_range_object_id ./ipRange/objectId
    -ip_range_prefix ./ipRange/prefix
    -ip_range_auto_mac_generation ./ipRange/autoMacGeneration
    -ptp_range_over_ip_master_mac_increment_inter_entity ./ptpRangeOverIp/masterMacIncrementInterEntity
    -ptp_range_over_ip_communication_mode ./ptpRangeOverIp/communicationMode
    -ptp_range_over_ip_send_announce_multicast ./ptpRangeOverIp/sendAnnounceMulticast
    -ptp_range_over_ip_follow_up_delay ./ptpRangeOverIp/followUpDelay
    -ptp_range_over_ip_domain ./ptpRangeOverIp/domain
    -ptp_range_over_ip_announce_drop_rate ./ptpRangeOverIp/announceDropRate
    -ptp_range_over_ip_client_ip_increment_by ./ptpRangeOverIp/clientIpIncrementBy
    -ptp_range_over_ip_renewal_invited ./ptpRangeOverIp/renewalInvited
    -ptp_range_over_ip_port_number_increment ./ptpRangeOverIp/portNumberIncrement
    -ptp_range_over_ip_use_clock_identity ./ptpRangeOverIp/useClockIdentity
    -ptp_range_over_ip_priority1 ./ptpRangeOverIp/priority1
    -ptp_range_over_ip_use_alternate_master_flag ./ptpRangeOverIp/useAlternateMasterFlag
    -ptp_range_over_ip_object_id ./ptpRangeOverIp/objectId
    -ptp_range_over_ip_delay_resp_receipt_timeout ./ptpRangeOverIp/delayRespReceiptTimeout
    -ptp_range_over_ip_announce_frequency_traceable ./ptpRangeOverIp/announceFrequencyTraceable
    -ptp_range_over_ip_priority2 ./ptpRangeOverIp/priority2
    -ptp_range_over_ip_announce_current_utc_offset_valid ./ptpRangeOverIp/announceCurrentUtcOffsetValid
    -ptp_range_over_ip_client_mac_address ./ptpRangeOverIp/clientMacAddress
    -ptp_range_over_ip_time_source ./ptpRangeOverIp/timeSource
    -ptp_range_over_ip_steps_removed ./ptpRangeOverIp/stepsRemoved
    -ptp_range_over_ip_clock_class ./ptpRangeOverIp/clockClass
    -ptp_range_over_ip_request_attempts ./ptpRangeOverIp/requestAttempts
    -ptp_range_over_ip_follow_up_bad_crc_rate ./ptpRangeOverIp/followUpBadCrcRate
    -ptp_range_over_ip_delay_response_delay_insertion_rate ./ptpRangeOverIp/delayResponseDelayInsertionRate
    -ptp_range_over_ip_log_sync_interval ./ptpRangeOverIp/logSyncInterval
    -ptp_range_over_ip_master_count ./ptpRangeOverIp/masterCount
    -ptp_range_over_ip_residence_time ./ptpRangeOverIp/residenceTime
    -ptp_range_over_ip_signal_interval ./ptpRangeOverIp/signalInterval
    -ptp_range_over_ip_delay_mechanism ./ptpRangeOverIp/delayMechanism
    -ptp_range_over_ip_strict_grant ./ptpRangeOverIp/strictGrant
    -ptp_range_over_ip_sync_drop_rate ./ptpRangeOverIp/syncDropRate
    -ptp_range_over_ip_drop_signal_req_sync ./ptpRangeOverIp/dropSignalReqSync
    -ptp_range_over_ip_clock_increment ./ptpRangeOverIp/clockIncrement
    -ptp_range_over_ip_announce_ptp_timescale ./ptpRangeOverIp/announcePtpTimescale
    -ptp_range_over_ip_signal_unicast_handling ./ptpRangeOverIp/signalUnicastHandling
    -ptp_range_over_ip_enabled ./ptpRangeOverIp/enabled
    -ptp_range_over_ip_timestamp_offset ./ptpRangeOverIp/timestampOffset
    -ptp_range_over_ip_master_ip_increment_by ./ptpRangeOverIp/masterIpIncrementBy
    -ptp_range_over_ip_request_interval ./ptpRangeOverIp/requestInterval
    -ptp_range_over_ip_ip_tos ./ptpRangeOverIp/ipTos
    -ptp_range_over_ip_request_holddown ./ptpRangeOverIp/requestHolddown
    -ptp_range_over_ip_client_mac_increment_by ./ptpRangeOverIp/clientMacIncrementBy
    -ptp_range_over_ip_name ./ptpRangeOverIp/name
    -ptp_range_over_ip_drop_signal_req_announce ./ptpRangeOverIp/dropSignalReqAnnounce
    -ptp_range_over_ip_master_ip_address ./ptpRangeOverIp/masterIpAddress
    -ptp_range_over_ip_first_clock ./ptpRangeOverIp/firstClock
    -ptp_range_over_ip_master_mac_increment_by ./ptpRangeOverIp/masterMacIncrementBy
    -ptp_range_over_ip_send_cancel_tlv ./ptpRangeOverIp/sendCancelTlv
    -ptp_range_over_ip_port_number ./ptpRangeOverIp/portNumber
    -ptp_range_over_ip_client_ip_address ./ptpRangeOverIp/clientIpAddress
    -ptp_range_over_ip_announce_leap59 ./ptpRangeOverIp/announceLeap59
    -ptp_range_over_ip_send_announce_tlv ./ptpRangeOverIp/sendAnnounceTlv
    -ptp_range_over_ip_sync_receipt_timeout ./ptpRangeOverIp/syncReceiptTimeout
    -ptp_range_over_ip_announce_leap61 ./ptpRangeOverIp/announceLeap61
    -ptp_range_over_ip_grant_delay_resp_duration_interval ./ptpRangeOverIp/grantDelayRespDurationInterval
    -ptp_range_over_ip_timestamp_offset_variation ./ptpRangeOverIp/timestampOffsetVariation
    -ptp_range_over_ip_follow_up_drop_rate ./ptpRangeOverIp/followUpDropRate
    -ptp_range_over_ip_master_mac_address ./ptpRangeOverIp/masterMacAddress
    -ptp_range_over_ip_drop_signal_req_delay_resp ./ptpRangeOverIp/dropSignalReqDelayResp
    -ptp_range_over_ip_grant_sync_duration_interval ./ptpRangeOverIp/grantSyncDurationInterval
    -ptp_range_over_ip_learn_port_id ./ptpRangeOverIp/learnPortId
    -ptp_range_over_ip_delay_response_delay ./ptpRangeOverIp/delayResponseDelay
    -ptp_range_over_ip_grant_unicast_duration_interval ./ptpRangeOverIp/grantUnicastDurationInterval
    -ptp_range_over_ip_follow_up_delay_insertion_rate ./ptpRangeOverIp/followUpDelayInsertionRate
    -ptp_range_over_ip_log_delay_req_interval ./ptpRangeOverIp/logDelayReqInterval
    -ptp_range_over_ip_clock_accuracy ./ptpRangeOverIp/clockAccuracy
    -ptp_range_over_ip_client_count ./ptpRangeOverIp/clientCount
    -ptp_range_over_ip_announce_time_traceable ./ptpRangeOverIp/announceTimeTraceable
    -ptp_range_over_ip_step_mode ./ptpRangeOverIp/stepMode
    -ptp_range_over_ip_master_ip_increment_inter_entity ./ptpRangeOverIp/masterIpIncrementInterEntity
    -ptp_range_over_ip_delay_resp_drop_rate ./ptpRangeOverIp/delayRespDropRate
    -ptp_range_over_ip_announce_receipt_timeout ./ptpRangeOverIp/announceReceiptTimeout
    -ptp_range_over_ip_rx_calibration ./ptpRangeOverIp/rxCalibration
    -ptp_range_over_ip_tx_calibration ./ptpRangeOverIp/txCalibration
    -ptp_range_over_ip_log_announce_interval ./ptpRangeOverIp/logAnnounceInterval
    -igmp_querier_range_object_id ./igmpQuerierRange/objectId
    -igmp_querier_range_specific_query_response_count ./igmpQuerierRange/specificQueryResponseCount
    -igmp_querier_range_specific_query_response_interval ./igmpQuerierRange/specificQueryResponseInterval
    -igmp_querier_range_general_query_response_interval ./igmpQuerierRange/generalQueryResponseInterval
    -igmp_querier_range_name ./igmpQuerierRange/name
    -igmp_querier_range_router_alert ./igmpQuerierRange/routerAlert
    -igmp_querier_range_general_query_interval ./igmpQuerierRange/generalQueryInterval
    -igmp_querier_range_robustness_variable ./igmpQuerierRange/robustnessVariable
    -igmp_querier_range_startup_query_count ./igmpQuerierRange/startupQueryCount
    -igmp_querier_range_version ./igmpQuerierRange/version
    -igmp_querier_range_enabled ./igmpQuerierRange/enabled
    -igmp_mld_range_meshing_mode ./igmpMldRange/meshingMode
    -igmp_mld_range_router_alert ./igmpMldRange/routerAlert
    -igmp_mld_range_enabled ./igmpMldRange/enabled
    -igmp_mld_range_report_frequency ./igmpMldRange/reportFrequency
    -igmp_mld_range_unsolicited_response_mode ./igmpMldRange/unsolicitedResponseMode
    -igmp_mld_range_general_query_response_mode ./igmpMldRange/generalQueryResponseMode
    -igmp_mld_range_specific_query_response_mode ./igmpMldRange/specificQueryResponseMode
    -igmp_mld_range_name ./igmpMldRange/name
    -igmp_mld_range_join_leave_multiplier ./igmpMldRange/joinLeaveMultiplier
    -igmp_mld_range_object_id ./igmpMldRange/objectId
    -igmp_mld_range_version ./igmpMldRange/version
    -igmp_mld_range_immediate_response ./igmpMldRange/immediateResponse
    -igmp_mld_range_multicast_group_range ./igmpMldRange/multicastGroupRange
    -igmp_mld_range_join_leave_multicast_group_range ./igmpMldRange/joinLeaveMulticastGroupRange
    -vlan_range_inner_first_id ./vlanRange/innerFirstId
    -vlan_range_inner_increment ./vlanRange/innerIncrement
    -vlan_range_enabled ./vlanRange/enabled
    -vlan_range_unique_count ./vlanRange/uniqueCount
    -vlan_range_name ./vlanRange/name
    -vlan_range_increment_step ./vlanRange/incrementStep
    -vlan_range_tpid ./vlanRange/tpid
    -vlan_range_priority ./vlanRange/priority
    -vlan_range_inner_enable ./vlanRange/innerEnable
    -vlan_range_object_id ./vlanRange/objectId
    -vlan_range_inner_unique_count ./vlanRange/innerUniqueCount
    -vlan_range_inner_tpid ./vlanRange/innerTpid
    -vlan_range_first_id ./vlanRange/firstId
    -vlan_range_increment ./vlanRange/increment
    -vlan_range_inner_increment_step ./vlanRange/innerIncrementStep
    -vlan_range_id_incr_mode ./vlanRange/idIncrMode
    -vlan_range_inner_priority ./vlanRange/innerPriority
    -vlan_range_vlan_id_info ./vlanRange/vlanIdInfo
    -ptp_range_over_mac_master_mac_increment_inter_entity ./ptpRangeOverMac/masterMacIncrementInterEntity
    -ptp_range_over_mac_communication_mode ./ptpRangeOverMac/communicationMode
    -ptp_range_over_mac_send_announce_multicast ./ptpRangeOverMac/sendAnnounceMulticast
    -ptp_range_over_mac_follow_up_delay ./ptpRangeOverMac/followUpDelay
    -ptp_range_over_mac_domain ./ptpRangeOverMac/domain
    -ptp_range_over_mac_announce_drop_rate ./ptpRangeOverMac/announceDropRate
    -ptp_range_over_mac_client_ip_increment_by ./ptpRangeOverMac/clientIpIncrementBy
    -ptp_range_over_mac_renewal_invited ./ptpRangeOverMac/renewalInvited
    -ptp_range_over_mac_port_number_increment ./ptpRangeOverMac/portNumberIncrement
    -ptp_range_over_mac_use_clock_identity ./ptpRangeOverMac/useClockIdentity
    -ptp_range_over_mac_priority1 ./ptpRangeOverMac/priority1
    -ptp_range_over_mac_use_alternate_master_flag ./ptpRangeOverMac/useAlternateMasterFlag
    -ptp_range_over_mac_object_id ./ptpRangeOverMac/objectId
    -ptp_range_over_mac_delay_resp_receipt_timeout ./ptpRangeOverMac/delayRespReceiptTimeout
    -ptp_range_over_mac_announce_frequency_traceable ./ptpRangeOverMac/announceFrequencyTraceable
    -ptp_range_over_mac_priority2 ./ptpRangeOverMac/priority2
    -ptp_range_over_mac_announce_current_utc_offset_valid ./ptpRangeOverMac/announceCurrentUtcOffsetValid
    -ptp_range_over_mac_client_mac_address ./ptpRangeOverMac/clientMacAddress
    -ptp_range_over_mac_time_source ./ptpRangeOverMac/timeSource
    -ptp_range_over_mac_steps_removed ./ptpRangeOverMac/stepsRemoved
    -ptp_range_over_mac_clock_class ./ptpRangeOverMac/clockClass
    -ptp_range_over_mac_request_attempts ./ptpRangeOverMac/requestAttempts
    -ptp_range_over_mac_follow_up_bad_crc_rate ./ptpRangeOverMac/followUpBadCrcRate
    -ptp_range_over_mac_delay_response_delay_insertion_rate ./ptpRangeOverMac/delayResponseDelayInsertionRate
    -ptp_range_over_mac_log_sync_interval ./ptpRangeOverMac/logSyncInterval
    -ptp_range_over_mac_master_count ./ptpRangeOverMac/masterCount
    -ptp_range_over_mac_residence_time ./ptpRangeOverMac/residenceTime
    -ptp_range_over_mac_signal_interval ./ptpRangeOverMac/signalInterval
    -ptp_range_over_mac_delay_mechanism ./ptpRangeOverMac/delayMechanism
    -ptp_range_over_mac_strict_grant ./ptpRangeOverMac/strictGrant
    -ptp_range_over_mac_sync_drop_rate ./ptpRangeOverMac/syncDropRate
    -ptp_range_over_mac_drop_signal_req_sync ./ptpRangeOverMac/dropSignalReqSync
    -ptp_range_over_mac_clock_increment ./ptpRangeOverMac/clockIncrement
    -ptp_range_over_mac_announce_ptp_timescale ./ptpRangeOverMac/announcePtpTimescale
    -ptp_range_over_mac_signal_unicast_handling ./ptpRangeOverMac/signalUnicastHandling
    -ptp_range_over_mac_enabled ./ptpRangeOverMac/enabled
    -ptp_range_over_mac_timestamp_offset ./ptpRangeOverMac/timestampOffset
    -ptp_range_over_mac_master_ip_increment_by ./ptpRangeOverMac/masterIpIncrementBy
    -ptp_range_over_mac_request_interval ./ptpRangeOverMac/requestInterval
    -ptp_range_over_mac_ip_tos ./ptpRangeOverMac/ipTos
    -ptp_range_over_mac_request_holddown ./ptpRangeOverMac/requestHolddown
    -ptp_range_over_mac_client_mac_increment_by ./ptpRangeOverMac/clientMacIncrementBy
    -ptp_range_over_mac_name ./ptpRangeOverMac/name
    -ptp_range_over_mac_drop_signal_req_announce ./ptpRangeOverMac/dropSignalReqAnnounce
    -ptp_range_over_mac_master_ip_address ./ptpRangeOverMac/masterIpAddress
    -ptp_range_over_mac_first_clock ./ptpRangeOverMac/firstClock
    -ptp_range_over_mac_master_mac_increment_by ./ptpRangeOverMac/masterMacIncrementBy
    -ptp_range_over_mac_send_cancel_tlv ./ptpRangeOverMac/sendCancelTlv
    -ptp_range_over_mac_port_number ./ptpRangeOverMac/portNumber
    -ptp_range_over_mac_client_ip_address ./ptpRangeOverMac/clientIpAddress
    -ptp_range_over_mac_announce_leap59 ./ptpRangeOverMac/announceLeap59
    -ptp_range_over_mac_send_announce_tlv ./ptpRangeOverMac/sendAnnounceTlv
    -ptp_range_over_mac_sync_receipt_timeout ./ptpRangeOverMac/syncReceiptTimeout
    -ptp_range_over_mac_announce_leap61 ./ptpRangeOverMac/announceLeap61
    -ptp_range_over_mac_grant_delay_resp_duration_interval ./ptpRangeOverMac/grantDelayRespDurationInterval
    -ptp_range_over_mac_timestamp_offset_variation ./ptpRangeOverMac/timestampOffsetVariation
    -ptp_range_over_mac_follow_up_drop_rate ./ptpRangeOverMac/followUpDropRate
    -ptp_range_over_mac_master_mac_address ./ptpRangeOverMac/masterMacAddress
    -ptp_range_over_mac_drop_signal_req_delay_resp ./ptpRangeOverMac/dropSignalReqDelayResp
    -ptp_range_over_mac_grant_sync_duration_interval ./ptpRangeOverMac/grantSyncDurationInterval
    -ptp_range_over_mac_learn_port_id ./ptpRangeOverMac/learnPortId
    -ptp_range_over_mac_delay_response_delay ./ptpRangeOverMac/delayResponseDelay
    -ptp_range_over_mac_grant_unicast_duration_interval ./ptpRangeOverMac/grantUnicastDurationInterval
    -ptp_range_over_mac_follow_up_delay_insertion_rate ./ptpRangeOverMac/followUpDelayInsertionRate
    -ptp_range_over_mac_log_delay_req_interval ./ptpRangeOverMac/logDelayReqInterval
    -ptp_range_over_mac_clock_accuracy ./ptpRangeOverMac/clockAccuracy
    -ptp_range_over_mac_client_count ./ptpRangeOverMac/clientCount
    -ptp_range_over_mac_announce_time_traceable ./ptpRangeOverMac/announceTimeTraceable
    -ptp_range_over_mac_step_mode ./ptpRangeOverMac/stepMode
    -ptp_range_over_mac_master_ip_increment_inter_entity ./ptpRangeOverMac/masterIpIncrementInterEntity
    -ptp_range_over_mac_delay_resp_drop_rate ./ptpRangeOverMac/delayRespDropRate
    -ptp_range_over_mac_announce_receipt_timeout ./ptpRangeOverMac/announceReceiptTimeout
    -ptp_range_over_mac_rx_calibration ./ptpRangeOverMac/rxCalibration
    -ptp_range_over_mac_tx_calibration ./ptpRangeOverMac/txCalibration
    -ptp_range_over_mac_log_announce_interval ./ptpRangeOverMac/logAnnounceInterval
    -amt_range_use_relay_discovery ./amtRange/useRelayDiscovery
    -amt_range_amt_unicast_ip ./amtRange/amtUnicastIp
    -amt_range_enabled ./amtRange/enabled
    -amt_range_query_timer_interval ./amtRange/queryTimerInterval
    -amt_range_amt_udp_src_port_increment ./amtRange/amtUdpSrcPortIncrement
    -amt_range_send_teardown ./amtRange/sendTeardown
    -amt_range_discovery_retries ./amtRange/discoveryRetries
    -amt_range_discovery_timeout ./amtRange/discoveryTimeout
    -amt_range_request_retries ./amtRange/requestRetries
    -amt_range_amt_udp_src_port ./amtRange/amtUdpSrcPort
    -amt_range_request_timeout ./amtRange/requestTimeout
    -amt_range_name ./amtRange/name
    -amt_range_amt_anycast_ip_increment ./amtRange/amtAnycastIpIncrement
    -amt_range_object_id ./amtRange/objectId
    -amt_range_override_qt ./amtRange/overrideQt
    -amt_range_amt_anycast_ip ./amtRange/amtAnycastIp
    -amt_range_amt_unicast_ip_increment ./amtRange/amtUnicastIpIncrement
    -twamp_control_range_object_id ./twampControlRange/objectId
    -twamp_control_range_name ./twampControlRange/name
    -twamp_control_range_mode ./twampControlRange/mode
    -twamp_control_range_control_server_port ./twampControlRange/controlServerPort
    -twamp_control_range_count ./twampControlRange/count
    -twamp_control_range_secret ./twampControlRange/secret
    -twamp_control_range_key_id ./twampControlRange/keyId
    -twamp_control_range_control_server_ip_increment ./twampControlRange/controlServerIpIncrement
    -twamp_control_range_enabled ./twampControlRange/enabled
    -twamp_control_range_control_start_server_ip ./twampControlRange/controlStartServerIp
    -ancp_range_circuit_id ./ancpRange/circuitId
    -ancp_range_use_dsl_outer_vlan ./ancpRange/useDslOuterVlan
    -ancp_range_distribution_algorithm_percent ./ancpRange/distributionAlgorithmPercent
    -ancp_range_atm_vpi ./ancpRange/atmVpi
    -ancp_range_nas_ip_address ./ancpRange/nasIpAddress
    -ancp_range_nas_ancp_service_port ./ancpRange/nasAncpServicePort
    -ancp_range_inner_vlan_id ./ancpRange/innerVlanId
    -ancp_range_enabled ./ancpRange/enabled
    -ancp_range_use_dsl_inner_vlan ./ancpRange/useDslInnerVlan
    -ancp_range_access_aggregation_cb_tlv ./ancpRange/accessAggregationCbTlv
    -ancp_range_nas_keep_alive_retries ./ancpRange/nasKeepAliveRetries
    -ancp_range_nas_keep_alive_timeout ./ancpRange/nasKeepAliveTimeout
    -ancp_range_name ./ancpRange/name
    -ancp_range_enable_access_aggregation ./ancpRange/enableAccessAggregation
    -ancp_range_object_id ./ancpRange/objectId
    -ancp_range_atm_vci ./ancpRange/atmVci
    -ancp_range_nas_ipaddress_incr ./ancpRange/nasIPAddressIncr
    -ancp_range_outer_vlan_id ./ancpRange/outerVlanId
    -ancp_range_nas_ip_address_incr ./ancpRange/nasIpAddressIncr
    -ancp_range_ancp_ip_range ./ancpRange/ancpIpRange
    -ancp_range_ancp_pvc_range ./ancpRange/ancpPvcRange
    -ancp_range_ancp_vlan_range ./ancpRange/ancpVlanRange
    -ancp_range_ancp_mac_range ./ancpRange/ancpMacRange
    -ancp_range_ancp_atm_range ./ancpRange/ancpAtmRange
    -ancp_range_dsl_resync_profile_allocation_table ./ancpRange/dslResyncProfileAllocationTable
    -ancp_range_dsl_profile_allocation_table ./ancpRange/dslProfileAllocationTable
    -ancp_range_ancp_ip_range_count ./ancpRange/ancpIpRange/count
    -ancp_range_ancp_ip_range_ip_type ./ancpRange/ancpIpRange/ipType
    -ancp_range_ancp_ip_range_enabled ./ancpRange/ancpIpRange/enabled
    -ancp_range_ancp_ip_range_gateway_increment_mode ./ancpRange/ancpIpRange/gatewayIncrementMode
    -ancp_range_ancp_ip_range_enable_gateway_arp ./ancpRange/ancpIpRange/enableGatewayArp
    -ancp_range_ancp_ip_range_ip_address ./ancpRange/ancpIpRange/ipAddress
    -ancp_range_ancp_ip_range_gateway_increment ./ancpRange/ancpIpRange/gatewayIncrement
    -ancp_range_ancp_ip_range_increment_by ./ancpRange/ancpIpRange/incrementBy
    -ancp_range_ancp_ip_range_gateway_address ./ancpRange/ancpIpRange/gatewayAddress
    -ancp_range_ancp_ip_range_name ./ancpRange/ancpIpRange/name
    -ancp_range_ancp_ip_range_mss ./ancpRange/ancpIpRange/mss
    -ancp_range_ancp_ip_range_object_id ./ancpRange/ancpIpRange/objectId
    -ancp_range_ancp_ip_range_prefix ./ancpRange/ancpIpRange/prefix
    -ancp_range_ancp_ip_range_auto_mac_generation ./ancpRange/ancpIpRange/autoMacGeneration
    -ancp_range_ancp_pvc_range_vpi_increment_step ./ancpRange/ancpPvcRange/vpiIncrementStep
    -ancp_range_ancp_pvc_range_vci_unique_count ./ancpRange/ancpPvcRange/vciUniqueCount
    -ancp_range_ancp_pvc_range_vci_increment_step ./ancpRange/ancpPvcRange/vciIncrementStep
    -ancp_range_ancp_pvc_range_enabled ./ancpRange/ancpPvcRange/enabled
    -ancp_range_ancp_pvc_range_vpi_first_id ./ancpRange/ancpPvcRange/vpiFirstId
    -ancp_range_ancp_pvc_range_vpi_increment ./ancpRange/ancpPvcRange/vpiIncrement
    -ancp_range_ancp_pvc_range_vci_first_id ./ancpRange/ancpPvcRange/vciFirstId
    -ancp_range_ancp_pvc_range_vci_increment ./ancpRange/ancpPvcRange/vciIncrement
    -ancp_range_ancp_pvc_range_name ./ancpRange/ancpPvcRange/name
    -ancp_range_ancp_pvc_range_increment_mode ./ancpRange/ancpPvcRange/incrementMode
    -ancp_range_ancp_pvc_range_object_id ./ancpRange/ancpPvcRange/objectId
    -ancp_range_ancp_pvc_range_vpi_unique_count ./ancpRange/ancpPvcRange/vpiUniqueCount
    -ancp_range_ancp_vlan_range_inner_first_id ./ancpRange/ancpVlanRange/innerFirstId
    -ancp_range_ancp_vlan_range_inner_increment ./ancpRange/ancpVlanRange/innerIncrement
    -ancp_range_ancp_vlan_range_enabled ./ancpRange/ancpVlanRange/enabled
    -ancp_range_ancp_vlan_range_unique_count ./ancpRange/ancpVlanRange/uniqueCount
    -ancp_range_ancp_vlan_range_name ./ancpRange/ancpVlanRange/name
    -ancp_range_ancp_vlan_range_increment_step ./ancpRange/ancpVlanRange/incrementStep
    -ancp_range_ancp_vlan_range_tpid ./ancpRange/ancpVlanRange/tpid
    -ancp_range_ancp_vlan_range_priority ./ancpRange/ancpVlanRange/priority
    -ancp_range_ancp_vlan_range_inner_enable ./ancpRange/ancpVlanRange/innerEnable
    -ancp_range_ancp_vlan_range_object_id ./ancpRange/ancpVlanRange/objectId
    -ancp_range_ancp_vlan_range_inner_unique_count ./ancpRange/ancpVlanRange/innerUniqueCount
    -ancp_range_ancp_vlan_range_inner_tpid ./ancpRange/ancpVlanRange/innerTpid
    -ancp_range_ancp_vlan_range_first_id ./ancpRange/ancpVlanRange/firstId
    -ancp_range_ancp_vlan_range_increment ./ancpRange/ancpVlanRange/increment
    -ancp_range_ancp_vlan_range_inner_increment_step ./ancpRange/ancpVlanRange/innerIncrementStep
    -ancp_range_ancp_vlan_range_id_incr_mode ./ancpRange/ancpVlanRange/idIncrMode
    -ancp_range_ancp_vlan_range_inner_priority ./ancpRange/ancpVlanRange/innerPriority
    -ancp_range_ancp_vlan_range_vlan_id_info ./ancpRange/ancpVlanRange/vlanIdInfo
    -ancp_range_ancp_mac_range_object_id ./ancpRange/ancpMacRange/objectId
    -ancp_range_ancp_mac_range_increment_by ./ancpRange/ancpMacRange/incrementBy
    -ancp_range_ancp_mac_range_name ./ancpRange/ancpMacRange/name
    -ancp_range_ancp_mac_range_count ./ancpRange/ancpMacRange/count
    -ancp_range_ancp_mac_range_mac ./ancpRange/ancpMacRange/mac
    -ancp_range_ancp_mac_range_mtu ./ancpRange/ancpMacRange/mtu
    -ancp_range_ancp_mac_range_enabled ./ancpRange/ancpMacRange/enabled
    -ancp_range_ancp_atm_range_object_id ./ancpRange/ancpAtmRange/objectId
    -ancp_range_ancp_atm_range_increment_by ./ancpRange/ancpAtmRange/incrementBy
    -ancp_range_ancp_atm_range_name ./ancpRange/ancpAtmRange/name
    -ancp_range_ancp_atm_range_count ./ancpRange/ancpAtmRange/count
    -ancp_range_ancp_atm_range_mac ./ancpRange/ancpAtmRange/mac
    -ancp_range_ancp_atm_range_mtu ./ancpRange/ancpAtmRange/mtu
    -ancp_range_ancp_atm_range_encapsulation ./ancpRange/ancpAtmRange/encapsulation
    -ancp_range_ancp_atm_range_enabled ./ancpRange/ancpAtmRange/enabled
    -iptv_range_inter_stb_start_delay ./iptvRange/interStbStartDelay
    -iptv_range_router_alert ./iptvRange/routerAlert
    -iptv_range_viewing_profile ./iptvRange/viewingProfile
    -iptv_range_leave_latency_threshold ./iptvRange/leaveLatencyThreshold
    -iptv_range_enabled ./iptvRange/enabled
    -iptv_range_join_latency_threshold ./iptvRange/joinLatencyThreshold
    -iptv_range_report_frequency ./iptvRange/reportFrequency
    -iptv_range_unsolicited_response_mode ./iptvRange/unsolicitedResponseMode
    -iptv_range_general_query_response_mode ./iptvRange/generalQueryResponseMode
    -iptv_range_specific_query_response_mode ./iptvRange/specificQueryResponseMode
    -iptv_range_name ./iptvRange/name
    -iptv_range_log_failure_timestamps ./iptvRange/logFailureTimestamps
    -iptv_range_object_id ./iptvRange/objectId
    -iptv_range_join_leave_multiplier ./iptvRange/joinLeaveMultiplier
    -iptv_range_stb_leave_join_delay ./iptvRange/stbLeaveJoinDelay
    -iptv_range_version ./iptvRange/version
    -iptv_range_immediate_response ./iptvRange/immediateResponse
    -iptv_range_iptv_channels ./iptvRange/iptvChannels
    -eapo_udp_range_expected_system_token ./eapoUdpRange/expectedSystemToken
    -eapo_udp_range_user_password ./eapoUdpRange/userPassword
    -eapo_udp_range_enabled ./eapoUdpRange/enabled
    -eapo_udp_range_nac_sequence ./eapoUdpRange/nacSequence
    -eapo_udp_range_fast_stateless_resume ./eapoUdpRange/fastStatelessResume
    -eapo_udp_range_user_name ./eapoUdpRange/userName
    -eapo_udp_range_response_type ./eapoUdpRange/responseType
    -eapo_udp_range_name ./eapoUdpRange/name
    -eapo_udp_range_protocol ./eapoUdpRange/protocol
    -eapo_udp_range_fast_inner_method ./eapoUdpRange/fastInnerMethod
    -eapo_udp_range_fast_provision_mode ./eapoUdpRange/fastProvisionMode
    -eapo_udp_range_object_id ./eapoUdpRange/objectId
  }
  #
  variable MultiplierOptionGroups {
    _m_dot1x_range_user_password {-dot1x_range_user_password_format -dot1x_range_user_password_base -dot1x_range_user_password_incr}
    _m_dot1x_range_fast_stateless_resume {-dot1x_range_fast_stateless_resume_format -dot1x_range_fast_stateless_resume_base -dot1x_range_fast_stateless_resume_incr}
    _m_dot1x_range_user_name {-dot1x_range_user_name_format -dot1x_range_user_name_base -dot1x_range_user_name_incr}
    _m_dot1x_range_host_password {-dot1x_range_host_password_format -dot1x_range_host_password_base -dot1x_range_host_password_incr}
    _m_dot1x_range_name {-dot1x_range_name_format -dot1x_range_name_base -dot1x_range_name_incr}
    _m_dot1x_range_protocol {-dot1x_range_protocol_format -dot1x_range_protocol_base -dot1x_range_protocol_incr}
    _m_dot1x_range_fast_inner_method {-dot1x_range_fast_inner_method_format -dot1x_range_fast_inner_method_base -dot1x_range_fast_inner_method_incr}
    _m_dot1x_range_object_id {-dot1x_range_object_id_format -dot1x_range_object_id_base -dot1x_range_object_id_incr}
    _m_dot1x_range_fast_provision_mode {-dot1x_range_fast_provision_mode_format -dot1x_range_fast_provision_mode_base -dot1x_range_fast_provision_mode_incr}
    _m_dot1x_range_host_auth_mode {-dot1x_range_host_auth_mode_format -dot1x_range_host_auth_mode_base -dot1x_range_host_auth_mode_incr}
    _m_dot1x_range_host_name {-dot1x_range_host_name_format -dot1x_range_host_name_base -dot1x_range_host_name_incr}
    _m_esmc_range_object_id {-esmc_range_object_id_format -esmc_range_object_id_base -esmc_range_object_id_incr}
    _m_esmc_range_rate {-esmc_range_rate_base -esmc_range_rate_incr}
    _m_esmc_range_name {-esmc_range_name_format -esmc_range_name_base -esmc_range_name_incr}
    _m_esmc_range_ql {-esmc_range_ql_format -esmc_range_ql_base -esmc_range_ql_incr}
    _m_esmc_range_flag_mode {-esmc_range_flag_mode_format -esmc_range_flag_mode_base -esmc_range_flag_mode_incr}
    _m_web_auth_range_object_id {-web_auth_range_object_id_format -web_auth_range_object_id_base -web_auth_range_object_id_incr}
    _m_web_auth_range_input_value3 {-web_auth_range_input_value3_format -web_auth_range_input_value3_base -web_auth_range_input_value3_incr}
    _m_web_auth_range_name {-web_auth_range_name_format -web_auth_range_name_base -web_auth_range_name_incr}
    _m_web_auth_range_expect {-web_auth_range_expect_format -web_auth_range_expect_base -web_auth_range_expect_incr}
    _m_web_auth_range_input_value1 {-web_auth_range_input_value1_format -web_auth_range_input_value1_base -web_auth_range_input_value1_incr}
    _m_web_auth_range_input_value2 {-web_auth_range_input_value2_format -web_auth_range_input_value2_base -web_auth_range_input_value2_incr}
    _m_twamp_server_range_iteration_count {-twamp_server_range_iteration_count_base -twamp_server_range_iteration_count_incr}
    _m_twamp_server_range_count {-twamp_server_range_count_base -twamp_server_range_count_incr}
    _m_twamp_server_range_reflector_port {-twamp_server_range_reflector_port_base -twamp_server_range_reflector_port_incr}
    _m_twamp_server_range_max_test_sessions {-twamp_server_range_max_test_sessions_base -twamp_server_range_max_test_sessions_incr}
    _m_twamp_server_range_control_port {-twamp_server_range_control_port_base -twamp_server_range_control_port_incr}
    _m_twamp_server_range_key_id {-twamp_server_range_key_id_format -twamp_server_range_key_id_base -twamp_server_range_key_id_incr}
    _m_twamp_server_range_permitted_ip {-twamp_server_range_permitted_ip_format -twamp_server_range_permitted_ip_base -twamp_server_range_permitted_ip_incr}
    _m_twamp_server_range_name {-twamp_server_range_name_format -twamp_server_range_name_base -twamp_server_range_name_incr}
    _m_twamp_server_range_object_id {-twamp_server_range_object_id_format -twamp_server_range_object_id_base -twamp_server_range_object_id_incr}
    _m_twamp_server_range_permitted_ip_increment {-twamp_server_range_permitted_ip_increment_format -twamp_server_range_permitted_ip_increment_base -twamp_server_range_permitted_ip_increment_incr}
    _m_twamp_server_range_permitted_sender_port {-twamp_server_range_permitted_sender_port_base -twamp_server_range_permitted_sender_port_incr}
    _m_twamp_server_range_mode {-twamp_server_range_mode_format -twamp_server_range_mode_base -twamp_server_range_mode_incr}
    _m_twamp_server_range_secret {-twamp_server_range_secret_format -twamp_server_range_secret_base -twamp_server_range_secret_incr}
    _m_mac_range_object_id {-mac_range_object_id_format -mac_range_object_id_base -mac_range_object_id_incr}
    _m_mac_range_increment_by {-mac_range_increment_by_format -mac_range_increment_by_base -mac_range_increment_by_incr}
    _m_mac_range_name {-mac_range_name_format -mac_range_name_base -mac_range_name_incr}
    _m_mac_range_count {-mac_range_count_base -mac_range_count_incr}
    _m_mac_range_mac {-mac_range_mac_format -mac_range_mac_base -mac_range_mac_incr}
    _m_mac_range_mtu {-mac_range_mtu_base -mac_range_mtu_incr}
    _m_vic_client_range_object_id {-vic_client_range_object_id_format -vic_client_range_object_id_base -vic_client_range_object_id_incr}
    _m_vic_client_range_macs_per_vif {-vic_client_range_macs_per_vif_base -vic_client_range_macs_per_vif_incr}
    _m_vic_client_range_channel_id_start {-vic_client_range_channel_id_start_base -vic_client_range_channel_id_start_incr}
    _m_vic_client_range_prov_info_oui {-vic_client_range_prov_info_oui_format -vic_client_range_prov_info_oui_base -vic_client_range_prov_info_oui_incr}
    _m_vic_client_range_name {-vic_client_range_name_format -vic_client_range_name_base -vic_client_range_name_incr}
    _m_vic_client_range_tlv_offset {-vic_client_range_tlv_offset_base -vic_client_range_tlv_offset_incr}
    _m_vic_client_range_prov_info_type {-vic_client_range_prov_info_type_base -vic_client_range_prov_info_type_incr}
    _m_vic_client_range_channel_id_increment {-vic_client_range_channel_id_increment_base -vic_client_range_channel_id_increment_incr}
    _m_ip_range_count {-ip_range_count_base -ip_range_count_incr}
    _m_ip_range_ip_type {-ip_range_ip_type_format -ip_range_ip_type_base -ip_range_ip_type_incr}
    _m_ip_range_gateway_increment_mode {-ip_range_gateway_increment_mode_format -ip_range_gateway_increment_mode_base -ip_range_gateway_increment_mode_incr}
    _m_ip_range_ip_address {-ip_range_ip_address_format -ip_range_ip_address_base -ip_range_ip_address_incr}
    _m_ip_range_gateway_increment {-ip_range_gateway_increment_format -ip_range_gateway_increment_base -ip_range_gateway_increment_incr}
    _m_ip_range_increment_by {-ip_range_increment_by_format -ip_range_increment_by_base -ip_range_increment_by_incr}
    _m_ip_range_gateway_address {-ip_range_gateway_address_format -ip_range_gateway_address_base -ip_range_gateway_address_incr}
    _m_ip_range_name {-ip_range_name_format -ip_range_name_base -ip_range_name_incr}
    _m_ip_range_mss {-ip_range_mss_base -ip_range_mss_incr}
    _m_ip_range_object_id {-ip_range_object_id_format -ip_range_object_id_base -ip_range_object_id_incr}
    _m_ip_range_prefix {-ip_range_prefix_base -ip_range_prefix_incr}
    _m_ptp_range_over_ip_master_mac_increment_inter_entity {-ptp_range_over_ip_master_mac_increment_inter_entity_format -ptp_range_over_ip_master_mac_increment_inter_entity_base -ptp_range_over_ip_master_mac_increment_inter_entity_incr}
    _m_ptp_range_over_ip_communication_mode {-ptp_range_over_ip_communication_mode_format -ptp_range_over_ip_communication_mode_base -ptp_range_over_ip_communication_mode_incr}
    _m_ptp_range_over_ip_follow_up_delay {-ptp_range_over_ip_follow_up_delay_base -ptp_range_over_ip_follow_up_delay_incr}
    _m_ptp_range_over_ip_domain {-ptp_range_over_ip_domain_base -ptp_range_over_ip_domain_incr}
    _m_ptp_range_over_ip_announce_drop_rate {-ptp_range_over_ip_announce_drop_rate_base -ptp_range_over_ip_announce_drop_rate_incr}
    _m_ptp_range_over_ip_client_ip_increment_by {-ptp_range_over_ip_client_ip_increment_by_format -ptp_range_over_ip_client_ip_increment_by_base -ptp_range_over_ip_client_ip_increment_by_incr}
    _m_ptp_range_over_ip_port_number_increment {-ptp_range_over_ip_port_number_increment_base -ptp_range_over_ip_port_number_increment_incr}
    _m_ptp_range_over_ip_priority1 {-ptp_range_over_ip_priority1_base -ptp_range_over_ip_priority1_incr}
    _m_ptp_range_over_ip_object_id {-ptp_range_over_ip_object_id_format -ptp_range_over_ip_object_id_base -ptp_range_over_ip_object_id_incr}
    _m_ptp_range_over_ip_delay_resp_receipt_timeout {-ptp_range_over_ip_delay_resp_receipt_timeout_base -ptp_range_over_ip_delay_resp_receipt_timeout_incr}
    _m_ptp_range_over_ip_priority2 {-ptp_range_over_ip_priority2_base -ptp_range_over_ip_priority2_incr}
    _m_ptp_range_over_ip_client_mac_address {-ptp_range_over_ip_client_mac_address_format -ptp_range_over_ip_client_mac_address_base -ptp_range_over_ip_client_mac_address_incr}
    _m_ptp_range_over_ip_time_source {-ptp_range_over_ip_time_source_format -ptp_range_over_ip_time_source_base -ptp_range_over_ip_time_source_incr}
    _m_ptp_range_over_ip_steps_removed {-ptp_range_over_ip_steps_removed_base -ptp_range_over_ip_steps_removed_incr}
    _m_ptp_range_over_ip_clock_class {-ptp_range_over_ip_clock_class_base -ptp_range_over_ip_clock_class_incr}
    _m_ptp_range_over_ip_request_attempts {-ptp_range_over_ip_request_attempts_base -ptp_range_over_ip_request_attempts_incr}
    _m_ptp_range_over_ip_follow_up_bad_crc_rate {-ptp_range_over_ip_follow_up_bad_crc_rate_base -ptp_range_over_ip_follow_up_bad_crc_rate_incr}
    _m_ptp_range_over_ip_delay_response_delay_insertion_rate {-ptp_range_over_ip_delay_response_delay_insertion_rate_base -ptp_range_over_ip_delay_response_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_sync_interval {-ptp_range_over_ip_log_sync_interval_base -ptp_range_over_ip_log_sync_interval_incr}
    _m_ptp_range_over_ip_master_count {-ptp_range_over_ip_master_count_base -ptp_range_over_ip_master_count_incr}
    _m_ptp_range_over_ip_residence_time {-ptp_range_over_ip_residence_time_base -ptp_range_over_ip_residence_time_incr}
    _m_ptp_range_over_ip_signal_interval {-ptp_range_over_ip_signal_interval_base -ptp_range_over_ip_signal_interval_incr}
    _m_ptp_range_over_ip_delay_mechanism {-ptp_range_over_ip_delay_mechanism_format -ptp_range_over_ip_delay_mechanism_base -ptp_range_over_ip_delay_mechanism_incr}
    _m_ptp_range_over_ip_sync_drop_rate {-ptp_range_over_ip_sync_drop_rate_base -ptp_range_over_ip_sync_drop_rate_incr}
    _m_ptp_range_over_ip_clock_increment {-ptp_range_over_ip_clock_increment_format -ptp_range_over_ip_clock_increment_base -ptp_range_over_ip_clock_increment_incr}
    _m_ptp_range_over_ip_signal_unicast_handling {-ptp_range_over_ip_signal_unicast_handling_format -ptp_range_over_ip_signal_unicast_handling_base -ptp_range_over_ip_signal_unicast_handling_incr}
    _m_ptp_range_over_ip_timestamp_offset {-ptp_range_over_ip_timestamp_offset_base -ptp_range_over_ip_timestamp_offset_incr}
    _m_ptp_range_over_ip_master_ip_increment_by {-ptp_range_over_ip_master_ip_increment_by_format -ptp_range_over_ip_master_ip_increment_by_base -ptp_range_over_ip_master_ip_increment_by_incr}
    _m_ptp_range_over_ip_request_interval {-ptp_range_over_ip_request_interval_base -ptp_range_over_ip_request_interval_incr}
    _m_ptp_range_over_ip_ip_tos {-ptp_range_over_ip_ip_tos_base -ptp_range_over_ip_ip_tos_incr}
    _m_ptp_range_over_ip_request_holddown {-ptp_range_over_ip_request_holddown_base -ptp_range_over_ip_request_holddown_incr}
    _m_ptp_range_over_ip_client_mac_increment_by {-ptp_range_over_ip_client_mac_increment_by_format -ptp_range_over_ip_client_mac_increment_by_base -ptp_range_over_ip_client_mac_increment_by_incr}
    _m_ptp_range_over_ip_name {-ptp_range_over_ip_name_format -ptp_range_over_ip_name_base -ptp_range_over_ip_name_incr}
    _m_ptp_range_over_ip_master_ip_address {-ptp_range_over_ip_master_ip_address_format -ptp_range_over_ip_master_ip_address_base -ptp_range_over_ip_master_ip_address_incr}
    _m_ptp_range_over_ip_first_clock {-ptp_range_over_ip_first_clock_format -ptp_range_over_ip_first_clock_base -ptp_range_over_ip_first_clock_incr}
    _m_ptp_range_over_ip_master_mac_increment_by {-ptp_range_over_ip_master_mac_increment_by_format -ptp_range_over_ip_master_mac_increment_by_base -ptp_range_over_ip_master_mac_increment_by_incr}
    _m_ptp_range_over_ip_port_number {-ptp_range_over_ip_port_number_base -ptp_range_over_ip_port_number_incr}
    _m_ptp_range_over_ip_client_ip_address {-ptp_range_over_ip_client_ip_address_format -ptp_range_over_ip_client_ip_address_base -ptp_range_over_ip_client_ip_address_incr}
    _m_ptp_range_over_ip_sync_receipt_timeout {-ptp_range_over_ip_sync_receipt_timeout_base -ptp_range_over_ip_sync_receipt_timeout_incr}
    _m_ptp_range_over_ip_grant_delay_resp_duration_interval {-ptp_range_over_ip_grant_delay_resp_duration_interval_base -ptp_range_over_ip_grant_delay_resp_duration_interval_incr}
    _m_ptp_range_over_ip_timestamp_offset_variation {-ptp_range_over_ip_timestamp_offset_variation_base -ptp_range_over_ip_timestamp_offset_variation_incr}
    _m_ptp_range_over_ip_follow_up_drop_rate {-ptp_range_over_ip_follow_up_drop_rate_base -ptp_range_over_ip_follow_up_drop_rate_incr}
    _m_ptp_range_over_ip_master_mac_address {-ptp_range_over_ip_master_mac_address_format -ptp_range_over_ip_master_mac_address_base -ptp_range_over_ip_master_mac_address_incr}
    _m_ptp_range_over_ip_grant_sync_duration_interval {-ptp_range_over_ip_grant_sync_duration_interval_base -ptp_range_over_ip_grant_sync_duration_interval_incr}
    _m_ptp_range_over_ip_delay_response_delay {-ptp_range_over_ip_delay_response_delay_base -ptp_range_over_ip_delay_response_delay_incr}
    _m_ptp_range_over_ip_grant_unicast_duration_interval {-ptp_range_over_ip_grant_unicast_duration_interval_base -ptp_range_over_ip_grant_unicast_duration_interval_incr}
    _m_ptp_range_over_ip_follow_up_delay_insertion_rate {-ptp_range_over_ip_follow_up_delay_insertion_rate_base -ptp_range_over_ip_follow_up_delay_insertion_rate_incr}
    _m_ptp_range_over_ip_log_delay_req_interval {-ptp_range_over_ip_log_delay_req_interval_base -ptp_range_over_ip_log_delay_req_interval_incr}
    _m_ptp_range_over_ip_clock_accuracy {-ptp_range_over_ip_clock_accuracy_format -ptp_range_over_ip_clock_accuracy_base -ptp_range_over_ip_clock_accuracy_incr}
    _m_ptp_range_over_ip_client_count {-ptp_range_over_ip_client_count_base -ptp_range_over_ip_client_count_incr}
    _m_ptp_range_over_ip_step_mode {-ptp_range_over_ip_step_mode_format -ptp_range_over_ip_step_mode_base -ptp_range_over_ip_step_mode_incr}
    _m_ptp_range_over_ip_master_ip_increment_inter_entity {-ptp_range_over_ip_master_ip_increment_inter_entity_format -ptp_range_over_ip_master_ip_increment_inter_entity_base -ptp_range_over_ip_master_ip_increment_inter_entity_incr}
    _m_ptp_range_over_ip_delay_resp_drop_rate {-ptp_range_over_ip_delay_resp_drop_rate_base -ptp_range_over_ip_delay_resp_drop_rate_incr}
    _m_ptp_range_over_ip_announce_receipt_timeout {-ptp_range_over_ip_announce_receipt_timeout_base -ptp_range_over_ip_announce_receipt_timeout_incr}
    _m_ptp_range_over_ip_rx_calibration {-ptp_range_over_ip_rx_calibration_base -ptp_range_over_ip_rx_calibration_incr}
    _m_ptp_range_over_ip_tx_calibration {-ptp_range_over_ip_tx_calibration_base -ptp_range_over_ip_tx_calibration_incr}
    _m_ptp_range_over_ip_log_announce_interval {-ptp_range_over_ip_log_announce_interval_base -ptp_range_over_ip_log_announce_interval_incr}
    _m_igmp_querier_range_object_id {-igmp_querier_range_object_id_format -igmp_querier_range_object_id_base -igmp_querier_range_object_id_incr}
    _m_igmp_querier_range_specific_query_response_count {-igmp_querier_range_specific_query_response_count_base -igmp_querier_range_specific_query_response_count_incr}
    _m_igmp_querier_range_specific_query_response_interval {-igmp_querier_range_specific_query_response_interval_base -igmp_querier_range_specific_query_response_interval_incr}
    _m_igmp_querier_range_general_query_response_interval {-igmp_querier_range_general_query_response_interval_base -igmp_querier_range_general_query_response_interval_incr}
    _m_igmp_querier_range_name {-igmp_querier_range_name_format -igmp_querier_range_name_base -igmp_querier_range_name_incr}
    _m_igmp_querier_range_general_query_interval {-igmp_querier_range_general_query_interval_base -igmp_querier_range_general_query_interval_incr}
    _m_igmp_querier_range_robustness_variable {-igmp_querier_range_robustness_variable_base -igmp_querier_range_robustness_variable_incr}
    _m_igmp_querier_range_startup_query_count {-igmp_querier_range_startup_query_count_base -igmp_querier_range_startup_query_count_incr}
    _m_igmp_querier_range_version {-igmp_querier_range_version_format -igmp_querier_range_version_base -igmp_querier_range_version_incr}
    _m_igmp_mld_range_meshing_mode {-igmp_mld_range_meshing_mode_format -igmp_mld_range_meshing_mode_base -igmp_mld_range_meshing_mode_incr}
    _m_igmp_mld_range_report_frequency {-igmp_mld_range_report_frequency_base -igmp_mld_range_report_frequency_incr}
    _m_igmp_mld_range_name {-igmp_mld_range_name_format -igmp_mld_range_name_base -igmp_mld_range_name_incr}
    _m_igmp_mld_range_join_leave_multiplier {-igmp_mld_range_join_leave_multiplier_base -igmp_mld_range_join_leave_multiplier_incr}
    _m_igmp_mld_range_object_id {-igmp_mld_range_object_id_format -igmp_mld_range_object_id_base -igmp_mld_range_object_id_incr}
    _m_igmp_mld_range_version {-igmp_mld_range_version_format -igmp_mld_range_version_base -igmp_mld_range_version_incr}
    _m_vlan_range_inner_first_id {-vlan_range_inner_first_id_base -vlan_range_inner_first_id_incr}
    _m_vlan_range_inner_increment {-vlan_range_inner_increment_base -vlan_range_inner_increment_incr}
    _m_vlan_range_unique_count {-vlan_range_unique_count_base -vlan_range_unique_count_incr}
    _m_vlan_range_name {-vlan_range_name_format -vlan_range_name_base -vlan_range_name_incr}
    _m_vlan_range_increment_step {-vlan_range_increment_step_base -vlan_range_increment_step_incr}
    _m_vlan_range_tpid {-vlan_range_tpid_format -vlan_range_tpid_base -vlan_range_tpid_incr}
    _m_vlan_range_priority {-vlan_range_priority_base -vlan_range_priority_incr}
    _m_vlan_range_object_id {-vlan_range_object_id_format -vlan_range_object_id_base -vlan_range_object_id_incr}
    _m_vlan_range_inner_unique_count {-vlan_range_inner_unique_count_base -vlan_range_inner_unique_count_incr}
    _m_vlan_range_inner_tpid {-vlan_range_inner_tpid_format -vlan_range_inner_tpid_base -vlan_range_inner_tpid_incr}
    _m_vlan_range_first_id {-vlan_range_first_id_base -vlan_range_first_id_incr}
    _m_vlan_range_increment {-vlan_range_increment_base -vlan_range_increment_incr}
    _m_vlan_range_inner_increment_step {-vlan_range_inner_increment_step_base -vlan_range_inner_increment_step_incr}
    _m_vlan_range_id_incr_mode {-vlan_range_id_incr_mode_base -vlan_range_id_incr_mode_incr}
    _m_vlan_range_inner_priority {-vlan_range_inner_priority_base -vlan_range_inner_priority_incr}
    _m_ptp_range_over_mac_master_mac_increment_inter_entity {-ptp_range_over_mac_master_mac_increment_inter_entity_format -ptp_range_over_mac_master_mac_increment_inter_entity_base -ptp_range_over_mac_master_mac_increment_inter_entity_incr}
    _m_ptp_range_over_mac_communication_mode {-ptp_range_over_mac_communication_mode_format -ptp_range_over_mac_communication_mode_base -ptp_range_over_mac_communication_mode_incr}
    _m_ptp_range_over_mac_follow_up_delay {-ptp_range_over_mac_follow_up_delay_base -ptp_range_over_mac_follow_up_delay_incr}
    _m_ptp_range_over_mac_domain {-ptp_range_over_mac_domain_base -ptp_range_over_mac_domain_incr}
    _m_ptp_range_over_mac_announce_drop_rate {-ptp_range_over_mac_announce_drop_rate_base -ptp_range_over_mac_announce_drop_rate_incr}
    _m_ptp_range_over_mac_client_ip_increment_by {-ptp_range_over_mac_client_ip_increment_by_format -ptp_range_over_mac_client_ip_increment_by_base -ptp_range_over_mac_client_ip_increment_by_incr}
    _m_ptp_range_over_mac_port_number_increment {-ptp_range_over_mac_port_number_increment_base -ptp_range_over_mac_port_number_increment_incr}
    _m_ptp_range_over_mac_priority1 {-ptp_range_over_mac_priority1_base -ptp_range_over_mac_priority1_incr}
    _m_ptp_range_over_mac_object_id {-ptp_range_over_mac_object_id_format -ptp_range_over_mac_object_id_base -ptp_range_over_mac_object_id_incr}
    _m_ptp_range_over_mac_delay_resp_receipt_timeout {-ptp_range_over_mac_delay_resp_receipt_timeout_base -ptp_range_over_mac_delay_resp_receipt_timeout_incr}
    _m_ptp_range_over_mac_priority2 {-ptp_range_over_mac_priority2_base -ptp_range_over_mac_priority2_incr}
    _m_ptp_range_over_mac_client_mac_address {-ptp_range_over_mac_client_mac_address_format -ptp_range_over_mac_client_mac_address_base -ptp_range_over_mac_client_mac_address_incr}
    _m_ptp_range_over_mac_time_source {-ptp_range_over_mac_time_source_format -ptp_range_over_mac_time_source_base -ptp_range_over_mac_time_source_incr}
    _m_ptp_range_over_mac_steps_removed {-ptp_range_over_mac_steps_removed_base -ptp_range_over_mac_steps_removed_incr}
    _m_ptp_range_over_mac_clock_class {-ptp_range_over_mac_clock_class_base -ptp_range_over_mac_clock_class_incr}
    _m_ptp_range_over_mac_request_attempts {-ptp_range_over_mac_request_attempts_base -ptp_range_over_mac_request_attempts_incr}
    _m_ptp_range_over_mac_follow_up_bad_crc_rate {-ptp_range_over_mac_follow_up_bad_crc_rate_base -ptp_range_over_mac_follow_up_bad_crc_rate_incr}
    _m_ptp_range_over_mac_delay_response_delay_insertion_rate {-ptp_range_over_mac_delay_response_delay_insertion_rate_base -ptp_range_over_mac_delay_response_delay_insertion_rate_incr}
    _m_ptp_range_over_mac_log_sync_interval {-ptp_range_over_mac_log_sync_interval_base -ptp_range_over_mac_log_sync_interval_incr}
    _m_ptp_range_over_mac_master_count {-ptp_range_over_mac_master_count_base -ptp_range_over_mac_master_count_incr}
    _m_ptp_range_over_mac_residence_time {-ptp_range_over_mac_residence_time_base -ptp_range_over_mac_residence_time_incr}
    _m_ptp_range_over_mac_signal_interval {-ptp_range_over_mac_signal_interval_base -ptp_range_over_mac_signal_interval_incr}
    _m_ptp_range_over_mac_delay_mechanism {-ptp_range_over_mac_delay_mechanism_format -ptp_range_over_mac_delay_mechanism_base -ptp_range_over_mac_delay_mechanism_incr}
    _m_ptp_range_over_mac_sync_drop_rate {-ptp_range_over_mac_sync_drop_rate_base -ptp_range_over_mac_sync_drop_rate_incr}
    _m_ptp_range_over_mac_clock_increment {-ptp_range_over_mac_clock_increment_format -ptp_range_over_mac_clock_increment_base -ptp_range_over_mac_clock_increment_incr}
    _m_ptp_range_over_mac_signal_unicast_handling {-ptp_range_over_mac_signal_unicast_handling_format -ptp_range_over_mac_signal_unicast_handling_base -ptp_range_over_mac_signal_unicast_handling_incr}
    _m_ptp_range_over_mac_timestamp_offset {-ptp_range_over_mac_timestamp_offset_base -ptp_range_over_mac_timestamp_offset_incr}
    _m_ptp_range_over_mac_master_ip_increment_by {-ptp_range_over_mac_master_ip_increment_by_format -ptp_range_over_mac_master_ip_increment_by_base -ptp_range_over_mac_master_ip_increment_by_incr}
    _m_ptp_range_over_mac_request_interval {-ptp_range_over_mac_request_interval_base -ptp_range_over_mac_request_interval_incr}
    _m_ptp_range_over_mac_ip_tos {-ptp_range_over_mac_ip_tos_base -ptp_range_over_mac_ip_tos_incr}
    _m_ptp_range_over_mac_request_holddown {-ptp_range_over_mac_request_holddown_base -ptp_range_over_mac_request_holddown_incr}
    _m_ptp_range_over_mac_client_mac_increment_by {-ptp_range_over_mac_client_mac_increment_by_format -ptp_range_over_mac_client_mac_increment_by_base -ptp_range_over_mac_client_mac_increment_by_incr}
    _m_ptp_range_over_mac_name {-ptp_range_over_mac_name_format -ptp_range_over_mac_name_base -ptp_range_over_mac_name_incr}
    _m_ptp_range_over_mac_master_ip_address {-ptp_range_over_mac_master_ip_address_format -ptp_range_over_mac_master_ip_address_base -ptp_range_over_mac_master_ip_address_incr}
    _m_ptp_range_over_mac_first_clock {-ptp_range_over_mac_first_clock_format -ptp_range_over_mac_first_clock_base -ptp_range_over_mac_first_clock_incr}
    _m_ptp_range_over_mac_master_mac_increment_by {-ptp_range_over_mac_master_mac_increment_by_format -ptp_range_over_mac_master_mac_increment_by_base -ptp_range_over_mac_master_mac_increment_by_incr}
    _m_ptp_range_over_mac_port_number {-ptp_range_over_mac_port_number_base -ptp_range_over_mac_port_number_incr}
    _m_ptp_range_over_mac_client_ip_address {-ptp_range_over_mac_client_ip_address_format -ptp_range_over_mac_client_ip_address_base -ptp_range_over_mac_client_ip_address_incr}
    _m_ptp_range_over_mac_sync_receipt_timeout {-ptp_range_over_mac_sync_receipt_timeout_base -ptp_range_over_mac_sync_receipt_timeout_incr}
    _m_ptp_range_over_mac_grant_delay_resp_duration_interval {-ptp_range_over_mac_grant_delay_resp_duration_interval_base -ptp_range_over_mac_grant_delay_resp_duration_interval_incr}
    _m_ptp_range_over_mac_timestamp_offset_variation {-ptp_range_over_mac_timestamp_offset_variation_base -ptp_range_over_mac_timestamp_offset_variation_incr}
    _m_ptp_range_over_mac_follow_up_drop_rate {-ptp_range_over_mac_follow_up_drop_rate_base -ptp_range_over_mac_follow_up_drop_rate_incr}
    _m_ptp_range_over_mac_master_mac_address {-ptp_range_over_mac_master_mac_address_format -ptp_range_over_mac_master_mac_address_base -ptp_range_over_mac_master_mac_address_incr}
    _m_ptp_range_over_mac_grant_sync_duration_interval {-ptp_range_over_mac_grant_sync_duration_interval_base -ptp_range_over_mac_grant_sync_duration_interval_incr}
    _m_ptp_range_over_mac_delay_response_delay {-ptp_range_over_mac_delay_response_delay_base -ptp_range_over_mac_delay_response_delay_incr}
    _m_ptp_range_over_mac_grant_unicast_duration_interval {-ptp_range_over_mac_grant_unicast_duration_interval_base -ptp_range_over_mac_grant_unicast_duration_interval_incr}
    _m_ptp_range_over_mac_follow_up_delay_insertion_rate {-ptp_range_over_mac_follow_up_delay_insertion_rate_base -ptp_range_over_mac_follow_up_delay_insertion_rate_incr}
    _m_ptp_range_over_mac_log_delay_req_interval {-ptp_range_over_mac_log_delay_req_interval_base -ptp_range_over_mac_log_delay_req_interval_incr}
    _m_ptp_range_over_mac_clock_accuracy {-ptp_range_over_mac_clock_accuracy_format -ptp_range_over_mac_clock_accuracy_base -ptp_range_over_mac_clock_accuracy_incr}
    _m_ptp_range_over_mac_client_count {-ptp_range_over_mac_client_count_base -ptp_range_over_mac_client_count_incr}
    _m_ptp_range_over_mac_step_mode {-ptp_range_over_mac_step_mode_format -ptp_range_over_mac_step_mode_base -ptp_range_over_mac_step_mode_incr}
    _m_ptp_range_over_mac_master_ip_increment_inter_entity {-ptp_range_over_mac_master_ip_increment_inter_entity_format -ptp_range_over_mac_master_ip_increment_inter_entity_base -ptp_range_over_mac_master_ip_increment_inter_entity_incr}
    _m_ptp_range_over_mac_delay_resp_drop_rate {-ptp_range_over_mac_delay_resp_drop_rate_base -ptp_range_over_mac_delay_resp_drop_rate_incr}
    _m_ptp_range_over_mac_announce_receipt_timeout {-ptp_range_over_mac_announce_receipt_timeout_base -ptp_range_over_mac_announce_receipt_timeout_incr}
    _m_ptp_range_over_mac_rx_calibration {-ptp_range_over_mac_rx_calibration_base -ptp_range_over_mac_rx_calibration_incr}
    _m_ptp_range_over_mac_tx_calibration {-ptp_range_over_mac_tx_calibration_base -ptp_range_over_mac_tx_calibration_incr}
    _m_ptp_range_over_mac_log_announce_interval {-ptp_range_over_mac_log_announce_interval_base -ptp_range_over_mac_log_announce_interval_incr}
    _m_amt_range_amt_unicast_ip {-amt_range_amt_unicast_ip_format -amt_range_amt_unicast_ip_base -amt_range_amt_unicast_ip_incr}
    _m_amt_range_query_timer_interval {-amt_range_query_timer_interval_base -amt_range_query_timer_interval_incr}
    _m_amt_range_amt_udp_src_port_increment {-amt_range_amt_udp_src_port_increment_base -amt_range_amt_udp_src_port_increment_incr}
    _m_amt_range_discovery_retries {-amt_range_discovery_retries_base -amt_range_discovery_retries_incr}
    _m_amt_range_discovery_timeout {-amt_range_discovery_timeout_base -amt_range_discovery_timeout_incr}
    _m_amt_range_request_retries {-amt_range_request_retries_base -amt_range_request_retries_incr}
    _m_amt_range_amt_udp_src_port {-amt_range_amt_udp_src_port_base -amt_range_amt_udp_src_port_incr}
    _m_amt_range_request_timeout {-amt_range_request_timeout_base -amt_range_request_timeout_incr}
    _m_amt_range_name {-amt_range_name_format -amt_range_name_base -amt_range_name_incr}
    _m_amt_range_amt_anycast_ip_increment {-amt_range_amt_anycast_ip_increment_format -amt_range_amt_anycast_ip_increment_base -amt_range_amt_anycast_ip_increment_incr}
    _m_amt_range_object_id {-amt_range_object_id_format -amt_range_object_id_base -amt_range_object_id_incr}
    _m_amt_range_amt_anycast_ip {-amt_range_amt_anycast_ip_format -amt_range_amt_anycast_ip_base -amt_range_amt_anycast_ip_incr}
    _m_amt_range_amt_unicast_ip_increment {-amt_range_amt_unicast_ip_increment_format -amt_range_amt_unicast_ip_increment_base -amt_range_amt_unicast_ip_increment_incr}
    _m_twamp_control_range_object_id {-twamp_control_range_object_id_format -twamp_control_range_object_id_base -twamp_control_range_object_id_incr}
    _m_twamp_control_range_name {-twamp_control_range_name_format -twamp_control_range_name_base -twamp_control_range_name_incr}
    _m_twamp_control_range_mode {-twamp_control_range_mode_format -twamp_control_range_mode_base -twamp_control_range_mode_incr}
    _m_twamp_control_range_control_server_port {-twamp_control_range_control_server_port_base -twamp_control_range_control_server_port_incr}
    _m_twamp_control_range_count {-twamp_control_range_count_base -twamp_control_range_count_incr}
    _m_twamp_control_range_secret {-twamp_control_range_secret_format -twamp_control_range_secret_base -twamp_control_range_secret_incr}
    _m_twamp_control_range_key_id {-twamp_control_range_key_id_format -twamp_control_range_key_id_base -twamp_control_range_key_id_incr}
    _m_twamp_control_range_control_server_ip_increment {-twamp_control_range_control_server_ip_increment_format -twamp_control_range_control_server_ip_increment_base -twamp_control_range_control_server_ip_increment_incr}
    _m_twamp_control_range_control_start_server_ip {-twamp_control_range_control_start_server_ip_format -twamp_control_range_control_start_server_ip_base -twamp_control_range_control_start_server_ip_incr}
    _m_ancp_range_circuit_id {-ancp_range_circuit_id_format -ancp_range_circuit_id_base -ancp_range_circuit_id_incr}
    _m_ancp_range_distribution_algorithm_percent {-ancp_range_distribution_algorithm_percent_base -ancp_range_distribution_algorithm_percent_incr}
    _m_ancp_range_atm_vpi {-ancp_range_atm_vpi_base -ancp_range_atm_vpi_incr}
    _m_ancp_range_nas_ip_address {-ancp_range_nas_ip_address_format -ancp_range_nas_ip_address_base -ancp_range_nas_ip_address_incr}
    _m_ancp_range_nas_ancp_service_port {-ancp_range_nas_ancp_service_port_base -ancp_range_nas_ancp_service_port_incr}
    _m_ancp_range_inner_vlan_id {-ancp_range_inner_vlan_id_base -ancp_range_inner_vlan_id_incr}
    _m_ancp_range_access_aggregation_cb_tlv {-ancp_range_access_aggregation_cb_tlv_format -ancp_range_access_aggregation_cb_tlv_base -ancp_range_access_aggregation_cb_tlv_incr}
    _m_ancp_range_nas_keep_alive_retries {-ancp_range_nas_keep_alive_retries_base -ancp_range_nas_keep_alive_retries_incr}
    _m_ancp_range_nas_keep_alive_timeout {-ancp_range_nas_keep_alive_timeout_base -ancp_range_nas_keep_alive_timeout_incr}
    _m_ancp_range_name {-ancp_range_name_format -ancp_range_name_base -ancp_range_name_incr}
    _m_ancp_range_object_id {-ancp_range_object_id_format -ancp_range_object_id_base -ancp_range_object_id_incr}
    _m_ancp_range_atm_vci {-ancp_range_atm_vci_base -ancp_range_atm_vci_incr}
    _m_ancp_range_nas_ipaddress_incr {-ancp_range_nas_ipaddress_incr_format -ancp_range_nas_ipaddress_incr_base -ancp_range_nas_ipaddress_incr_incr}
    _m_ancp_range_outer_vlan_id {-ancp_range_outer_vlan_id_base -ancp_range_outer_vlan_id_incr}
    _m_ancp_range_nas_ip_address_incr {-ancp_range_nas_ip_address_incr_format -ancp_range_nas_ip_address_incr_base -ancp_range_nas_ip_address_incr_incr}
    _m_ancp_range_ancp_ip_range_count {-ancp_range_ancp_ip_range_count_base -ancp_range_ancp_ip_range_count_incr}
    _m_ancp_range_ancp_ip_range_ip_type {-ancp_range_ancp_ip_range_ip_type_format -ancp_range_ancp_ip_range_ip_type_base -ancp_range_ancp_ip_range_ip_type_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment_mode {-ancp_range_ancp_ip_range_gateway_increment_mode_format -ancp_range_ancp_ip_range_gateway_increment_mode_base -ancp_range_ancp_ip_range_gateway_increment_mode_incr}
    _m_ancp_range_ancp_ip_range_ip_address {-ancp_range_ancp_ip_range_ip_address_format -ancp_range_ancp_ip_range_ip_address_base -ancp_range_ancp_ip_range_ip_address_incr}
    _m_ancp_range_ancp_ip_range_gateway_increment {-ancp_range_ancp_ip_range_gateway_increment_format -ancp_range_ancp_ip_range_gateway_increment_base -ancp_range_ancp_ip_range_gateway_increment_incr}
    _m_ancp_range_ancp_ip_range_increment_by {-ancp_range_ancp_ip_range_increment_by_format -ancp_range_ancp_ip_range_increment_by_base -ancp_range_ancp_ip_range_increment_by_incr}
    _m_ancp_range_ancp_ip_range_gateway_address {-ancp_range_ancp_ip_range_gateway_address_format -ancp_range_ancp_ip_range_gateway_address_base -ancp_range_ancp_ip_range_gateway_address_incr}
    _m_ancp_range_ancp_ip_range_name {-ancp_range_ancp_ip_range_name_format -ancp_range_ancp_ip_range_name_base -ancp_range_ancp_ip_range_name_incr}
    _m_ancp_range_ancp_ip_range_mss {-ancp_range_ancp_ip_range_mss_base -ancp_range_ancp_ip_range_mss_incr}
    _m_ancp_range_ancp_ip_range_object_id {-ancp_range_ancp_ip_range_object_id_format -ancp_range_ancp_ip_range_object_id_base -ancp_range_ancp_ip_range_object_id_incr}
    _m_ancp_range_ancp_ip_range_prefix {-ancp_range_ancp_ip_range_prefix_base -ancp_range_ancp_ip_range_prefix_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment_step {-ancp_range_ancp_pvc_range_vpi_increment_step_base -ancp_range_ancp_pvc_range_vpi_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vci_unique_count {-ancp_range_ancp_pvc_range_vci_unique_count_base -ancp_range_ancp_pvc_range_vci_unique_count_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment_step {-ancp_range_ancp_pvc_range_vci_increment_step_base -ancp_range_ancp_pvc_range_vci_increment_step_incr}
    _m_ancp_range_ancp_pvc_range_vpi_first_id {-ancp_range_ancp_pvc_range_vpi_first_id_base -ancp_range_ancp_pvc_range_vpi_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_increment {-ancp_range_ancp_pvc_range_vpi_increment_base -ancp_range_ancp_pvc_range_vpi_increment_incr}
    _m_ancp_range_ancp_pvc_range_vci_first_id {-ancp_range_ancp_pvc_range_vci_first_id_base -ancp_range_ancp_pvc_range_vci_first_id_incr}
    _m_ancp_range_ancp_pvc_range_vci_increment {-ancp_range_ancp_pvc_range_vci_increment_base -ancp_range_ancp_pvc_range_vci_increment_incr}
    _m_ancp_range_ancp_pvc_range_name {-ancp_range_ancp_pvc_range_name_format -ancp_range_ancp_pvc_range_name_base -ancp_range_ancp_pvc_range_name_incr}
    _m_ancp_range_ancp_pvc_range_increment_mode {-ancp_range_ancp_pvc_range_increment_mode_base -ancp_range_ancp_pvc_range_increment_mode_incr}
    _m_ancp_range_ancp_pvc_range_object_id {-ancp_range_ancp_pvc_range_object_id_format -ancp_range_ancp_pvc_range_object_id_base -ancp_range_ancp_pvc_range_object_id_incr}
    _m_ancp_range_ancp_pvc_range_vpi_unique_count {-ancp_range_ancp_pvc_range_vpi_unique_count_base -ancp_range_ancp_pvc_range_vpi_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_first_id {-ancp_range_ancp_vlan_range_inner_first_id_base -ancp_range_ancp_vlan_range_inner_first_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment {-ancp_range_ancp_vlan_range_inner_increment_base -ancp_range_ancp_vlan_range_inner_increment_incr}
    _m_ancp_range_ancp_vlan_range_unique_count {-ancp_range_ancp_vlan_range_unique_count_base -ancp_range_ancp_vlan_range_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_name {-ancp_range_ancp_vlan_range_name_format -ancp_range_ancp_vlan_range_name_base -ancp_range_ancp_vlan_range_name_incr}
    _m_ancp_range_ancp_vlan_range_increment_step {-ancp_range_ancp_vlan_range_increment_step_base -ancp_range_ancp_vlan_range_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_tpid {-ancp_range_ancp_vlan_range_tpid_format -ancp_range_ancp_vlan_range_tpid_base -ancp_range_ancp_vlan_range_tpid_incr}
    _m_ancp_range_ancp_vlan_range_priority {-ancp_range_ancp_vlan_range_priority_base -ancp_range_ancp_vlan_range_priority_incr}
    _m_ancp_range_ancp_vlan_range_object_id {-ancp_range_ancp_vlan_range_object_id_format -ancp_range_ancp_vlan_range_object_id_base -ancp_range_ancp_vlan_range_object_id_incr}
    _m_ancp_range_ancp_vlan_range_inner_unique_count {-ancp_range_ancp_vlan_range_inner_unique_count_base -ancp_range_ancp_vlan_range_inner_unique_count_incr}
    _m_ancp_range_ancp_vlan_range_inner_tpid {-ancp_range_ancp_vlan_range_inner_tpid_format -ancp_range_ancp_vlan_range_inner_tpid_base -ancp_range_ancp_vlan_range_inner_tpid_incr}
    _m_ancp_range_ancp_vlan_range_first_id {-ancp_range_ancp_vlan_range_first_id_base -ancp_range_ancp_vlan_range_first_id_incr}
    _m_ancp_range_ancp_vlan_range_increment {-ancp_range_ancp_vlan_range_increment_base -ancp_range_ancp_vlan_range_increment_incr}
    _m_ancp_range_ancp_vlan_range_inner_increment_step {-ancp_range_ancp_vlan_range_inner_increment_step_base -ancp_range_ancp_vlan_range_inner_increment_step_incr}
    _m_ancp_range_ancp_vlan_range_id_incr_mode {-ancp_range_ancp_vlan_range_id_incr_mode_base -ancp_range_ancp_vlan_range_id_incr_mode_incr}
    _m_ancp_range_ancp_vlan_range_inner_priority {-ancp_range_ancp_vlan_range_inner_priority_base -ancp_range_ancp_vlan_range_inner_priority_incr}
    _m_ancp_range_ancp_mac_range_object_id {-ancp_range_ancp_mac_range_object_id_format -ancp_range_ancp_mac_range_object_id_base -ancp_range_ancp_mac_range_object_id_incr}
    _m_ancp_range_ancp_mac_range_increment_by {-ancp_range_ancp_mac_range_increment_by_format -ancp_range_ancp_mac_range_increment_by_base -ancp_range_ancp_mac_range_increment_by_incr}
    _m_ancp_range_ancp_mac_range_name {-ancp_range_ancp_mac_range_name_format -ancp_range_ancp_mac_range_name_base -ancp_range_ancp_mac_range_name_incr}
    _m_ancp_range_ancp_mac_range_count {-ancp_range_ancp_mac_range_count_base -ancp_range_ancp_mac_range_count_incr}
    _m_ancp_range_ancp_mac_range_mac {-ancp_range_ancp_mac_range_mac_format -ancp_range_ancp_mac_range_mac_base -ancp_range_ancp_mac_range_mac_incr}
    _m_ancp_range_ancp_mac_range_mtu {-ancp_range_ancp_mac_range_mtu_base -ancp_range_ancp_mac_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_object_id {-ancp_range_ancp_atm_range_object_id_format -ancp_range_ancp_atm_range_object_id_base -ancp_range_ancp_atm_range_object_id_incr}
    _m_ancp_range_ancp_atm_range_increment_by {-ancp_range_ancp_atm_range_increment_by_format -ancp_range_ancp_atm_range_increment_by_base -ancp_range_ancp_atm_range_increment_by_incr}
    _m_ancp_range_ancp_atm_range_name {-ancp_range_ancp_atm_range_name_format -ancp_range_ancp_atm_range_name_base -ancp_range_ancp_atm_range_name_incr}
    _m_ancp_range_ancp_atm_range_count {-ancp_range_ancp_atm_range_count_base -ancp_range_ancp_atm_range_count_incr}
    _m_ancp_range_ancp_atm_range_mac {-ancp_range_ancp_atm_range_mac_format -ancp_range_ancp_atm_range_mac_base -ancp_range_ancp_atm_range_mac_incr}
    _m_ancp_range_ancp_atm_range_mtu {-ancp_range_ancp_atm_range_mtu_base -ancp_range_ancp_atm_range_mtu_incr}
    _m_ancp_range_ancp_atm_range_encapsulation {-ancp_range_ancp_atm_range_encapsulation_format -ancp_range_ancp_atm_range_encapsulation_base -ancp_range_ancp_atm_range_encapsulation_incr}
    _m_iptv_range_inter_stb_start_delay {-iptv_range_inter_stb_start_delay_base -iptv_range_inter_stb_start_delay_incr}
    _m_iptv_range_leave_latency_threshold {-iptv_range_leave_latency_threshold_base -iptv_range_leave_latency_threshold_incr}
    _m_iptv_range_join_latency_threshold {-iptv_range_join_latency_threshold_base -iptv_range_join_latency_threshold_incr}
    _m_iptv_range_report_frequency {-iptv_range_report_frequency_base -iptv_range_report_frequency_incr}
    _m_iptv_range_name {-iptv_range_name_format -iptv_range_name_base -iptv_range_name_incr}
    _m_iptv_range_object_id {-iptv_range_object_id_format -iptv_range_object_id_base -iptv_range_object_id_incr}
    _m_iptv_range_join_leave_multiplier {-iptv_range_join_leave_multiplier_base -iptv_range_join_leave_multiplier_incr}
    _m_iptv_range_stb_leave_join_delay {-iptv_range_stb_leave_join_delay_base -iptv_range_stb_leave_join_delay_incr}
    _m_iptv_range_version {-iptv_range_version_format -iptv_range_version_base -iptv_range_version_incr}
    _m_eapo_udp_range_expected_system_token {-eapo_udp_range_expected_system_token_format -eapo_udp_range_expected_system_token_base -eapo_udp_range_expected_system_token_incr}
    _m_eapo_udp_range_user_password {-eapo_udp_range_user_password_format -eapo_udp_range_user_password_base -eapo_udp_range_user_password_incr}
    _m_eapo_udp_range_fast_stateless_resume {-eapo_udp_range_fast_stateless_resume_format -eapo_udp_range_fast_stateless_resume_base -eapo_udp_range_fast_stateless_resume_incr}
    _m_eapo_udp_range_user_name {-eapo_udp_range_user_name_format -eapo_udp_range_user_name_base -eapo_udp_range_user_name_incr}
    _m_eapo_udp_range_response_type {-eapo_udp_range_response_type_format -eapo_udp_range_response_type_base -eapo_udp_range_response_type_incr}
    _m_eapo_udp_range_name {-eapo_udp_range_name_format -eapo_udp_range_name_base -eapo_udp_range_name_incr}
    _m_eapo_udp_range_protocol {-eapo_udp_range_protocol_format -eapo_udp_range_protocol_base -eapo_udp_range_protocol_incr}
    _m_eapo_udp_range_fast_inner_method {-eapo_udp_range_fast_inner_method_format -eapo_udp_range_fast_inner_method_base -eapo_udp_range_fast_inner_method_incr}
    _m_eapo_udp_range_fast_provision_mode {-eapo_udp_range_fast_provision_mode_format -eapo_udp_range_fast_provision_mode_base -eapo_udp_range_fast_provision_mode_incr}
    _m_eapo_udp_range_object_id {-eapo_udp_range_object_id_format -eapo_udp_range_object_id_base -eapo_udp_range_object_id_incr}
  }
}

#@ end of ancestors for ::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint/range/ipRange

#
# Source in an optional tailor file that allows
# customization for the generated snit objects
#
set file_found 0
set dir [file normalize [file dirname [info script]]]
if {[file exists [set dir]/tailor_ipEndpoint_range_ipRange.tcl]} {
    set fn [set dir]/tailor_ipEndpoint_range_ipRange.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
} elseif {[file exists [set dir]/../tailor_ipEndpoint_range_ipRange.tcl]} {
    set fn [set dir]/../tailor_ipEndpoint_range_ipRange.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
}
# if -input-tailor-file-mandatory
if 0 { 
    if {![set file_found]} {
      return -code error  "Could not find required tailorfile 'tailor_ipEndpoint_range_ipRange.tcl'"
    }
}

#-------------------------------------------------------------
# Generated by the hag on 
#     Fri Aug 07 13:39:56 PDT 2020
#-------------------------------------------------------------
# package requires, etc.
package require snit
#-------------------------------------------------------------

if {[llength [info commands ::ixia::iprange]]} {
    rename ::ixia::iprange ""
}
::ixia::hag::ixn::types::shell ::ixia::iprange  -config-multiplier-option-groups 1  -config-typepathways  [list /vport/protocolStack/atm/emulatedRouter/ipEndpoint/range/ipRange /vport/protocolStack/atm/ipEndpoint/range/ipRange /vport/protocolStack/ethernet/emulatedRouter/ipEndpoint/range/ipRange /vport/protocolStack/ethernet/ipEndpoint/range/ipRange]
#
# Shell level commands
# - XXX_config
# - XXX_control
# - XXX_stats
#

proc ::ixia::iprange_config {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail [catch  [concat ::ixia::iprange config [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [list [list status 1] [list handles $r] [list log ""]]
    }
  } else {
    eval [concat {::ixia::iprange config} [set args]]
  }
}

proc ::ixia::iprange_control {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail [catch  [concat ::ixia::iprange control [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [list [list status 1] [list inner_results $r] [list log ""]]
    }
  } else {
    eval [concat {::ixia::iprange config} [set args]]
  }
}

proc ::ixia::iprange_stats {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail  [catch [concat {::ixia::iprange stats} [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [concat  [list [list status 1] [list log ""]]  $r  ]
    }
  } else {
    eval [concat {::ixia::iprange stats} [set args]]
  }
}

