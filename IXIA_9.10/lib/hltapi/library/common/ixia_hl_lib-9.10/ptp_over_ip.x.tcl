#
# ** Do not edit this file ** 
# This file was generated by the HAG
#

#R End of relative type declaration(s)

#? master type "::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 0
    -ancestor-include-level-for-create 0
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name ptp_over_ip
    -docs-chapter-name {PTP APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {}
    -input-skip-items-with-typepath-anx2hlt {}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath {ancestor range ipRange}
    -relative-includes {}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp
    -use-settings-for ancestorless_ip_based_stackmanager_extension_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kOptional
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -master_mac_increment_inter_entity \
    -cgetmethod _g_master_mac_increment_inter_entity -configuremethod _c_master_mac_increment_inter_entity -validatemethod _v_master_mac_increment_inter_entity \
    -default "" \
    -readonly false
  method _c_master_mac_increment_inter_entity {t v} { $self _configure_basic $t $v }
  method _v_master_mac_increment_inter_entity {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_master_mac_increment_inter_entity {t} { $self _cget_basic $t }
  # multiplier 
  method _m_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -master_mac_increment_inter_entity }
  
  option -communication_mode \
    -cgetmethod _g_communication_mode -configuremethod _c_communication_mode -validatemethod _v_communication_mode \
    -default "" \
    -readonly false
  method _c_communication_mode {t v} { $self _configure_basic $t $v }
  method _v_communication_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_communication_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -communication_mode }
  
  option -send_announce_multicast \
    -cgetmethod _g_send_announce_multicast -configuremethod _c_send_announce_multicast -validatemethod _v_send_announce_multicast \
    -default "" \
    -readonly false
  method _c_send_announce_multicast {t v} { $self _configure_basic $t $v }
  method _v_send_announce_multicast {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_send_announce_multicast {t} { $self _cget_kBool $t }
  option -follow_up_delay \
    -cgetmethod _g_follow_up_delay -configuremethod _c_follow_up_delay -validatemethod _v_follow_up_delay \
    -default "" \
    -readonly false
  method _c_follow_up_delay {t v} { $self _configure_basic $t $v }
  method _v_follow_up_delay {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_follow_up_delay {t} { $self _cget_basic $t }
  # multiplier 
  method _m_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -follow_up_delay }
  
  option -domain \
    -cgetmethod _g_domain -configuremethod _c_domain -validatemethod _v_domain \
    -default "" \
    -readonly false
  method _c_domain {t v} { $self _configure_basic $t $v }
  method _v_domain {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_domain {t} { $self _cget_basic $t }
  # multiplier 
  method _m_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -domain }
  
  option -announce_drop_rate \
    -cgetmethod _g_announce_drop_rate -configuremethod _c_announce_drop_rate -validatemethod _v_announce_drop_rate \
    -default "" \
    -readonly false
  method _c_announce_drop_rate {t v} { $self _configure_basic $t $v }
  method _v_announce_drop_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_announce_drop_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -announce_drop_rate }
  
  option -client_ip_increment_by \
    -cgetmethod _g_client_ip_increment_by -configuremethod _c_client_ip_increment_by -validatemethod _v_client_ip_increment_by \
    -default "" \
    -readonly false
  method _c_client_ip_increment_by {t v} { $self _configure_basic $t $v }
  method _v_client_ip_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_client_ip_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -client_ip_increment_by }
  
  option -renewal_invited \
    -cgetmethod _g_renewal_invited -configuremethod _c_renewal_invited -validatemethod _v_renewal_invited \
    -default "" \
    -readonly false
  method _c_renewal_invited {t v} { $self _configure_basic $t $v }
  method _v_renewal_invited {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_renewal_invited {t} { $self _cget_kBool $t }
  option -port_number_increment \
    -cgetmethod _g_port_number_increment -configuremethod _c_port_number_increment -validatemethod _v_port_number_increment \
    -default "" \
    -readonly false
  method _c_port_number_increment {t v} { $self _configure_basic $t $v }
  method _v_port_number_increment {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_port_number_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -port_number_increment }
  
  option -use_clock_identity \
    -cgetmethod _g_use_clock_identity -configuremethod _c_use_clock_identity -validatemethod _v_use_clock_identity \
    -default "" \
    -readonly false
  method _c_use_clock_identity {t v} { $self _configure_basic $t $v }
  method _v_use_clock_identity {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_use_clock_identity {t} { $self _cget_kBool $t }
  option -priority1 \
    -cgetmethod _g_priority1 -configuremethod _c_priority1 -validatemethod _v_priority1 \
    -default "" \
    -readonly false
  method _c_priority1 {t v} { $self _configure_basic $t $v }
  method _v_priority1 {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_priority1 {t} { $self _cget_basic $t }
  # multiplier 
  method _m_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -priority1 }
  
  option -use_alternate_master_flag \
    -cgetmethod _g_use_alternate_master_flag -configuremethod _c_use_alternate_master_flag -validatemethod _v_use_alternate_master_flag \
    -default "" \
    -readonly false
  method _c_use_alternate_master_flag {t v} { $self _configure_basic $t $v }
  method _v_use_alternate_master_flag {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_use_alternate_master_flag {t} { $self _cget_kBool $t }
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -delay_resp_receipt_timeout \
    -cgetmethod _g_delay_resp_receipt_timeout -configuremethod _c_delay_resp_receipt_timeout -validatemethod _v_delay_resp_receipt_timeout \
    -default "" \
    -readonly false
  method _c_delay_resp_receipt_timeout {t v} { $self _configure_basic $t $v }
  method _v_delay_resp_receipt_timeout {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_delay_resp_receipt_timeout {t} { $self _cget_basic $t }
  # multiplier 
  method _m_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -delay_resp_receipt_timeout }
  
  option -announce_frequency_traceable \
    -cgetmethod _g_announce_frequency_traceable -configuremethod _c_announce_frequency_traceable -validatemethod _v_announce_frequency_traceable \
    -default "" \
    -readonly false
  method _c_announce_frequency_traceable {t v} { $self _configure_basic $t $v }
  method _v_announce_frequency_traceable {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_announce_frequency_traceable {t} { $self _cget_kBool $t }
  option -priority2 \
    -cgetmethod _g_priority2 -configuremethod _c_priority2 -validatemethod _v_priority2 \
    -default "" \
    -readonly false
  method _c_priority2 {t v} { $self _configure_basic $t $v }
  method _v_priority2 {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_priority2 {t} { $self _cget_basic $t }
  # multiplier 
  method _m_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -priority2 }
  
  option -announce_current_utc_offset_valid \
    -cgetmethod _g_announce_current_utc_offset_valid -configuremethod _c_announce_current_utc_offset_valid -validatemethod _v_announce_current_utc_offset_valid \
    -default "" \
    -readonly false
  method _c_announce_current_utc_offset_valid {t v} { $self _configure_basic $t $v }
  method _v_announce_current_utc_offset_valid {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_announce_current_utc_offset_valid {t} { $self _cget_kBool $t }
  option -client_mac_address \
    -cgetmethod _g_client_mac_address -configuremethod _c_client_mac_address -validatemethod _v_client_mac_address \
    -default "" \
    -readonly false
  method _c_client_mac_address {t v} { $self _configure_basic $t $v }
  method _v_client_mac_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_client_mac_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -client_mac_address }
  
  option -time_source \
    -cgetmethod _g_time_source -configuremethod _c_time_source -validatemethod _v_time_source \
    -default "" \
    -readonly false
  method _c_time_source {t v} { $self _configure_basic $t $v }
  method _v_time_source {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_time_source {t} { $self _cget_basic $t }
  # multiplier 
  method _m_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -time_source }
  
  option -steps_removed \
    -cgetmethod _g_steps_removed -configuremethod _c_steps_removed -validatemethod _v_steps_removed \
    -default "" \
    -readonly false
  method _c_steps_removed {t v} { $self _configure_basic $t $v }
  method _v_steps_removed {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_steps_removed {t} { $self _cget_basic $t }
  # multiplier 
  method _m_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -steps_removed }
  
  option -clock_class \
    -cgetmethod _g_clock_class -configuremethod _c_clock_class -validatemethod _v_clock_class \
    -default "" \
    -readonly false
  method _c_clock_class {t v} { $self _configure_basic $t $v }
  method _v_clock_class {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_clock_class {t} { $self _cget_basic $t }
  # multiplier 
  method _m_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -clock_class }
  
  option -request_attempts \
    -cgetmethod _g_request_attempts -configuremethod _c_request_attempts -validatemethod _v_request_attempts \
    -default "" \
    -readonly false
  method _c_request_attempts {t v} { $self _configure_basic $t $v }
  method _v_request_attempts {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_request_attempts {t} { $self _cget_basic $t }
  # multiplier 
  method _m_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -request_attempts }
  
  option -follow_up_bad_crc_rate \
    -cgetmethod _g_follow_up_bad_crc_rate -configuremethod _c_follow_up_bad_crc_rate -validatemethod _v_follow_up_bad_crc_rate \
    -default "" \
    -readonly false
  method _c_follow_up_bad_crc_rate {t v} { $self _configure_basic $t $v }
  method _v_follow_up_bad_crc_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_follow_up_bad_crc_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -follow_up_bad_crc_rate }
  
  option -delay_response_delay_insertion_rate \
    -cgetmethod _g_delay_response_delay_insertion_rate -configuremethod _c_delay_response_delay_insertion_rate -validatemethod _v_delay_response_delay_insertion_rate \
    -default "" \
    -readonly false
  method _c_delay_response_delay_insertion_rate {t v} { $self _configure_basic $t $v }
  method _v_delay_response_delay_insertion_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_delay_response_delay_insertion_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -delay_response_delay_insertion_rate }
  
  option -log_sync_interval \
    -cgetmethod _g_log_sync_interval -configuremethod _c_log_sync_interval -validatemethod _v_log_sync_interval \
    -default "" \
    -readonly false
  method _c_log_sync_interval {t v} { $self _configure_basic $t $v }
  method _v_log_sync_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_log_sync_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -log_sync_interval }
  
  option -master_count \
    -cgetmethod _g_master_count -configuremethod _c_master_count -validatemethod _v_master_count \
    -default "" \
    -readonly false
  method _c_master_count {t v} { $self _configure_basic $t $v }
  method _v_master_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_master_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -master_count }
  
  option -residence_time \
    -cgetmethod _g_residence_time -configuremethod _c_residence_time -validatemethod _v_residence_time \
    -default "" \
    -readonly false
  method _c_residence_time {t v} { $self _configure_basic $t $v }
  method _v_residence_time {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_residence_time {t} { $self _cget_basic $t }
  # multiplier 
  method _m_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -residence_time }
  
  option -signal_interval \
    -cgetmethod _g_signal_interval -configuremethod _c_signal_interval -validatemethod _v_signal_interval \
    -default "" \
    -readonly false
  method _c_signal_interval {t v} { $self _configure_basic $t $v }
  method _v_signal_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_signal_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -signal_interval }
  
  option -delay_mechanism \
    -cgetmethod _g_delay_mechanism -configuremethod _c_delay_mechanism -validatemethod _v_delay_mechanism \
    -default "" \
    -readonly false
  method _c_delay_mechanism {t v} { $self _configure_basic $t $v }
  method _v_delay_mechanism {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_delay_mechanism {t} { $self _cget_basic $t }
  # multiplier 
  method _m_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -delay_mechanism }
  
  option -strict_grant \
    -cgetmethod _g_strict_grant -configuremethod _c_strict_grant -validatemethod _v_strict_grant \
    -default "" \
    -readonly false
  method _c_strict_grant {t v} { $self _configure_basic $t $v }
  method _v_strict_grant {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_strict_grant {t} { $self _cget_kBool $t }
  option -sync_drop_rate \
    -cgetmethod _g_sync_drop_rate -configuremethod _c_sync_drop_rate -validatemethod _v_sync_drop_rate \
    -default "" \
    -readonly false
  method _c_sync_drop_rate {t v} { $self _configure_basic $t $v }
  method _v_sync_drop_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_sync_drop_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -sync_drop_rate }
  
  option -drop_signal_req_sync \
    -cgetmethod _g_drop_signal_req_sync -configuremethod _c_drop_signal_req_sync -validatemethod _v_drop_signal_req_sync \
    -default "" \
    -readonly false
  method _c_drop_signal_req_sync {t v} { $self _configure_basic $t $v }
  method _v_drop_signal_req_sync {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_drop_signal_req_sync {t} { $self _cget_kBool $t }
  option -clock_increment \
    -cgetmethod _g_clock_increment -configuremethod _c_clock_increment -validatemethod _v_clock_increment \
    -default "" \
    -readonly false
  method _c_clock_increment {t v} { $self _configure_basic $t $v }
  method _v_clock_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_clock_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -clock_increment }
  
  option -announce_ptp_timescale \
    -cgetmethod _g_announce_ptp_timescale -configuremethod _c_announce_ptp_timescale -validatemethod _v_announce_ptp_timescale \
    -default "" \
    -readonly false
  method _c_announce_ptp_timescale {t v} { $self _configure_basic $t $v }
  method _v_announce_ptp_timescale {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_announce_ptp_timescale {t} { $self _cget_kBool $t }
  option -signal_unicast_handling \
    -cgetmethod _g_signal_unicast_handling -configuremethod _c_signal_unicast_handling -validatemethod _v_signal_unicast_handling \
    -default "" \
    -readonly false
  method _c_signal_unicast_handling {t v} { $self _configure_basic $t $v }
  method _v_signal_unicast_handling {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_signal_unicast_handling {t} { $self _cget_basic $t }
  # multiplier 
  method _m_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -signal_unicast_handling }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  option -timestamp_offset \
    -cgetmethod _g_timestamp_offset -configuremethod _c_timestamp_offset -validatemethod _v_timestamp_offset \
    -default "" \
    -readonly false
  method _c_timestamp_offset {t v} { $self _configure_basic $t $v }
  method _v_timestamp_offset {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_timestamp_offset {t} { $self _cget_basic $t }
  # multiplier 
  method _m_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -timestamp_offset }
  
  option -master_ip_increment_by \
    -cgetmethod _g_master_ip_increment_by -configuremethod _c_master_ip_increment_by -validatemethod _v_master_ip_increment_by \
    -default "" \
    -readonly false
  method _c_master_ip_increment_by {t v} { $self _configure_basic $t $v }
  method _v_master_ip_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_master_ip_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -master_ip_increment_by }
  
  option -request_interval \
    -cgetmethod _g_request_interval -configuremethod _c_request_interval -validatemethod _v_request_interval \
    -default "" \
    -readonly false
  method _c_request_interval {t v} { $self _configure_basic $t $v }
  method _v_request_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_request_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -request_interval }
  
  option -ip_tos \
    -cgetmethod _g_ip_tos -configuremethod _c_ip_tos -validatemethod _v_ip_tos \
    -default "" \
    -readonly false
  method _c_ip_tos {t v} { $self _configure_basic $t $v }
  method _v_ip_tos {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_ip_tos {t} { $self _cget_basic $t }
  # multiplier 
  method _m_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ip_tos }
  
  option -request_holddown \
    -cgetmethod _g_request_holddown -configuremethod _c_request_holddown -validatemethod _v_request_holddown \
    -default "" \
    -readonly false
  method _c_request_holddown {t v} { $self _configure_basic $t $v }
  method _v_request_holddown {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_request_holddown {t} { $self _cget_basic $t }
  # multiplier 
  method _m_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -request_holddown }
  
  option -client_mac_increment_by \
    -cgetmethod _g_client_mac_increment_by -configuremethod _c_client_mac_increment_by -validatemethod _v_client_mac_increment_by \
    -default "" \
    -readonly false
  method _c_client_mac_increment_by {t v} { $self _configure_basic $t $v }
  method _v_client_mac_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_client_mac_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -client_mac_increment_by }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -drop_signal_req_announce \
    -cgetmethod _g_drop_signal_req_announce -configuremethod _c_drop_signal_req_announce -validatemethod _v_drop_signal_req_announce \
    -default "" \
    -readonly false
  method _c_drop_signal_req_announce {t v} { $self _configure_basic $t $v }
  method _v_drop_signal_req_announce {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_drop_signal_req_announce {t} { $self _cget_kBool $t }
  option -master_ip_address \
    -cgetmethod _g_master_ip_address -configuremethod _c_master_ip_address -validatemethod _v_master_ip_address \
    -default "" \
    -readonly false
  method _c_master_ip_address {t v} { $self _configure_basic $t $v }
  method _v_master_ip_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_master_ip_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -master_ip_address }
  
  option -first_clock \
    -cgetmethod _g_first_clock -configuremethod _c_first_clock -validatemethod _v_first_clock \
    -default "" \
    -readonly false
  method _c_first_clock {t v} { $self _configure_basic $t $v }
  method _v_first_clock {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_first_clock {t} { $self _cget_basic $t }
  # multiplier 
  method _m_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -first_clock }
  
  option -master_mac_increment_by \
    -cgetmethod _g_master_mac_increment_by -configuremethod _c_master_mac_increment_by -validatemethod _v_master_mac_increment_by \
    -default "" \
    -readonly false
  method _c_master_mac_increment_by {t v} { $self _configure_basic $t $v }
  method _v_master_mac_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_master_mac_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -master_mac_increment_by }
  
  option -send_cancel_tlv \
    -cgetmethod _g_send_cancel_tlv -configuremethod _c_send_cancel_tlv -validatemethod _v_send_cancel_tlv \
    -default "" \
    -readonly false
  method _c_send_cancel_tlv {t v} { $self _configure_basic $t $v }
  method _v_send_cancel_tlv {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_send_cancel_tlv {t} { $self _cget_kBool $t }
  option -port_number \
    -cgetmethod _g_port_number -configuremethod _c_port_number -validatemethod _v_port_number \
    -default "" \
    -readonly false
  method _c_port_number {t v} { $self _configure_basic $t $v }
  method _v_port_number {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_port_number {t} { $self _cget_basic $t }
  # multiplier 
  method _m_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -port_number }
  
  option -client_ip_address \
    -cgetmethod _g_client_ip_address -configuremethod _c_client_ip_address -validatemethod _v_client_ip_address \
    -default "" \
    -readonly false
  method _c_client_ip_address {t v} { $self _configure_basic $t $v }
  method _v_client_ip_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_client_ip_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -client_ip_address }
  
  option -announce_leap59 \
    -cgetmethod _g_announce_leap59 -configuremethod _c_announce_leap59 -validatemethod _v_announce_leap59 \
    -default "" \
    -readonly false
  method _c_announce_leap59 {t v} { $self _configure_basic $t $v }
  method _v_announce_leap59 {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_announce_leap59 {t} { $self _cget_kBool $t }
  option -send_announce_tlv \
    -cgetmethod _g_send_announce_tlv -configuremethod _c_send_announce_tlv -validatemethod _v_send_announce_tlv \
    -default "" \
    -readonly false
  method _c_send_announce_tlv {t v} { $self _configure_basic $t $v }
  method _v_send_announce_tlv {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_send_announce_tlv {t} { $self _cget_kBool $t }
  option -sync_receipt_timeout \
    -cgetmethod _g_sync_receipt_timeout -configuremethod _c_sync_receipt_timeout -validatemethod _v_sync_receipt_timeout \
    -default "" \
    -readonly false
  method _c_sync_receipt_timeout {t v} { $self _configure_basic $t $v }
  method _v_sync_receipt_timeout {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_sync_receipt_timeout {t} { $self _cget_basic $t }
  # multiplier 
  method _m_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -sync_receipt_timeout }
  
  option -announce_leap61 \
    -cgetmethod _g_announce_leap61 -configuremethod _c_announce_leap61 -validatemethod _v_announce_leap61 \
    -default "" \
    -readonly false
  method _c_announce_leap61 {t v} { $self _configure_basic $t $v }
  method _v_announce_leap61 {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_announce_leap61 {t} { $self _cget_kBool $t }
  option -grant_delay_resp_duration_interval \
    -cgetmethod _g_grant_delay_resp_duration_interval -configuremethod _c_grant_delay_resp_duration_interval -validatemethod _v_grant_delay_resp_duration_interval \
    -default "" \
    -readonly false
  method _c_grant_delay_resp_duration_interval {t v} { $self _configure_basic $t $v }
  method _v_grant_delay_resp_duration_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_grant_delay_resp_duration_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -grant_delay_resp_duration_interval }
  
  option -timestamp_offset_variation \
    -cgetmethod _g_timestamp_offset_variation -configuremethod _c_timestamp_offset_variation -validatemethod _v_timestamp_offset_variation \
    -default "" \
    -readonly false
  method _c_timestamp_offset_variation {t v} { $self _configure_basic $t $v }
  method _v_timestamp_offset_variation {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_timestamp_offset_variation {t} { $self _cget_basic $t }
  # multiplier 
  method _m_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -timestamp_offset_variation }
  
  option -follow_up_drop_rate \
    -cgetmethod _g_follow_up_drop_rate -configuremethod _c_follow_up_drop_rate -validatemethod _v_follow_up_drop_rate \
    -default "" \
    -readonly false
  method _c_follow_up_drop_rate {t v} { $self _configure_basic $t $v }
  method _v_follow_up_drop_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_follow_up_drop_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -follow_up_drop_rate }
  
  option -master_mac_address \
    -cgetmethod _g_master_mac_address -configuremethod _c_master_mac_address -validatemethod _v_master_mac_address \
    -default "" \
    -readonly false
  method _c_master_mac_address {t v} { $self _configure_basic $t $v }
  method _v_master_mac_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_master_mac_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -master_mac_address }
  
  option -drop_signal_req_delay_resp \
    -cgetmethod _g_drop_signal_req_delay_resp -configuremethod _c_drop_signal_req_delay_resp -validatemethod _v_drop_signal_req_delay_resp \
    -default "" \
    -readonly false
  method _c_drop_signal_req_delay_resp {t v} { $self _configure_basic $t $v }
  method _v_drop_signal_req_delay_resp {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_drop_signal_req_delay_resp {t} { $self _cget_kBool $t }
  option -grant_sync_duration_interval \
    -cgetmethod _g_grant_sync_duration_interval -configuremethod _c_grant_sync_duration_interval -validatemethod _v_grant_sync_duration_interval \
    -default "" \
    -readonly false
  method _c_grant_sync_duration_interval {t v} { $self _configure_basic $t $v }
  method _v_grant_sync_duration_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_grant_sync_duration_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -grant_sync_duration_interval }
  
  option -learn_port_id \
    -cgetmethod _g_learn_port_id -configuremethod _c_learn_port_id -validatemethod _v_learn_port_id \
    -default "" \
    -readonly false
  method _c_learn_port_id {t v} { $self _configure_basic $t $v }
  method _v_learn_port_id {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_learn_port_id {t} { $self _cget_kBool $t }
  option -delay_response_delay \
    -cgetmethod _g_delay_response_delay -configuremethod _c_delay_response_delay -validatemethod _v_delay_response_delay \
    -default "" \
    -readonly false
  method _c_delay_response_delay {t v} { $self _configure_basic $t $v }
  method _v_delay_response_delay {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_delay_response_delay {t} { $self _cget_basic $t }
  # multiplier 
  method _m_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -delay_response_delay }
  
  option -grant_unicast_duration_interval \
    -cgetmethod _g_grant_unicast_duration_interval -configuremethod _c_grant_unicast_duration_interval -validatemethod _v_grant_unicast_duration_interval \
    -default "" \
    -readonly false
  method _c_grant_unicast_duration_interval {t v} { $self _configure_basic $t $v }
  method _v_grant_unicast_duration_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_grant_unicast_duration_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -grant_unicast_duration_interval }
  
  option -follow_up_delay_insertion_rate \
    -cgetmethod _g_follow_up_delay_insertion_rate -configuremethod _c_follow_up_delay_insertion_rate -validatemethod _v_follow_up_delay_insertion_rate \
    -default "" \
    -readonly false
  method _c_follow_up_delay_insertion_rate {t v} { $self _configure_basic $t $v }
  method _v_follow_up_delay_insertion_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_follow_up_delay_insertion_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -follow_up_delay_insertion_rate }
  
  option -log_delay_req_interval \
    -cgetmethod _g_log_delay_req_interval -configuremethod _c_log_delay_req_interval -validatemethod _v_log_delay_req_interval \
    -default "" \
    -readonly false
  method _c_log_delay_req_interval {t v} { $self _configure_basic $t $v }
  method _v_log_delay_req_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_log_delay_req_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -log_delay_req_interval }
  
  option -clock_accuracy \
    -cgetmethod _g_clock_accuracy -configuremethod _c_clock_accuracy -validatemethod _v_clock_accuracy \
    -default "" \
    -readonly false
  method _c_clock_accuracy {t v} { $self _configure_basic $t $v }
  method _v_clock_accuracy {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_clock_accuracy {t} { $self _cget_basic $t }
  # multiplier 
  method _m_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -clock_accuracy }
  
  option -client_count \
    -cgetmethod _g_client_count -configuremethod _c_client_count -validatemethod _v_client_count \
    -default "" \
    -readonly false
  method _c_client_count {t v} { $self _configure_basic $t $v }
  method _v_client_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_client_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -client_count }
  
  option -announce_time_traceable \
    -cgetmethod _g_announce_time_traceable -configuremethod _c_announce_time_traceable -validatemethod _v_announce_time_traceable \
    -default "" \
    -readonly false
  method _c_announce_time_traceable {t v} { $self _configure_basic $t $v }
  method _v_announce_time_traceable {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_announce_time_traceable {t} { $self _cget_kBool $t }
  option -step_mode \
    -cgetmethod _g_step_mode -configuremethod _c_step_mode -validatemethod _v_step_mode \
    -default "" \
    -readonly false
  method _c_step_mode {t v} { $self _configure_basic $t $v }
  method _v_step_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_step_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -step_mode }
  
  option -master_ip_increment_inter_entity \
    -cgetmethod _g_master_ip_increment_inter_entity -configuremethod _c_master_ip_increment_inter_entity -validatemethod _v_master_ip_increment_inter_entity \
    -default "" \
    -readonly false
  method _c_master_ip_increment_inter_entity {t v} { $self _configure_basic $t $v }
  method _v_master_ip_increment_inter_entity {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_master_ip_increment_inter_entity {t} { $self _cget_basic $t }
  # multiplier 
  method _m_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -master_ip_increment_inter_entity }
  
  option -delay_resp_drop_rate \
    -cgetmethod _g_delay_resp_drop_rate -configuremethod _c_delay_resp_drop_rate -validatemethod _v_delay_resp_drop_rate \
    -default "" \
    -readonly false
  method _c_delay_resp_drop_rate {t v} { $self _configure_basic $t $v }
  method _v_delay_resp_drop_rate {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_delay_resp_drop_rate {t} { $self _cget_basic $t }
  # multiplier 
  method _m_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -delay_resp_drop_rate }
  
  option -announce_receipt_timeout \
    -cgetmethod _g_announce_receipt_timeout -configuremethod _c_announce_receipt_timeout -validatemethod _v_announce_receipt_timeout \
    -default "" \
    -readonly false
  method _c_announce_receipt_timeout {t v} { $self _configure_basic $t $v }
  method _v_announce_receipt_timeout {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_announce_receipt_timeout {t} { $self _cget_basic $t }
  # multiplier 
  method _m_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -announce_receipt_timeout }
  
  option -rx_calibration \
    -cgetmethod _g_rx_calibration -configuremethod _c_rx_calibration -validatemethod _v_rx_calibration \
    -default "" \
    -readonly false
  method _c_rx_calibration {t v} { $self _configure_basic $t $v }
  method _v_rx_calibration {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_rx_calibration {t} { $self _cget_basic $t }
  # multiplier 
  method _m_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -rx_calibration }
  
  option -tx_calibration \
    -cgetmethod _g_tx_calibration -configuremethod _c_tx_calibration -validatemethod _v_tx_calibration \
    -default "" \
    -readonly false
  method _c_tx_calibration {t v} { $self _configure_basic $t $v }
  method _v_tx_calibration {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_tx_calibration {t} { $self _cget_basic $t }
  # multiplier 
  method _m_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -tx_calibration }
  
  option -log_announce_interval \
    -cgetmethod _g_log_announce_interval -configuremethod _c_log_announce_interval -validatemethod _v_log_announce_interval \
    -default "" \
    -readonly false
  method _c_log_announce_interval {t v} { $self _configure_basic $t $v }
  method _v_log_announce_interval {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_log_announce_interval {t} { $self _cget_basic $t }
  # multiplier 
  method _m_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -log_announce_interval }
  
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -master_mac_increment_inter_entity masterMacIncrementInterEntity
    -communication_mode communicationMode
    -send_announce_multicast sendAnnounceMulticast
    -follow_up_delay followUpDelay
    -domain domain
    -announce_drop_rate announceDropRate
    -client_ip_increment_by clientIpIncrementBy
    -renewal_invited renewalInvited
    -port_number_increment portNumberIncrement
    -use_clock_identity useClockIdentity
    -priority1 priority1
    -use_alternate_master_flag useAlternateMasterFlag
    -object_id objectId
    -delay_resp_receipt_timeout delayRespReceiptTimeout
    -announce_frequency_traceable announceFrequencyTraceable
    -priority2 priority2
    -announce_current_utc_offset_valid announceCurrentUtcOffsetValid
    -client_mac_address clientMacAddress
    -time_source timeSource
    -steps_removed stepsRemoved
    -clock_class clockClass
    -request_attempts requestAttempts
    -follow_up_bad_crc_rate followUpBadCrcRate
    -delay_response_delay_insertion_rate delayResponseDelayInsertionRate
    -log_sync_interval logSyncInterval
    -master_count masterCount
    -residence_time residenceTime
    -signal_interval signalInterval
    -delay_mechanism delayMechanism
    -strict_grant strictGrant
    -sync_drop_rate syncDropRate
    -drop_signal_req_sync dropSignalReqSync
    -clock_increment clockIncrement
    -announce_ptp_timescale announcePtpTimescale
    -signal_unicast_handling signalUnicastHandling
    -enabled enabled
    -timestamp_offset timestampOffset
    -master_ip_increment_by masterIpIncrementBy
    -request_interval requestInterval
    -ip_tos ipTos
    -request_holddown requestHolddown
    -client_mac_increment_by clientMacIncrementBy
    -name name
    -drop_signal_req_announce dropSignalReqAnnounce
    -master_ip_address masterIpAddress
    -first_clock firstClock
    -master_mac_increment_by masterMacIncrementBy
    -send_cancel_tlv sendCancelTlv
    -port_number portNumber
    -client_ip_address clientIpAddress
    -announce_leap59 announceLeap59
    -send_announce_tlv sendAnnounceTlv
    -sync_receipt_timeout syncReceiptTimeout
    -announce_leap61 announceLeap61
    -grant_delay_resp_duration_interval grantDelayRespDurationInterval
    -timestamp_offset_variation timestampOffsetVariation
    -follow_up_drop_rate followUpDropRate
    -master_mac_address masterMacAddress
    -drop_signal_req_delay_resp dropSignalReqDelayResp
    -grant_sync_duration_interval grantSyncDurationInterval
    -learn_port_id learnPortId
    -delay_response_delay delayResponseDelay
    -grant_unicast_duration_interval grantUnicastDurationInterval
    -follow_up_delay_insertion_rate followUpDelayInsertionRate
    -log_delay_req_interval logDelayReqInterval
    -clock_accuracy clockAccuracy
    -client_count clientCount
    -announce_time_traceable announceTimeTraceable
    -step_mode stepMode
    -master_ip_increment_inter_entity masterIpIncrementInterEntity
    -delay_resp_drop_rate delayRespDropRate
    -announce_receipt_timeout announceReceiptTimeout
    -rx_calibration rxCalibration
    -tx_calibration txCalibration
    -log_announce_interval logAnnounceInterval
  }
  #
  variable MultiplierOptionGroups {
    _m_master_mac_increment_inter_entity {-master_mac_increment_inter_entity_format -master_mac_increment_inter_entity_base -master_mac_increment_inter_entity_incr}
    _m_communication_mode {-communication_mode_format -communication_mode_base -communication_mode_incr}
    _m_follow_up_delay {-follow_up_delay_base -follow_up_delay_incr}
    _m_domain {-domain_base -domain_incr}
    _m_announce_drop_rate {-announce_drop_rate_base -announce_drop_rate_incr}
    _m_client_ip_increment_by {-client_ip_increment_by_format -client_ip_increment_by_base -client_ip_increment_by_incr}
    _m_port_number_increment {-port_number_increment_base -port_number_increment_incr}
    _m_priority1 {-priority1_base -priority1_incr}
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_delay_resp_receipt_timeout {-delay_resp_receipt_timeout_base -delay_resp_receipt_timeout_incr}
    _m_priority2 {-priority2_base -priority2_incr}
    _m_client_mac_address {-client_mac_address_format -client_mac_address_base -client_mac_address_incr}
    _m_time_source {-time_source_format -time_source_base -time_source_incr}
    _m_steps_removed {-steps_removed_base -steps_removed_incr}
    _m_clock_class {-clock_class_base -clock_class_incr}
    _m_request_attempts {-request_attempts_base -request_attempts_incr}
    _m_follow_up_bad_crc_rate {-follow_up_bad_crc_rate_base -follow_up_bad_crc_rate_incr}
    _m_delay_response_delay_insertion_rate {-delay_response_delay_insertion_rate_base -delay_response_delay_insertion_rate_incr}
    _m_log_sync_interval {-log_sync_interval_base -log_sync_interval_incr}
    _m_master_count {-master_count_base -master_count_incr}
    _m_residence_time {-residence_time_base -residence_time_incr}
    _m_signal_interval {-signal_interval_base -signal_interval_incr}
    _m_delay_mechanism {-delay_mechanism_format -delay_mechanism_base -delay_mechanism_incr}
    _m_sync_drop_rate {-sync_drop_rate_base -sync_drop_rate_incr}
    _m_clock_increment {-clock_increment_format -clock_increment_base -clock_increment_incr}
    _m_signal_unicast_handling {-signal_unicast_handling_format -signal_unicast_handling_base -signal_unicast_handling_incr}
    _m_timestamp_offset {-timestamp_offset_base -timestamp_offset_incr}
    _m_master_ip_increment_by {-master_ip_increment_by_format -master_ip_increment_by_base -master_ip_increment_by_incr}
    _m_request_interval {-request_interval_base -request_interval_incr}
    _m_ip_tos {-ip_tos_base -ip_tos_incr}
    _m_request_holddown {-request_holddown_base -request_holddown_incr}
    _m_client_mac_increment_by {-client_mac_increment_by_format -client_mac_increment_by_base -client_mac_increment_by_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_master_ip_address {-master_ip_address_format -master_ip_address_base -master_ip_address_incr}
    _m_first_clock {-first_clock_format -first_clock_base -first_clock_incr}
    _m_master_mac_increment_by {-master_mac_increment_by_format -master_mac_increment_by_base -master_mac_increment_by_incr}
    _m_port_number {-port_number_base -port_number_incr}
    _m_client_ip_address {-client_ip_address_format -client_ip_address_base -client_ip_address_incr}
    _m_sync_receipt_timeout {-sync_receipt_timeout_base -sync_receipt_timeout_incr}
    _m_grant_delay_resp_duration_interval {-grant_delay_resp_duration_interval_base -grant_delay_resp_duration_interval_incr}
    _m_timestamp_offset_variation {-timestamp_offset_variation_base -timestamp_offset_variation_incr}
    _m_follow_up_drop_rate {-follow_up_drop_rate_base -follow_up_drop_rate_incr}
    _m_master_mac_address {-master_mac_address_format -master_mac_address_base -master_mac_address_incr}
    _m_grant_sync_duration_interval {-grant_sync_duration_interval_base -grant_sync_duration_interval_incr}
    _m_delay_response_delay {-delay_response_delay_base -delay_response_delay_incr}
    _m_grant_unicast_duration_interval {-grant_unicast_duration_interval_base -grant_unicast_duration_interval_incr}
    _m_follow_up_delay_insertion_rate {-follow_up_delay_insertion_rate_base -follow_up_delay_insertion_rate_incr}
    _m_log_delay_req_interval {-log_delay_req_interval_base -log_delay_req_interval_incr}
    _m_clock_accuracy {-clock_accuracy_format -clock_accuracy_base -clock_accuracy_incr}
    _m_client_count {-client_count_base -client_count_incr}
    _m_step_mode {-step_mode_format -step_mode_base -step_mode_incr}
    _m_master_ip_increment_inter_entity {-master_ip_increment_inter_entity_format -master_ip_increment_inter_entity_base -master_ip_increment_inter_entity_incr}
    _m_delay_resp_drop_rate {-delay_resp_drop_rate_base -delay_resp_drop_rate_incr}
    _m_announce_receipt_timeout {-announce_receipt_timeout_base -announce_receipt_timeout_incr}
    _m_rx_calibration {-rx_calibration_base -rx_calibration_incr}
    _m_tx_calibration {-tx_calibration_base -tx_calibration_incr}
    _m_log_announce_interval {-log_announce_interval_base -log_announce_interval_incr}
  }
}

#@ ancestors for ::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp
#@ end of ancestors for ::hag::ixnmeta::/vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp

#
# Source in an optional tailor file that allows
# customization for the generated snit objects
#
set file_found 0
set dir [file normalize [file dirname [info script]]]
if {[file exists [set dir]/tailor_protocolStack_ethernet_ipEndpoint_range_ptpRangeOverIp.tcl]} {
    set fn [set dir]/tailor_protocolStack_ethernet_ipEndpoint_range_ptpRangeOverIp.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
} elseif {[file exists [set dir]/../tailor_protocolStack_ethernet_ipEndpoint_range_ptpRangeOverIp.tcl]} {
    set fn [set dir]/../tailor_protocolStack_ethernet_ipEndpoint_range_ptpRangeOverIp.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
}
# if -input-tailor-file-mandatory
if 1 { 
    if {![set file_found]} {
      return -code error  "Could not find required tailorfile 'tailor_protocolStack_ethernet_ipEndpoint_range_ptpRangeOverIp.tcl'"
    }
}

#-------------------------------------------------------------
# Generated by the hag on 
#     Fri Aug 07 13:40:57 PDT 2020
#-------------------------------------------------------------
# package requires, etc.
package require snit
#-------------------------------------------------------------

if {[llength [info commands ::ixia::ptp_over_ip]]} {
    rename ::ixia::ptp_over_ip ""
}
::ixia::hag::ixn::types::shell ::ixia::ptp_over_ip  -config-multiplier-option-groups 1  -config-typepathways  [list /vport/protocolStack/ethernet/ipEndpoint/range/ptpRangeOverIp]
#
# Shell level commands
# - XXX_config
# - XXX_control
# - XXX_stats
#

proc ::ixia::ptp_over_ip_config {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail [catch  [concat ::ixia::ptp_over_ip config [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [list [list status 1] [list handles $r] [list log ""]]
    }
  } else {
    eval [concat {::ixia::ptp_over_ip config} [set args]]
  }
}

proc ::ixia::ptp_over_ip_control {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail [catch  [concat ::ixia::ptp_over_ip control [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [list [list status 1] [list inner_results $r] [list log ""]]
    }
  } else {
    eval [concat {::ixia::ptp_over_ip config} [set args]]
  }
}

proc ::ixia::ptp_over_ip_stats {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail  [catch [concat {::ixia::ptp_over_ip stats} [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [concat  [list [list status 1] [list log ""]]  $r  ]
    }
  } else {
    eval [concat {::ixia::ptp_over_ip stats} [set args]]
  }
}

