#
# ** Do not edit this file ** 
# This file was generated by the HAG
#

#R /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange ( ../macRange - ) 
# Generated for relative support for:
# ::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/fcoeClientEndpoint/range/macRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/macRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/macRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/macRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {@path-fcoeClientFdiscRange,../vlanRange/name,value_translator cgs.xlt.hag_vlan_id_info}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name fcoe
    -docs-chapter-name {FCOE APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-skip-items-with-typepath-anx2hlt {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange fdisc ../fcoeClientFlogiRange flogi */protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange flogi}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {{../macRange -} {../vlanRange -} {../fcoeClientFlogiRange -}}}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command fcoeClientFdiscRange
    -use-settings-for typical_ethernet_based_stackmanager_range_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/fcoeClientEndpoint/range/macRange
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -increment_by \
    -cgetmethod _g_increment_by -configuremethod _c_increment_by -validatemethod _v_increment_by \
    -default "" \
    -readonly false
  method _c_increment_by {t v} { $self _configure_basic $t $v }
  method _v_increment_by {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_increment_by {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -increment_by }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -count \
    -cgetmethod _g_count -configuremethod _c_count -validatemethod _v_count \
    -default "" \
    -readonly false
  method _c_count {t v} { $self _configure_basic $t $v }
  method _v_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -count }
  
  option -mac \
    -cgetmethod _g_mac -configuremethod _c_mac -validatemethod _v_mac \
    -default "" \
    -readonly false
  method _c_mac {t v} { $self _configure_basic $t $v }
  method _v_mac {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_mac {t} { $self _cget_basic $t }
  # multiplier 
  method _m_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac }
  
  option -mtu \
    -cgetmethod _g_mtu -configuremethod _c_mtu -validatemethod _v_mtu \
    -default "" \
    -readonly false
  method _c_mtu {t v} { $self _configure_basic $t $v }
  method _v_mtu {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_mtu {t} { $self _cget_basic $t }
  # multiplier 
  method _m_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mtu }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -object_id objectId
    -increment_by incrementBy
    -name name
    -count count
    -mac mac
    -mtu mtu
    -enabled enabled
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_increment_by {-increment_by_format -increment_by_base -increment_by_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_count {-count_base -count_incr}
    _m_mac {-mac_format -mac_base -mac_incr}
    _m_mtu {-mtu_base -mtu_incr}
  }
}

#R /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange ( ../vlanRange - ) 
# Generated for relative support for:
# ::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {@path-fcoeClientFdiscRange,../vlanRange/name,value_translator cgs.xlt.hag_vlan_id_info}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name fcoe
    -docs-chapter-name {FCOE APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-skip-items-with-typepath-anx2hlt {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange fdisc ../fcoeClientFlogiRange flogi */protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange flogi}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {{../macRange -} {../vlanRange -} {../fcoeClientFlogiRange -}}}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command fcoeClientFdiscRange
    -use-settings-for typical_ethernet_based_stackmanager_range_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -inner_first_id \
    -cgetmethod _g_inner_first_id -configuremethod _c_inner_first_id -validatemethod _v_inner_first_id \
    -default "" \
    -readonly false
  method _c_inner_first_id {t v} { $self _configure_basic $t $v }
  method _v_inner_first_id {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_inner_first_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -inner_first_id }
  
  option -inner_increment \
    -cgetmethod _g_inner_increment -configuremethod _c_inner_increment -validatemethod _v_inner_increment \
    -default "" \
    -readonly false
  method _c_inner_increment {t v} { $self _configure_basic $t $v }
  method _v_inner_increment {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_inner_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -inner_increment }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  option -unique_count \
    -cgetmethod _g_unique_count -configuremethod _c_unique_count -validatemethod _v_unique_count \
    -default "" \
    -readonly false
  method _c_unique_count {t v} { $self _configure_basic $t $v }
  method _v_unique_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_unique_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -unique_count }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -increment_step \
    -cgetmethod _g_increment_step -configuremethod _c_increment_step -validatemethod _v_increment_step \
    -default "" \
    -readonly false
  method _c_increment_step {t v} { $self _configure_basic $t $v }
  method _v_increment_step {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_increment_step {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -increment_step }
  
  option -tpid \
    -cgetmethod _g_tpid -configuremethod _c_tpid -validatemethod _v_tpid \
    -default "" \
    -readonly false
  method _c_tpid {t v} { $self _configure_basic $t $v }
  method _v_tpid {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_tpid {t} { $self _cget_basic $t }
  # multiplier 
  method _m_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -tpid }
  
  option -priority \
    -cgetmethod _g_priority -configuremethod _c_priority -validatemethod _v_priority \
    -default "" \
    -readonly false
  method _c_priority {t v} { $self _configure_basic $t $v }
  method _v_priority {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_priority {t} { $self _cget_basic $t }
  # multiplier 
  method _m_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -priority }
  
  option -inner_enable \
    -cgetmethod _g_inner_enable -configuremethod _c_inner_enable -validatemethod _v_inner_enable \
    -default "" \
    -readonly false
  method _c_inner_enable {t v} { $self _configure_basic $t $v }
  method _v_inner_enable {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_inner_enable {t} { $self _cget_kBool $t }
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -inner_unique_count \
    -cgetmethod _g_inner_unique_count -configuremethod _c_inner_unique_count -validatemethod _v_inner_unique_count \
    -default "" \
    -readonly false
  method _c_inner_unique_count {t v} { $self _configure_basic $t $v }
  method _v_inner_unique_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_inner_unique_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -inner_unique_count }
  
  option -inner_tpid \
    -cgetmethod _g_inner_tpid -configuremethod _c_inner_tpid -validatemethod _v_inner_tpid \
    -default "" \
    -readonly false
  method _c_inner_tpid {t v} { $self _configure_basic $t $v }
  method _v_inner_tpid {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_inner_tpid {t} { $self _cget_basic $t }
  # multiplier 
  method _m_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -inner_tpid }
  
  option -first_id \
    -cgetmethod _g_first_id -configuremethod _c_first_id -validatemethod _v_first_id \
    -default "" \
    -readonly false
  method _c_first_id {t v} { $self _configure_basic $t $v }
  method _v_first_id {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_first_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -first_id }
  
  option -increment \
    -cgetmethod _g_increment -configuremethod _c_increment -validatemethod _v_increment \
    -default "" \
    -readonly false
  method _c_increment {t v} { $self _configure_basic $t $v }
  method _v_increment {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -increment }
  
  option -inner_increment_step \
    -cgetmethod _g_inner_increment_step -configuremethod _c_inner_increment_step -validatemethod _v_inner_increment_step \
    -default "" \
    -readonly false
  method _c_inner_increment_step {t v} { $self _configure_basic $t $v }
  method _v_inner_increment_step {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_inner_increment_step {t} { $self _cget_basic $t }
  # multiplier 
  method _m_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -inner_increment_step }
  
  option -id_incr_mode \
    -cgetmethod _g_id_incr_mode -configuremethod _c_id_incr_mode -validatemethod _v_id_incr_mode \
    -default "" \
    -readonly false
  method _c_id_incr_mode {t v} { $self _configure_basic $t $v }
  method _v_id_incr_mode {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_id_incr_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -id_incr_mode }
  
  option -inner_priority \
    -cgetmethod _g_inner_priority -configuremethod _c_inner_priority -validatemethod _v_inner_priority \
    -default "" \
    -readonly false
  method _c_inner_priority {t v} { $self _configure_basic $t $v }
  method _v_inner_priority {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_inner_priority {t} { $self _cget_basic $t }
  # multiplier 
  method _m_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -inner_priority }
  
  option -vlan_id_info \
    -cgetmethod _g_vlan_id_info -configuremethod _c_vlan_id_info -validatemethod _v_vlan_id_info \
    -default "" \
    -readonly false
  method _c_vlan_id_info {t v} { $self _configure_kList_as_list /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo $t $v }
  method _v_vlan_id_info {t v} { $self _validate_kList_as_list /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo $t $v }
  method _g_vlan_id_info {t} { $self _cget_basic $t }
  option -vlan_id_infomulti \
    -cgetmethod _g_vlan_id_infomulti -configuremethod _c_vlan_id_infomulti -validatemethod _v_vlan_id_infomulti \
    -default "" \
    -readonly false
  method _c_vlan_id_infomulti {t v} { $self _configure_kList_as_multiplier /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo $t $v }
  method _v_vlan_id_infomulti {t v} { $self _validate_kList_as_multiplier /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo $t $v }
  method _g_vlan_id_infomulti {t} { $self _cget_basic $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -inner_first_id innerFirstId
    -inner_increment innerIncrement
    -enabled enabled
    -unique_count uniqueCount
    -name name
    -increment_step incrementStep
    -tpid tpid
    -priority priority
    -inner_enable innerEnable
    -object_id objectId
    -inner_unique_count innerUniqueCount
    -inner_tpid innerTpid
    -first_id firstId
    -increment increment
    -inner_increment_step innerIncrementStep
    -id_incr_mode idIncrMode
    -inner_priority innerPriority
  }
  #
  variable MultiplierOptionGroups {
    _m_inner_first_id {-inner_first_id_base -inner_first_id_incr}
    _m_inner_increment {-inner_increment_base -inner_increment_incr}
    _m_unique_count {-unique_count_base -unique_count_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_increment_step {-increment_step_base -increment_step_incr}
    _m_tpid {-tpid_format -tpid_base -tpid_incr}
    _m_priority {-priority_base -priority_incr}
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_inner_unique_count {-inner_unique_count_base -inner_unique_count_incr}
    _m_inner_tpid {-inner_tpid_format -inner_tpid_base -inner_tpid_incr}
    _m_first_id {-first_id_base -first_id_incr}
    _m_increment {-increment_base -increment_incr}
    _m_inner_increment_step {-inner_increment_step_base -inner_increment_step_incr}
    _m_id_incr_mode {-id_incr_mode_base -id_incr_mode_incr}
    _m_inner_priority {-inner_priority_base -inner_priority_incr}
  }
}

#? Children types for relative ::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange 
#-->  "::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {@path-fcoeClientFdiscRange,../vlanRange/name,value_translator cgs.xlt.hag_vlan_id_info}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name fcoe
    -docs-chapter-name {FCOE APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-skip-items-with-typepath-anx2hlt {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange fdisc ../fcoeClientFlogiRange flogi */protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange flogi}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {{../macRange -} {../vlanRange -} {../fcoeClientFlogiRange -}}}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command fcoeClientFdiscRange
    -use-settings-for typical_ethernet_based_stackmanager_range_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/fcoeClientEndpoint/range/vlanRange/vlanIdInfo
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -unique_count \
    -cgetmethod _g_unique_count -configuremethod _c_unique_count -validatemethod _v_unique_count \
    -default "" \
    -readonly false
  method _c_unique_count {t v} { $self _configure_basic $t $v }
  method _v_unique_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_unique_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -unique_count }
  
  option -tpid \
    -cgetmethod _g_tpid -configuremethod _c_tpid -validatemethod _v_tpid \
    -default "" \
    -readonly false
  method _c_tpid {t v} { $self _configure_basic $t $v }
  method _v_tpid {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_tpid {t} { $self _cget_basic $t }
  # multiplier 
  method _m_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -tpid }
  
  option -increment \
    -cgetmethod _g_increment -configuremethod _c_increment -validatemethod _v_increment \
    -default "" \
    -readonly false
  method _c_increment {t v} { $self _configure_basic $t $v }
  method _v_increment {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -increment }
  
  option -increment_step \
    -cgetmethod _g_increment_step -configuremethod _c_increment_step -validatemethod _v_increment_step \
    -default "" \
    -readonly false
  method _c_increment_step {t v} { $self _configure_basic $t $v }
  method _v_increment_step {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_increment_step {t} { $self _cget_basic $t }
  # multiplier 
  method _m_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -increment_step }
  
  option -first_id \
    -cgetmethod _g_first_id -configuremethod _c_first_id -validatemethod _v_first_id \
    -default "" \
    -readonly false
  method _c_first_id {t v} { $self _configure_basic $t $v }
  method _v_first_id {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_first_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -first_id }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  option -priority \
    -cgetmethod _g_priority -configuremethod _c_priority -validatemethod _v_priority \
    -default "" \
    -readonly false
  method _c_priority {t v} { $self _configure_basic $t $v }
  method _v_priority {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_priority {t} { $self _cget_basic $t }
  # multiplier 
  method _m_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -priority }
  
  option -enabled \
    -cgetmethod _g_enabled -configuremethod _c_enabled -validatemethod _v_enabled \
    -default "" \
    -readonly false
  method _c_enabled {t v} { $self _configure_basic $t $v }
  method _v_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_enabled {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -object_id objectId
    -unique_count uniqueCount
    -tpid tpid
    -increment increment
    -increment_step incrementStep
    -first_id firstId
    -name name
    -priority priority
    -enabled enabled
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_unique_count {-unique_count_base -unique_count_incr}
    _m_tpid {-tpid_format -tpid_base -tpid_incr}
    _m_increment {-increment_base -increment_incr}
    _m_increment_step {-increment_step_base -increment_step_incr}
    _m_first_id {-first_id_base -first_id_incr}
    _m_name {-name_format -name_base -name_incr}
    _m_priority {-priority_base -priority_incr}
  }
}

#R /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange ( ../fcoeClientFlogiRange - ) 
# Generated for relative support for:
# ::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {@path-fcoeClientFdiscRange,../vlanRange/name,value_translator cgs.xlt.hag_vlan_id_info}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name fcoe
    -docs-chapter-name {FCOE APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-skip-items-with-typepath-anx2hlt {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange fdisc ../fcoeClientFlogiRange flogi */protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange flogi}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {{../macRange -} {../vlanRange -} {../fcoeClientFlogiRange -}}}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command fcoeClientFdiscRange
    -use-settings-for typical_ethernet_based_stackmanager_range_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -flogi_plogi_dest_id \
    -cgetmethod _g_flogi_plogi_dest_id -configuremethod _c_flogi_plogi_dest_id -validatemethod _v_flogi_plogi_dest_id \
    -default "" \
    -readonly false
  method _c_flogi_plogi_dest_id {t v} { $self _configure_basic $t $v }
  method _v_flogi_plogi_dest_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_plogi_dest_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_plogi_dest_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_plogi_dest_id }
  
  option -flogi_fip_addressing_mode \
    -cgetmethod _g_flogi_fip_addressing_mode -configuremethod _c_flogi_fip_addressing_mode -validatemethod _v_flogi_fip_addressing_mode \
    -default "" \
    -readonly false
  method _c_flogi_fip_addressing_mode {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_addressing_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_fip_addressing_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_fip_addressing_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_addressing_mode }
  
  option -flogi_fip_destination_mac_address \
    -cgetmethod _g_flogi_fip_destination_mac_address -configuremethod _c_flogi_fip_destination_mac_address -validatemethod _v_flogi_fip_destination_mac_address \
    -default "" \
    -readonly false
  method _c_flogi_fip_destination_mac_address {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_destination_mac_address {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_fip_destination_mac_address {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_fip_destination_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_destination_mac_address }
  
  option -flogi_name_server_query_parameter_type \
    -cgetmethod _g_flogi_name_server_query_parameter_type -configuremethod _c_flogi_name_server_query_parameter_type -validatemethod _v_flogi_name_server_query_parameter_type \
    -default "" \
    -readonly false
  method _c_flogi_name_server_query_parameter_type {t v} { $self _configure_basic $t $v }
  method _v_flogi_name_server_query_parameter_type {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_name_server_query_parameter_type {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_name_server_query_parameter_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name_server_query_parameter_type }
  
  option -flogi_count \
    -cgetmethod _g_flogi_count -configuremethod _c_flogi_count -validatemethod _v_flogi_count \
    -default "" \
    -readonly false
  method _c_flogi_count {t v} { $self _configure_basic $t $v }
  method _v_flogi_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_flogi_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -flogi_count }
  
  option -flogi_prli_enabled \
    -cgetmethod _g_flogi_prli_enabled -configuremethod _c_flogi_prli_enabled -validatemethod _v_flogi_prli_enabled \
    -default "" \
    -readonly false
  method _c_flogi_prli_enabled {t v} { $self _configure_basic $t $v }
  method _v_flogi_prli_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_prli_enabled {t} { $self _cget_kBool $t }
  option -flogi_state_change_registration \
    -cgetmethod _g_flogi_state_change_registration -configuremethod _c_flogi_state_change_registration -validatemethod _v_flogi_state_change_registration \
    -default "" \
    -readonly false
  method _c_flogi_state_change_registration {t v} { $self _configure_basic $t $v }
  method _v_flogi_state_change_registration {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_state_change_registration {t} { $self _cget_kBool $t }
  option -flogi_fip_enabled \
    -cgetmethod _g_flogi_fip_enabled -configuremethod _c_flogi_fip_enabled -validatemethod _v_flogi_fip_enabled \
    -default "" \
    -readonly false
  method _c_flogi_fip_enabled {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_fip_enabled {t} { $self _cget_kBool $t }
  option -flogi_fip_vendor_id \
    -cgetmethod _g_flogi_fip_vendor_id -configuremethod _c_flogi_fip_vendor_id -validatemethod _v_flogi_fip_vendor_id \
    -default "" \
    -readonly false
  method _c_flogi_fip_vendor_id {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_vendor_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_fip_vendor_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_fip_vendor_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_vendor_id }
  
  option -flogi_enabled \
    -cgetmethod _g_flogi_enabled -configuremethod _c_flogi_enabled -validatemethod _v_flogi_enabled \
    -default "" \
    -readonly false
  method _c_flogi_enabled {t v} { $self _configure_basic $t $v }
  method _v_flogi_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_enabled {t} { $self _cget_kBool $t }
  option -flogi_name_server_registration \
    -cgetmethod _g_flogi_name_server_registration -configuremethod _c_flogi_name_server_registration -validatemethod _v_flogi_name_server_registration \
    -default "" \
    -readonly false
  method _c_flogi_name_server_registration {t v} { $self _configure_basic $t $v }
  method _v_flogi_name_server_registration {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_name_server_registration {t} { $self _cget_kBool $t }
  option -flogi_source_oui_increment \
    -cgetmethod _g_flogi_source_oui_increment -configuremethod _c_flogi_source_oui_increment -validatemethod _v_flogi_source_oui_increment \
    -default "" \
    -readonly false
  method _c_flogi_source_oui_increment {t v} { $self _configure_basic $t $v }
  method _v_flogi_source_oui_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_source_oui_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_source_oui_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_source_oui_increment }
  
  option -flogi_name_server_query_parameter_value \
    -cgetmethod _g_flogi_name_server_query_parameter_value -configuremethod _c_flogi_name_server_query_parameter_value -validatemethod _v_flogi_name_server_query_parameter_value \
    -default "" \
    -readonly false
  method _c_flogi_name_server_query_parameter_value {t v} { $self _configure_basic $t $v }
  method _v_flogi_name_server_query_parameter_value {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_name_server_query_parameter_value {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_name_server_query_parameter_value {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name_server_query_parameter_value }
  
  option -flogi_unicast_fip_solicit \
    -cgetmethod _g_flogi_unicast_fip_solicit -configuremethod _c_flogi_unicast_fip_solicit -validatemethod _v_flogi_unicast_fip_solicit \
    -default "" \
    -readonly false
  method _c_flogi_unicast_fip_solicit {t v} { $self _configure_basic $t $v }
  method _v_flogi_unicast_fip_solicit {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_unicast_fip_solicit {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_unicast_fip_solicit {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_unicast_fip_solicit }
  
  option -flogi_port_wwn_increment \
    -cgetmethod _g_flogi_port_wwn_increment -configuremethod _c_flogi_port_wwn_increment -validatemethod _v_flogi_port_wwn_increment \
    -default "" \
    -readonly false
  method _c_flogi_port_wwn_increment {t v} { $self _configure_basic $t $v }
  method _v_flogi_port_wwn_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_port_wwn_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_port_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_port_wwn_increment }
  
  option -flogi_source_oui \
    -cgetmethod _g_flogi_source_oui -configuremethod _c_flogi_source_oui -validatemethod _v_flogi_source_oui \
    -default "" \
    -readonly false
  method _c_flogi_source_oui {t v} { $self _configure_basic $t $v }
  method _v_flogi_source_oui {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_source_oui {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_source_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_source_oui }
  
  option -flogi_node_wwn_increment \
    -cgetmethod _g_flogi_node_wwn_increment -configuremethod _c_flogi_node_wwn_increment -validatemethod _v_flogi_node_wwn_increment \
    -default "" \
    -readonly false
  method _c_flogi_node_wwn_increment {t v} { $self _configure_basic $t $v }
  method _v_flogi_node_wwn_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_node_wwn_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_node_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_node_wwn_increment }
  
  option -flogi_port_wwn_start \
    -cgetmethod _g_flogi_port_wwn_start -configuremethod _c_flogi_port_wwn_start -validatemethod _v_flogi_port_wwn_start \
    -default "" \
    -readonly false
  method _c_flogi_port_wwn_start {t v} { $self _configure_basic $t $v }
  method _v_flogi_port_wwn_start {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_port_wwn_start {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_port_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_port_wwn_start }
  
  option -flogi_node_wwn_start \
    -cgetmethod _g_flogi_node_wwn_start -configuremethod _c_flogi_node_wwn_start -validatemethod _v_flogi_node_wwn_start \
    -default "" \
    -readonly false
  method _c_flogi_node_wwn_start {t v} { $self _configure_basic $t $v }
  method _v_flogi_node_wwn_start {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_node_wwn_start {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_node_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_node_wwn_start }
  
  option -flogi_fip_vlan_discovery \
    -cgetmethod _g_flogi_fip_vlan_discovery -configuremethod _c_flogi_fip_vlan_discovery -validatemethod _v_flogi_fip_vlan_discovery \
    -default "" \
    -readonly false
  method _c_flogi_fip_vlan_discovery {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_vlan_discovery {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_fip_vlan_discovery {t} { $self _cget_kBool $t }
  option -flogi_name \
    -cgetmethod _g_flogi_name -configuremethod _c_flogi_name -validatemethod _v_flogi_name \
    -default "" \
    -readonly false
  method _c_flogi_name {t v} { $self _configure_basic $t $v }
  method _v_flogi_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name }
  
  option -flogi_name_server_commands \
    -cgetmethod _g_flogi_name_server_commands -configuremethod _c_flogi_name_server_commands -validatemethod _v_flogi_name_server_commands \
    -default "" \
    -readonly false
  method _c_flogi_name_server_commands {t v} { $self _configure_basic $t $v }
  method _v_flogi_name_server_commands {t v} { ::ixia::hag::ixn::validate::kArray $t $v }
  method _g_flogi_name_server_commands {t} { $self _cget_basic $t }
  option -flogi_plogi_target_name \
    -cgetmethod _g_flogi_plogi_target_name -configuremethod _c_flogi_plogi_target_name -validatemethod _v_flogi_plogi_target_name \
    -default "" \
    -readonly false
  method _c_flogi_plogi_target_name {t v} { $self _configure_basic $t $v }
  method _v_flogi_plogi_target_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_plogi_target_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_plogi_target_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_plogi_target_name }
  
  option -flogi_state_change_registration_option \
    -cgetmethod _g_flogi_state_change_registration_option -configuremethod _c_flogi_state_change_registration_option -validatemethod _v_flogi_state_change_registration_option \
    -default "" \
    -readonly false
  method _c_flogi_state_change_registration_option {t v} { $self _configure_basic $t $v }
  method _v_flogi_state_change_registration_option {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_state_change_registration_option {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_state_change_registration_option {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_state_change_registration_option }
  
  option -flogi_object_id \
    -cgetmethod _g_flogi_object_id -configuremethod _c_flogi_object_id -validatemethod _v_flogi_object_id \
    -default "" \
    -readonly false
  method _c_flogi_object_id {t v} {  }
  method _v_flogi_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_object_id }
  
  option -flogi_plogi_mesh_mode \
    -cgetmethod _g_flogi_plogi_mesh_mode -configuremethod _c_flogi_plogi_mesh_mode -validatemethod _v_flogi_plogi_mesh_mode \
    -default "" \
    -readonly false
  method _c_flogi_plogi_mesh_mode {t v} { $self _configure_basic $t $v }
  method _v_flogi_plogi_mesh_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_plogi_mesh_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_plogi_mesh_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_plogi_mesh_mode }
  
  option -flogi_name_server_query_command \
    -cgetmethod _g_flogi_name_server_query_command -configuremethod _c_flogi_name_server_query_command -validatemethod _v_flogi_name_server_query_command \
    -default "" \
    -readonly false
  method _c_flogi_name_server_query_command {t v} { $self _configure_basic $t $v }
  method _v_flogi_name_server_query_command {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_name_server_query_command {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_name_server_query_command {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name_server_query_command }
  
  option -flogi_fip_solicit_timeout \
    -cgetmethod _g_flogi_fip_solicit_timeout -configuremethod _c_flogi_fip_solicit_timeout -validatemethod _v_flogi_fip_solicit_timeout \
    -default "" \
    -readonly false
  method _c_flogi_fip_solicit_timeout {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_solicit_timeout {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_flogi_fip_solicit_timeout {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_fip_solicit_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -flogi_fip_solicit_timeout }
  
  option -flogi_fip_option_set_name \
    -cgetmethod _g_flogi_fip_option_set_name -configuremethod _c_flogi_fip_option_set_name -validatemethod _v_flogi_fip_option_set_name \
    -default "" \
    -readonly false
  method _c_flogi_fip_option_set_name {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_option_set_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_flogi_fip_option_set_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_flogi_fip_option_set_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_option_set_name }
  
  option -flogi_plogi_enabled \
    -cgetmethod _g_flogi_plogi_enabled -configuremethod _c_flogi_plogi_enabled -validatemethod _v_flogi_plogi_enabled \
    -default "" \
    -readonly false
  method _c_flogi_plogi_enabled {t v} { $self _configure_basic $t $v }
  method _v_flogi_plogi_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_plogi_enabled {t} { $self _cget_kBool $t }
  option -flogi_name_server_query \
    -cgetmethod _g_flogi_name_server_query -configuremethod _c_flogi_name_server_query -validatemethod _v_flogi_name_server_query \
    -default "" \
    -readonly false
  method _c_flogi_name_server_query {t v} { $self _configure_basic $t $v }
  method _v_flogi_name_server_query {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_name_server_query {t} { $self _cget_kBool $t }
  option -flogi_fip_vlan_discovery_untagged \
    -cgetmethod _g_flogi_fip_vlan_discovery_untagged -configuremethod _c_flogi_fip_vlan_discovery_untagged -validatemethod _v_flogi_fip_vlan_discovery_untagged \
    -default "" \
    -readonly false
  method _c_flogi_fip_vlan_discovery_untagged {t v} { $self _configure_basic $t $v }
  method _v_flogi_fip_vlan_discovery_untagged {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_flogi_fip_vlan_discovery_untagged {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -flogi_plogi_dest_id plogiDestId
    -flogi_fip_addressing_mode fipAddressingMode
    -flogi_fip_destination_mac_address fipDestinationMacAddress
    -flogi_name_server_query_parameter_type nameServerQueryParameterType
    -flogi_count count
    -flogi_prli_enabled prliEnabled
    -flogi_state_change_registration stateChangeRegistration
    -flogi_fip_enabled fipEnabled
    -flogi_fip_vendor_id fipVendorId
    -flogi_enabled enabled
    -flogi_name_server_registration nameServerRegistration
    -flogi_source_oui_increment sourceOuiIncrement
    -flogi_name_server_query_parameter_value nameServerQueryParameterValue
    -flogi_unicast_fip_solicit unicastFipSolicit
    -flogi_port_wwn_increment portWwnIncrement
    -flogi_source_oui sourceOui
    -flogi_node_wwn_increment nodeWwnIncrement
    -flogi_port_wwn_start portWwnStart
    -flogi_node_wwn_start nodeWwnStart
    -flogi_fip_vlan_discovery fipVlanDiscovery
    -flogi_name name
    -flogi_name_server_commands nameServerCommands
    -flogi_plogi_target_name plogiTargetName
    -flogi_state_change_registration_option stateChangeRegistrationOption
    -flogi_object_id objectId
    -flogi_plogi_mesh_mode plogiMeshMode
    -flogi_name_server_query_command nameServerQueryCommand
    -flogi_fip_solicit_timeout fipSolicitTimeout
    -flogi_fip_option_set_name fipOptionSetName
    -flogi_plogi_enabled plogiEnabled
    -flogi_name_server_query nameServerQuery
    -flogi_fip_vlan_discovery_untagged fipVlanDiscoveryUntagged
  }
  #
  variable MultiplierOptionGroups {
    _m_flogi_plogi_dest_id {-flogi_plogi_dest_id_format -flogi_plogi_dest_id_base -flogi_plogi_dest_id_incr}
    _m_flogi_fip_addressing_mode {-flogi_fip_addressing_mode_format -flogi_fip_addressing_mode_base -flogi_fip_addressing_mode_incr}
    _m_flogi_fip_destination_mac_address {-flogi_fip_destination_mac_address_format -flogi_fip_destination_mac_address_base -flogi_fip_destination_mac_address_incr}
    _m_flogi_name_server_query_parameter_type {-flogi_name_server_query_parameter_type_format -flogi_name_server_query_parameter_type_base -flogi_name_server_query_parameter_type_incr}
    _m_flogi_count {-flogi_count_base -flogi_count_incr}
    _m_flogi_fip_vendor_id {-flogi_fip_vendor_id_format -flogi_fip_vendor_id_base -flogi_fip_vendor_id_incr}
    _m_flogi_source_oui_increment {-flogi_source_oui_increment_format -flogi_source_oui_increment_base -flogi_source_oui_increment_incr}
    _m_flogi_name_server_query_parameter_value {-flogi_name_server_query_parameter_value_format -flogi_name_server_query_parameter_value_base -flogi_name_server_query_parameter_value_incr}
    _m_flogi_unicast_fip_solicit {-flogi_unicast_fip_solicit_format -flogi_unicast_fip_solicit_base -flogi_unicast_fip_solicit_incr}
    _m_flogi_port_wwn_increment {-flogi_port_wwn_increment_format -flogi_port_wwn_increment_base -flogi_port_wwn_increment_incr}
    _m_flogi_source_oui {-flogi_source_oui_format -flogi_source_oui_base -flogi_source_oui_incr}
    _m_flogi_node_wwn_increment {-flogi_node_wwn_increment_format -flogi_node_wwn_increment_base -flogi_node_wwn_increment_incr}
    _m_flogi_port_wwn_start {-flogi_port_wwn_start_format -flogi_port_wwn_start_base -flogi_port_wwn_start_incr}
    _m_flogi_node_wwn_start {-flogi_node_wwn_start_format -flogi_node_wwn_start_base -flogi_node_wwn_start_incr}
    _m_flogi_name {-flogi_name_format -flogi_name_base -flogi_name_incr}
    _m_flogi_plogi_target_name {-flogi_plogi_target_name_format -flogi_plogi_target_name_base -flogi_plogi_target_name_incr}
    _m_flogi_state_change_registration_option {-flogi_state_change_registration_option_format -flogi_state_change_registration_option_base -flogi_state_change_registration_option_incr}
    _m_flogi_object_id {-flogi_object_id_format -flogi_object_id_base -flogi_object_id_incr}
    _m_flogi_plogi_mesh_mode {-flogi_plogi_mesh_mode_format -flogi_plogi_mesh_mode_base -flogi_plogi_mesh_mode_incr}
    _m_flogi_name_server_query_command {-flogi_name_server_query_command_format -flogi_name_server_query_command_base -flogi_name_server_query_command_incr}
    _m_flogi_fip_solicit_timeout {-flogi_fip_solicit_timeout_base -flogi_fip_solicit_timeout_incr}
    _m_flogi_fip_option_set_name {-flogi_fip_option_set_name_format -flogi_fip_option_set_name_base -flogi_fip_option_set_name_incr}
  }
}

#R End of relative type declaration(s)

#? master type "::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {@path-fcoeClientFdiscRange,../vlanRange/name,value_translator cgs.xlt.hag_vlan_id_info}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name fcoe
    -docs-chapter-name {FCOE APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-skip-items-with-typepath-anx2hlt {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange fdisc ../fcoeClientFlogiRange flogi */protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange flogi}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {{../macRange -} {../vlanRange -} {../fcoeClientFlogiRange -}}}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command fcoeClientFdiscRange
    -use-settings-for typical_ethernet_based_stackmanager_range_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange
  variable AncestorIncludeLevelForCreate  2
  variable AncestorIncludeLevelForAdd  1
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {../macRange - {} ../vlanRange - {} ../fcoeClientFlogiRange - {}}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kRequired
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -mac_range_object_id \
    -configuremethod _c_../macRange/objectId \
    -cgetmethod _g_../macRange/objectId \
    -readonly false
  method _c_../macRange/objectId {t v} { $self _configure_relative ../macRange -object_id $v }
  method _g_../macRange/objectId {t} { $self _cget_relative ../macRange -object_id }
  # multiplier 
  method _m_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_object_id }
  
  option -mac_range_increment_by \
    -configuremethod _c_../macRange/incrementBy \
    -cgetmethod _g_../macRange/incrementBy \
    -readonly false
  method _c_../macRange/incrementBy {t v} { $self _configure_relative ../macRange -increment_by $v }
  method _g_../macRange/incrementBy {t} { $self _cget_relative ../macRange -increment_by }
  # multiplier 
  method _m_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_increment_by }
  
  option -mac_range_name \
    -configuremethod _c_../macRange/name \
    -cgetmethod _g_../macRange/name \
    -readonly false
  method _c_../macRange/name {t v} { $self _configure_relative ../macRange -name $v }
  method _g_../macRange/name {t} { $self _cget_relative ../macRange -name }
  # multiplier 
  method _m_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_name }
  
  option -mac_range_count \
    -configuremethod _c_../macRange/count \
    -cgetmethod _g_../macRange/count \
    -readonly false
  method _c_../macRange/count {t v} { $self _configure_relative ../macRange -count $v }
  method _g_../macRange/count {t} { $self _cget_relative ../macRange -count }
  # multiplier 
  method _m_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_count }
  
  option -mac_range_mac \
    -configuremethod _c_../macRange/mac \
    -cgetmethod _g_../macRange/mac \
    -readonly false
  method _c_../macRange/mac {t v} { $self _configure_relative ../macRange -mac $v }
  method _g_../macRange/mac {t} { $self _cget_relative ../macRange -mac }
  # multiplier 
  method _m_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_mac }
  
  option -mac_range_mtu \
    -configuremethod _c_../macRange/mtu \
    -cgetmethod _g_../macRange/mtu \
    -readonly false
  method _c_../macRange/mtu {t v} { $self _configure_relative ../macRange -mtu $v }
  method _g_../macRange/mtu {t} { $self _cget_relative ../macRange -mtu }
  # multiplier 
  method _m_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_mtu }
  
  option -mac_range_enabled \
    -configuremethod _c_../macRange/enabled \
    -cgetmethod _g_../macRange/enabled \
    -readonly false
  method _c_../macRange/enabled {t v} { $self _configure_relative ../macRange -enabled $v }
  method _g_../macRange/enabled {t} { $self _cget_relative ../macRange -enabled }
  option -vlan_range_inner_first_id \
    -configuremethod _c_../vlanRange/innerFirstId \
    -cgetmethod _g_../vlanRange/innerFirstId \
    -readonly false
  method _c_../vlanRange/innerFirstId {t v} { $self _configure_relative ../vlanRange -inner_first_id $v }
  method _g_../vlanRange/innerFirstId {t} { $self _cget_relative ../vlanRange -inner_first_id }
  # multiplier 
  method _m_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_first_id }
  
  option -vlan_range_inner_increment \
    -configuremethod _c_../vlanRange/innerIncrement \
    -cgetmethod _g_../vlanRange/innerIncrement \
    -readonly false
  method _c_../vlanRange/innerIncrement {t v} { $self _configure_relative ../vlanRange -inner_increment $v }
  method _g_../vlanRange/innerIncrement {t} { $self _cget_relative ../vlanRange -inner_increment }
  # multiplier 
  method _m_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment }
  
  option -vlan_range_enabled \
    -configuremethod _c_../vlanRange/enabled \
    -cgetmethod _g_../vlanRange/enabled \
    -readonly false
  method _c_../vlanRange/enabled {t v} { $self _configure_relative ../vlanRange -enabled $v }
  method _g_../vlanRange/enabled {t} { $self _cget_relative ../vlanRange -enabled }
  option -vlan_range_unique_count \
    -configuremethod _c_../vlanRange/uniqueCount \
    -cgetmethod _g_../vlanRange/uniqueCount \
    -readonly false
  method _c_../vlanRange/uniqueCount {t v} { $self _configure_relative ../vlanRange -unique_count $v }
  method _g_../vlanRange/uniqueCount {t} { $self _cget_relative ../vlanRange -unique_count }
  # multiplier 
  method _m_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_unique_count }
  
  option -vlan_range_name \
    -configuremethod _c_../vlanRange/name \
    -cgetmethod _g_../vlanRange/name \
    -readonly false
  method _c_../vlanRange/name {t v} { $self _configure_relative ../vlanRange -name $v }
  method _g_../vlanRange/name {t} { $self _cget_relative ../vlanRange -name }
  # multiplier 
  method _m_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_name }
  
  option -vlan_range_increment_step \
    -configuremethod _c_../vlanRange/incrementStep \
    -cgetmethod _g_../vlanRange/incrementStep \
    -readonly false
  method _c_../vlanRange/incrementStep {t v} { $self _configure_relative ../vlanRange -increment_step $v }
  method _g_../vlanRange/incrementStep {t} { $self _cget_relative ../vlanRange -increment_step }
  # multiplier 
  method _m_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment_step }
  
  option -vlan_range_tpid \
    -configuremethod _c_../vlanRange/tpid \
    -cgetmethod _g_../vlanRange/tpid \
    -readonly false
  method _c_../vlanRange/tpid {t v} { $self _configure_relative ../vlanRange -tpid $v }
  method _g_../vlanRange/tpid {t} { $self _cget_relative ../vlanRange -tpid }
  # multiplier 
  method _m_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_tpid }
  
  option -vlan_range_priority \
    -configuremethod _c_../vlanRange/priority \
    -cgetmethod _g_../vlanRange/priority \
    -readonly false
  method _c_../vlanRange/priority {t v} { $self _configure_relative ../vlanRange -priority $v }
  method _g_../vlanRange/priority {t} { $self _cget_relative ../vlanRange -priority }
  # multiplier 
  method _m_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_priority }
  
  option -vlan_range_inner_enable \
    -configuremethod _c_../vlanRange/innerEnable \
    -cgetmethod _g_../vlanRange/innerEnable \
    -readonly false
  method _c_../vlanRange/innerEnable {t v} { $self _configure_relative ../vlanRange -inner_enable $v }
  method _g_../vlanRange/innerEnable {t} { $self _cget_relative ../vlanRange -inner_enable }
  option -vlan_range_object_id \
    -configuremethod _c_../vlanRange/objectId \
    -cgetmethod _g_../vlanRange/objectId \
    -readonly false
  method _c_../vlanRange/objectId {t v} { $self _configure_relative ../vlanRange -object_id $v }
  method _g_../vlanRange/objectId {t} { $self _cget_relative ../vlanRange -object_id }
  # multiplier 
  method _m_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_object_id }
  
  option -vlan_range_inner_unique_count \
    -configuremethod _c_../vlanRange/innerUniqueCount \
    -cgetmethod _g_../vlanRange/innerUniqueCount \
    -readonly false
  method _c_../vlanRange/innerUniqueCount {t v} { $self _configure_relative ../vlanRange -inner_unique_count $v }
  method _g_../vlanRange/innerUniqueCount {t} { $self _cget_relative ../vlanRange -inner_unique_count }
  # multiplier 
  method _m_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_unique_count }
  
  option -vlan_range_inner_tpid \
    -configuremethod _c_../vlanRange/innerTpid \
    -cgetmethod _g_../vlanRange/innerTpid \
    -readonly false
  method _c_../vlanRange/innerTpid {t v} { $self _configure_relative ../vlanRange -inner_tpid $v }
  method _g_../vlanRange/innerTpid {t} { $self _cget_relative ../vlanRange -inner_tpid }
  # multiplier 
  method _m_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_inner_tpid }
  
  option -vlan_range_first_id \
    -configuremethod _c_../vlanRange/firstId \
    -cgetmethod _g_../vlanRange/firstId \
    -readonly false
  method _c_../vlanRange/firstId {t v} { $self _configure_relative ../vlanRange -first_id $v }
  method _g_../vlanRange/firstId {t} { $self _cget_relative ../vlanRange -first_id }
  # multiplier 
  method _m_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_first_id }
  
  option -vlan_range_increment \
    -configuremethod _c_../vlanRange/increment \
    -cgetmethod _g_../vlanRange/increment \
    -readonly false
  method _c_../vlanRange/increment {t v} { $self _configure_relative ../vlanRange -increment $v }
  method _g_../vlanRange/increment {t} { $self _cget_relative ../vlanRange -increment }
  # multiplier 
  method _m_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment }
  
  option -vlan_range_inner_increment_step \
    -configuremethod _c_../vlanRange/innerIncrementStep \
    -cgetmethod _g_../vlanRange/innerIncrementStep \
    -readonly false
  method _c_../vlanRange/innerIncrementStep {t v} { $self _configure_relative ../vlanRange -inner_increment_step $v }
  method _g_../vlanRange/innerIncrementStep {t} { $self _cget_relative ../vlanRange -inner_increment_step }
  # multiplier 
  method _m_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment_step }
  
  option -vlan_range_id_incr_mode \
    -configuremethod _c_../vlanRange/idIncrMode \
    -cgetmethod _g_../vlanRange/idIncrMode \
    -readonly false
  method _c_../vlanRange/idIncrMode {t v} { $self _configure_relative ../vlanRange -id_incr_mode $v }
  method _g_../vlanRange/idIncrMode {t} { $self _cget_relative ../vlanRange -id_incr_mode }
  # multiplier 
  method _m_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_id_incr_mode }
  
  option -vlan_range_inner_priority \
    -configuremethod _c_../vlanRange/innerPriority \
    -cgetmethod _g_../vlanRange/innerPriority \
    -readonly false
  method _c_../vlanRange/innerPriority {t v} { $self _configure_relative ../vlanRange -inner_priority $v }
  method _g_../vlanRange/innerPriority {t} { $self _cget_relative ../vlanRange -inner_priority }
  # multiplier 
  method _m_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_priority }
  
  option -vlan_range_vlan_id_info \
    -configuremethod _c_../vlanRange/vlanIdInfo \
    -cgetmethod _g_../vlanRange/vlanIdInfo \
    -readonly false
  method _c_../vlanRange/vlanIdInfo {t v} { $self _configure_relative ../vlanRange -vlan_id_info $v }
  method _g_../vlanRange/vlanIdInfo {t} { $self _cget_relative ../vlanRange -vlan_id_info }
  option -flogi_plogi_dest_id \
    -configuremethod _c_../fcoeClientFlogiRange/plogiDestId \
    -cgetmethod _g_../fcoeClientFlogiRange/plogiDestId \
    -readonly false
  method _c_../fcoeClientFlogiRange/plogiDestId {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_plogi_dest_id $v }
  method _g_../fcoeClientFlogiRange/plogiDestId {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_plogi_dest_id }
  # multiplier 
  method _m_flogi_plogi_dest_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_plogi_dest_id }
  
  option -flogi_fip_addressing_mode \
    -configuremethod _c_../fcoeClientFlogiRange/fipAddressingMode \
    -cgetmethod _g_../fcoeClientFlogiRange/fipAddressingMode \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipAddressingMode {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_addressing_mode $v }
  method _g_../fcoeClientFlogiRange/fipAddressingMode {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_addressing_mode }
  # multiplier 
  method _m_flogi_fip_addressing_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_addressing_mode }
  
  option -flogi_fip_destination_mac_address \
    -configuremethod _c_../fcoeClientFlogiRange/fipDestinationMacAddress \
    -cgetmethod _g_../fcoeClientFlogiRange/fipDestinationMacAddress \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipDestinationMacAddress {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_destination_mac_address $v }
  method _g_../fcoeClientFlogiRange/fipDestinationMacAddress {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_destination_mac_address }
  # multiplier 
  method _m_flogi_fip_destination_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_destination_mac_address }
  
  option -flogi_name_server_query_parameter_type \
    -configuremethod _c_../fcoeClientFlogiRange/nameServerQueryParameterType \
    -cgetmethod _g_../fcoeClientFlogiRange/nameServerQueryParameterType \
    -readonly false
  method _c_../fcoeClientFlogiRange/nameServerQueryParameterType {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_name_server_query_parameter_type $v }
  method _g_../fcoeClientFlogiRange/nameServerQueryParameterType {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_name_server_query_parameter_type }
  # multiplier 
  method _m_flogi_name_server_query_parameter_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name_server_query_parameter_type }
  
  option -flogi_count \
    -configuremethod _c_../fcoeClientFlogiRange/count \
    -cgetmethod _g_../fcoeClientFlogiRange/count \
    -readonly false
  method _c_../fcoeClientFlogiRange/count {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_count $v }
  method _g_../fcoeClientFlogiRange/count {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_count }
  # multiplier 
  method _m_flogi_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -flogi_count }
  
  option -flogi_prli_enabled \
    -configuremethod _c_../fcoeClientFlogiRange/prliEnabled \
    -cgetmethod _g_../fcoeClientFlogiRange/prliEnabled \
    -readonly false
  method _c_../fcoeClientFlogiRange/prliEnabled {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_prli_enabled $v }
  method _g_../fcoeClientFlogiRange/prliEnabled {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_prli_enabled }
  option -flogi_state_change_registration \
    -configuremethod _c_../fcoeClientFlogiRange/stateChangeRegistration \
    -cgetmethod _g_../fcoeClientFlogiRange/stateChangeRegistration \
    -readonly false
  method _c_../fcoeClientFlogiRange/stateChangeRegistration {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_state_change_registration $v }
  method _g_../fcoeClientFlogiRange/stateChangeRegistration {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_state_change_registration }
  option -flogi_fip_enabled \
    -configuremethod _c_../fcoeClientFlogiRange/fipEnabled \
    -cgetmethod _g_../fcoeClientFlogiRange/fipEnabled \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipEnabled {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_enabled $v }
  method _g_../fcoeClientFlogiRange/fipEnabled {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_enabled }
  option -flogi_fip_vendor_id \
    -configuremethod _c_../fcoeClientFlogiRange/fipVendorId \
    -cgetmethod _g_../fcoeClientFlogiRange/fipVendorId \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipVendorId {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_vendor_id $v }
  method _g_../fcoeClientFlogiRange/fipVendorId {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_vendor_id }
  # multiplier 
  method _m_flogi_fip_vendor_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_vendor_id }
  
  option -flogi_enabled \
    -configuremethod _c_../fcoeClientFlogiRange/enabled \
    -cgetmethod _g_../fcoeClientFlogiRange/enabled \
    -readonly false
  method _c_../fcoeClientFlogiRange/enabled {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_enabled $v }
  method _g_../fcoeClientFlogiRange/enabled {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_enabled }
  option -flogi_name_server_registration \
    -configuremethod _c_../fcoeClientFlogiRange/nameServerRegistration \
    -cgetmethod _g_../fcoeClientFlogiRange/nameServerRegistration \
    -readonly false
  method _c_../fcoeClientFlogiRange/nameServerRegistration {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_name_server_registration $v }
  method _g_../fcoeClientFlogiRange/nameServerRegistration {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_name_server_registration }
  option -flogi_source_oui_increment \
    -configuremethod _c_../fcoeClientFlogiRange/sourceOuiIncrement \
    -cgetmethod _g_../fcoeClientFlogiRange/sourceOuiIncrement \
    -readonly false
  method _c_../fcoeClientFlogiRange/sourceOuiIncrement {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_source_oui_increment $v }
  method _g_../fcoeClientFlogiRange/sourceOuiIncrement {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_source_oui_increment }
  # multiplier 
  method _m_flogi_source_oui_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_source_oui_increment }
  
  option -flogi_name_server_query_parameter_value \
    -configuremethod _c_../fcoeClientFlogiRange/nameServerQueryParameterValue \
    -cgetmethod _g_../fcoeClientFlogiRange/nameServerQueryParameterValue \
    -readonly false
  method _c_../fcoeClientFlogiRange/nameServerQueryParameterValue {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_name_server_query_parameter_value $v }
  method _g_../fcoeClientFlogiRange/nameServerQueryParameterValue {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_name_server_query_parameter_value }
  # multiplier 
  method _m_flogi_name_server_query_parameter_value {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name_server_query_parameter_value }
  
  option -flogi_unicast_fip_solicit \
    -configuremethod _c_../fcoeClientFlogiRange/unicastFipSolicit \
    -cgetmethod _g_../fcoeClientFlogiRange/unicastFipSolicit \
    -readonly false
  method _c_../fcoeClientFlogiRange/unicastFipSolicit {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_unicast_fip_solicit $v }
  method _g_../fcoeClientFlogiRange/unicastFipSolicit {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_unicast_fip_solicit }
  # multiplier 
  method _m_flogi_unicast_fip_solicit {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_unicast_fip_solicit }
  
  option -flogi_port_wwn_increment \
    -configuremethod _c_../fcoeClientFlogiRange/portWwnIncrement \
    -cgetmethod _g_../fcoeClientFlogiRange/portWwnIncrement \
    -readonly false
  method _c_../fcoeClientFlogiRange/portWwnIncrement {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_port_wwn_increment $v }
  method _g_../fcoeClientFlogiRange/portWwnIncrement {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_port_wwn_increment }
  # multiplier 
  method _m_flogi_port_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_port_wwn_increment }
  
  option -flogi_source_oui \
    -configuremethod _c_../fcoeClientFlogiRange/sourceOui \
    -cgetmethod _g_../fcoeClientFlogiRange/sourceOui \
    -readonly false
  method _c_../fcoeClientFlogiRange/sourceOui {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_source_oui $v }
  method _g_../fcoeClientFlogiRange/sourceOui {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_source_oui }
  # multiplier 
  method _m_flogi_source_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_source_oui }
  
  option -flogi_node_wwn_increment \
    -configuremethod _c_../fcoeClientFlogiRange/nodeWwnIncrement \
    -cgetmethod _g_../fcoeClientFlogiRange/nodeWwnIncrement \
    -readonly false
  method _c_../fcoeClientFlogiRange/nodeWwnIncrement {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_node_wwn_increment $v }
  method _g_../fcoeClientFlogiRange/nodeWwnIncrement {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_node_wwn_increment }
  # multiplier 
  method _m_flogi_node_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_node_wwn_increment }
  
  option -flogi_port_wwn_start \
    -configuremethod _c_../fcoeClientFlogiRange/portWwnStart \
    -cgetmethod _g_../fcoeClientFlogiRange/portWwnStart \
    -readonly false
  method _c_../fcoeClientFlogiRange/portWwnStart {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_port_wwn_start $v }
  method _g_../fcoeClientFlogiRange/portWwnStart {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_port_wwn_start }
  # multiplier 
  method _m_flogi_port_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_port_wwn_start }
  
  option -flogi_node_wwn_start \
    -configuremethod _c_../fcoeClientFlogiRange/nodeWwnStart \
    -cgetmethod _g_../fcoeClientFlogiRange/nodeWwnStart \
    -readonly false
  method _c_../fcoeClientFlogiRange/nodeWwnStart {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_node_wwn_start $v }
  method _g_../fcoeClientFlogiRange/nodeWwnStart {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_node_wwn_start }
  # multiplier 
  method _m_flogi_node_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_node_wwn_start }
  
  option -flogi_fip_vlan_discovery \
    -configuremethod _c_../fcoeClientFlogiRange/fipVlanDiscovery \
    -cgetmethod _g_../fcoeClientFlogiRange/fipVlanDiscovery \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipVlanDiscovery {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_vlan_discovery $v }
  method _g_../fcoeClientFlogiRange/fipVlanDiscovery {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_vlan_discovery }
  option -flogi_name \
    -configuremethod _c_../fcoeClientFlogiRange/name \
    -cgetmethod _g_../fcoeClientFlogiRange/name \
    -readonly false
  method _c_../fcoeClientFlogiRange/name {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_name $v }
  method _g_../fcoeClientFlogiRange/name {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_name }
  # multiplier 
  method _m_flogi_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name }
  
  option -flogi_name_server_commands \
    -configuremethod _c_../fcoeClientFlogiRange/nameServerCommands \
    -cgetmethod _g_../fcoeClientFlogiRange/nameServerCommands \
    -readonly false
  method _c_../fcoeClientFlogiRange/nameServerCommands {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_name_server_commands $v }
  method _g_../fcoeClientFlogiRange/nameServerCommands {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_name_server_commands }
  option -flogi_plogi_target_name \
    -configuremethod _c_../fcoeClientFlogiRange/plogiTargetName \
    -cgetmethod _g_../fcoeClientFlogiRange/plogiTargetName \
    -readonly false
  method _c_../fcoeClientFlogiRange/plogiTargetName {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_plogi_target_name $v }
  method _g_../fcoeClientFlogiRange/plogiTargetName {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_plogi_target_name }
  # multiplier 
  method _m_flogi_plogi_target_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_plogi_target_name }
  
  option -flogi_state_change_registration_option \
    -configuremethod _c_../fcoeClientFlogiRange/stateChangeRegistrationOption \
    -cgetmethod _g_../fcoeClientFlogiRange/stateChangeRegistrationOption \
    -readonly false
  method _c_../fcoeClientFlogiRange/stateChangeRegistrationOption {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_state_change_registration_option $v }
  method _g_../fcoeClientFlogiRange/stateChangeRegistrationOption {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_state_change_registration_option }
  # multiplier 
  method _m_flogi_state_change_registration_option {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_state_change_registration_option }
  
  option -flogi_object_id \
    -configuremethod _c_../fcoeClientFlogiRange/objectId \
    -cgetmethod _g_../fcoeClientFlogiRange/objectId \
    -readonly false
  method _c_../fcoeClientFlogiRange/objectId {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_object_id $v }
  method _g_../fcoeClientFlogiRange/objectId {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_object_id }
  # multiplier 
  method _m_flogi_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_object_id }
  
  option -flogi_plogi_mesh_mode \
    -configuremethod _c_../fcoeClientFlogiRange/plogiMeshMode \
    -cgetmethod _g_../fcoeClientFlogiRange/plogiMeshMode \
    -readonly false
  method _c_../fcoeClientFlogiRange/plogiMeshMode {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_plogi_mesh_mode $v }
  method _g_../fcoeClientFlogiRange/plogiMeshMode {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_plogi_mesh_mode }
  # multiplier 
  method _m_flogi_plogi_mesh_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_plogi_mesh_mode }
  
  option -flogi_name_server_query_command \
    -configuremethod _c_../fcoeClientFlogiRange/nameServerQueryCommand \
    -cgetmethod _g_../fcoeClientFlogiRange/nameServerQueryCommand \
    -readonly false
  method _c_../fcoeClientFlogiRange/nameServerQueryCommand {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_name_server_query_command $v }
  method _g_../fcoeClientFlogiRange/nameServerQueryCommand {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_name_server_query_command }
  # multiplier 
  method _m_flogi_name_server_query_command {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_name_server_query_command }
  
  option -flogi_fip_solicit_timeout \
    -configuremethod _c_../fcoeClientFlogiRange/fipSolicitTimeout \
    -cgetmethod _g_../fcoeClientFlogiRange/fipSolicitTimeout \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipSolicitTimeout {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_solicit_timeout $v }
  method _g_../fcoeClientFlogiRange/fipSolicitTimeout {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_solicit_timeout }
  # multiplier 
  method _m_flogi_fip_solicit_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -flogi_fip_solicit_timeout }
  
  option -flogi_fip_option_set_name \
    -configuremethod _c_../fcoeClientFlogiRange/fipOptionSetName \
    -cgetmethod _g_../fcoeClientFlogiRange/fipOptionSetName \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipOptionSetName {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_option_set_name $v }
  method _g_../fcoeClientFlogiRange/fipOptionSetName {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_option_set_name }
  # multiplier 
  method _m_flogi_fip_option_set_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -flogi_fip_option_set_name }
  
  option -flogi_plogi_enabled \
    -configuremethod _c_../fcoeClientFlogiRange/plogiEnabled \
    -cgetmethod _g_../fcoeClientFlogiRange/plogiEnabled \
    -readonly false
  method _c_../fcoeClientFlogiRange/plogiEnabled {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_plogi_enabled $v }
  method _g_../fcoeClientFlogiRange/plogiEnabled {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_plogi_enabled }
  option -flogi_name_server_query \
    -configuremethod _c_../fcoeClientFlogiRange/nameServerQuery \
    -cgetmethod _g_../fcoeClientFlogiRange/nameServerQuery \
    -readonly false
  method _c_../fcoeClientFlogiRange/nameServerQuery {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_name_server_query $v }
  method _g_../fcoeClientFlogiRange/nameServerQuery {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_name_server_query }
  option -flogi_fip_vlan_discovery_untagged \
    -configuremethod _c_../fcoeClientFlogiRange/fipVlanDiscoveryUntagged \
    -cgetmethod _g_../fcoeClientFlogiRange/fipVlanDiscoveryUntagged \
    -readonly false
  method _c_../fcoeClientFlogiRange/fipVlanDiscoveryUntagged {t v} { $self _configure_relative ../fcoeClientFlogiRange -flogi_fip_vlan_discovery_untagged $v }
  method _g_../fcoeClientFlogiRange/fipVlanDiscoveryUntagged {t} { $self _cget_relative ../fcoeClientFlogiRange -flogi_fip_vlan_discovery_untagged }
  option -fdisc_plogi_dest_id \
    -cgetmethod _g_fdisc_plogi_dest_id -configuremethod _c_fdisc_plogi_dest_id -validatemethod _v_fdisc_plogi_dest_id \
    -default "" \
    -readonly false
  method _c_fdisc_plogi_dest_id {t v} { $self _configure_basic $t $v }
  method _v_fdisc_plogi_dest_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_plogi_dest_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_plogi_dest_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_plogi_dest_id }
  
  option -fdisc_count \
    -cgetmethod _g_fdisc_count -configuremethod _c_fdisc_count -validatemethod _v_fdisc_count \
    -default "" \
    -readonly false
  method _c_fdisc_count {t v} { $self _configure_basic $t $v }
  method _v_fdisc_count {t v} { ::ixia::hag::ixn::validate::kInteger64 $t $v }
  method _g_fdisc_count {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fdisc_count }
  
  option -fdisc_name_server_query_parameter_type \
    -cgetmethod _g_fdisc_name_server_query_parameter_type -configuremethod _c_fdisc_name_server_query_parameter_type -validatemethod _v_fdisc_name_server_query_parameter_type \
    -default "" \
    -readonly false
  method _c_fdisc_name_server_query_parameter_type {t v} { $self _configure_basic $t $v }
  method _v_fdisc_name_server_query_parameter_type {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_name_server_query_parameter_type {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_name_server_query_parameter_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_name_server_query_parameter_type }
  
  option -fdisc_state_change_registration \
    -cgetmethod _g_fdisc_state_change_registration -configuremethod _c_fdisc_state_change_registration -validatemethod _v_fdisc_state_change_registration \
    -default "" \
    -readonly false
  method _c_fdisc_state_change_registration {t v} { $self _configure_basic $t $v }
  method _v_fdisc_state_change_registration {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_fdisc_state_change_registration {t} { $self _cget_kBool $t }
  option -fdisc_prli_enabled \
    -cgetmethod _g_fdisc_prli_enabled -configuremethod _c_fdisc_prli_enabled -validatemethod _v_fdisc_prli_enabled \
    -default "" \
    -readonly false
  method _c_fdisc_prli_enabled {t v} { $self _configure_basic $t $v }
  method _v_fdisc_prli_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_fdisc_prli_enabled {t} { $self _cget_kBool $t }
  option -fdisc_enabled \
    -cgetmethod _g_fdisc_enabled -configuremethod _c_fdisc_enabled -validatemethod _v_fdisc_enabled \
    -default "" \
    -readonly false
  method _c_fdisc_enabled {t v} { $self _configure_basic $t $v }
  method _v_fdisc_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_fdisc_enabled {t} { $self _cget_kBool $t }
  option -fdisc_source_oui_increment \
    -cgetmethod _g_fdisc_source_oui_increment -configuremethod _c_fdisc_source_oui_increment -validatemethod _v_fdisc_source_oui_increment \
    -default "" \
    -readonly false
  method _c_fdisc_source_oui_increment {t v} { $self _configure_basic $t $v }
  method _v_fdisc_source_oui_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_source_oui_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_source_oui_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_source_oui_increment }
  
  option -fdisc_name_server_registration \
    -cgetmethod _g_fdisc_name_server_registration -configuremethod _c_fdisc_name_server_registration -validatemethod _v_fdisc_name_server_registration \
    -default "" \
    -readonly false
  method _c_fdisc_name_server_registration {t v} { $self _configure_basic $t $v }
  method _v_fdisc_name_server_registration {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_fdisc_name_server_registration {t} { $self _cget_kBool $t }
  option -fdisc_name_server_query_parameter_value \
    -cgetmethod _g_fdisc_name_server_query_parameter_value -configuremethod _c_fdisc_name_server_query_parameter_value -validatemethod _v_fdisc_name_server_query_parameter_value \
    -default "" \
    -readonly false
  method _c_fdisc_name_server_query_parameter_value {t v} { $self _configure_basic $t $v }
  method _v_fdisc_name_server_query_parameter_value {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_name_server_query_parameter_value {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_name_server_query_parameter_value {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_name_server_query_parameter_value }
  
  option -fdisc_port_wwn_increment \
    -cgetmethod _g_fdisc_port_wwn_increment -configuremethod _c_fdisc_port_wwn_increment -validatemethod _v_fdisc_port_wwn_increment \
    -default "" \
    -readonly false
  method _c_fdisc_port_wwn_increment {t v} { $self _configure_basic $t $v }
  method _v_fdisc_port_wwn_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_port_wwn_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_port_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_port_wwn_increment }
  
  option -fdisc_source_oui \
    -cgetmethod _g_fdisc_source_oui -configuremethod _c_fdisc_source_oui -validatemethod _v_fdisc_source_oui \
    -default "" \
    -readonly false
  method _c_fdisc_source_oui {t v} { $self _configure_basic $t $v }
  method _v_fdisc_source_oui {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_source_oui {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_source_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_source_oui }
  
  option -fdisc_node_wwn_increment \
    -cgetmethod _g_fdisc_node_wwn_increment -configuremethod _c_fdisc_node_wwn_increment -validatemethod _v_fdisc_node_wwn_increment \
    -default "" \
    -readonly false
  method _c_fdisc_node_wwn_increment {t v} { $self _configure_basic $t $v }
  method _v_fdisc_node_wwn_increment {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_node_wwn_increment {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_node_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_node_wwn_increment }
  
  option -fdisc_port_wwn_start \
    -cgetmethod _g_fdisc_port_wwn_start -configuremethod _c_fdisc_port_wwn_start -validatemethod _v_fdisc_port_wwn_start \
    -default "" \
    -readonly false
  method _c_fdisc_port_wwn_start {t v} { $self _configure_basic $t $v }
  method _v_fdisc_port_wwn_start {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_port_wwn_start {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_port_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_port_wwn_start }
  
  option -fdisc_node_wwn_start \
    -cgetmethod _g_fdisc_node_wwn_start -configuremethod _c_fdisc_node_wwn_start -validatemethod _v_fdisc_node_wwn_start \
    -default "" \
    -readonly false
  method _c_fdisc_node_wwn_start {t v} { $self _configure_basic $t $v }
  method _v_fdisc_node_wwn_start {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_node_wwn_start {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_node_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_node_wwn_start }
  
  option -fdisc_name \
    -cgetmethod _g_fdisc_name -configuremethod _c_fdisc_name -validatemethod _v_fdisc_name \
    -default "" \
    -readonly false
  method _c_fdisc_name {t v} { $self _configure_basic $t $v }
  method _v_fdisc_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_name }
  
  option -fdisc_name_server_commands \
    -cgetmethod _g_fdisc_name_server_commands -configuremethod _c_fdisc_name_server_commands -validatemethod _v_fdisc_name_server_commands \
    -default "" \
    -readonly false
  method _c_fdisc_name_server_commands {t v} { $self _configure_basic $t $v }
  method _v_fdisc_name_server_commands {t v} { ::ixia::hag::ixn::validate::kArray $t $v }
  method _g_fdisc_name_server_commands {t} { $self _cget_basic $t }
  option -fdisc_override_node_wwn \
    -cgetmethod _g_fdisc_override_node_wwn -configuremethod _c_fdisc_override_node_wwn -validatemethod _v_fdisc_override_node_wwn \
    -default "" \
    -readonly false
  method _c_fdisc_override_node_wwn {t v} { $self _configure_basic $t $v }
  method _v_fdisc_override_node_wwn {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_fdisc_override_node_wwn {t} { $self _cget_kBool $t }
  option -fdisc_plogi_target_name \
    -cgetmethod _g_fdisc_plogi_target_name -configuremethod _c_fdisc_plogi_target_name -validatemethod _v_fdisc_plogi_target_name \
    -default "" \
    -readonly false
  method _c_fdisc_plogi_target_name {t v} { $self _configure_basic $t $v }
  method _v_fdisc_plogi_target_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_plogi_target_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_plogi_target_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_plogi_target_name }
  
  option -fdisc_state_change_registration_option \
    -cgetmethod _g_fdisc_state_change_registration_option -configuremethod _c_fdisc_state_change_registration_option -validatemethod _v_fdisc_state_change_registration_option \
    -default "" \
    -readonly false
  method _c_fdisc_state_change_registration_option {t v} { $self _configure_basic $t $v }
  method _v_fdisc_state_change_registration_option {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_state_change_registration_option {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_state_change_registration_option {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_state_change_registration_option }
  
  option -fdisc_object_id \
    -cgetmethod _g_fdisc_object_id -configuremethod _c_fdisc_object_id -validatemethod _v_fdisc_object_id \
    -default "" \
    -readonly false
  method _c_fdisc_object_id {t v} {  }
  method _v_fdisc_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_object_id }
  
  option -fdisc_plogi_mesh_mode \
    -cgetmethod _g_fdisc_plogi_mesh_mode -configuremethod _c_fdisc_plogi_mesh_mode -validatemethod _v_fdisc_plogi_mesh_mode \
    -default "" \
    -readonly false
  method _c_fdisc_plogi_mesh_mode {t v} { $self _configure_basic $t $v }
  method _v_fdisc_plogi_mesh_mode {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_plogi_mesh_mode {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_plogi_mesh_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_plogi_mesh_mode }
  
  option -fdisc_name_server_query_command \
    -cgetmethod _g_fdisc_name_server_query_command -configuremethod _c_fdisc_name_server_query_command -validatemethod _v_fdisc_name_server_query_command \
    -default "" \
    -readonly false
  method _c_fdisc_name_server_query_command {t v} { $self _configure_basic $t $v }
  method _v_fdisc_name_server_query_command {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_fdisc_name_server_query_command {t} { $self _cget_basic $t }
  # multiplier 
  method _m_fdisc_name_server_query_command {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fdisc_name_server_query_command }
  
  option -fdisc_plogi_enabled \
    -cgetmethod _g_fdisc_plogi_enabled -configuremethod _c_fdisc_plogi_enabled -validatemethod _v_fdisc_plogi_enabled \
    -default "" \
    -readonly false
  method _c_fdisc_plogi_enabled {t v} { $self _configure_basic $t $v }
  method _v_fdisc_plogi_enabled {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_fdisc_plogi_enabled {t} { $self _cget_kBool $t }
  option -fdisc_name_server_query \
    -cgetmethod _g_fdisc_name_server_query -configuremethod _c_fdisc_name_server_query -validatemethod _v_fdisc_name_server_query \
    -default "" \
    -readonly false
  method _c_fdisc_name_server_query {t v} { $self _configure_basic $t $v }
  method _v_fdisc_name_server_query {t v} { ::ixia::hag::ixn::validate::kBool $t $v }
  method _g_fdisc_name_server_query {t} { $self _cget_kBool $t }
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -mac_range_object_id ../macRange/objectId
    -mac_range_increment_by ../macRange/incrementBy
    -mac_range_name ../macRange/name
    -mac_range_count ../macRange/count
    -mac_range_mac ../macRange/mac
    -mac_range_mtu ../macRange/mtu
    -mac_range_enabled ../macRange/enabled
    -vlan_range_inner_first_id ../vlanRange/innerFirstId
    -vlan_range_inner_increment ../vlanRange/innerIncrement
    -vlan_range_enabled ../vlanRange/enabled
    -vlan_range_unique_count ../vlanRange/uniqueCount
    -vlan_range_name ../vlanRange/name
    -vlan_range_increment_step ../vlanRange/incrementStep
    -vlan_range_tpid ../vlanRange/tpid
    -vlan_range_priority ../vlanRange/priority
    -vlan_range_inner_enable ../vlanRange/innerEnable
    -vlan_range_object_id ../vlanRange/objectId
    -vlan_range_inner_unique_count ../vlanRange/innerUniqueCount
    -vlan_range_inner_tpid ../vlanRange/innerTpid
    -vlan_range_first_id ../vlanRange/firstId
    -vlan_range_increment ../vlanRange/increment
    -vlan_range_inner_increment_step ../vlanRange/innerIncrementStep
    -vlan_range_id_incr_mode ../vlanRange/idIncrMode
    -vlan_range_inner_priority ../vlanRange/innerPriority
    -vlan_range_vlan_id_info ../vlanRange/vlanIdInfo
    -flogi_plogi_dest_id ../fcoeClientFlogiRange/plogiDestId
    -flogi_fip_addressing_mode ../fcoeClientFlogiRange/fipAddressingMode
    -flogi_fip_destination_mac_address ../fcoeClientFlogiRange/fipDestinationMacAddress
    -flogi_name_server_query_parameter_type ../fcoeClientFlogiRange/nameServerQueryParameterType
    -flogi_count ../fcoeClientFlogiRange/count
    -flogi_prli_enabled ../fcoeClientFlogiRange/prliEnabled
    -flogi_state_change_registration ../fcoeClientFlogiRange/stateChangeRegistration
    -flogi_fip_enabled ../fcoeClientFlogiRange/fipEnabled
    -flogi_fip_vendor_id ../fcoeClientFlogiRange/fipVendorId
    -flogi_enabled ../fcoeClientFlogiRange/enabled
    -flogi_name_server_registration ../fcoeClientFlogiRange/nameServerRegistration
    -flogi_source_oui_increment ../fcoeClientFlogiRange/sourceOuiIncrement
    -flogi_name_server_query_parameter_value ../fcoeClientFlogiRange/nameServerQueryParameterValue
    -flogi_unicast_fip_solicit ../fcoeClientFlogiRange/unicastFipSolicit
    -flogi_port_wwn_increment ../fcoeClientFlogiRange/portWwnIncrement
    -flogi_source_oui ../fcoeClientFlogiRange/sourceOui
    -flogi_node_wwn_increment ../fcoeClientFlogiRange/nodeWwnIncrement
    -flogi_port_wwn_start ../fcoeClientFlogiRange/portWwnStart
    -flogi_node_wwn_start ../fcoeClientFlogiRange/nodeWwnStart
    -flogi_fip_vlan_discovery ../fcoeClientFlogiRange/fipVlanDiscovery
    -flogi_name ../fcoeClientFlogiRange/name
    -flogi_name_server_commands ../fcoeClientFlogiRange/nameServerCommands
    -flogi_plogi_target_name ../fcoeClientFlogiRange/plogiTargetName
    -flogi_state_change_registration_option ../fcoeClientFlogiRange/stateChangeRegistrationOption
    -flogi_object_id ../fcoeClientFlogiRange/objectId
    -flogi_plogi_mesh_mode ../fcoeClientFlogiRange/plogiMeshMode
    -flogi_name_server_query_command ../fcoeClientFlogiRange/nameServerQueryCommand
    -flogi_fip_solicit_timeout ../fcoeClientFlogiRange/fipSolicitTimeout
    -flogi_fip_option_set_name ../fcoeClientFlogiRange/fipOptionSetName
    -flogi_plogi_enabled ../fcoeClientFlogiRange/plogiEnabled
    -flogi_name_server_query ../fcoeClientFlogiRange/nameServerQuery
    -flogi_fip_vlan_discovery_untagged ../fcoeClientFlogiRange/fipVlanDiscoveryUntagged
    -fdisc_plogi_dest_id plogiDestId
    -fdisc_count count
    -fdisc_name_server_query_parameter_type nameServerQueryParameterType
    -fdisc_state_change_registration stateChangeRegistration
    -fdisc_prli_enabled prliEnabled
    -fdisc_enabled enabled
    -fdisc_source_oui_increment sourceOuiIncrement
    -fdisc_name_server_registration nameServerRegistration
    -fdisc_name_server_query_parameter_value nameServerQueryParameterValue
    -fdisc_port_wwn_increment portWwnIncrement
    -fdisc_source_oui sourceOui
    -fdisc_node_wwn_increment nodeWwnIncrement
    -fdisc_port_wwn_start portWwnStart
    -fdisc_node_wwn_start nodeWwnStart
    -fdisc_name name
    -fdisc_name_server_commands nameServerCommands
    -fdisc_override_node_wwn overrideNodeWwn
    -fdisc_plogi_target_name plogiTargetName
    -fdisc_state_change_registration_option stateChangeRegistrationOption
    -fdisc_object_id objectId
    -fdisc_plogi_mesh_mode plogiMeshMode
    -fdisc_name_server_query_command nameServerQueryCommand
    -fdisc_plogi_enabled plogiEnabled
    -fdisc_name_server_query nameServerQuery
  }
  #
  variable MultiplierOptionGroups {
    _m_mac_range_object_id {-mac_range_object_id_format -mac_range_object_id_base -mac_range_object_id_incr}
    _m_mac_range_increment_by {-mac_range_increment_by_format -mac_range_increment_by_base -mac_range_increment_by_incr}
    _m_mac_range_name {-mac_range_name_format -mac_range_name_base -mac_range_name_incr}
    _m_mac_range_count {-mac_range_count_base -mac_range_count_incr}
    _m_mac_range_mac {-mac_range_mac_format -mac_range_mac_base -mac_range_mac_incr}
    _m_mac_range_mtu {-mac_range_mtu_base -mac_range_mtu_incr}
    _m_vlan_range_inner_first_id {-vlan_range_inner_first_id_base -vlan_range_inner_first_id_incr}
    _m_vlan_range_inner_increment {-vlan_range_inner_increment_base -vlan_range_inner_increment_incr}
    _m_vlan_range_unique_count {-vlan_range_unique_count_base -vlan_range_unique_count_incr}
    _m_vlan_range_name {-vlan_range_name_format -vlan_range_name_base -vlan_range_name_incr}
    _m_vlan_range_increment_step {-vlan_range_increment_step_base -vlan_range_increment_step_incr}
    _m_vlan_range_tpid {-vlan_range_tpid_format -vlan_range_tpid_base -vlan_range_tpid_incr}
    _m_vlan_range_priority {-vlan_range_priority_base -vlan_range_priority_incr}
    _m_vlan_range_object_id {-vlan_range_object_id_format -vlan_range_object_id_base -vlan_range_object_id_incr}
    _m_vlan_range_inner_unique_count {-vlan_range_inner_unique_count_base -vlan_range_inner_unique_count_incr}
    _m_vlan_range_inner_tpid {-vlan_range_inner_tpid_format -vlan_range_inner_tpid_base -vlan_range_inner_tpid_incr}
    _m_vlan_range_first_id {-vlan_range_first_id_base -vlan_range_first_id_incr}
    _m_vlan_range_increment {-vlan_range_increment_base -vlan_range_increment_incr}
    _m_vlan_range_inner_increment_step {-vlan_range_inner_increment_step_base -vlan_range_inner_increment_step_incr}
    _m_vlan_range_id_incr_mode {-vlan_range_id_incr_mode_base -vlan_range_id_incr_mode_incr}
    _m_vlan_range_inner_priority {-vlan_range_inner_priority_base -vlan_range_inner_priority_incr}
    _m_flogi_plogi_dest_id {-flogi_plogi_dest_id_format -flogi_plogi_dest_id_base -flogi_plogi_dest_id_incr}
    _m_flogi_fip_addressing_mode {-flogi_fip_addressing_mode_format -flogi_fip_addressing_mode_base -flogi_fip_addressing_mode_incr}
    _m_flogi_fip_destination_mac_address {-flogi_fip_destination_mac_address_format -flogi_fip_destination_mac_address_base -flogi_fip_destination_mac_address_incr}
    _m_flogi_name_server_query_parameter_type {-flogi_name_server_query_parameter_type_format -flogi_name_server_query_parameter_type_base -flogi_name_server_query_parameter_type_incr}
    _m_flogi_count {-flogi_count_base -flogi_count_incr}
    _m_flogi_fip_vendor_id {-flogi_fip_vendor_id_format -flogi_fip_vendor_id_base -flogi_fip_vendor_id_incr}
    _m_flogi_source_oui_increment {-flogi_source_oui_increment_format -flogi_source_oui_increment_base -flogi_source_oui_increment_incr}
    _m_flogi_name_server_query_parameter_value {-flogi_name_server_query_parameter_value_format -flogi_name_server_query_parameter_value_base -flogi_name_server_query_parameter_value_incr}
    _m_flogi_unicast_fip_solicit {-flogi_unicast_fip_solicit_format -flogi_unicast_fip_solicit_base -flogi_unicast_fip_solicit_incr}
    _m_flogi_port_wwn_increment {-flogi_port_wwn_increment_format -flogi_port_wwn_increment_base -flogi_port_wwn_increment_incr}
    _m_flogi_source_oui {-flogi_source_oui_format -flogi_source_oui_base -flogi_source_oui_incr}
    _m_flogi_node_wwn_increment {-flogi_node_wwn_increment_format -flogi_node_wwn_increment_base -flogi_node_wwn_increment_incr}
    _m_flogi_port_wwn_start {-flogi_port_wwn_start_format -flogi_port_wwn_start_base -flogi_port_wwn_start_incr}
    _m_flogi_node_wwn_start {-flogi_node_wwn_start_format -flogi_node_wwn_start_base -flogi_node_wwn_start_incr}
    _m_flogi_name {-flogi_name_format -flogi_name_base -flogi_name_incr}
    _m_flogi_plogi_target_name {-flogi_plogi_target_name_format -flogi_plogi_target_name_base -flogi_plogi_target_name_incr}
    _m_flogi_state_change_registration_option {-flogi_state_change_registration_option_format -flogi_state_change_registration_option_base -flogi_state_change_registration_option_incr}
    _m_flogi_object_id {-flogi_object_id_format -flogi_object_id_base -flogi_object_id_incr}
    _m_flogi_plogi_mesh_mode {-flogi_plogi_mesh_mode_format -flogi_plogi_mesh_mode_base -flogi_plogi_mesh_mode_incr}
    _m_flogi_name_server_query_command {-flogi_name_server_query_command_format -flogi_name_server_query_command_base -flogi_name_server_query_command_incr}
    _m_flogi_fip_solicit_timeout {-flogi_fip_solicit_timeout_base -flogi_fip_solicit_timeout_incr}
    _m_flogi_fip_option_set_name {-flogi_fip_option_set_name_format -flogi_fip_option_set_name_base -flogi_fip_option_set_name_incr}
    _m_fdisc_plogi_dest_id {-fdisc_plogi_dest_id_format -fdisc_plogi_dest_id_base -fdisc_plogi_dest_id_incr}
    _m_fdisc_count {-fdisc_count_base -fdisc_count_incr}
    _m_fdisc_name_server_query_parameter_type {-fdisc_name_server_query_parameter_type_format -fdisc_name_server_query_parameter_type_base -fdisc_name_server_query_parameter_type_incr}
    _m_fdisc_source_oui_increment {-fdisc_source_oui_increment_format -fdisc_source_oui_increment_base -fdisc_source_oui_increment_incr}
    _m_fdisc_name_server_query_parameter_value {-fdisc_name_server_query_parameter_value_format -fdisc_name_server_query_parameter_value_base -fdisc_name_server_query_parameter_value_incr}
    _m_fdisc_port_wwn_increment {-fdisc_port_wwn_increment_format -fdisc_port_wwn_increment_base -fdisc_port_wwn_increment_incr}
    _m_fdisc_source_oui {-fdisc_source_oui_format -fdisc_source_oui_base -fdisc_source_oui_incr}
    _m_fdisc_node_wwn_increment {-fdisc_node_wwn_increment_format -fdisc_node_wwn_increment_base -fdisc_node_wwn_increment_incr}
    _m_fdisc_port_wwn_start {-fdisc_port_wwn_start_format -fdisc_port_wwn_start_base -fdisc_port_wwn_start_incr}
    _m_fdisc_node_wwn_start {-fdisc_node_wwn_start_format -fdisc_node_wwn_start_base -fdisc_node_wwn_start_incr}
    _m_fdisc_name {-fdisc_name_format -fdisc_name_base -fdisc_name_incr}
    _m_fdisc_plogi_target_name {-fdisc_plogi_target_name_format -fdisc_plogi_target_name_base -fdisc_plogi_target_name_incr}
    _m_fdisc_state_change_registration_option {-fdisc_state_change_registration_option_format -fdisc_state_change_registration_option_base -fdisc_state_change_registration_option_incr}
    _m_fdisc_object_id {-fdisc_object_id_format -fdisc_object_id_base -fdisc_object_id_incr}
    _m_fdisc_plogi_mesh_mode {-fdisc_plogi_mesh_mode_format -fdisc_plogi_mesh_mode_base -fdisc_plogi_mesh_mode_incr}
    _m_fdisc_name_server_query_command {-fdisc_name_server_query_command_format -fdisc_name_server_query_command_base -fdisc_name_server_query_command_incr}
  }
}

#@ ancestors for ::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange
#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/fcoeClientEndpoint
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {@path-fcoeClientFdiscRange,../vlanRange/name,value_translator cgs.xlt.hag_vlan_id_info}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name fcoe
    -docs-chapter-name {FCOE APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-skip-items-with-typepath-anx2hlt {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange fdisc ../fcoeClientFlogiRange flogi */protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange flogi}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {{../macRange -} {../vlanRange -} {../fcoeClientFlogiRange -}}}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command fcoeClientFdiscRange
    -use-settings-for typical_ethernet_based_stackmanager_range_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/fcoeClientEndpoint
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -_global_options \
    -cgetmethod _g__global_options -configuremethod _c__global_options -validatemethod _v__global_options \
    -default "" \
    -readonly false
  method _c__global_options {t v} { $self _configure_basic $t $v }
  method _v__global_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__global_options {t} { $self _cget_basic $t }
  option -_port_options \
    -cgetmethod _g__port_options -configuremethod _c__port_options -validatemethod _v__port_options \
    -default "" \
    -readonly false
  method _c__port_options {t v} { $self _configure_basic $t $v }
  method _v__port_options {t v} { ::ixia::hag::ixn::validate::kObjref $t $v }
  method _g__port_options {t} { $self _cget_basic $t }
  option -object_id \
    -cgetmethod _g_object_id -configuremethod _c_object_id -validatemethod _v_object_id \
    -default "" \
    -readonly false
  method _c_object_id {t v} {  }
  method _v_object_id {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_object_id {t} { $self _cget_basic $t }
  # multiplier 
  method _m_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -object_id }
  
  option -name \
    -cgetmethod _g_name -configuremethod _c_name -validatemethod _v_name \
    -default "" \
    -readonly false
  method _c_name {t v} { $self _configure_basic $t $v }
  method _v_name {t v} { ::ixia::hag::ixn::validate::kString $t $v }
  method _g_name {t} { $self _cget_basic $t }
  # multiplier 
  method _m_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -name }
  
  # XCHILD
  # /vport/protocolStack/ethernet/fcoeClientEndpoint/range
  option -range_handle -default UNDEFINED
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -_global_options _globalOptions
    -_port_options _portOptions
    -object_id objectId
    -name name
    -range_handle range
  }
  #
  variable MultiplierOptionGroups {
    _m_object_id {-object_id_format -object_id_base -object_id_incr}
    _m_name {-name_format -name_base -name_incr}
  }
}

#@@ ancestor "::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range"..
#------------------------------------------------------------------
# Prolog for: /vport/protocolStack/ethernet/fcoeClientEndpoint/range
package require snit
foreach {ns} {
  ::ixia::hag::ixn ::ixia::hag::ixn::auto ::ixia::hag::ixn::types
} {
  if {![namespace exists $ns]} { namespace eval $ns {} }
}
if {[llength [info commands ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range]]} {
    #puts stderr "Note: There was already a command called 'snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range'"
}

snit::type ::ixia::hag::ixn::types::/vport/protocolStack/ethernet/fcoeClientEndpoint/range {
  
  # Options used to generate this code
  typevariable GenerateOptions {
    -ancestor-include-level-for-add 1
    -ancestor-include-level-for-create 2
    -anx2hlt-file auto
    -anx2hlt-hltapi-command-element-attrs {}
    -anx2hlt-hltapi-param-element-attrs {@path-fcoeClientFdiscRange,../vlanRange/name,value_translator cgs.xlt.hag_vlan_id_info}
    -anx2hlt-typepath-links {}
    -children-processing include-all
    -children-processing-for-types {}
    -command-name fcoe
    -docs-chapter-name {FCOE APIs}
    -input-include-items-with-typepath {}
    -input-include-items-with-typepath-anx2hlt {}
    -input-ixnmetadata-file ./lib/ixnmetadata-9.10/vport-ixnmetadata.xml,./lib/ixnmetadata-9.10/globals-ixnmetadata.xml
    -input-ixnmetadata-typepath /vport
    -input-skip-items-with-typepath {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-skip-items-with-typepath-anx2hlt {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange/fipOptionSet kObjref *}
    -input-tailor-file {}
    -input-tailor-file-mandatory 1
    -ixn-tclserver-hostname localhost
    -option-prefixes-for-types {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange fdisc ../fcoeClientFlogiRange flogi */protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFlogiRange flogi}
    -output-directory ./directions
    -output-library-file {}
    -output-multiplier-option-groups 1
    -output-package-name {}
    -output-package-version 1.0
    -output-package-write-mode w+
    -parent-binding-mode always
    -parent-binding-style none
    -parent-handle-typepath /vport
    -relative-includes {*/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange {{../macRange -} {../vlanRange -} {../fcoeClientFlogiRange -}}}
    -rules-file {}
    -shared-includes {}
    -sub-commands {config control stats}
    -type-for-command fcoeClientFdiscRange
    -use-settings-for typical_ethernet_based_stackmanager_range_command
  }
  
  # ixn typepath associated w/ this obj
  variable TypePath /vport/protocolStack/ethernet/fcoeClientEndpoint/range
  variable AncestorIncludeLevelForCreate  0
  variable AncestorIncludeLevelForAdd  0
  # Ancestors that we auto-created and are managing ourselves
  # as opposed to those linked in via -parent_handle or some other
  # linkage option
  variable Ancestors {}
  # relatives of these types must be made along w/ the 
  # direct ancestry elements
  variable Relatives {}
  # carried thru from ixn SDM. kList, kManaged, kRequired, etc...
  variable Multiplicity kList
  # if this an element with a kManaged Mutiplicity, this contains
  # the managed index used by the enclosing container for ::my_codegen
  # if this thing is not kManaged, it is the empty string
  option -element_index -default ""
  # shell obj that holds utils like _create_instance, etc..
  typevariable Shell ::ixia::hag::ixn::types::shell
  # see _create
  typevariable ParentBindingStyle none
  typevariable ParentBindingMode always
  
  # A place for data managed by custom overrides
  # in tailor files
  variable UserInstanceData -array {}
  
  variable _REQUIRED_OPT "\x1"
  variable OwnIxnHandle ""
  method _own_ixn_handle {} {return $OwnIxnHandle}
  # underlying 'low level' ixn tcl handle for self
  variable IxnHandle ""
  method _ixn_handle {} {return $IxnHandle}
  method _set_ixn_handle {i_ixn_handle {i_own_ixn_handle 1}} {
      if {[string length $IxnHandle]} {
         return -code error  "Can't set to \"$i_ixn_handle\". IxnHandle is already set to $IxnHandle"
      }
      set IxnHandle $i_ixn_handle
      set OwnIxnHandle $i_own_ixn_handle
  }
  variable Parent ""
  #
  # Children: 
  # A paired list of form:
  #
  # {child_obj_0 tight ... child_obj_N loose}
  #
  # tight/loose indicated a tight binding , meaning that the child
  # should be destroyed are part of $self's destruction process
  variable Children {}
  
  typemethod _get_typevar {n} {set $n}
  method _get_var {n} {set $n}
  method _set_var {n v} {
      if {![info exists $n]} {
          return -code error "No such variable \"$n\""
      }
      set $n $v
  }
  method _parent {} {return $Parent}
  method _top_ancestor {} {
      if {[string length $Parent] == 0} {
          return -code error "$self: parent is undefined"
      }
      set x_obj $Parent
      while {[string length $x_obj]} {
          set rval $x_obj
          set x_obj [$x_obj _parent]
      }
      return $rval;
  }
  method _ancestor {lvl} {
      if {$lvl<0} {
          return -code error  "$self: Level ($lvl) must be a positive #"
      } elseif {$lvl == 0} {
          return $self
      }
      incr lvl -1; set rval $Parent
      #puts stderr "$self parent -> $Parent"
      for {} {$lvl>0} {incr lvl -1} {
          set rval [$rval _parent]
      }
      return $rval
  }
  method _descendant {i_typepath} {
      set rval $self
      foreach {elem} [$self _typepath_split $i_typepath] {
          set found 0
          foreach {child child_mode} [$rval _get_var Children] {
              set t [$child _typepath_tail [$child _typepath]]
              if {[string equal $t  $elem]} {
                  set rval $child
                  set found 1
                  break;
              }
          }
          if {$found == 0} {
              return -code error  "$self: cannot find descendant $i_typepath"
          }
      }
      return $rval
  }
  
  method _relative {i_relative_tp {include_ancestors 0}} {
      set rval ""
      foreach {relative_tp share_tp inst} $Relatives {
          if {[string equal $relative_tp  $i_relative_tp]} {
              # sanity check..
              if {[string length $rval]} {
                  return -code error  "more than one relative \"$i_relative_tp\""
              }
              set rval $inst
          }
      }
      if {$include_ancestors} {
        set fq_tp [$self _typepath_normalize  [$self _typepath_join [$self _typepath] $i_relative_tp]]
        set alist {}
        foreach {a} $Ancestors {
          set ap [$a _typepath]
          lappend alist $ap
          if {[string equal $ap $fq_tp]} {
              # sanity check..
              if {[string length $rval]} {
                return -code error  "more than one relative/ancestor \"$i_relative_tp\""
              }
              set rval $a
          }
        }
      }
      if {[string length $rval] == 0} {
          if {$include_ancestors} {
              set what "relatives/ancestors"
              set astuff "with ancestors $alist"
          } else {
              set what "relatives"
              set astuff ""
          }
          return -code error  "$self: Cannot find relative $i_relative_tp: existing $what are:\n------\n$Relatives\n$astuff\n-----\n"
      }
      return $rval
  }
  
  
  method abort        {} { $Shell abort $self }
  method abort_async  {} { $Shell abort_async $self}
  method start        {} { $Shell start $self }
  method stop         {} { $Shell stop  $self }
  
  #--------------------------------------------------------------------
  # ixn handle creation support methods
  method _trace {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "$self: [join $args]"}
  }
  method _tr {args} {
      if [set ${Shell}::_TRACE(HAG)] {puts stderr "    [join $args]"}
  }
  method _typepath_split {p} { file split $p }
  method _typepath_parent {p} { file dirname $p }
  method _typepath_join {args} { eval [concat {file join} $args] }
  method _typepath_tail {p} { file tail $p}
  method _typepath {} { return $TypePath }
  method _typepath_normalize {p} { regsub {^[^/]+} [file normalize $p] {} }
  method _typepath_relativity {p} {
      set l 0; foreach {x} [$self _typepath_split $p] {
          if {$x !=  ".."} {break} else {incr l}
      }
      return $l
  }
  
  method _delete_ixn_subelement {i_ixn_handle} {
      $Shell _delete_ixn_subelement $self $i_ixn_handle
  }
  method _add_ixn_subelement {element_inst element_name} {
      $Shell _add_ixn_subelement $self $element_inst $element_name
  }
  
  method _bind_to_parent {args} {
      array set opts {
          -parent "" -tight-binding 0 -ixn-handle ""
          -binding-mode ""
      }; array set opts $args
      if {[string length $opts(-binding-mode)] == 0} {
          set opts(-binding-mode) $ParentBindingMode
      }
      set child $self
      if {[lsearch {internal_default tight loose none}  $opts(-tight-binding)] >= 0} {
          set child_mode $opts(-tight-binding)
      } else {
          if {[string length $opts(-tight-binding)] == 0} {
              set child_mode "none"
          } elseif {$opts(-tight-binding)} {
              set child_mode "tight"
          } else {
              set child_mode "loose"
          }
      }
      if {[string equal $child_mode "internal_default"]} {
          set child_mode $ParentBindingStyle
      }
      unset opts(-tight-binding)
      if {$child_mode == "none"} {
          return
      }                
      
      $self _tr "$opts(-parent) <- Binding to"
      if {[string length $Parent]} {
          if {$opts(-binding-mode) != "ifneeded"} {
              set msg  "$opts(-parent) <- Binding to already has parent $Parent"
              $self _tr $msg
              return -code error $msg
          } else {
              return
          }
      }
      set Parent $opts(-parent)
      if {[llength [info commands $Parent]] != 1} {
          return -code error  "$self:Parent \"$Parent\" is not a legal object"
      }
  
      if {[string length $opts(-ixn-handle)] == 0} {
          if {[string length [$self _ixn_handle]]} {
            set msg "Already have _ixn_handle \"[$self _ixn_handle]\""
            return -code error $msg
          }
          $self _set_ixn_handle [$Parent  _add_ixn_subelement  $self  [$self _typepath_tail $TypePath]]
      } else {
          $self _set_ixn_handle $opts(-ixn-handle)
      }
  
      $self configurelist [$self _alterations_to_option_defaults]
      $Parent _set_var Children [concat  [$Parent _get_var Children] [list $child $child_mode]  ]
  }
  
  
  method _configure_args_multiplier {m n args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _configure_args_multiplier $self $m $n $args
  }
  
  typemethod _pluck_o {main_opt opt default alistN} {
      upvar 1 $alistN alist
      set li [lsearch -exact $alist $opt]
      set ll [llength $alist]
      if {($li < 0)} {
          if {$default == $_REQUIRED_OPT} {
              return -code error  "Option \"$main_opt\" requires the option \"$opt\" to also be specified."
          }
      }
      set rval [lindex $alist [expr $li+1]]
      set alist [lreplace $alist $li [expr $li+1]]
      return $rval
  }
  #
  # a return of empty list means there is no option group
  # for the supplied option $opt 
  #
  # the arglistN reference will be
  # modfied (found modifier options will removed) 
  # if an option group is found for $opt
  #
  method _multiplier_opt_group {i_opt arglistN} {
      set rval {}
      upvar 1 $arglistN arglist
      foreach {mcmd mog} $MultiplierOptionGroups {
          if {[lsearch -exact $mog $i_opt] != -1} {
              lappend rval $mcmd
              set expanded_mog {} 
              # remove the mog options from args
              foreach {mo} $mog {
                  set mv [$type _pluck_o  $i_opt $mo $_REQUIRED_OPT arglist]
                  lappend expanded_mog $mo $mv
              }
              lappend rval $expanded_mog
              break
          }
      }
      return $rval
  }
  
  # Do any special initialization that should occur 
  # after the instance has been created via xxx_config create|add
  # and it's initial properties have been configured
  #
  # Intended to be overrideable
  method _post_construct_callback {args} {}
  
  #
  # callback to do any conversion needed to make what we are passed
  # an XYZ object w/ a proper ixn handle associated w/ it
  # By default, the handle passed is used as is
  #
  # Intended to be overrideable
  method _cast_handle_to_parent_obj {initial_parent_handle args} {
      return $initial_parent_handle
  }
  method _create_clan {initial_parent_handle ancestor_inc_level} {
    $Shell _create_clan $self $initial_parent_handle $ancestor_inc_level
  }
  method _create_relatives {} {$Shell _create_relatives $self}
  method _create_ancestry {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      $Shell _create_ancestry $self $args
  }
  method _destroy_clan {} {$Shell _destroy_clan $self}
  method _destroy_children {} {$Shell _destroy_children $self}
  method _destroy_relatives {} {$Shell _destroy_relatives $self}
  method _destroy_ancestry {} {$Shell _destroy_ancestry $self}
  
  method _cget_kBool {t} {
      # ixn is arbitrary on this. return normalized True/False 
      $Shell _check_ixnhandle $self
      if {[$Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)]} {
          return True
      }
      return False
  }
  method _cget_basic {t} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet getAttribute  [$self _ixn_handle] -$Opt2IxnName($t)
  }
  method _configure_basic {t v} {
      $Shell _check_ixnhandle $self
      $Shell _ixn_eval ixNet setAttribute  [$self _ixn_handle] -$Opt2IxnName($t) $v
  }
  method _validate_basic {t v} {
      if {false} { 
          return -code error "expected a ??? value, got $v"
      }
  }
  
  method _configure_kManaged_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set err ""
          set element_index ""
          catch {set element_index  [$Shell arg_pluck -element_index subobj_tv_list $err]} err
          set inst [$Shell _create_instance $ixn_typepath  -element_index $element_index]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kManaged_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_list {ixn_typepath t v} {
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      foreach {subobj_tv_list} $v {
          set inst [$Shell _create_instance $ixn_typepath]
          $inst _bind_to_parent -parent $self -tight-binding 1
          $inst _create_relatives
          $Shell _configure_instance $inst $subobj_tv_list
      }
  }
  method _validate_kList_as_list {ixn_typepath t v} {
  }
  
  method _configure_kList_as_multiplier {ixn_typepath t v} {
      # "Tighten on up !" -- James Brown
      set subobj_args [concat {-tight-binding 1} $v]
      set err "missing -count option."
      set parent_handle $self
      set count [$Shell arg_pluck -count subobj_args $err]
      # Clear existing list (if any)
      $self _destroy_children
      # (Re)build list w/ supplied items
      $Shell _multi_create $count $parent_handle  $ixn_typepath $subobj_args
  }
  method _validate_kList_as_multiplier {ixn_typepath t v} {
  }
  
  method _cget_relative {relative_typepath t} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _cget_instance $inst $t
  }
  method _configure_relative {relative_typepath t v} {
      set inst [$self _relative $relative_typepath 1];#include ancestors
      $Shell _configure_instance $inst [list $t $v]
  }
  
  #------------------------------------------------------
  # options that are mapped to ixn properties
  #
  
  option -fcoe_client_fdisc_range_plogi_dest_id \
    -configuremethod _c_./fcoeClientFdiscRange/plogiDestId \
    -cgetmethod _g_./fcoeClientFdiscRange/plogiDestId \
    -readonly false
  method _c_./fcoeClientFdiscRange/plogiDestId {t v} { $self _configure_relative ./fcoeClientFdiscRange -plogi_dest_id $v }
  method _g_./fcoeClientFdiscRange/plogiDestId {t} { $self _cget_relative ./fcoeClientFdiscRange -plogi_dest_id }
  # multiplier 
  method _m_fcoe_client_fdisc_range_plogi_dest_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_plogi_dest_id }
  
  option -fcoe_client_fdisc_range_count \
    -configuremethod _c_./fcoeClientFdiscRange/count \
    -cgetmethod _g_./fcoeClientFdiscRange/count \
    -readonly false
  method _c_./fcoeClientFdiscRange/count {t v} { $self _configure_relative ./fcoeClientFdiscRange -count $v }
  method _g_./fcoeClientFdiscRange/count {t} { $self _cget_relative ./fcoeClientFdiscRange -count }
  # multiplier 
  method _m_fcoe_client_fdisc_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_count }
  
  option -fcoe_client_fdisc_range_name_server_query_parameter_type \
    -configuremethod _c_./fcoeClientFdiscRange/nameServerQueryParameterType \
    -cgetmethod _g_./fcoeClientFdiscRange/nameServerQueryParameterType \
    -readonly false
  method _c_./fcoeClientFdiscRange/nameServerQueryParameterType {t v} { $self _configure_relative ./fcoeClientFdiscRange -name_server_query_parameter_type $v }
  method _g_./fcoeClientFdiscRange/nameServerQueryParameterType {t} { $self _cget_relative ./fcoeClientFdiscRange -name_server_query_parameter_type }
  # multiplier 
  method _m_fcoe_client_fdisc_range_name_server_query_parameter_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_name_server_query_parameter_type }
  
  option -fcoe_client_fdisc_range_state_change_registration \
    -configuremethod _c_./fcoeClientFdiscRange/stateChangeRegistration \
    -cgetmethod _g_./fcoeClientFdiscRange/stateChangeRegistration \
    -readonly false
  method _c_./fcoeClientFdiscRange/stateChangeRegistration {t v} { $self _configure_relative ./fcoeClientFdiscRange -state_change_registration $v }
  method _g_./fcoeClientFdiscRange/stateChangeRegistration {t} { $self _cget_relative ./fcoeClientFdiscRange -state_change_registration }
  option -fcoe_client_fdisc_range_prli_enabled \
    -configuremethod _c_./fcoeClientFdiscRange/prliEnabled \
    -cgetmethod _g_./fcoeClientFdiscRange/prliEnabled \
    -readonly false
  method _c_./fcoeClientFdiscRange/prliEnabled {t v} { $self _configure_relative ./fcoeClientFdiscRange -prli_enabled $v }
  method _g_./fcoeClientFdiscRange/prliEnabled {t} { $self _cget_relative ./fcoeClientFdiscRange -prli_enabled }
  option -fcoe_client_fdisc_range_enabled \
    -configuremethod _c_./fcoeClientFdiscRange/enabled \
    -cgetmethod _g_./fcoeClientFdiscRange/enabled \
    -readonly false
  method _c_./fcoeClientFdiscRange/enabled {t v} { $self _configure_relative ./fcoeClientFdiscRange -enabled $v }
  method _g_./fcoeClientFdiscRange/enabled {t} { $self _cget_relative ./fcoeClientFdiscRange -enabled }
  option -fcoe_client_fdisc_range_source_oui_increment \
    -configuremethod _c_./fcoeClientFdiscRange/sourceOuiIncrement \
    -cgetmethod _g_./fcoeClientFdiscRange/sourceOuiIncrement \
    -readonly false
  method _c_./fcoeClientFdiscRange/sourceOuiIncrement {t v} { $self _configure_relative ./fcoeClientFdiscRange -source_oui_increment $v }
  method _g_./fcoeClientFdiscRange/sourceOuiIncrement {t} { $self _cget_relative ./fcoeClientFdiscRange -source_oui_increment }
  # multiplier 
  method _m_fcoe_client_fdisc_range_source_oui_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_source_oui_increment }
  
  option -fcoe_client_fdisc_range_name_server_registration \
    -configuremethod _c_./fcoeClientFdiscRange/nameServerRegistration \
    -cgetmethod _g_./fcoeClientFdiscRange/nameServerRegistration \
    -readonly false
  method _c_./fcoeClientFdiscRange/nameServerRegistration {t v} { $self _configure_relative ./fcoeClientFdiscRange -name_server_registration $v }
  method _g_./fcoeClientFdiscRange/nameServerRegistration {t} { $self _cget_relative ./fcoeClientFdiscRange -name_server_registration }
  option -fcoe_client_fdisc_range_name_server_query_parameter_value \
    -configuremethod _c_./fcoeClientFdiscRange/nameServerQueryParameterValue \
    -cgetmethod _g_./fcoeClientFdiscRange/nameServerQueryParameterValue \
    -readonly false
  method _c_./fcoeClientFdiscRange/nameServerQueryParameterValue {t v} { $self _configure_relative ./fcoeClientFdiscRange -name_server_query_parameter_value $v }
  method _g_./fcoeClientFdiscRange/nameServerQueryParameterValue {t} { $self _cget_relative ./fcoeClientFdiscRange -name_server_query_parameter_value }
  # multiplier 
  method _m_fcoe_client_fdisc_range_name_server_query_parameter_value {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_name_server_query_parameter_value }
  
  option -fcoe_client_fdisc_range_port_wwn_increment \
    -configuremethod _c_./fcoeClientFdiscRange/portWwnIncrement \
    -cgetmethod _g_./fcoeClientFdiscRange/portWwnIncrement \
    -readonly false
  method _c_./fcoeClientFdiscRange/portWwnIncrement {t v} { $self _configure_relative ./fcoeClientFdiscRange -port_wwn_increment $v }
  method _g_./fcoeClientFdiscRange/portWwnIncrement {t} { $self _cget_relative ./fcoeClientFdiscRange -port_wwn_increment }
  # multiplier 
  method _m_fcoe_client_fdisc_range_port_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_port_wwn_increment }
  
  option -fcoe_client_fdisc_range_source_oui \
    -configuremethod _c_./fcoeClientFdiscRange/sourceOui \
    -cgetmethod _g_./fcoeClientFdiscRange/sourceOui \
    -readonly false
  method _c_./fcoeClientFdiscRange/sourceOui {t v} { $self _configure_relative ./fcoeClientFdiscRange -source_oui $v }
  method _g_./fcoeClientFdiscRange/sourceOui {t} { $self _cget_relative ./fcoeClientFdiscRange -source_oui }
  # multiplier 
  method _m_fcoe_client_fdisc_range_source_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_source_oui }
  
  option -fcoe_client_fdisc_range_node_wwn_increment \
    -configuremethod _c_./fcoeClientFdiscRange/nodeWwnIncrement \
    -cgetmethod _g_./fcoeClientFdiscRange/nodeWwnIncrement \
    -readonly false
  method _c_./fcoeClientFdiscRange/nodeWwnIncrement {t v} { $self _configure_relative ./fcoeClientFdiscRange -node_wwn_increment $v }
  method _g_./fcoeClientFdiscRange/nodeWwnIncrement {t} { $self _cget_relative ./fcoeClientFdiscRange -node_wwn_increment }
  # multiplier 
  method _m_fcoe_client_fdisc_range_node_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_node_wwn_increment }
  
  option -fcoe_client_fdisc_range_port_wwn_start \
    -configuremethod _c_./fcoeClientFdiscRange/portWwnStart \
    -cgetmethod _g_./fcoeClientFdiscRange/portWwnStart \
    -readonly false
  method _c_./fcoeClientFdiscRange/portWwnStart {t v} { $self _configure_relative ./fcoeClientFdiscRange -port_wwn_start $v }
  method _g_./fcoeClientFdiscRange/portWwnStart {t} { $self _cget_relative ./fcoeClientFdiscRange -port_wwn_start }
  # multiplier 
  method _m_fcoe_client_fdisc_range_port_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_port_wwn_start }
  
  option -fcoe_client_fdisc_range_node_wwn_start \
    -configuremethod _c_./fcoeClientFdiscRange/nodeWwnStart \
    -cgetmethod _g_./fcoeClientFdiscRange/nodeWwnStart \
    -readonly false
  method _c_./fcoeClientFdiscRange/nodeWwnStart {t v} { $self _configure_relative ./fcoeClientFdiscRange -node_wwn_start $v }
  method _g_./fcoeClientFdiscRange/nodeWwnStart {t} { $self _cget_relative ./fcoeClientFdiscRange -node_wwn_start }
  # multiplier 
  method _m_fcoe_client_fdisc_range_node_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_node_wwn_start }
  
  option -fcoe_client_fdisc_range_name \
    -configuremethod _c_./fcoeClientFdiscRange/name \
    -cgetmethod _g_./fcoeClientFdiscRange/name \
    -readonly false
  method _c_./fcoeClientFdiscRange/name {t v} { $self _configure_relative ./fcoeClientFdiscRange -name $v }
  method _g_./fcoeClientFdiscRange/name {t} { $self _cget_relative ./fcoeClientFdiscRange -name }
  # multiplier 
  method _m_fcoe_client_fdisc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_name }
  
  option -fcoe_client_fdisc_range_name_server_commands \
    -configuremethod _c_./fcoeClientFdiscRange/nameServerCommands \
    -cgetmethod _g_./fcoeClientFdiscRange/nameServerCommands \
    -readonly false
  method _c_./fcoeClientFdiscRange/nameServerCommands {t v} { $self _configure_relative ./fcoeClientFdiscRange -name_server_commands $v }
  method _g_./fcoeClientFdiscRange/nameServerCommands {t} { $self _cget_relative ./fcoeClientFdiscRange -name_server_commands }
  option -fcoe_client_fdisc_range_override_node_wwn \
    -configuremethod _c_./fcoeClientFdiscRange/overrideNodeWwn \
    -cgetmethod _g_./fcoeClientFdiscRange/overrideNodeWwn \
    -readonly false
  method _c_./fcoeClientFdiscRange/overrideNodeWwn {t v} { $self _configure_relative ./fcoeClientFdiscRange -override_node_wwn $v }
  method _g_./fcoeClientFdiscRange/overrideNodeWwn {t} { $self _cget_relative ./fcoeClientFdiscRange -override_node_wwn }
  option -fcoe_client_fdisc_range_plogi_target_name \
    -configuremethod _c_./fcoeClientFdiscRange/plogiTargetName \
    -cgetmethod _g_./fcoeClientFdiscRange/plogiTargetName \
    -readonly false
  method _c_./fcoeClientFdiscRange/plogiTargetName {t v} { $self _configure_relative ./fcoeClientFdiscRange -plogi_target_name $v }
  method _g_./fcoeClientFdiscRange/plogiTargetName {t} { $self _cget_relative ./fcoeClientFdiscRange -plogi_target_name }
  # multiplier 
  method _m_fcoe_client_fdisc_range_plogi_target_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_plogi_target_name }
  
  option -fcoe_client_fdisc_range_state_change_registration_option \
    -configuremethod _c_./fcoeClientFdiscRange/stateChangeRegistrationOption \
    -cgetmethod _g_./fcoeClientFdiscRange/stateChangeRegistrationOption \
    -readonly false
  method _c_./fcoeClientFdiscRange/stateChangeRegistrationOption {t v} { $self _configure_relative ./fcoeClientFdiscRange -state_change_registration_option $v }
  method _g_./fcoeClientFdiscRange/stateChangeRegistrationOption {t} { $self _cget_relative ./fcoeClientFdiscRange -state_change_registration_option }
  # multiplier 
  method _m_fcoe_client_fdisc_range_state_change_registration_option {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_state_change_registration_option }
  
  option -fcoe_client_fdisc_range_object_id \
    -configuremethod _c_./fcoeClientFdiscRange/objectId \
    -cgetmethod _g_./fcoeClientFdiscRange/objectId \
    -readonly false
  method _c_./fcoeClientFdiscRange/objectId {t v} { $self _configure_relative ./fcoeClientFdiscRange -object_id $v }
  method _g_./fcoeClientFdiscRange/objectId {t} { $self _cget_relative ./fcoeClientFdiscRange -object_id }
  # multiplier 
  method _m_fcoe_client_fdisc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_object_id }
  
  option -fcoe_client_fdisc_range_plogi_mesh_mode \
    -configuremethod _c_./fcoeClientFdiscRange/plogiMeshMode \
    -cgetmethod _g_./fcoeClientFdiscRange/plogiMeshMode \
    -readonly false
  method _c_./fcoeClientFdiscRange/plogiMeshMode {t v} { $self _configure_relative ./fcoeClientFdiscRange -plogi_mesh_mode $v }
  method _g_./fcoeClientFdiscRange/plogiMeshMode {t} { $self _cget_relative ./fcoeClientFdiscRange -plogi_mesh_mode }
  # multiplier 
  method _m_fcoe_client_fdisc_range_plogi_mesh_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_plogi_mesh_mode }
  
  option -fcoe_client_fdisc_range_name_server_query_command \
    -configuremethod _c_./fcoeClientFdiscRange/nameServerQueryCommand \
    -cgetmethod _g_./fcoeClientFdiscRange/nameServerQueryCommand \
    -readonly false
  method _c_./fcoeClientFdiscRange/nameServerQueryCommand {t v} { $self _configure_relative ./fcoeClientFdiscRange -name_server_query_command $v }
  method _g_./fcoeClientFdiscRange/nameServerQueryCommand {t} { $self _cget_relative ./fcoeClientFdiscRange -name_server_query_command }
  # multiplier 
  method _m_fcoe_client_fdisc_range_name_server_query_command {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_fdisc_range_name_server_query_command }
  
  option -fcoe_client_fdisc_range_plogi_enabled \
    -configuremethod _c_./fcoeClientFdiscRange/plogiEnabled \
    -cgetmethod _g_./fcoeClientFdiscRange/plogiEnabled \
    -readonly false
  method _c_./fcoeClientFdiscRange/plogiEnabled {t v} { $self _configure_relative ./fcoeClientFdiscRange -plogi_enabled $v }
  method _g_./fcoeClientFdiscRange/plogiEnabled {t} { $self _cget_relative ./fcoeClientFdiscRange -plogi_enabled }
  option -fcoe_client_fdisc_range_name_server_query \
    -configuremethod _c_./fcoeClientFdiscRange/nameServerQuery \
    -cgetmethod _g_./fcoeClientFdiscRange/nameServerQuery \
    -readonly false
  method _c_./fcoeClientFdiscRange/nameServerQuery {t v} { $self _configure_relative ./fcoeClientFdiscRange -name_server_query $v }
  method _g_./fcoeClientFdiscRange/nameServerQuery {t} { $self _cget_relative ./fcoeClientFdiscRange -name_server_query }
  option -fcoe_client_flogi_range_plogi_dest_id \
    -configuremethod _c_./fcoeClientFlogiRange/plogiDestId \
    -cgetmethod _g_./fcoeClientFlogiRange/plogiDestId \
    -readonly false
  method _c_./fcoeClientFlogiRange/plogiDestId {t v} { $self _configure_relative ./fcoeClientFlogiRange -plogi_dest_id $v }
  method _g_./fcoeClientFlogiRange/plogiDestId {t} { $self _cget_relative ./fcoeClientFlogiRange -plogi_dest_id }
  # multiplier 
  method _m_fcoe_client_flogi_range_plogi_dest_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_plogi_dest_id }
  
  option -fcoe_client_flogi_range_fip_addressing_mode \
    -configuremethod _c_./fcoeClientFlogiRange/fipAddressingMode \
    -cgetmethod _g_./fcoeClientFlogiRange/fipAddressingMode \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipAddressingMode {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_addressing_mode $v }
  method _g_./fcoeClientFlogiRange/fipAddressingMode {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_addressing_mode }
  # multiplier 
  method _m_fcoe_client_flogi_range_fip_addressing_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_fip_addressing_mode }
  
  option -fcoe_client_flogi_range_fip_destination_mac_address \
    -configuremethod _c_./fcoeClientFlogiRange/fipDestinationMacAddress \
    -cgetmethod _g_./fcoeClientFlogiRange/fipDestinationMacAddress \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipDestinationMacAddress {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_destination_mac_address $v }
  method _g_./fcoeClientFlogiRange/fipDestinationMacAddress {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_destination_mac_address }
  # multiplier 
  method _m_fcoe_client_flogi_range_fip_destination_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_fip_destination_mac_address }
  
  option -fcoe_client_flogi_range_name_server_query_parameter_type \
    -configuremethod _c_./fcoeClientFlogiRange/nameServerQueryParameterType \
    -cgetmethod _g_./fcoeClientFlogiRange/nameServerQueryParameterType \
    -readonly false
  method _c_./fcoeClientFlogiRange/nameServerQueryParameterType {t v} { $self _configure_relative ./fcoeClientFlogiRange -name_server_query_parameter_type $v }
  method _g_./fcoeClientFlogiRange/nameServerQueryParameterType {t} { $self _cget_relative ./fcoeClientFlogiRange -name_server_query_parameter_type }
  # multiplier 
  method _m_fcoe_client_flogi_range_name_server_query_parameter_type {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_name_server_query_parameter_type }
  
  option -fcoe_client_flogi_range_count \
    -configuremethod _c_./fcoeClientFlogiRange/count \
    -cgetmethod _g_./fcoeClientFlogiRange/count \
    -readonly false
  method _c_./fcoeClientFlogiRange/count {t v} { $self _configure_relative ./fcoeClientFlogiRange -count $v }
  method _g_./fcoeClientFlogiRange/count {t} { $self _cget_relative ./fcoeClientFlogiRange -count }
  # multiplier 
  method _m_fcoe_client_flogi_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_count }
  
  option -fcoe_client_flogi_range_prli_enabled \
    -configuremethod _c_./fcoeClientFlogiRange/prliEnabled \
    -cgetmethod _g_./fcoeClientFlogiRange/prliEnabled \
    -readonly false
  method _c_./fcoeClientFlogiRange/prliEnabled {t v} { $self _configure_relative ./fcoeClientFlogiRange -prli_enabled $v }
  method _g_./fcoeClientFlogiRange/prliEnabled {t} { $self _cget_relative ./fcoeClientFlogiRange -prli_enabled }
  option -fcoe_client_flogi_range_state_change_registration \
    -configuremethod _c_./fcoeClientFlogiRange/stateChangeRegistration \
    -cgetmethod _g_./fcoeClientFlogiRange/stateChangeRegistration \
    -readonly false
  method _c_./fcoeClientFlogiRange/stateChangeRegistration {t v} { $self _configure_relative ./fcoeClientFlogiRange -state_change_registration $v }
  method _g_./fcoeClientFlogiRange/stateChangeRegistration {t} { $self _cget_relative ./fcoeClientFlogiRange -state_change_registration }
  option -fcoe_client_flogi_range_fip_enabled \
    -configuremethod _c_./fcoeClientFlogiRange/fipEnabled \
    -cgetmethod _g_./fcoeClientFlogiRange/fipEnabled \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipEnabled {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_enabled $v }
  method _g_./fcoeClientFlogiRange/fipEnabled {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_enabled }
  option -fcoe_client_flogi_range_fip_vendor_id \
    -configuremethod _c_./fcoeClientFlogiRange/fipVendorId \
    -cgetmethod _g_./fcoeClientFlogiRange/fipVendorId \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipVendorId {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_vendor_id $v }
  method _g_./fcoeClientFlogiRange/fipVendorId {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_vendor_id }
  # multiplier 
  method _m_fcoe_client_flogi_range_fip_vendor_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_fip_vendor_id }
  
  option -fcoe_client_flogi_range_enabled \
    -configuremethod _c_./fcoeClientFlogiRange/enabled \
    -cgetmethod _g_./fcoeClientFlogiRange/enabled \
    -readonly false
  method _c_./fcoeClientFlogiRange/enabled {t v} { $self _configure_relative ./fcoeClientFlogiRange -enabled $v }
  method _g_./fcoeClientFlogiRange/enabled {t} { $self _cget_relative ./fcoeClientFlogiRange -enabled }
  option -fcoe_client_flogi_range_name_server_registration \
    -configuremethod _c_./fcoeClientFlogiRange/nameServerRegistration \
    -cgetmethod _g_./fcoeClientFlogiRange/nameServerRegistration \
    -readonly false
  method _c_./fcoeClientFlogiRange/nameServerRegistration {t v} { $self _configure_relative ./fcoeClientFlogiRange -name_server_registration $v }
  method _g_./fcoeClientFlogiRange/nameServerRegistration {t} { $self _cget_relative ./fcoeClientFlogiRange -name_server_registration }
  option -fcoe_client_flogi_range_source_oui_increment \
    -configuremethod _c_./fcoeClientFlogiRange/sourceOuiIncrement \
    -cgetmethod _g_./fcoeClientFlogiRange/sourceOuiIncrement \
    -readonly false
  method _c_./fcoeClientFlogiRange/sourceOuiIncrement {t v} { $self _configure_relative ./fcoeClientFlogiRange -source_oui_increment $v }
  method _g_./fcoeClientFlogiRange/sourceOuiIncrement {t} { $self _cget_relative ./fcoeClientFlogiRange -source_oui_increment }
  # multiplier 
  method _m_fcoe_client_flogi_range_source_oui_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_source_oui_increment }
  
  option -fcoe_client_flogi_range_name_server_query_parameter_value \
    -configuremethod _c_./fcoeClientFlogiRange/nameServerQueryParameterValue \
    -cgetmethod _g_./fcoeClientFlogiRange/nameServerQueryParameterValue \
    -readonly false
  method _c_./fcoeClientFlogiRange/nameServerQueryParameterValue {t v} { $self _configure_relative ./fcoeClientFlogiRange -name_server_query_parameter_value $v }
  method _g_./fcoeClientFlogiRange/nameServerQueryParameterValue {t} { $self _cget_relative ./fcoeClientFlogiRange -name_server_query_parameter_value }
  # multiplier 
  method _m_fcoe_client_flogi_range_name_server_query_parameter_value {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_name_server_query_parameter_value }
  
  option -fcoe_client_flogi_range_unicast_fip_solicit \
    -configuremethod _c_./fcoeClientFlogiRange/unicastFipSolicit \
    -cgetmethod _g_./fcoeClientFlogiRange/unicastFipSolicit \
    -readonly false
  method _c_./fcoeClientFlogiRange/unicastFipSolicit {t v} { $self _configure_relative ./fcoeClientFlogiRange -unicast_fip_solicit $v }
  method _g_./fcoeClientFlogiRange/unicastFipSolicit {t} { $self _cget_relative ./fcoeClientFlogiRange -unicast_fip_solicit }
  # multiplier 
  method _m_fcoe_client_flogi_range_unicast_fip_solicit {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_unicast_fip_solicit }
  
  option -fcoe_client_flogi_range_port_wwn_increment \
    -configuremethod _c_./fcoeClientFlogiRange/portWwnIncrement \
    -cgetmethod _g_./fcoeClientFlogiRange/portWwnIncrement \
    -readonly false
  method _c_./fcoeClientFlogiRange/portWwnIncrement {t v} { $self _configure_relative ./fcoeClientFlogiRange -port_wwn_increment $v }
  method _g_./fcoeClientFlogiRange/portWwnIncrement {t} { $self _cget_relative ./fcoeClientFlogiRange -port_wwn_increment }
  # multiplier 
  method _m_fcoe_client_flogi_range_port_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_port_wwn_increment }
  
  option -fcoe_client_flogi_range_source_oui \
    -configuremethod _c_./fcoeClientFlogiRange/sourceOui \
    -cgetmethod _g_./fcoeClientFlogiRange/sourceOui \
    -readonly false
  method _c_./fcoeClientFlogiRange/sourceOui {t v} { $self _configure_relative ./fcoeClientFlogiRange -source_oui $v }
  method _g_./fcoeClientFlogiRange/sourceOui {t} { $self _cget_relative ./fcoeClientFlogiRange -source_oui }
  # multiplier 
  method _m_fcoe_client_flogi_range_source_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_source_oui }
  
  option -fcoe_client_flogi_range_node_wwn_increment \
    -configuremethod _c_./fcoeClientFlogiRange/nodeWwnIncrement \
    -cgetmethod _g_./fcoeClientFlogiRange/nodeWwnIncrement \
    -readonly false
  method _c_./fcoeClientFlogiRange/nodeWwnIncrement {t v} { $self _configure_relative ./fcoeClientFlogiRange -node_wwn_increment $v }
  method _g_./fcoeClientFlogiRange/nodeWwnIncrement {t} { $self _cget_relative ./fcoeClientFlogiRange -node_wwn_increment }
  # multiplier 
  method _m_fcoe_client_flogi_range_node_wwn_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_node_wwn_increment }
  
  option -fcoe_client_flogi_range_port_wwn_start \
    -configuremethod _c_./fcoeClientFlogiRange/portWwnStart \
    -cgetmethod _g_./fcoeClientFlogiRange/portWwnStart \
    -readonly false
  method _c_./fcoeClientFlogiRange/portWwnStart {t v} { $self _configure_relative ./fcoeClientFlogiRange -port_wwn_start $v }
  method _g_./fcoeClientFlogiRange/portWwnStart {t} { $self _cget_relative ./fcoeClientFlogiRange -port_wwn_start }
  # multiplier 
  method _m_fcoe_client_flogi_range_port_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_port_wwn_start }
  
  option -fcoe_client_flogi_range_node_wwn_start \
    -configuremethod _c_./fcoeClientFlogiRange/nodeWwnStart \
    -cgetmethod _g_./fcoeClientFlogiRange/nodeWwnStart \
    -readonly false
  method _c_./fcoeClientFlogiRange/nodeWwnStart {t v} { $self _configure_relative ./fcoeClientFlogiRange -node_wwn_start $v }
  method _g_./fcoeClientFlogiRange/nodeWwnStart {t} { $self _cget_relative ./fcoeClientFlogiRange -node_wwn_start }
  # multiplier 
  method _m_fcoe_client_flogi_range_node_wwn_start {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_node_wwn_start }
  
  option -fcoe_client_flogi_range_fip_vlan_discovery \
    -configuremethod _c_./fcoeClientFlogiRange/fipVlanDiscovery \
    -cgetmethod _g_./fcoeClientFlogiRange/fipVlanDiscovery \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipVlanDiscovery {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_vlan_discovery $v }
  method _g_./fcoeClientFlogiRange/fipVlanDiscovery {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_vlan_discovery }
  option -fcoe_client_flogi_range_name \
    -configuremethod _c_./fcoeClientFlogiRange/name \
    -cgetmethod _g_./fcoeClientFlogiRange/name \
    -readonly false
  method _c_./fcoeClientFlogiRange/name {t v} { $self _configure_relative ./fcoeClientFlogiRange -name $v }
  method _g_./fcoeClientFlogiRange/name {t} { $self _cget_relative ./fcoeClientFlogiRange -name }
  # multiplier 
  method _m_fcoe_client_flogi_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_name }
  
  option -fcoe_client_flogi_range_name_server_commands \
    -configuremethod _c_./fcoeClientFlogiRange/nameServerCommands \
    -cgetmethod _g_./fcoeClientFlogiRange/nameServerCommands \
    -readonly false
  method _c_./fcoeClientFlogiRange/nameServerCommands {t v} { $self _configure_relative ./fcoeClientFlogiRange -name_server_commands $v }
  method _g_./fcoeClientFlogiRange/nameServerCommands {t} { $self _cget_relative ./fcoeClientFlogiRange -name_server_commands }
  option -fcoe_client_flogi_range_plogi_target_name \
    -configuremethod _c_./fcoeClientFlogiRange/plogiTargetName \
    -cgetmethod _g_./fcoeClientFlogiRange/plogiTargetName \
    -readonly false
  method _c_./fcoeClientFlogiRange/plogiTargetName {t v} { $self _configure_relative ./fcoeClientFlogiRange -plogi_target_name $v }
  method _g_./fcoeClientFlogiRange/plogiTargetName {t} { $self _cget_relative ./fcoeClientFlogiRange -plogi_target_name }
  # multiplier 
  method _m_fcoe_client_flogi_range_plogi_target_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_plogi_target_name }
  
  option -fcoe_client_flogi_range_state_change_registration_option \
    -configuremethod _c_./fcoeClientFlogiRange/stateChangeRegistrationOption \
    -cgetmethod _g_./fcoeClientFlogiRange/stateChangeRegistrationOption \
    -readonly false
  method _c_./fcoeClientFlogiRange/stateChangeRegistrationOption {t v} { $self _configure_relative ./fcoeClientFlogiRange -state_change_registration_option $v }
  method _g_./fcoeClientFlogiRange/stateChangeRegistrationOption {t} { $self _cget_relative ./fcoeClientFlogiRange -state_change_registration_option }
  # multiplier 
  method _m_fcoe_client_flogi_range_state_change_registration_option {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_state_change_registration_option }
  
  option -fcoe_client_flogi_range_object_id \
    -configuremethod _c_./fcoeClientFlogiRange/objectId \
    -cgetmethod _g_./fcoeClientFlogiRange/objectId \
    -readonly false
  method _c_./fcoeClientFlogiRange/objectId {t v} { $self _configure_relative ./fcoeClientFlogiRange -object_id $v }
  method _g_./fcoeClientFlogiRange/objectId {t} { $self _cget_relative ./fcoeClientFlogiRange -object_id }
  # multiplier 
  method _m_fcoe_client_flogi_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_object_id }
  
  option -fcoe_client_flogi_range_plogi_mesh_mode \
    -configuremethod _c_./fcoeClientFlogiRange/plogiMeshMode \
    -cgetmethod _g_./fcoeClientFlogiRange/plogiMeshMode \
    -readonly false
  method _c_./fcoeClientFlogiRange/plogiMeshMode {t v} { $self _configure_relative ./fcoeClientFlogiRange -plogi_mesh_mode $v }
  method _g_./fcoeClientFlogiRange/plogiMeshMode {t} { $self _cget_relative ./fcoeClientFlogiRange -plogi_mesh_mode }
  # multiplier 
  method _m_fcoe_client_flogi_range_plogi_mesh_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_plogi_mesh_mode }
  
  option -fcoe_client_flogi_range_name_server_query_command \
    -configuremethod _c_./fcoeClientFlogiRange/nameServerQueryCommand \
    -cgetmethod _g_./fcoeClientFlogiRange/nameServerQueryCommand \
    -readonly false
  method _c_./fcoeClientFlogiRange/nameServerQueryCommand {t v} { $self _configure_relative ./fcoeClientFlogiRange -name_server_query_command $v }
  method _g_./fcoeClientFlogiRange/nameServerQueryCommand {t} { $self _cget_relative ./fcoeClientFlogiRange -name_server_query_command }
  # multiplier 
  method _m_fcoe_client_flogi_range_name_server_query_command {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_name_server_query_command }
  
  option -fcoe_client_flogi_range_fip_solicit_timeout \
    -configuremethod _c_./fcoeClientFlogiRange/fipSolicitTimeout \
    -cgetmethod _g_./fcoeClientFlogiRange/fipSolicitTimeout \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipSolicitTimeout {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_solicit_timeout $v }
  method _g_./fcoeClientFlogiRange/fipSolicitTimeout {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_solicit_timeout }
  # multiplier 
  method _m_fcoe_client_flogi_range_fip_solicit_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_fip_solicit_timeout }
  
  option -fcoe_client_flogi_range_fip_option_set_name \
    -configuremethod _c_./fcoeClientFlogiRange/fipOptionSetName \
    -cgetmethod _g_./fcoeClientFlogiRange/fipOptionSetName \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipOptionSetName {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_option_set_name $v }
  method _g_./fcoeClientFlogiRange/fipOptionSetName {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_option_set_name }
  # multiplier 
  method _m_fcoe_client_flogi_range_fip_option_set_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -fcoe_client_flogi_range_fip_option_set_name }
  
  option -fcoe_client_flogi_range_plogi_enabled \
    -configuremethod _c_./fcoeClientFlogiRange/plogiEnabled \
    -cgetmethod _g_./fcoeClientFlogiRange/plogiEnabled \
    -readonly false
  method _c_./fcoeClientFlogiRange/plogiEnabled {t v} { $self _configure_relative ./fcoeClientFlogiRange -plogi_enabled $v }
  method _g_./fcoeClientFlogiRange/plogiEnabled {t} { $self _cget_relative ./fcoeClientFlogiRange -plogi_enabled }
  option -fcoe_client_flogi_range_name_server_query \
    -configuremethod _c_./fcoeClientFlogiRange/nameServerQuery \
    -cgetmethod _g_./fcoeClientFlogiRange/nameServerQuery \
    -readonly false
  method _c_./fcoeClientFlogiRange/nameServerQuery {t v} { $self _configure_relative ./fcoeClientFlogiRange -name_server_query $v }
  method _g_./fcoeClientFlogiRange/nameServerQuery {t} { $self _cget_relative ./fcoeClientFlogiRange -name_server_query }
  option -fcoe_client_flogi_range_fip_vlan_discovery_untagged \
    -configuremethod _c_./fcoeClientFlogiRange/fipVlanDiscoveryUntagged \
    -cgetmethod _g_./fcoeClientFlogiRange/fipVlanDiscoveryUntagged \
    -readonly false
  method _c_./fcoeClientFlogiRange/fipVlanDiscoveryUntagged {t v} { $self _configure_relative ./fcoeClientFlogiRange -fip_vlan_discovery_untagged $v }
  method _g_./fcoeClientFlogiRange/fipVlanDiscoveryUntagged {t} { $self _cget_relative ./fcoeClientFlogiRange -fip_vlan_discovery_untagged }
  option -vic_client_range_prov_info_tlvs \
    -configuremethod _c_./vicClientRange/provInfoTlvs \
    -cgetmethod _g_./vicClientRange/provInfoTlvs \
    -readonly false
  method _c_./vicClientRange/provInfoTlvs {t v} { $self _configure_relative ./vicClientRange -prov_info_tlvs $v }
  method _g_./vicClientRange/provInfoTlvs {t} { $self _cget_relative ./vicClientRange -prov_info_tlvs }
  option -vic_client_range_object_id \
    -configuremethod _c_./vicClientRange/objectId \
    -cgetmethod _g_./vicClientRange/objectId \
    -readonly false
  method _c_./vicClientRange/objectId {t v} { $self _configure_relative ./vicClientRange -object_id $v }
  method _g_./vicClientRange/objectId {t} { $self _cget_relative ./vicClientRange -object_id }
  # multiplier 
  method _m_vic_client_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_object_id }
  
  option -vic_client_range_macs_per_vif \
    -configuremethod _c_./vicClientRange/macsPerVif \
    -cgetmethod _g_./vicClientRange/macsPerVif \
    -readonly false
  method _c_./vicClientRange/macsPerVif {t v} { $self _configure_relative ./vicClientRange -macs_per_vif $v }
  method _g_./vicClientRange/macsPerVif {t} { $self _cget_relative ./vicClientRange -macs_per_vif }
  # multiplier 
  method _m_vic_client_range_macs_per_vif {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_macs_per_vif }
  
  option -vic_client_range_channel_id_start \
    -configuremethod _c_./vicClientRange/channelIdStart \
    -cgetmethod _g_./vicClientRange/channelIdStart \
    -readonly false
  method _c_./vicClientRange/channelIdStart {t v} { $self _configure_relative ./vicClientRange -channel_id_start $v }
  method _g_./vicClientRange/channelIdStart {t} { $self _cget_relative ./vicClientRange -channel_id_start }
  # multiplier 
  method _m_vic_client_range_channel_id_start {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_channel_id_start }
  
  option -vic_client_range_prov_info_oui \
    -configuremethod _c_./vicClientRange/provInfoOui \
    -cgetmethod _g_./vicClientRange/provInfoOui \
    -readonly false
  method _c_./vicClientRange/provInfoOui {t v} { $self _configure_relative ./vicClientRange -prov_info_oui $v }
  method _g_./vicClientRange/provInfoOui {t} { $self _cget_relative ./vicClientRange -prov_info_oui }
  # multiplier 
  method _m_vic_client_range_prov_info_oui {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_prov_info_oui }
  
  option -vic_client_range_name \
    -configuremethod _c_./vicClientRange/name \
    -cgetmethod _g_./vicClientRange/name \
    -readonly false
  method _c_./vicClientRange/name {t v} { $self _configure_relative ./vicClientRange -name $v }
  method _g_./vicClientRange/name {t} { $self _cget_relative ./vicClientRange -name }
  # multiplier 
  method _m_vic_client_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vic_client_range_name }
  
  option -vic_client_range_vif_active \
    -configuremethod _c_./vicClientRange/vifActive \
    -cgetmethod _g_./vicClientRange/vifActive \
    -readonly false
  method _c_./vicClientRange/vifActive {t v} { $self _configure_relative ./vicClientRange -vif_active $v }
  method _g_./vicClientRange/vifActive {t} { $self _cget_relative ./vicClientRange -vif_active }
  option -vic_client_range_tlv_offset \
    -configuremethod _c_./vicClientRange/tlvOffset \
    -cgetmethod _g_./vicClientRange/tlvOffset \
    -readonly false
  method _c_./vicClientRange/tlvOffset {t v} { $self _configure_relative ./vicClientRange -tlv_offset $v }
  method _g_./vicClientRange/tlvOffset {t} { $self _cget_relative ./vicClientRange -tlv_offset }
  # multiplier 
  method _m_vic_client_range_tlv_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_tlv_offset }
  
  option -vic_client_range_prov_info_type \
    -configuremethod _c_./vicClientRange/provInfoType \
    -cgetmethod _g_./vicClientRange/provInfoType \
    -readonly false
  method _c_./vicClientRange/provInfoType {t v} { $self _configure_relative ./vicClientRange -prov_info_type $v }
  method _g_./vicClientRange/provInfoType {t} { $self _cget_relative ./vicClientRange -prov_info_type }
  # multiplier 
  method _m_vic_client_range_prov_info_type {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_prov_info_type }
  
  option -vic_client_range_enabled \
    -configuremethod _c_./vicClientRange/enabled \
    -cgetmethod _g_./vicClientRange/enabled \
    -readonly false
  method _c_./vicClientRange/enabled {t v} { $self _configure_relative ./vicClientRange -enabled $v }
  method _g_./vicClientRange/enabled {t} { $self _cget_relative ./vicClientRange -enabled }
  option -vic_client_range_channel_id_increment \
    -configuremethod _c_./vicClientRange/channelIdIncrement \
    -cgetmethod _g_./vicClientRange/channelIdIncrement \
    -readonly false
  method _c_./vicClientRange/channelIdIncrement {t v} { $self _configure_relative ./vicClientRange -channel_id_increment $v }
  method _g_./vicClientRange/channelIdIncrement {t} { $self _cget_relative ./vicClientRange -channel_id_increment }
  # multiplier 
  method _m_vic_client_range_channel_id_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vic_client_range_channel_id_increment }
  
  option -ptp_range_over_mac_master_mac_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverMac/masterMacIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverMac/masterMacIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_increment_inter_entity $v }
  method _g_./ptpRangeOverMac/masterMacIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_increment_inter_entity }
  
  option -ptp_range_over_mac_communication_mode \
    -configuremethod _c_./ptpRangeOverMac/communicationMode \
    -cgetmethod _g_./ptpRangeOverMac/communicationMode \
    -readonly false
  method _c_./ptpRangeOverMac/communicationMode {t v} { $self _configure_relative ./ptpRangeOverMac -communication_mode $v }
  method _g_./ptpRangeOverMac/communicationMode {t} { $self _cget_relative ./ptpRangeOverMac -communication_mode }
  # multiplier 
  method _m_ptp_range_over_mac_communication_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_communication_mode }
  
  option -ptp_range_over_mac_send_announce_multicast \
    -configuremethod _c_./ptpRangeOverMac/sendAnnounceMulticast \
    -cgetmethod _g_./ptpRangeOverMac/sendAnnounceMulticast \
    -readonly false
  method _c_./ptpRangeOverMac/sendAnnounceMulticast {t v} { $self _configure_relative ./ptpRangeOverMac -send_announce_multicast $v }
  method _g_./ptpRangeOverMac/sendAnnounceMulticast {t} { $self _cget_relative ./ptpRangeOverMac -send_announce_multicast }
  option -ptp_range_over_mac_follow_up_delay \
    -configuremethod _c_./ptpRangeOverMac/followUpDelay \
    -cgetmethod _g_./ptpRangeOverMac/followUpDelay \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDelay {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_delay $v }
  method _g_./ptpRangeOverMac/followUpDelay {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_delay }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_delay }
  
  option -ptp_range_over_mac_domain \
    -configuremethod _c_./ptpRangeOverMac/domain \
    -cgetmethod _g_./ptpRangeOverMac/domain \
    -readonly false
  method _c_./ptpRangeOverMac/domain {t v} { $self _configure_relative ./ptpRangeOverMac -domain $v }
  method _g_./ptpRangeOverMac/domain {t} { $self _cget_relative ./ptpRangeOverMac -domain }
  # multiplier 
  method _m_ptp_range_over_mac_domain {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_domain }
  
  option -ptp_range_over_mac_announce_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/announceDropRate \
    -cgetmethod _g_./ptpRangeOverMac/announceDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/announceDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -announce_drop_rate $v }
  method _g_./ptpRangeOverMac/announceDropRate {t} { $self _cget_relative ./ptpRangeOverMac -announce_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_announce_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_announce_drop_rate }
  
  option -ptp_range_over_mac_client_ip_increment_by \
    -configuremethod _c_./ptpRangeOverMac/clientIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/clientIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/clientIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -client_ip_increment_by $v }
  method _g_./ptpRangeOverMac/clientIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -client_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_client_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_ip_increment_by }
  
  option -ptp_range_over_mac_renewal_invited \
    -configuremethod _c_./ptpRangeOverMac/renewalInvited \
    -cgetmethod _g_./ptpRangeOverMac/renewalInvited \
    -readonly false
  method _c_./ptpRangeOverMac/renewalInvited {t v} { $self _configure_relative ./ptpRangeOverMac -renewal_invited $v }
  method _g_./ptpRangeOverMac/renewalInvited {t} { $self _cget_relative ./ptpRangeOverMac -renewal_invited }
  option -ptp_range_over_mac_port_number_increment \
    -configuremethod _c_./ptpRangeOverMac/portNumberIncrement \
    -cgetmethod _g_./ptpRangeOverMac/portNumberIncrement \
    -readonly false
  method _c_./ptpRangeOverMac/portNumberIncrement {t v} { $self _configure_relative ./ptpRangeOverMac -port_number_increment $v }
  method _g_./ptpRangeOverMac/portNumberIncrement {t} { $self _cget_relative ./ptpRangeOverMac -port_number_increment }
  # multiplier 
  method _m_ptp_range_over_mac_port_number_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_port_number_increment }
  
  option -ptp_range_over_mac_use_clock_identity \
    -configuremethod _c_./ptpRangeOverMac/useClockIdentity \
    -cgetmethod _g_./ptpRangeOverMac/useClockIdentity \
    -readonly false
  method _c_./ptpRangeOverMac/useClockIdentity {t v} { $self _configure_relative ./ptpRangeOverMac -use_clock_identity $v }
  method _g_./ptpRangeOverMac/useClockIdentity {t} { $self _cget_relative ./ptpRangeOverMac -use_clock_identity }
  option -ptp_range_over_mac_priority1 \
    -configuremethod _c_./ptpRangeOverMac/priority1 \
    -cgetmethod _g_./ptpRangeOverMac/priority1 \
    -readonly false
  method _c_./ptpRangeOverMac/priority1 {t v} { $self _configure_relative ./ptpRangeOverMac -priority1 $v }
  method _g_./ptpRangeOverMac/priority1 {t} { $self _cget_relative ./ptpRangeOverMac -priority1 }
  # multiplier 
  method _m_ptp_range_over_mac_priority1 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_priority1 }
  
  option -ptp_range_over_mac_use_alternate_master_flag \
    -configuremethod _c_./ptpRangeOverMac/useAlternateMasterFlag \
    -cgetmethod _g_./ptpRangeOverMac/useAlternateMasterFlag \
    -readonly false
  method _c_./ptpRangeOverMac/useAlternateMasterFlag {t v} { $self _configure_relative ./ptpRangeOverMac -use_alternate_master_flag $v }
  method _g_./ptpRangeOverMac/useAlternateMasterFlag {t} { $self _cget_relative ./ptpRangeOverMac -use_alternate_master_flag }
  option -ptp_range_over_mac_object_id \
    -configuremethod _c_./ptpRangeOverMac/objectId \
    -cgetmethod _g_./ptpRangeOverMac/objectId \
    -readonly false
  method _c_./ptpRangeOverMac/objectId {t v} { $self _configure_relative ./ptpRangeOverMac -object_id $v }
  method _g_./ptpRangeOverMac/objectId {t} { $self _cget_relative ./ptpRangeOverMac -object_id }
  # multiplier 
  method _m_ptp_range_over_mac_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_object_id }
  
  option -ptp_range_over_mac_delay_resp_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/delayRespReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/delayRespReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/delayRespReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -delay_resp_receipt_timeout $v }
  method _g_./ptpRangeOverMac/delayRespReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -delay_resp_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_delay_resp_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_resp_receipt_timeout }
  
  option -ptp_range_over_mac_announce_frequency_traceable \
    -configuremethod _c_./ptpRangeOverMac/announceFrequencyTraceable \
    -cgetmethod _g_./ptpRangeOverMac/announceFrequencyTraceable \
    -readonly false
  method _c_./ptpRangeOverMac/announceFrequencyTraceable {t v} { $self _configure_relative ./ptpRangeOverMac -announce_frequency_traceable $v }
  method _g_./ptpRangeOverMac/announceFrequencyTraceable {t} { $self _cget_relative ./ptpRangeOverMac -announce_frequency_traceable }
  option -ptp_range_over_mac_priority2 \
    -configuremethod _c_./ptpRangeOverMac/priority2 \
    -cgetmethod _g_./ptpRangeOverMac/priority2 \
    -readonly false
  method _c_./ptpRangeOverMac/priority2 {t v} { $self _configure_relative ./ptpRangeOverMac -priority2 $v }
  method _g_./ptpRangeOverMac/priority2 {t} { $self _cget_relative ./ptpRangeOverMac -priority2 }
  # multiplier 
  method _m_ptp_range_over_mac_priority2 {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_priority2 }
  
  option -ptp_range_over_mac_announce_current_utc_offset_valid \
    -configuremethod _c_./ptpRangeOverMac/announceCurrentUtcOffsetValid \
    -cgetmethod _g_./ptpRangeOverMac/announceCurrentUtcOffsetValid \
    -readonly false
  method _c_./ptpRangeOverMac/announceCurrentUtcOffsetValid {t v} { $self _configure_relative ./ptpRangeOverMac -announce_current_utc_offset_valid $v }
  method _g_./ptpRangeOverMac/announceCurrentUtcOffsetValid {t} { $self _cget_relative ./ptpRangeOverMac -announce_current_utc_offset_valid }
  option -ptp_range_over_mac_client_mac_address \
    -configuremethod _c_./ptpRangeOverMac/clientMacAddress \
    -cgetmethod _g_./ptpRangeOverMac/clientMacAddress \
    -readonly false
  method _c_./ptpRangeOverMac/clientMacAddress {t v} { $self _configure_relative ./ptpRangeOverMac -client_mac_address $v }
  method _g_./ptpRangeOverMac/clientMacAddress {t} { $self _cget_relative ./ptpRangeOverMac -client_mac_address }
  # multiplier 
  method _m_ptp_range_over_mac_client_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_mac_address }
  
  option -ptp_range_over_mac_time_source \
    -configuremethod _c_./ptpRangeOverMac/timeSource \
    -cgetmethod _g_./ptpRangeOverMac/timeSource \
    -readonly false
  method _c_./ptpRangeOverMac/timeSource {t v} { $self _configure_relative ./ptpRangeOverMac -time_source $v }
  method _g_./ptpRangeOverMac/timeSource {t} { $self _cget_relative ./ptpRangeOverMac -time_source }
  # multiplier 
  method _m_ptp_range_over_mac_time_source {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_time_source }
  
  option -ptp_range_over_mac_steps_removed \
    -configuremethod _c_./ptpRangeOverMac/stepsRemoved \
    -cgetmethod _g_./ptpRangeOverMac/stepsRemoved \
    -readonly false
  method _c_./ptpRangeOverMac/stepsRemoved {t v} { $self _configure_relative ./ptpRangeOverMac -steps_removed $v }
  method _g_./ptpRangeOverMac/stepsRemoved {t} { $self _cget_relative ./ptpRangeOverMac -steps_removed }
  # multiplier 
  method _m_ptp_range_over_mac_steps_removed {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_steps_removed }
  
  option -ptp_range_over_mac_clock_class \
    -configuremethod _c_./ptpRangeOverMac/clockClass \
    -cgetmethod _g_./ptpRangeOverMac/clockClass \
    -readonly false
  method _c_./ptpRangeOverMac/clockClass {t v} { $self _configure_relative ./ptpRangeOverMac -clock_class $v }
  method _g_./ptpRangeOverMac/clockClass {t} { $self _cget_relative ./ptpRangeOverMac -clock_class }
  # multiplier 
  method _m_ptp_range_over_mac_clock_class {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_class }
  
  option -ptp_range_over_mac_request_attempts \
    -configuremethod _c_./ptpRangeOverMac/requestAttempts \
    -cgetmethod _g_./ptpRangeOverMac/requestAttempts \
    -readonly false
  method _c_./ptpRangeOverMac/requestAttempts {t v} { $self _configure_relative ./ptpRangeOverMac -request_attempts $v }
  method _g_./ptpRangeOverMac/requestAttempts {t} { $self _cget_relative ./ptpRangeOverMac -request_attempts }
  # multiplier 
  method _m_ptp_range_over_mac_request_attempts {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_attempts }
  
  option -ptp_range_over_mac_follow_up_bad_crc_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpBadCrcRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpBadCrcRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpBadCrcRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_bad_crc_rate $v }
  method _g_./ptpRangeOverMac/followUpBadCrcRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_bad_crc_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_bad_crc_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_bad_crc_rate }
  
  option -ptp_range_over_mac_delay_response_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverMac/delayResponseDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverMac/delayResponseDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverMac/delayResponseDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverMac -delay_response_delay_insertion_rate $v }
  method _g_./ptpRangeOverMac/delayResponseDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverMac -delay_response_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_mac_delay_response_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_response_delay_insertion_rate }
  
  option -ptp_range_over_mac_log_sync_interval \
    -configuremethod _c_./ptpRangeOverMac/logSyncInterval \
    -cgetmethod _g_./ptpRangeOverMac/logSyncInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logSyncInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_sync_interval $v }
  method _g_./ptpRangeOverMac/logSyncInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_sync_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_sync_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_sync_interval }
  
  option -ptp_range_over_mac_master_count \
    -configuremethod _c_./ptpRangeOverMac/masterCount \
    -cgetmethod _g_./ptpRangeOverMac/masterCount \
    -readonly false
  method _c_./ptpRangeOverMac/masterCount {t v} { $self _configure_relative ./ptpRangeOverMac -master_count $v }
  method _g_./ptpRangeOverMac/masterCount {t} { $self _cget_relative ./ptpRangeOverMac -master_count }
  # multiplier 
  method _m_ptp_range_over_mac_master_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_count }
  
  option -ptp_range_over_mac_residence_time \
    -configuremethod _c_./ptpRangeOverMac/residenceTime \
    -cgetmethod _g_./ptpRangeOverMac/residenceTime \
    -readonly false
  method _c_./ptpRangeOverMac/residenceTime {t v} { $self _configure_relative ./ptpRangeOverMac -residence_time $v }
  method _g_./ptpRangeOverMac/residenceTime {t} { $self _cget_relative ./ptpRangeOverMac -residence_time }
  # multiplier 
  method _m_ptp_range_over_mac_residence_time {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_residence_time }
  
  option -ptp_range_over_mac_signal_interval \
    -configuremethod _c_./ptpRangeOverMac/signalInterval \
    -cgetmethod _g_./ptpRangeOverMac/signalInterval \
    -readonly false
  method _c_./ptpRangeOverMac/signalInterval {t v} { $self _configure_relative ./ptpRangeOverMac -signal_interval $v }
  method _g_./ptpRangeOverMac/signalInterval {t} { $self _cget_relative ./ptpRangeOverMac -signal_interval }
  # multiplier 
  method _m_ptp_range_over_mac_signal_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_signal_interval }
  
  option -ptp_range_over_mac_delay_mechanism \
    -configuremethod _c_./ptpRangeOverMac/delayMechanism \
    -cgetmethod _g_./ptpRangeOverMac/delayMechanism \
    -readonly false
  method _c_./ptpRangeOverMac/delayMechanism {t v} { $self _configure_relative ./ptpRangeOverMac -delay_mechanism $v }
  method _g_./ptpRangeOverMac/delayMechanism {t} { $self _cget_relative ./ptpRangeOverMac -delay_mechanism }
  # multiplier 
  method _m_ptp_range_over_mac_delay_mechanism {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_mechanism }
  
  option -ptp_range_over_mac_strict_grant \
    -configuremethod _c_./ptpRangeOverMac/strictGrant \
    -cgetmethod _g_./ptpRangeOverMac/strictGrant \
    -readonly false
  method _c_./ptpRangeOverMac/strictGrant {t v} { $self _configure_relative ./ptpRangeOverMac -strict_grant $v }
  method _g_./ptpRangeOverMac/strictGrant {t} { $self _cget_relative ./ptpRangeOverMac -strict_grant }
  option -ptp_range_over_mac_sync_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/syncDropRate \
    -cgetmethod _g_./ptpRangeOverMac/syncDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/syncDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -sync_drop_rate $v }
  method _g_./ptpRangeOverMac/syncDropRate {t} { $self _cget_relative ./ptpRangeOverMac -sync_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_sync_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_sync_drop_rate }
  
  option -ptp_range_over_mac_drop_signal_req_sync \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqSync \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqSync \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqSync {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_sync $v }
  method _g_./ptpRangeOverMac/dropSignalReqSync {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_sync }
  option -ptp_range_over_mac_clock_increment \
    -configuremethod _c_./ptpRangeOverMac/clockIncrement \
    -cgetmethod _g_./ptpRangeOverMac/clockIncrement \
    -readonly false
  method _c_./ptpRangeOverMac/clockIncrement {t v} { $self _configure_relative ./ptpRangeOverMac -clock_increment $v }
  method _g_./ptpRangeOverMac/clockIncrement {t} { $self _cget_relative ./ptpRangeOverMac -clock_increment }
  # multiplier 
  method _m_ptp_range_over_mac_clock_increment {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_increment }
  
  option -ptp_range_over_mac_announce_ptp_timescale \
    -configuremethod _c_./ptpRangeOverMac/announcePtpTimescale \
    -cgetmethod _g_./ptpRangeOverMac/announcePtpTimescale \
    -readonly false
  method _c_./ptpRangeOverMac/announcePtpTimescale {t v} { $self _configure_relative ./ptpRangeOverMac -announce_ptp_timescale $v }
  method _g_./ptpRangeOverMac/announcePtpTimescale {t} { $self _cget_relative ./ptpRangeOverMac -announce_ptp_timescale }
  option -ptp_range_over_mac_signal_unicast_handling \
    -configuremethod _c_./ptpRangeOverMac/signalUnicastHandling \
    -cgetmethod _g_./ptpRangeOverMac/signalUnicastHandling \
    -readonly false
  method _c_./ptpRangeOverMac/signalUnicastHandling {t v} { $self _configure_relative ./ptpRangeOverMac -signal_unicast_handling $v }
  method _g_./ptpRangeOverMac/signalUnicastHandling {t} { $self _cget_relative ./ptpRangeOverMac -signal_unicast_handling }
  # multiplier 
  method _m_ptp_range_over_mac_signal_unicast_handling {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_signal_unicast_handling }
  
  option -ptp_range_over_mac_enabled \
    -configuremethod _c_./ptpRangeOverMac/enabled \
    -cgetmethod _g_./ptpRangeOverMac/enabled \
    -readonly false
  method _c_./ptpRangeOverMac/enabled {t v} { $self _configure_relative ./ptpRangeOverMac -enabled $v }
  method _g_./ptpRangeOverMac/enabled {t} { $self _cget_relative ./ptpRangeOverMac -enabled }
  option -ptp_range_over_mac_timestamp_offset \
    -configuremethod _c_./ptpRangeOverMac/timestampOffset \
    -cgetmethod _g_./ptpRangeOverMac/timestampOffset \
    -readonly false
  method _c_./ptpRangeOverMac/timestampOffset {t v} { $self _configure_relative ./ptpRangeOverMac -timestamp_offset $v }
  method _g_./ptpRangeOverMac/timestampOffset {t} { $self _cget_relative ./ptpRangeOverMac -timestamp_offset }
  # multiplier 
  method _m_ptp_range_over_mac_timestamp_offset {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_timestamp_offset }
  
  option -ptp_range_over_mac_master_ip_increment_by \
    -configuremethod _c_./ptpRangeOverMac/masterIpIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/masterIpIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_increment_by $v }
  method _g_./ptpRangeOverMac/masterIpIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_increment_by }
  
  option -ptp_range_over_mac_request_interval \
    -configuremethod _c_./ptpRangeOverMac/requestInterval \
    -cgetmethod _g_./ptpRangeOverMac/requestInterval \
    -readonly false
  method _c_./ptpRangeOverMac/requestInterval {t v} { $self _configure_relative ./ptpRangeOverMac -request_interval $v }
  method _g_./ptpRangeOverMac/requestInterval {t} { $self _cget_relative ./ptpRangeOverMac -request_interval }
  # multiplier 
  method _m_ptp_range_over_mac_request_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_interval }
  
  option -ptp_range_over_mac_ip_tos \
    -configuremethod _c_./ptpRangeOverMac/ipTos \
    -cgetmethod _g_./ptpRangeOverMac/ipTos \
    -readonly false
  method _c_./ptpRangeOverMac/ipTos {t v} { $self _configure_relative ./ptpRangeOverMac -ip_tos $v }
  method _g_./ptpRangeOverMac/ipTos {t} { $self _cget_relative ./ptpRangeOverMac -ip_tos }
  # multiplier 
  method _m_ptp_range_over_mac_ip_tos {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_ip_tos }
  
  option -ptp_range_over_mac_request_holddown \
    -configuremethod _c_./ptpRangeOverMac/requestHolddown \
    -cgetmethod _g_./ptpRangeOverMac/requestHolddown \
    -readonly false
  method _c_./ptpRangeOverMac/requestHolddown {t v} { $self _configure_relative ./ptpRangeOverMac -request_holddown $v }
  method _g_./ptpRangeOverMac/requestHolddown {t} { $self _cget_relative ./ptpRangeOverMac -request_holddown }
  # multiplier 
  method _m_ptp_range_over_mac_request_holddown {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_request_holddown }
  
  option -ptp_range_over_mac_client_mac_increment_by \
    -configuremethod _c_./ptpRangeOverMac/clientMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/clientMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/clientMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -client_mac_increment_by $v }
  method _g_./ptpRangeOverMac/clientMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -client_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_client_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_mac_increment_by }
  
  option -ptp_range_over_mac_name \
    -configuremethod _c_./ptpRangeOverMac/name \
    -cgetmethod _g_./ptpRangeOverMac/name \
    -readonly false
  method _c_./ptpRangeOverMac/name {t v} { $self _configure_relative ./ptpRangeOverMac -name $v }
  method _g_./ptpRangeOverMac/name {t} { $self _cget_relative ./ptpRangeOverMac -name }
  # multiplier 
  method _m_ptp_range_over_mac_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_name }
  
  option -ptp_range_over_mac_drop_signal_req_announce \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqAnnounce \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqAnnounce \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqAnnounce {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_announce $v }
  method _g_./ptpRangeOverMac/dropSignalReqAnnounce {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_announce }
  option -ptp_range_over_mac_master_ip_address \
    -configuremethod _c_./ptpRangeOverMac/masterIpAddress \
    -cgetmethod _g_./ptpRangeOverMac/masterIpAddress \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpAddress {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_address $v }
  method _g_./ptpRangeOverMac/masterIpAddress {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_address }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_address }
  
  option -ptp_range_over_mac_first_clock \
    -configuremethod _c_./ptpRangeOverMac/firstClock \
    -cgetmethod _g_./ptpRangeOverMac/firstClock \
    -readonly false
  method _c_./ptpRangeOverMac/firstClock {t v} { $self _configure_relative ./ptpRangeOverMac -first_clock $v }
  method _g_./ptpRangeOverMac/firstClock {t} { $self _cget_relative ./ptpRangeOverMac -first_clock }
  # multiplier 
  method _m_ptp_range_over_mac_first_clock {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_first_clock }
  
  option -ptp_range_over_mac_master_mac_increment_by \
    -configuremethod _c_./ptpRangeOverMac/masterMacIncrementBy \
    -cgetmethod _g_./ptpRangeOverMac/masterMacIncrementBy \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacIncrementBy {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_increment_by $v }
  method _g_./ptpRangeOverMac/masterMacIncrementBy {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_increment_by }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_increment_by }
  
  option -ptp_range_over_mac_send_cancel_tlv \
    -configuremethod _c_./ptpRangeOverMac/sendCancelTlv \
    -cgetmethod _g_./ptpRangeOverMac/sendCancelTlv \
    -readonly false
  method _c_./ptpRangeOverMac/sendCancelTlv {t v} { $self _configure_relative ./ptpRangeOverMac -send_cancel_tlv $v }
  method _g_./ptpRangeOverMac/sendCancelTlv {t} { $self _cget_relative ./ptpRangeOverMac -send_cancel_tlv }
  option -ptp_range_over_mac_port_number \
    -configuremethod _c_./ptpRangeOverMac/portNumber \
    -cgetmethod _g_./ptpRangeOverMac/portNumber \
    -readonly false
  method _c_./ptpRangeOverMac/portNumber {t v} { $self _configure_relative ./ptpRangeOverMac -port_number $v }
  method _g_./ptpRangeOverMac/portNumber {t} { $self _cget_relative ./ptpRangeOverMac -port_number }
  # multiplier 
  method _m_ptp_range_over_mac_port_number {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_port_number }
  
  option -ptp_range_over_mac_client_ip_address \
    -configuremethod _c_./ptpRangeOverMac/clientIpAddress \
    -cgetmethod _g_./ptpRangeOverMac/clientIpAddress \
    -readonly false
  method _c_./ptpRangeOverMac/clientIpAddress {t v} { $self _configure_relative ./ptpRangeOverMac -client_ip_address $v }
  method _g_./ptpRangeOverMac/clientIpAddress {t} { $self _cget_relative ./ptpRangeOverMac -client_ip_address }
  # multiplier 
  method _m_ptp_range_over_mac_client_ip_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_ip_address }
  
  option -ptp_range_over_mac_announce_leap59 \
    -configuremethod _c_./ptpRangeOverMac/announceLeap59 \
    -cgetmethod _g_./ptpRangeOverMac/announceLeap59 \
    -readonly false
  method _c_./ptpRangeOverMac/announceLeap59 {t v} { $self _configure_relative ./ptpRangeOverMac -announce_leap59 $v }
  method _g_./ptpRangeOverMac/announceLeap59 {t} { $self _cget_relative ./ptpRangeOverMac -announce_leap59 }
  option -ptp_range_over_mac_send_announce_tlv \
    -configuremethod _c_./ptpRangeOverMac/sendAnnounceTlv \
    -cgetmethod _g_./ptpRangeOverMac/sendAnnounceTlv \
    -readonly false
  method _c_./ptpRangeOverMac/sendAnnounceTlv {t v} { $self _configure_relative ./ptpRangeOverMac -send_announce_tlv $v }
  method _g_./ptpRangeOverMac/sendAnnounceTlv {t} { $self _cget_relative ./ptpRangeOverMac -send_announce_tlv }
  option -ptp_range_over_mac_sync_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/syncReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/syncReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/syncReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -sync_receipt_timeout $v }
  method _g_./ptpRangeOverMac/syncReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -sync_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_sync_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_sync_receipt_timeout }
  
  option -ptp_range_over_mac_announce_leap61 \
    -configuremethod _c_./ptpRangeOverMac/announceLeap61 \
    -cgetmethod _g_./ptpRangeOverMac/announceLeap61 \
    -readonly false
  method _c_./ptpRangeOverMac/announceLeap61 {t v} { $self _configure_relative ./ptpRangeOverMac -announce_leap61 $v }
  method _g_./ptpRangeOverMac/announceLeap61 {t} { $self _cget_relative ./ptpRangeOverMac -announce_leap61 }
  option -ptp_range_over_mac_grant_delay_resp_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantDelayRespDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantDelayRespDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantDelayRespDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_delay_resp_duration_interval $v }
  method _g_./ptpRangeOverMac/grantDelayRespDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_delay_resp_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_delay_resp_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_delay_resp_duration_interval }
  
  option -ptp_range_over_mac_timestamp_offset_variation \
    -configuremethod _c_./ptpRangeOverMac/timestampOffsetVariation \
    -cgetmethod _g_./ptpRangeOverMac/timestampOffsetVariation \
    -readonly false
  method _c_./ptpRangeOverMac/timestampOffsetVariation {t v} { $self _configure_relative ./ptpRangeOverMac -timestamp_offset_variation $v }
  method _g_./ptpRangeOverMac/timestampOffsetVariation {t} { $self _cget_relative ./ptpRangeOverMac -timestamp_offset_variation }
  # multiplier 
  method _m_ptp_range_over_mac_timestamp_offset_variation {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_timestamp_offset_variation }
  
  option -ptp_range_over_mac_follow_up_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpDropRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_drop_rate $v }
  method _g_./ptpRangeOverMac/followUpDropRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_drop_rate }
  
  option -ptp_range_over_mac_master_mac_address \
    -configuremethod _c_./ptpRangeOverMac/masterMacAddress \
    -cgetmethod _g_./ptpRangeOverMac/masterMacAddress \
    -readonly false
  method _c_./ptpRangeOverMac/masterMacAddress {t v} { $self _configure_relative ./ptpRangeOverMac -master_mac_address $v }
  method _g_./ptpRangeOverMac/masterMacAddress {t} { $self _cget_relative ./ptpRangeOverMac -master_mac_address }
  # multiplier 
  method _m_ptp_range_over_mac_master_mac_address {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_mac_address }
  
  option -ptp_range_over_mac_drop_signal_req_delay_resp \
    -configuremethod _c_./ptpRangeOverMac/dropSignalReqDelayResp \
    -cgetmethod _g_./ptpRangeOverMac/dropSignalReqDelayResp \
    -readonly false
  method _c_./ptpRangeOverMac/dropSignalReqDelayResp {t v} { $self _configure_relative ./ptpRangeOverMac -drop_signal_req_delay_resp $v }
  method _g_./ptpRangeOverMac/dropSignalReqDelayResp {t} { $self _cget_relative ./ptpRangeOverMac -drop_signal_req_delay_resp }
  option -ptp_range_over_mac_grant_sync_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantSyncDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantSyncDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantSyncDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_sync_duration_interval $v }
  method _g_./ptpRangeOverMac/grantSyncDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_sync_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_sync_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_sync_duration_interval }
  
  option -ptp_range_over_mac_learn_port_id \
    -configuremethod _c_./ptpRangeOverMac/learnPortId \
    -cgetmethod _g_./ptpRangeOverMac/learnPortId \
    -readonly false
  method _c_./ptpRangeOverMac/learnPortId {t v} { $self _configure_relative ./ptpRangeOverMac -learn_port_id $v }
  method _g_./ptpRangeOverMac/learnPortId {t} { $self _cget_relative ./ptpRangeOverMac -learn_port_id }
  option -ptp_range_over_mac_delay_response_delay \
    -configuremethod _c_./ptpRangeOverMac/delayResponseDelay \
    -cgetmethod _g_./ptpRangeOverMac/delayResponseDelay \
    -readonly false
  method _c_./ptpRangeOverMac/delayResponseDelay {t v} { $self _configure_relative ./ptpRangeOverMac -delay_response_delay $v }
  method _g_./ptpRangeOverMac/delayResponseDelay {t} { $self _cget_relative ./ptpRangeOverMac -delay_response_delay }
  # multiplier 
  method _m_ptp_range_over_mac_delay_response_delay {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_response_delay }
  
  option -ptp_range_over_mac_grant_unicast_duration_interval \
    -configuremethod _c_./ptpRangeOverMac/grantUnicastDurationInterval \
    -cgetmethod _g_./ptpRangeOverMac/grantUnicastDurationInterval \
    -readonly false
  method _c_./ptpRangeOverMac/grantUnicastDurationInterval {t v} { $self _configure_relative ./ptpRangeOverMac -grant_unicast_duration_interval $v }
  method _g_./ptpRangeOverMac/grantUnicastDurationInterval {t} { $self _cget_relative ./ptpRangeOverMac -grant_unicast_duration_interval }
  # multiplier 
  method _m_ptp_range_over_mac_grant_unicast_duration_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_grant_unicast_duration_interval }
  
  option -ptp_range_over_mac_follow_up_delay_insertion_rate \
    -configuremethod _c_./ptpRangeOverMac/followUpDelayInsertionRate \
    -cgetmethod _g_./ptpRangeOverMac/followUpDelayInsertionRate \
    -readonly false
  method _c_./ptpRangeOverMac/followUpDelayInsertionRate {t v} { $self _configure_relative ./ptpRangeOverMac -follow_up_delay_insertion_rate $v }
  method _g_./ptpRangeOverMac/followUpDelayInsertionRate {t} { $self _cget_relative ./ptpRangeOverMac -follow_up_delay_insertion_rate }
  # multiplier 
  method _m_ptp_range_over_mac_follow_up_delay_insertion_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_follow_up_delay_insertion_rate }
  
  option -ptp_range_over_mac_log_delay_req_interval \
    -configuremethod _c_./ptpRangeOverMac/logDelayReqInterval \
    -cgetmethod _g_./ptpRangeOverMac/logDelayReqInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logDelayReqInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_delay_req_interval $v }
  method _g_./ptpRangeOverMac/logDelayReqInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_delay_req_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_delay_req_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_delay_req_interval }
  
  option -ptp_range_over_mac_clock_accuracy \
    -configuremethod _c_./ptpRangeOverMac/clockAccuracy \
    -cgetmethod _g_./ptpRangeOverMac/clockAccuracy \
    -readonly false
  method _c_./ptpRangeOverMac/clockAccuracy {t v} { $self _configure_relative ./ptpRangeOverMac -clock_accuracy $v }
  method _g_./ptpRangeOverMac/clockAccuracy {t} { $self _cget_relative ./ptpRangeOverMac -clock_accuracy }
  # multiplier 
  method _m_ptp_range_over_mac_clock_accuracy {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_clock_accuracy }
  
  option -ptp_range_over_mac_client_count \
    -configuremethod _c_./ptpRangeOverMac/clientCount \
    -cgetmethod _g_./ptpRangeOverMac/clientCount \
    -readonly false
  method _c_./ptpRangeOverMac/clientCount {t v} { $self _configure_relative ./ptpRangeOverMac -client_count $v }
  method _g_./ptpRangeOverMac/clientCount {t} { $self _cget_relative ./ptpRangeOverMac -client_count }
  # multiplier 
  method _m_ptp_range_over_mac_client_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_client_count }
  
  option -ptp_range_over_mac_announce_time_traceable \
    -configuremethod _c_./ptpRangeOverMac/announceTimeTraceable \
    -cgetmethod _g_./ptpRangeOverMac/announceTimeTraceable \
    -readonly false
  method _c_./ptpRangeOverMac/announceTimeTraceable {t v} { $self _configure_relative ./ptpRangeOverMac -announce_time_traceable $v }
  method _g_./ptpRangeOverMac/announceTimeTraceable {t} { $self _cget_relative ./ptpRangeOverMac -announce_time_traceable }
  option -ptp_range_over_mac_step_mode \
    -configuremethod _c_./ptpRangeOverMac/stepMode \
    -cgetmethod _g_./ptpRangeOverMac/stepMode \
    -readonly false
  method _c_./ptpRangeOverMac/stepMode {t v} { $self _configure_relative ./ptpRangeOverMac -step_mode $v }
  method _g_./ptpRangeOverMac/stepMode {t} { $self _cget_relative ./ptpRangeOverMac -step_mode }
  # multiplier 
  method _m_ptp_range_over_mac_step_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_step_mode }
  
  option -ptp_range_over_mac_master_ip_increment_inter_entity \
    -configuremethod _c_./ptpRangeOverMac/masterIpIncrementInterEntity \
    -cgetmethod _g_./ptpRangeOverMac/masterIpIncrementInterEntity \
    -readonly false
  method _c_./ptpRangeOverMac/masterIpIncrementInterEntity {t v} { $self _configure_relative ./ptpRangeOverMac -master_ip_increment_inter_entity $v }
  method _g_./ptpRangeOverMac/masterIpIncrementInterEntity {t} { $self _cget_relative ./ptpRangeOverMac -master_ip_increment_inter_entity }
  # multiplier 
  method _m_ptp_range_over_mac_master_ip_increment_inter_entity {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -ptp_range_over_mac_master_ip_increment_inter_entity }
  
  option -ptp_range_over_mac_delay_resp_drop_rate \
    -configuremethod _c_./ptpRangeOverMac/delayRespDropRate \
    -cgetmethod _g_./ptpRangeOverMac/delayRespDropRate \
    -readonly false
  method _c_./ptpRangeOverMac/delayRespDropRate {t v} { $self _configure_relative ./ptpRangeOverMac -delay_resp_drop_rate $v }
  method _g_./ptpRangeOverMac/delayRespDropRate {t} { $self _cget_relative ./ptpRangeOverMac -delay_resp_drop_rate }
  # multiplier 
  method _m_ptp_range_over_mac_delay_resp_drop_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_delay_resp_drop_rate }
  
  option -ptp_range_over_mac_announce_receipt_timeout \
    -configuremethod _c_./ptpRangeOverMac/announceReceiptTimeout \
    -cgetmethod _g_./ptpRangeOverMac/announceReceiptTimeout \
    -readonly false
  method _c_./ptpRangeOverMac/announceReceiptTimeout {t v} { $self _configure_relative ./ptpRangeOverMac -announce_receipt_timeout $v }
  method _g_./ptpRangeOverMac/announceReceiptTimeout {t} { $self _cget_relative ./ptpRangeOverMac -announce_receipt_timeout }
  # multiplier 
  method _m_ptp_range_over_mac_announce_receipt_timeout {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_announce_receipt_timeout }
  
  option -ptp_range_over_mac_rx_calibration \
    -configuremethod _c_./ptpRangeOverMac/rxCalibration \
    -cgetmethod _g_./ptpRangeOverMac/rxCalibration \
    -readonly false
  method _c_./ptpRangeOverMac/rxCalibration {t v} { $self _configure_relative ./ptpRangeOverMac -rx_calibration $v }
  method _g_./ptpRangeOverMac/rxCalibration {t} { $self _cget_relative ./ptpRangeOverMac -rx_calibration }
  # multiplier 
  method _m_ptp_range_over_mac_rx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_rx_calibration }
  
  option -ptp_range_over_mac_tx_calibration \
    -configuremethod _c_./ptpRangeOverMac/txCalibration \
    -cgetmethod _g_./ptpRangeOverMac/txCalibration \
    -readonly false
  method _c_./ptpRangeOverMac/txCalibration {t v} { $self _configure_relative ./ptpRangeOverMac -tx_calibration $v }
  method _g_./ptpRangeOverMac/txCalibration {t} { $self _cget_relative ./ptpRangeOverMac -tx_calibration }
  # multiplier 
  method _m_ptp_range_over_mac_tx_calibration {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_tx_calibration }
  
  option -ptp_range_over_mac_log_announce_interval \
    -configuremethod _c_./ptpRangeOverMac/logAnnounceInterval \
    -cgetmethod _g_./ptpRangeOverMac/logAnnounceInterval \
    -readonly false
  method _c_./ptpRangeOverMac/logAnnounceInterval {t v} { $self _configure_relative ./ptpRangeOverMac -log_announce_interval $v }
  method _g_./ptpRangeOverMac/logAnnounceInterval {t} { $self _cget_relative ./ptpRangeOverMac -log_announce_interval }
  # multiplier 
  method _m_ptp_range_over_mac_log_announce_interval {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -ptp_range_over_mac_log_announce_interval }
  
  option -vlan_range_inner_first_id \
    -configuremethod _c_./vlanRange/innerFirstId \
    -cgetmethod _g_./vlanRange/innerFirstId \
    -readonly false
  method _c_./vlanRange/innerFirstId {t v} { $self _configure_relative ./vlanRange -inner_first_id $v }
  method _g_./vlanRange/innerFirstId {t} { $self _cget_relative ./vlanRange -inner_first_id }
  # multiplier 
  method _m_vlan_range_inner_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_first_id }
  
  option -vlan_range_inner_increment \
    -configuremethod _c_./vlanRange/innerIncrement \
    -cgetmethod _g_./vlanRange/innerIncrement \
    -readonly false
  method _c_./vlanRange/innerIncrement {t v} { $self _configure_relative ./vlanRange -inner_increment $v }
  method _g_./vlanRange/innerIncrement {t} { $self _cget_relative ./vlanRange -inner_increment }
  # multiplier 
  method _m_vlan_range_inner_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment }
  
  option -vlan_range_enabled \
    -configuremethod _c_./vlanRange/enabled \
    -cgetmethod _g_./vlanRange/enabled \
    -readonly false
  method _c_./vlanRange/enabled {t v} { $self _configure_relative ./vlanRange -enabled $v }
  method _g_./vlanRange/enabled {t} { $self _cget_relative ./vlanRange -enabled }
  option -vlan_range_unique_count \
    -configuremethod _c_./vlanRange/uniqueCount \
    -cgetmethod _g_./vlanRange/uniqueCount \
    -readonly false
  method _c_./vlanRange/uniqueCount {t v} { $self _configure_relative ./vlanRange -unique_count $v }
  method _g_./vlanRange/uniqueCount {t} { $self _cget_relative ./vlanRange -unique_count }
  # multiplier 
  method _m_vlan_range_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_unique_count }
  
  option -vlan_range_name \
    -configuremethod _c_./vlanRange/name \
    -cgetmethod _g_./vlanRange/name \
    -readonly false
  method _c_./vlanRange/name {t v} { $self _configure_relative ./vlanRange -name $v }
  method _g_./vlanRange/name {t} { $self _cget_relative ./vlanRange -name }
  # multiplier 
  method _m_vlan_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_name }
  
  option -vlan_range_increment_step \
    -configuremethod _c_./vlanRange/incrementStep \
    -cgetmethod _g_./vlanRange/incrementStep \
    -readonly false
  method _c_./vlanRange/incrementStep {t v} { $self _configure_relative ./vlanRange -increment_step $v }
  method _g_./vlanRange/incrementStep {t} { $self _cget_relative ./vlanRange -increment_step }
  # multiplier 
  method _m_vlan_range_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment_step }
  
  option -vlan_range_tpid \
    -configuremethod _c_./vlanRange/tpid \
    -cgetmethod _g_./vlanRange/tpid \
    -readonly false
  method _c_./vlanRange/tpid {t v} { $self _configure_relative ./vlanRange -tpid $v }
  method _g_./vlanRange/tpid {t} { $self _cget_relative ./vlanRange -tpid }
  # multiplier 
  method _m_vlan_range_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_tpid }
  
  option -vlan_range_priority \
    -configuremethod _c_./vlanRange/priority \
    -cgetmethod _g_./vlanRange/priority \
    -readonly false
  method _c_./vlanRange/priority {t v} { $self _configure_relative ./vlanRange -priority $v }
  method _g_./vlanRange/priority {t} { $self _cget_relative ./vlanRange -priority }
  # multiplier 
  method _m_vlan_range_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_priority }
  
  option -vlan_range_inner_enable \
    -configuremethod _c_./vlanRange/innerEnable \
    -cgetmethod _g_./vlanRange/innerEnable \
    -readonly false
  method _c_./vlanRange/innerEnable {t v} { $self _configure_relative ./vlanRange -inner_enable $v }
  method _g_./vlanRange/innerEnable {t} { $self _cget_relative ./vlanRange -inner_enable }
  option -vlan_range_object_id \
    -configuremethod _c_./vlanRange/objectId \
    -cgetmethod _g_./vlanRange/objectId \
    -readonly false
  method _c_./vlanRange/objectId {t v} { $self _configure_relative ./vlanRange -object_id $v }
  method _g_./vlanRange/objectId {t} { $self _cget_relative ./vlanRange -object_id }
  # multiplier 
  method _m_vlan_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_object_id }
  
  option -vlan_range_inner_unique_count \
    -configuremethod _c_./vlanRange/innerUniqueCount \
    -cgetmethod _g_./vlanRange/innerUniqueCount \
    -readonly false
  method _c_./vlanRange/innerUniqueCount {t v} { $self _configure_relative ./vlanRange -inner_unique_count $v }
  method _g_./vlanRange/innerUniqueCount {t} { $self _cget_relative ./vlanRange -inner_unique_count }
  # multiplier 
  method _m_vlan_range_inner_unique_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_unique_count }
  
  option -vlan_range_inner_tpid \
    -configuremethod _c_./vlanRange/innerTpid \
    -cgetmethod _g_./vlanRange/innerTpid \
    -readonly false
  method _c_./vlanRange/innerTpid {t v} { $self _configure_relative ./vlanRange -inner_tpid $v }
  method _g_./vlanRange/innerTpid {t} { $self _cget_relative ./vlanRange -inner_tpid }
  # multiplier 
  method _m_vlan_range_inner_tpid {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -vlan_range_inner_tpid }
  
  option -vlan_range_first_id \
    -configuremethod _c_./vlanRange/firstId \
    -cgetmethod _g_./vlanRange/firstId \
    -readonly false
  method _c_./vlanRange/firstId {t v} { $self _configure_relative ./vlanRange -first_id $v }
  method _g_./vlanRange/firstId {t} { $self _cget_relative ./vlanRange -first_id }
  # multiplier 
  method _m_vlan_range_first_id {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_first_id }
  
  option -vlan_range_increment \
    -configuremethod _c_./vlanRange/increment \
    -cgetmethod _g_./vlanRange/increment \
    -readonly false
  method _c_./vlanRange/increment {t v} { $self _configure_relative ./vlanRange -increment $v }
  method _g_./vlanRange/increment {t} { $self _cget_relative ./vlanRange -increment }
  # multiplier 
  method _m_vlan_range_increment {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_increment }
  
  option -vlan_range_inner_increment_step \
    -configuremethod _c_./vlanRange/innerIncrementStep \
    -cgetmethod _g_./vlanRange/innerIncrementStep \
    -readonly false
  method _c_./vlanRange/innerIncrementStep {t v} { $self _configure_relative ./vlanRange -inner_increment_step $v }
  method _g_./vlanRange/innerIncrementStep {t} { $self _cget_relative ./vlanRange -inner_increment_step }
  # multiplier 
  method _m_vlan_range_inner_increment_step {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_increment_step }
  
  option -vlan_range_id_incr_mode \
    -configuremethod _c_./vlanRange/idIncrMode \
    -cgetmethod _g_./vlanRange/idIncrMode \
    -readonly false
  method _c_./vlanRange/idIncrMode {t v} { $self _configure_relative ./vlanRange -id_incr_mode $v }
  method _g_./vlanRange/idIncrMode {t} { $self _cget_relative ./vlanRange -id_incr_mode }
  # multiplier 
  method _m_vlan_range_id_incr_mode {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_id_incr_mode }
  
  option -vlan_range_inner_priority \
    -configuremethod _c_./vlanRange/innerPriority \
    -cgetmethod _g_./vlanRange/innerPriority \
    -readonly false
  method _c_./vlanRange/innerPriority {t v} { $self _configure_relative ./vlanRange -inner_priority $v }
  method _g_./vlanRange/innerPriority {t} { $self _cget_relative ./vlanRange -inner_priority }
  # multiplier 
  method _m_vlan_range_inner_priority {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -vlan_range_inner_priority }
  
  option -vlan_range_vlan_id_info \
    -configuremethod _c_./vlanRange/vlanIdInfo \
    -cgetmethod _g_./vlanRange/vlanIdInfo \
    -readonly false
  method _c_./vlanRange/vlanIdInfo {t v} { $self _configure_relative ./vlanRange -vlan_id_info $v }
  method _g_./vlanRange/vlanIdInfo {t} { $self _cget_relative ./vlanRange -vlan_id_info }
  option -mac_range_object_id \
    -configuremethod _c_./macRange/objectId \
    -cgetmethod _g_./macRange/objectId \
    -readonly false
  method _c_./macRange/objectId {t v} { $self _configure_relative ./macRange -object_id $v }
  method _g_./macRange/objectId {t} { $self _cget_relative ./macRange -object_id }
  # multiplier 
  method _m_mac_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_object_id }
  
  option -mac_range_increment_by \
    -configuremethod _c_./macRange/incrementBy \
    -cgetmethod _g_./macRange/incrementBy \
    -readonly false
  method _c_./macRange/incrementBy {t v} { $self _configure_relative ./macRange -increment_by $v }
  method _g_./macRange/incrementBy {t} { $self _cget_relative ./macRange -increment_by }
  # multiplier 
  method _m_mac_range_increment_by {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_increment_by }
  
  option -mac_range_name \
    -configuremethod _c_./macRange/name \
    -cgetmethod _g_./macRange/name \
    -readonly false
  method _c_./macRange/name {t v} { $self _configure_relative ./macRange -name $v }
  method _g_./macRange/name {t} { $self _cget_relative ./macRange -name }
  # multiplier 
  method _m_mac_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_name }
  
  option -mac_range_count \
    -configuremethod _c_./macRange/count \
    -cgetmethod _g_./macRange/count \
    -readonly false
  method _c_./macRange/count {t v} { $self _configure_relative ./macRange -count $v }
  method _g_./macRange/count {t} { $self _cget_relative ./macRange -count }
  # multiplier 
  method _m_mac_range_count {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_count }
  
  option -mac_range_mac \
    -configuremethod _c_./macRange/mac \
    -cgetmethod _g_./macRange/mac \
    -readonly false
  method _c_./macRange/mac {t v} { $self _configure_relative ./macRange -mac $v }
  method _g_./macRange/mac {t} { $self _cget_relative ./macRange -mac }
  # multiplier 
  method _m_mac_range_mac {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -mac_range_mac }
  
  option -mac_range_mtu \
    -configuremethod _c_./macRange/mtu \
    -cgetmethod _g_./macRange/mtu \
    -readonly false
  method _c_./macRange/mtu {t v} { $self _configure_relative ./macRange -mtu $v }
  method _g_./macRange/mtu {t} { $self _cget_relative ./macRange -mtu }
  # multiplier 
  method _m_mac_range_mtu {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -mac_range_mtu }
  
  option -mac_range_enabled \
    -configuremethod _c_./macRange/enabled \
    -cgetmethod _g_./macRange/enabled \
    -readonly false
  method _c_./macRange/enabled {t v} { $self _configure_relative ./macRange -enabled $v }
  method _g_./macRange/enabled {t} { $self _cget_relative ./macRange -enabled }
  option -esmc_range_object_id \
    -configuremethod _c_./esmcRange/objectId \
    -cgetmethod _g_./esmcRange/objectId \
    -readonly false
  method _c_./esmcRange/objectId {t v} { $self _configure_relative ./esmcRange -object_id $v }
  method _g_./esmcRange/objectId {t} { $self _cget_relative ./esmcRange -object_id }
  # multiplier 
  method _m_esmc_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_object_id }
  
  option -esmc_range_rate \
    -configuremethod _c_./esmcRange/rate \
    -cgetmethod _g_./esmcRange/rate \
    -readonly false
  method _c_./esmcRange/rate {t v} { $self _configure_relative ./esmcRange -rate $v }
  method _g_./esmcRange/rate {t} { $self _cget_relative ./esmcRange -rate }
  # multiplier 
  method _m_esmc_range_rate {mog_args m n other_args} {  $Shell _m_kInteger64  $self $mog_args $m $n $other_args -esmc_range_rate }
  
  option -esmc_range_name \
    -configuremethod _c_./esmcRange/name \
    -cgetmethod _g_./esmcRange/name \
    -readonly false
  method _c_./esmcRange/name {t v} { $self _configure_relative ./esmcRange -name $v }
  method _g_./esmcRange/name {t} { $self _cget_relative ./esmcRange -name }
  # multiplier 
  method _m_esmc_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_name }
  
  option -esmc_range_ql \
    -configuremethod _c_./esmcRange/ql \
    -cgetmethod _g_./esmcRange/ql \
    -readonly false
  method _c_./esmcRange/ql {t v} { $self _configure_relative ./esmcRange -ql $v }
  method _g_./esmcRange/ql {t} { $self _cget_relative ./esmcRange -ql }
  # multiplier 
  method _m_esmc_range_ql {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_ql }
  
  option -esmc_range_wait_id \
    -configuremethod _c_./esmcRange/waitId \
    -cgetmethod _g_./esmcRange/waitId \
    -readonly false
  method _c_./esmcRange/waitId {t v} { $self _configure_relative ./esmcRange -wait_id $v }
  method _g_./esmcRange/waitId {t} { $self _cget_relative ./esmcRange -wait_id }
  option -esmc_range_enabled \
    -configuremethod _c_./esmcRange/enabled \
    -cgetmethod _g_./esmcRange/enabled \
    -readonly false
  method _c_./esmcRange/enabled {t v} { $self _configure_relative ./esmcRange -enabled $v }
  method _g_./esmcRange/enabled {t} { $self _cget_relative ./esmcRange -enabled }
  option -esmc_range_flag_mode \
    -configuremethod _c_./esmcRange/flagMode \
    -cgetmethod _g_./esmcRange/flagMode \
    -readonly false
  method _c_./esmcRange/flagMode {t v} { $self _configure_relative ./esmcRange -flag_mode $v }
  method _g_./esmcRange/flagMode {t} { $self _cget_relative ./esmcRange -flag_mode }
  # multiplier 
  method _m_esmc_range_flag_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -esmc_range_flag_mode }
  
  option -dot1x_range_user_password \
    -configuremethod _c_./dot1xRange/userPassword \
    -cgetmethod _g_./dot1xRange/userPassword \
    -readonly false
  method _c_./dot1xRange/userPassword {t v} { $self _configure_relative ./dot1xRange -user_password $v }
  method _g_./dot1xRange/userPassword {t} { $self _cget_relative ./dot1xRange -user_password }
  # multiplier 
  method _m_dot1x_range_user_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_user_password }
  
  option -dot1x_range_nac_sequence \
    -configuremethod _c_./dot1xRange/nacSequence \
    -cgetmethod _g_./dot1xRange/nacSequence \
    -readonly false
  method _c_./dot1xRange/nacSequence {t v} { $self _configure_relative ./dot1xRange -nac_sequence $v }
  method _g_./dot1xRange/nacSequence {t} { $self _cget_relative ./dot1xRange -nac_sequence }
  option -dot1x_range_enabled \
    -configuremethod _c_./dot1xRange/enabled \
    -cgetmethod _g_./dot1xRange/enabled \
    -readonly false
  method _c_./dot1xRange/enabled {t v} { $self _configure_relative ./dot1xRange -enabled $v }
  method _g_./dot1xRange/enabled {t} { $self _cget_relative ./dot1xRange -enabled }
  option -dot1x_range_fast_stateless_resume \
    -configuremethod _c_./dot1xRange/fastStatelessResume \
    -cgetmethod _g_./dot1xRange/fastStatelessResume \
    -readonly false
  method _c_./dot1xRange/fastStatelessResume {t v} { $self _configure_relative ./dot1xRange -fast_stateless_resume $v }
  method _g_./dot1xRange/fastStatelessResume {t} { $self _cget_relative ./dot1xRange -fast_stateless_resume }
  # multiplier 
  method _m_dot1x_range_fast_stateless_resume {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_stateless_resume }
  
  option -dot1x_range_user_name \
    -configuremethod _c_./dot1xRange/userName \
    -cgetmethod _g_./dot1xRange/userName \
    -readonly false
  method _c_./dot1xRange/userName {t v} { $self _configure_relative ./dot1xRange -user_name $v }
  method _g_./dot1xRange/userName {t} { $self _cget_relative ./dot1xRange -user_name }
  # multiplier 
  method _m_dot1x_range_user_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_user_name }
  
  option -dot1x_range_host_password \
    -configuremethod _c_./dot1xRange/hostPassword \
    -cgetmethod _g_./dot1xRange/hostPassword \
    -readonly false
  method _c_./dot1xRange/hostPassword {t v} { $self _configure_relative ./dot1xRange -host_password $v }
  method _g_./dot1xRange/hostPassword {t} { $self _cget_relative ./dot1xRange -host_password }
  # multiplier 
  method _m_dot1x_range_host_password {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_password }
  
  option -dot1x_range_name \
    -configuremethod _c_./dot1xRange/name \
    -cgetmethod _g_./dot1xRange/name \
    -readonly false
  method _c_./dot1xRange/name {t v} { $self _configure_relative ./dot1xRange -name $v }
  method _g_./dot1xRange/name {t} { $self _cget_relative ./dot1xRange -name }
  # multiplier 
  method _m_dot1x_range_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_name }
  
  option -dot1x_range_wait_id \
    -configuremethod _c_./dot1xRange/waitId \
    -cgetmethod _g_./dot1xRange/waitId \
    -readonly false
  method _c_./dot1xRange/waitId {t v} { $self _configure_relative ./dot1xRange -wait_id $v }
  method _g_./dot1xRange/waitId {t} { $self _cget_relative ./dot1xRange -wait_id }
  option -dot1x_range_protocol \
    -configuremethod _c_./dot1xRange/protocol \
    -cgetmethod _g_./dot1xRange/protocol \
    -readonly false
  method _c_./dot1xRange/protocol {t v} { $self _configure_relative ./dot1xRange -protocol $v }
  method _g_./dot1xRange/protocol {t} { $self _cget_relative ./dot1xRange -protocol }
  # multiplier 
  method _m_dot1x_range_protocol {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_protocol }
  
  option -dot1x_range_fast_inner_method \
    -configuremethod _c_./dot1xRange/fastInnerMethod \
    -cgetmethod _g_./dot1xRange/fastInnerMethod \
    -readonly false
  method _c_./dot1xRange/fastInnerMethod {t v} { $self _configure_relative ./dot1xRange -fast_inner_method $v }
  method _g_./dot1xRange/fastInnerMethod {t} { $self _cget_relative ./dot1xRange -fast_inner_method }
  # multiplier 
  method _m_dot1x_range_fast_inner_method {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_inner_method }
  
  option -dot1x_range_object_id \
    -configuremethod _c_./dot1xRange/objectId \
    -cgetmethod _g_./dot1xRange/objectId \
    -readonly false
  method _c_./dot1xRange/objectId {t v} { $self _configure_relative ./dot1xRange -object_id $v }
  method _g_./dot1xRange/objectId {t} { $self _cget_relative ./dot1xRange -object_id }
  # multiplier 
  method _m_dot1x_range_object_id {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_object_id }
  
  option -dot1x_range_fast_provision_mode \
    -configuremethod _c_./dot1xRange/fastProvisionMode \
    -cgetmethod _g_./dot1xRange/fastProvisionMode \
    -readonly false
  method _c_./dot1xRange/fastProvisionMode {t v} { $self _configure_relative ./dot1xRange -fast_provision_mode $v }
  method _g_./dot1xRange/fastProvisionMode {t} { $self _cget_relative ./dot1xRange -fast_provision_mode }
  # multiplier 
  method _m_dot1x_range_fast_provision_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_fast_provision_mode }
  
  option -dot1x_range_host_auth_mode \
    -configuremethod _c_./dot1xRange/hostAuthMode \
    -cgetmethod _g_./dot1xRange/hostAuthMode \
    -readonly false
  method _c_./dot1xRange/hostAuthMode {t v} { $self _configure_relative ./dot1xRange -host_auth_mode $v }
  method _g_./dot1xRange/hostAuthMode {t} { $self _cget_relative ./dot1xRange -host_auth_mode }
  # multiplier 
  method _m_dot1x_range_host_auth_mode {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_auth_mode }
  
  option -dot1x_range_host_name \
    -configuremethod _c_./dot1xRange/hostName \
    -cgetmethod _g_./dot1xRange/hostName \
    -readonly false
  method _c_./dot1xRange/hostName {t v} { $self _configure_relative ./dot1xRange -host_name $v }
  method _g_./dot1xRange/hostName {t} { $self _cget_relative ./dot1xRange -host_name }
  # multiplier 
  method _m_dot1x_range_host_name {mog_args m n other_args} {  $Shell _m_kString  $self $mog_args $m $n $other_args -dot1x_range_host_name }
  
  # End options that are mapped to ixn properties
  #------------------------------------------------------
  
  option -shell -default "" -readonly true
  
  #
  # constructor/destructor section
  #
  delegate option * to CustomOptionHandler
  constructor {args} {
      $self configurelist $args
      catch {$self _post_constructor} err
      set result ""
      set failed [catch {$self _construct_custom_option_handler} res]
      if {!$failed} {
          set CustomOptionHandler $res
      }
      if {$failed} {
          set msg "warning: _construct_custom_options_handler error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
      set failed [catch {
          set MultiplierOptionGroups [concat  [$self _custom_multiplier_option_groups]  $MultiplierOptionGroups]
      } err]
      if {$failed} {
          set msg "warning: _custom_multiplier_option_groups error: "
          append msg "$res:\n$::errorInfo" 
          puts stderr $msg
      }
  }
  destructor {
      set failed [catch {$self _pre_destructor} err]
      if {$failed} {
          puts stderr  "warning: _pre_destructor error: $err:\n$::errorInfo"
      }
      set failed [catch {$self _destroy_clan} err]
      if {$failed} {
          puts stderr  "----\nwarning: _destroy_clan error: $err:\n$::errorInfo\n---"
      }
      # if it's the dummy custom option handler
      # leave it alone it's shared by everyone..
      if {$CustomOptionHandler !=  "::ixia::hag::ixn::types::nooptionhandler"} {
          set failed [catch {$CustomOptionHandler destroy} err]
          if {$failed} {
              puts stderr  "warning: _destroy_clan err: $err:\n$::errorInfo"
          }
      }
  }
  method _configlist {args} {
      if {[llength $args] == 1} {set args [lindex $args 0]}
      set last_n "?"
      foreach {t v} $args {
          if {($last_n != "?") && [info exists Opt2IxnName($t)]} {
              set n [file dirname $Opt2IxnName($t)]
              if {$n != $last_n} {
                  # puts stderr "ZZZZZZ $n != $last_n, commit"
                  $Shell _ixn_eval ixNet commit
                  set last_n $n
              }
          } elseif {[info exists Opt2IxnName($t)]} {
              set last_n [file dirname $Opt2IxnName($t)]
          }
          $self configure $t $v
      }
  }
  # Intended to be overrideable
  method _post_constructor {} {
      # place holder to allow for interposing of code after
      # construction takes place
  }
  # Intended to be overrideable
  method _pre_destructor {} {
      # place holder to allow for interposing of code before
      # destruction of object takes place
  }
  # Intended to be overrideable
  method _alterations_to_option_defaults {} {
      # place holder to allow for option defaults different from
      # ixn meta schema
      return {}
  }
  # Intended to be overrideable
  method _custom_multiplier_option_groups {} {
      return {}
  }
  variable CustomOptionHandler ""
  # Intended to be overrideable
  method _construct_custom_option_handler {} {
      return ::ixia::hag::ixn::types::nooptionhandler
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_keyed_list_add {
   inst port_str bank_tag bank_name alias_array_N rows_array_N rval_N
  } {
      upvar 1 $alias_array_N alias_array
      upvar 1 $rows_array_N rows_array
      upvar 1 $rval_N rval
      foreach {n} [array names rows_array {[0-9]*,*}] {
          set v $rows_array($n)
          set nn [join [lrange [split $n ","] 1 end] ","]
          # if an alias is not defined, generate one
          # map dashes spaces dots. etc.. to underscore
          # and lower case everything
          if {![info exists alias_array($nn)]} {
              set alias_array($nn) [string map  { "-" "_" " " "_" "." "_" "/" "_"}  [string tolower $nn]]
          }
          set alias $alias_array($nn)
          keylset rval ${port_str}.aggregate.${bank_tag}.${alias} $v
      }
  }
  
  # Intended to be overrideable
  typemethod _aggregate_stat_decl {inst} {
      puts stderr "*** Note! no _aggregate_stat_decl override declared for:\n***\t$inst"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $inst"
      return {}
  }
  typemethod _stat_doc_decl {} {
      puts stderr "*** Note! no _stat_doc_decl override declared for:\n***\t$type"
      puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
      return {}   
  }
  typemethod _gen_config_arg_callback {param_name param_desc_ref} {
      #puts stderr "*** Note! no _gen_config_arg_callback override declared for:\n***\t$type"
      #puts stderr "*** check the tailor_XXX.tcl file associated w/ $type"
  }
  
  typemethod _aggregate_stats {inst_list} {
      set rval {}
      if {[llength $inst_list] == 0} {
          return -code error "no instances supplied"
      }
  
      set trobj [lindex $inst_list 0]
      #---
      # (Get) list of chassis ip from ixn. this is used to 
      # so we can convert chassis address to chassis number
      # see (Parse) comment below
      #
      set ch_list [$Shell _ixn_chassis_ip_list]
      #---
      foreach {inst} $inst_list {
          set hlt_port_str [$Shell _hlt_port_string_for_inst $inst]
  
          set decl [$type _aggregate_stat_decl $inst]
          #array set statViewBrowserNamesArray $statistic_types
          set statViewBrowserNamesList {}
          foreach { bank_tag bank_name bank_items } $decl {
              if {[string match "#*" $bank_tag]} {
                  continue
              }
              lappend statViewBrowserNamesList $bank_name
          }
  
          # TBD: classic code had this after
          # apparently enabling stats is buggy
          #after 10000
          $Shell _stats_enable_view_list $statViewBrowserNamesList
  
          array set alias_array {};
          array set rows_array {}; unset rows_array
          array set rows_array {}
          foreach {bank_tag bank_name bank_items} $decl {
              set stats_list {};
              unset alias_array; array set alias_array {}
              foreach {t v}  $bank_items {
                  lappend stats_list $t
                  if {[string equal $v "-"]} {
                    set v [string map {" " "_"} [string tolower $t]]
                  }
                  set alias_array($t) $v
              }
              # (re)init stats array to empty;
              unset rows_array; array set rows_array {};
              set row_count [$Shell  _stats_get rows_array $bank_name $stats_list $inst]
              if {1} {
                  $trobj _trace "Got $row_count stat rows"
                  foreach {n} [lsort [array names rows_array]] {
                      $trobj _tr "RRR <$hlt_port_str,$bank_tag,$bank_name>\t$n: $rows_array($n)"
                  }
              }
              $type _aggregate_stat_keyed_list_add  $inst  $hlt_port_str $bank_tag $bank_name  alias_array  rows_array  rval
          }
      } 
      return $rval
  }
  
  
  # Map of hlt option name --> ixnetwork attribute name
  typemethod getOpt2IxnName {} {array get Opt2IxnName}
  typevariable Opt2IxnName -array {
    -fcoe_client_fdisc_range_plogi_dest_id ./fcoeClientFdiscRange/plogiDestId
    -fcoe_client_fdisc_range_count ./fcoeClientFdiscRange/count
    -fcoe_client_fdisc_range_name_server_query_parameter_type ./fcoeClientFdiscRange/nameServerQueryParameterType
    -fcoe_client_fdisc_range_state_change_registration ./fcoeClientFdiscRange/stateChangeRegistration
    -fcoe_client_fdisc_range_prli_enabled ./fcoeClientFdiscRange/prliEnabled
    -fcoe_client_fdisc_range_enabled ./fcoeClientFdiscRange/enabled
    -fcoe_client_fdisc_range_source_oui_increment ./fcoeClientFdiscRange/sourceOuiIncrement
    -fcoe_client_fdisc_range_name_server_registration ./fcoeClientFdiscRange/nameServerRegistration
    -fcoe_client_fdisc_range_name_server_query_parameter_value ./fcoeClientFdiscRange/nameServerQueryParameterValue
    -fcoe_client_fdisc_range_port_wwn_increment ./fcoeClientFdiscRange/portWwnIncrement
    -fcoe_client_fdisc_range_source_oui ./fcoeClientFdiscRange/sourceOui
    -fcoe_client_fdisc_range_node_wwn_increment ./fcoeClientFdiscRange/nodeWwnIncrement
    -fcoe_client_fdisc_range_port_wwn_start ./fcoeClientFdiscRange/portWwnStart
    -fcoe_client_fdisc_range_node_wwn_start ./fcoeClientFdiscRange/nodeWwnStart
    -fcoe_client_fdisc_range_name ./fcoeClientFdiscRange/name
    -fcoe_client_fdisc_range_name_server_commands ./fcoeClientFdiscRange/nameServerCommands
    -fcoe_client_fdisc_range_override_node_wwn ./fcoeClientFdiscRange/overrideNodeWwn
    -fcoe_client_fdisc_range_plogi_target_name ./fcoeClientFdiscRange/plogiTargetName
    -fcoe_client_fdisc_range_state_change_registration_option ./fcoeClientFdiscRange/stateChangeRegistrationOption
    -fcoe_client_fdisc_range_object_id ./fcoeClientFdiscRange/objectId
    -fcoe_client_fdisc_range_plogi_mesh_mode ./fcoeClientFdiscRange/plogiMeshMode
    -fcoe_client_fdisc_range_name_server_query_command ./fcoeClientFdiscRange/nameServerQueryCommand
    -fcoe_client_fdisc_range_plogi_enabled ./fcoeClientFdiscRange/plogiEnabled
    -fcoe_client_fdisc_range_name_server_query ./fcoeClientFdiscRange/nameServerQuery
    -fcoe_client_flogi_range_plogi_dest_id ./fcoeClientFlogiRange/plogiDestId
    -fcoe_client_flogi_range_fip_addressing_mode ./fcoeClientFlogiRange/fipAddressingMode
    -fcoe_client_flogi_range_fip_destination_mac_address ./fcoeClientFlogiRange/fipDestinationMacAddress
    -fcoe_client_flogi_range_name_server_query_parameter_type ./fcoeClientFlogiRange/nameServerQueryParameterType
    -fcoe_client_flogi_range_count ./fcoeClientFlogiRange/count
    -fcoe_client_flogi_range_prli_enabled ./fcoeClientFlogiRange/prliEnabled
    -fcoe_client_flogi_range_state_change_registration ./fcoeClientFlogiRange/stateChangeRegistration
    -fcoe_client_flogi_range_fip_enabled ./fcoeClientFlogiRange/fipEnabled
    -fcoe_client_flogi_range_fip_vendor_id ./fcoeClientFlogiRange/fipVendorId
    -fcoe_client_flogi_range_enabled ./fcoeClientFlogiRange/enabled
    -fcoe_client_flogi_range_name_server_registration ./fcoeClientFlogiRange/nameServerRegistration
    -fcoe_client_flogi_range_source_oui_increment ./fcoeClientFlogiRange/sourceOuiIncrement
    -fcoe_client_flogi_range_name_server_query_parameter_value ./fcoeClientFlogiRange/nameServerQueryParameterValue
    -fcoe_client_flogi_range_unicast_fip_solicit ./fcoeClientFlogiRange/unicastFipSolicit
    -fcoe_client_flogi_range_port_wwn_increment ./fcoeClientFlogiRange/portWwnIncrement
    -fcoe_client_flogi_range_source_oui ./fcoeClientFlogiRange/sourceOui
    -fcoe_client_flogi_range_node_wwn_increment ./fcoeClientFlogiRange/nodeWwnIncrement
    -fcoe_client_flogi_range_port_wwn_start ./fcoeClientFlogiRange/portWwnStart
    -fcoe_client_flogi_range_node_wwn_start ./fcoeClientFlogiRange/nodeWwnStart
    -fcoe_client_flogi_range_fip_vlan_discovery ./fcoeClientFlogiRange/fipVlanDiscovery
    -fcoe_client_flogi_range_name ./fcoeClientFlogiRange/name
    -fcoe_client_flogi_range_name_server_commands ./fcoeClientFlogiRange/nameServerCommands
    -fcoe_client_flogi_range_plogi_target_name ./fcoeClientFlogiRange/plogiTargetName
    -fcoe_client_flogi_range_state_change_registration_option ./fcoeClientFlogiRange/stateChangeRegistrationOption
    -fcoe_client_flogi_range_object_id ./fcoeClientFlogiRange/objectId
    -fcoe_client_flogi_range_plogi_mesh_mode ./fcoeClientFlogiRange/plogiMeshMode
    -fcoe_client_flogi_range_name_server_query_command ./fcoeClientFlogiRange/nameServerQueryCommand
    -fcoe_client_flogi_range_fip_solicit_timeout ./fcoeClientFlogiRange/fipSolicitTimeout
    -fcoe_client_flogi_range_fip_option_set_name ./fcoeClientFlogiRange/fipOptionSetName
    -fcoe_client_flogi_range_plogi_enabled ./fcoeClientFlogiRange/plogiEnabled
    -fcoe_client_flogi_range_name_server_query ./fcoeClientFlogiRange/nameServerQuery
    -fcoe_client_flogi_range_fip_vlan_discovery_untagged ./fcoeClientFlogiRange/fipVlanDiscoveryUntagged
    -vic_client_range_prov_info_tlvs ./vicClientRange/provInfoTlvs
    -vic_client_range_object_id ./vicClientRange/objectId
    -vic_client_range_macs_per_vif ./vicClientRange/macsPerVif
    -vic_client_range_channel_id_start ./vicClientRange/channelIdStart
    -vic_client_range_prov_info_oui ./vicClientRange/provInfoOui
    -vic_client_range_name ./vicClientRange/name
    -vic_client_range_vif_active ./vicClientRange/vifActive
    -vic_client_range_tlv_offset ./vicClientRange/tlvOffset
    -vic_client_range_prov_info_type ./vicClientRange/provInfoType
    -vic_client_range_enabled ./vicClientRange/enabled
    -vic_client_range_channel_id_increment ./vicClientRange/channelIdIncrement
    -ptp_range_over_mac_master_mac_increment_inter_entity ./ptpRangeOverMac/masterMacIncrementInterEntity
    -ptp_range_over_mac_communication_mode ./ptpRangeOverMac/communicationMode
    -ptp_range_over_mac_send_announce_multicast ./ptpRangeOverMac/sendAnnounceMulticast
    -ptp_range_over_mac_follow_up_delay ./ptpRangeOverMac/followUpDelay
    -ptp_range_over_mac_domain ./ptpRangeOverMac/domain
    -ptp_range_over_mac_announce_drop_rate ./ptpRangeOverMac/announceDropRate
    -ptp_range_over_mac_client_ip_increment_by ./ptpRangeOverMac/clientIpIncrementBy
    -ptp_range_over_mac_renewal_invited ./ptpRangeOverMac/renewalInvited
    -ptp_range_over_mac_port_number_increment ./ptpRangeOverMac/portNumberIncrement
    -ptp_range_over_mac_use_clock_identity ./ptpRangeOverMac/useClockIdentity
    -ptp_range_over_mac_priority1 ./ptpRangeOverMac/priority1
    -ptp_range_over_mac_use_alternate_master_flag ./ptpRangeOverMac/useAlternateMasterFlag
    -ptp_range_over_mac_object_id ./ptpRangeOverMac/objectId
    -ptp_range_over_mac_delay_resp_receipt_timeout ./ptpRangeOverMac/delayRespReceiptTimeout
    -ptp_range_over_mac_announce_frequency_traceable ./ptpRangeOverMac/announceFrequencyTraceable
    -ptp_range_over_mac_priority2 ./ptpRangeOverMac/priority2
    -ptp_range_over_mac_announce_current_utc_offset_valid ./ptpRangeOverMac/announceCurrentUtcOffsetValid
    -ptp_range_over_mac_client_mac_address ./ptpRangeOverMac/clientMacAddress
    -ptp_range_over_mac_time_source ./ptpRangeOverMac/timeSource
    -ptp_range_over_mac_steps_removed ./ptpRangeOverMac/stepsRemoved
    -ptp_range_over_mac_clock_class ./ptpRangeOverMac/clockClass
    -ptp_range_over_mac_request_attempts ./ptpRangeOverMac/requestAttempts
    -ptp_range_over_mac_follow_up_bad_crc_rate ./ptpRangeOverMac/followUpBadCrcRate
    -ptp_range_over_mac_delay_response_delay_insertion_rate ./ptpRangeOverMac/delayResponseDelayInsertionRate
    -ptp_range_over_mac_log_sync_interval ./ptpRangeOverMac/logSyncInterval
    -ptp_range_over_mac_master_count ./ptpRangeOverMac/masterCount
    -ptp_range_over_mac_residence_time ./ptpRangeOverMac/residenceTime
    -ptp_range_over_mac_signal_interval ./ptpRangeOverMac/signalInterval
    -ptp_range_over_mac_delay_mechanism ./ptpRangeOverMac/delayMechanism
    -ptp_range_over_mac_strict_grant ./ptpRangeOverMac/strictGrant
    -ptp_range_over_mac_sync_drop_rate ./ptpRangeOverMac/syncDropRate
    -ptp_range_over_mac_drop_signal_req_sync ./ptpRangeOverMac/dropSignalReqSync
    -ptp_range_over_mac_clock_increment ./ptpRangeOverMac/clockIncrement
    -ptp_range_over_mac_announce_ptp_timescale ./ptpRangeOverMac/announcePtpTimescale
    -ptp_range_over_mac_signal_unicast_handling ./ptpRangeOverMac/signalUnicastHandling
    -ptp_range_over_mac_enabled ./ptpRangeOverMac/enabled
    -ptp_range_over_mac_timestamp_offset ./ptpRangeOverMac/timestampOffset
    -ptp_range_over_mac_master_ip_increment_by ./ptpRangeOverMac/masterIpIncrementBy
    -ptp_range_over_mac_request_interval ./ptpRangeOverMac/requestInterval
    -ptp_range_over_mac_ip_tos ./ptpRangeOverMac/ipTos
    -ptp_range_over_mac_request_holddown ./ptpRangeOverMac/requestHolddown
    -ptp_range_over_mac_client_mac_increment_by ./ptpRangeOverMac/clientMacIncrementBy
    -ptp_range_over_mac_name ./ptpRangeOverMac/name
    -ptp_range_over_mac_drop_signal_req_announce ./ptpRangeOverMac/dropSignalReqAnnounce
    -ptp_range_over_mac_master_ip_address ./ptpRangeOverMac/masterIpAddress
    -ptp_range_over_mac_first_clock ./ptpRangeOverMac/firstClock
    -ptp_range_over_mac_master_mac_increment_by ./ptpRangeOverMac/masterMacIncrementBy
    -ptp_range_over_mac_send_cancel_tlv ./ptpRangeOverMac/sendCancelTlv
    -ptp_range_over_mac_port_number ./ptpRangeOverMac/portNumber
    -ptp_range_over_mac_client_ip_address ./ptpRangeOverMac/clientIpAddress
    -ptp_range_over_mac_announce_leap59 ./ptpRangeOverMac/announceLeap59
    -ptp_range_over_mac_send_announce_tlv ./ptpRangeOverMac/sendAnnounceTlv
    -ptp_range_over_mac_sync_receipt_timeout ./ptpRangeOverMac/syncReceiptTimeout
    -ptp_range_over_mac_announce_leap61 ./ptpRangeOverMac/announceLeap61
    -ptp_range_over_mac_grant_delay_resp_duration_interval ./ptpRangeOverMac/grantDelayRespDurationInterval
    -ptp_range_over_mac_timestamp_offset_variation ./ptpRangeOverMac/timestampOffsetVariation
    -ptp_range_over_mac_follow_up_drop_rate ./ptpRangeOverMac/followUpDropRate
    -ptp_range_over_mac_master_mac_address ./ptpRangeOverMac/masterMacAddress
    -ptp_range_over_mac_drop_signal_req_delay_resp ./ptpRangeOverMac/dropSignalReqDelayResp
    -ptp_range_over_mac_grant_sync_duration_interval ./ptpRangeOverMac/grantSyncDurationInterval
    -ptp_range_over_mac_learn_port_id ./ptpRangeOverMac/learnPortId
    -ptp_range_over_mac_delay_response_delay ./ptpRangeOverMac/delayResponseDelay
    -ptp_range_over_mac_grant_unicast_duration_interval ./ptpRangeOverMac/grantUnicastDurationInterval
    -ptp_range_over_mac_follow_up_delay_insertion_rate ./ptpRangeOverMac/followUpDelayInsertionRate
    -ptp_range_over_mac_log_delay_req_interval ./ptpRangeOverMac/logDelayReqInterval
    -ptp_range_over_mac_clock_accuracy ./ptpRangeOverMac/clockAccuracy
    -ptp_range_over_mac_client_count ./ptpRangeOverMac/clientCount
    -ptp_range_over_mac_announce_time_traceable ./ptpRangeOverMac/announceTimeTraceable
    -ptp_range_over_mac_step_mode ./ptpRangeOverMac/stepMode
    -ptp_range_over_mac_master_ip_increment_inter_entity ./ptpRangeOverMac/masterIpIncrementInterEntity
    -ptp_range_over_mac_delay_resp_drop_rate ./ptpRangeOverMac/delayRespDropRate
    -ptp_range_over_mac_announce_receipt_timeout ./ptpRangeOverMac/announceReceiptTimeout
    -ptp_range_over_mac_rx_calibration ./ptpRangeOverMac/rxCalibration
    -ptp_range_over_mac_tx_calibration ./ptpRangeOverMac/txCalibration
    -ptp_range_over_mac_log_announce_interval ./ptpRangeOverMac/logAnnounceInterval
    -vlan_range_inner_first_id ./vlanRange/innerFirstId
    -vlan_range_inner_increment ./vlanRange/innerIncrement
    -vlan_range_enabled ./vlanRange/enabled
    -vlan_range_unique_count ./vlanRange/uniqueCount
    -vlan_range_name ./vlanRange/name
    -vlan_range_increment_step ./vlanRange/incrementStep
    -vlan_range_tpid ./vlanRange/tpid
    -vlan_range_priority ./vlanRange/priority
    -vlan_range_inner_enable ./vlanRange/innerEnable
    -vlan_range_object_id ./vlanRange/objectId
    -vlan_range_inner_unique_count ./vlanRange/innerUniqueCount
    -vlan_range_inner_tpid ./vlanRange/innerTpid
    -vlan_range_first_id ./vlanRange/firstId
    -vlan_range_increment ./vlanRange/increment
    -vlan_range_inner_increment_step ./vlanRange/innerIncrementStep
    -vlan_range_id_incr_mode ./vlanRange/idIncrMode
    -vlan_range_inner_priority ./vlanRange/innerPriority
    -vlan_range_vlan_id_info ./vlanRange/vlanIdInfo
    -mac_range_object_id ./macRange/objectId
    -mac_range_increment_by ./macRange/incrementBy
    -mac_range_name ./macRange/name
    -mac_range_count ./macRange/count
    -mac_range_mac ./macRange/mac
    -mac_range_mtu ./macRange/mtu
    -mac_range_enabled ./macRange/enabled
    -esmc_range_object_id ./esmcRange/objectId
    -esmc_range_rate ./esmcRange/rate
    -esmc_range_name ./esmcRange/name
    -esmc_range_ql ./esmcRange/ql
    -esmc_range_wait_id ./esmcRange/waitId
    -esmc_range_enabled ./esmcRange/enabled
    -esmc_range_flag_mode ./esmcRange/flagMode
    -dot1x_range_user_password ./dot1xRange/userPassword
    -dot1x_range_nac_sequence ./dot1xRange/nacSequence
    -dot1x_range_enabled ./dot1xRange/enabled
    -dot1x_range_fast_stateless_resume ./dot1xRange/fastStatelessResume
    -dot1x_range_user_name ./dot1xRange/userName
    -dot1x_range_host_password ./dot1xRange/hostPassword
    -dot1x_range_name ./dot1xRange/name
    -dot1x_range_wait_id ./dot1xRange/waitId
    -dot1x_range_protocol ./dot1xRange/protocol
    -dot1x_range_fast_inner_method ./dot1xRange/fastInnerMethod
    -dot1x_range_object_id ./dot1xRange/objectId
    -dot1x_range_fast_provision_mode ./dot1xRange/fastProvisionMode
    -dot1x_range_host_auth_mode ./dot1xRange/hostAuthMode
    -dot1x_range_host_name ./dot1xRange/hostName
  }
  #
  variable MultiplierOptionGroups {
    _m_fcoe_client_fdisc_range_plogi_dest_id {-fcoe_client_fdisc_range_plogi_dest_id_format -fcoe_client_fdisc_range_plogi_dest_id_base -fcoe_client_fdisc_range_plogi_dest_id_incr}
    _m_fcoe_client_fdisc_range_count {-fcoe_client_fdisc_range_count_base -fcoe_client_fdisc_range_count_incr}
    _m_fcoe_client_fdisc_range_name_server_query_parameter_type {-fcoe_client_fdisc_range_name_server_query_parameter_type_format -fcoe_client_fdisc_range_name_server_query_parameter_type_base -fcoe_client_fdisc_range_name_server_query_parameter_type_incr}
    _m_fcoe_client_fdisc_range_source_oui_increment {-fcoe_client_fdisc_range_source_oui_increment_format -fcoe_client_fdisc_range_source_oui_increment_base -fcoe_client_fdisc_range_source_oui_increment_incr}
    _m_fcoe_client_fdisc_range_name_server_query_parameter_value {-fcoe_client_fdisc_range_name_server_query_parameter_value_format -fcoe_client_fdisc_range_name_server_query_parameter_value_base -fcoe_client_fdisc_range_name_server_query_parameter_value_incr}
    _m_fcoe_client_fdisc_range_port_wwn_increment {-fcoe_client_fdisc_range_port_wwn_increment_format -fcoe_client_fdisc_range_port_wwn_increment_base -fcoe_client_fdisc_range_port_wwn_increment_incr}
    _m_fcoe_client_fdisc_range_source_oui {-fcoe_client_fdisc_range_source_oui_format -fcoe_client_fdisc_range_source_oui_base -fcoe_client_fdisc_range_source_oui_incr}
    _m_fcoe_client_fdisc_range_node_wwn_increment {-fcoe_client_fdisc_range_node_wwn_increment_format -fcoe_client_fdisc_range_node_wwn_increment_base -fcoe_client_fdisc_range_node_wwn_increment_incr}
    _m_fcoe_client_fdisc_range_port_wwn_start {-fcoe_client_fdisc_range_port_wwn_start_format -fcoe_client_fdisc_range_port_wwn_start_base -fcoe_client_fdisc_range_port_wwn_start_incr}
    _m_fcoe_client_fdisc_range_node_wwn_start {-fcoe_client_fdisc_range_node_wwn_start_format -fcoe_client_fdisc_range_node_wwn_start_base -fcoe_client_fdisc_range_node_wwn_start_incr}
    _m_fcoe_client_fdisc_range_name {-fcoe_client_fdisc_range_name_format -fcoe_client_fdisc_range_name_base -fcoe_client_fdisc_range_name_incr}
    _m_fcoe_client_fdisc_range_plogi_target_name {-fcoe_client_fdisc_range_plogi_target_name_format -fcoe_client_fdisc_range_plogi_target_name_base -fcoe_client_fdisc_range_plogi_target_name_incr}
    _m_fcoe_client_fdisc_range_state_change_registration_option {-fcoe_client_fdisc_range_state_change_registration_option_format -fcoe_client_fdisc_range_state_change_registration_option_base -fcoe_client_fdisc_range_state_change_registration_option_incr}
    _m_fcoe_client_fdisc_range_object_id {-fcoe_client_fdisc_range_object_id_format -fcoe_client_fdisc_range_object_id_base -fcoe_client_fdisc_range_object_id_incr}
    _m_fcoe_client_fdisc_range_plogi_mesh_mode {-fcoe_client_fdisc_range_plogi_mesh_mode_format -fcoe_client_fdisc_range_plogi_mesh_mode_base -fcoe_client_fdisc_range_plogi_mesh_mode_incr}
    _m_fcoe_client_fdisc_range_name_server_query_command {-fcoe_client_fdisc_range_name_server_query_command_format -fcoe_client_fdisc_range_name_server_query_command_base -fcoe_client_fdisc_range_name_server_query_command_incr}
    _m_fcoe_client_flogi_range_plogi_dest_id {-fcoe_client_flogi_range_plogi_dest_id_format -fcoe_client_flogi_range_plogi_dest_id_base -fcoe_client_flogi_range_plogi_dest_id_incr}
    _m_fcoe_client_flogi_range_fip_addressing_mode {-fcoe_client_flogi_range_fip_addressing_mode_format -fcoe_client_flogi_range_fip_addressing_mode_base -fcoe_client_flogi_range_fip_addressing_mode_incr}
    _m_fcoe_client_flogi_range_fip_destination_mac_address {-fcoe_client_flogi_range_fip_destination_mac_address_format -fcoe_client_flogi_range_fip_destination_mac_address_base -fcoe_client_flogi_range_fip_destination_mac_address_incr}
    _m_fcoe_client_flogi_range_name_server_query_parameter_type {-fcoe_client_flogi_range_name_server_query_parameter_type_format -fcoe_client_flogi_range_name_server_query_parameter_type_base -fcoe_client_flogi_range_name_server_query_parameter_type_incr}
    _m_fcoe_client_flogi_range_count {-fcoe_client_flogi_range_count_base -fcoe_client_flogi_range_count_incr}
    _m_fcoe_client_flogi_range_fip_vendor_id {-fcoe_client_flogi_range_fip_vendor_id_format -fcoe_client_flogi_range_fip_vendor_id_base -fcoe_client_flogi_range_fip_vendor_id_incr}
    _m_fcoe_client_flogi_range_source_oui_increment {-fcoe_client_flogi_range_source_oui_increment_format -fcoe_client_flogi_range_source_oui_increment_base -fcoe_client_flogi_range_source_oui_increment_incr}
    _m_fcoe_client_flogi_range_name_server_query_parameter_value {-fcoe_client_flogi_range_name_server_query_parameter_value_format -fcoe_client_flogi_range_name_server_query_parameter_value_base -fcoe_client_flogi_range_name_server_query_parameter_value_incr}
    _m_fcoe_client_flogi_range_unicast_fip_solicit {-fcoe_client_flogi_range_unicast_fip_solicit_format -fcoe_client_flogi_range_unicast_fip_solicit_base -fcoe_client_flogi_range_unicast_fip_solicit_incr}
    _m_fcoe_client_flogi_range_port_wwn_increment {-fcoe_client_flogi_range_port_wwn_increment_format -fcoe_client_flogi_range_port_wwn_increment_base -fcoe_client_flogi_range_port_wwn_increment_incr}
    _m_fcoe_client_flogi_range_source_oui {-fcoe_client_flogi_range_source_oui_format -fcoe_client_flogi_range_source_oui_base -fcoe_client_flogi_range_source_oui_incr}
    _m_fcoe_client_flogi_range_node_wwn_increment {-fcoe_client_flogi_range_node_wwn_increment_format -fcoe_client_flogi_range_node_wwn_increment_base -fcoe_client_flogi_range_node_wwn_increment_incr}
    _m_fcoe_client_flogi_range_port_wwn_start {-fcoe_client_flogi_range_port_wwn_start_format -fcoe_client_flogi_range_port_wwn_start_base -fcoe_client_flogi_range_port_wwn_start_incr}
    _m_fcoe_client_flogi_range_node_wwn_start {-fcoe_client_flogi_range_node_wwn_start_format -fcoe_client_flogi_range_node_wwn_start_base -fcoe_client_flogi_range_node_wwn_start_incr}
    _m_fcoe_client_flogi_range_name {-fcoe_client_flogi_range_name_format -fcoe_client_flogi_range_name_base -fcoe_client_flogi_range_name_incr}
    _m_fcoe_client_flogi_range_plogi_target_name {-fcoe_client_flogi_range_plogi_target_name_format -fcoe_client_flogi_range_plogi_target_name_base -fcoe_client_flogi_range_plogi_target_name_incr}
    _m_fcoe_client_flogi_range_state_change_registration_option {-fcoe_client_flogi_range_state_change_registration_option_format -fcoe_client_flogi_range_state_change_registration_option_base -fcoe_client_flogi_range_state_change_registration_option_incr}
    _m_fcoe_client_flogi_range_object_id {-fcoe_client_flogi_range_object_id_format -fcoe_client_flogi_range_object_id_base -fcoe_client_flogi_range_object_id_incr}
    _m_fcoe_client_flogi_range_plogi_mesh_mode {-fcoe_client_flogi_range_plogi_mesh_mode_format -fcoe_client_flogi_range_plogi_mesh_mode_base -fcoe_client_flogi_range_plogi_mesh_mode_incr}
    _m_fcoe_client_flogi_range_name_server_query_command {-fcoe_client_flogi_range_name_server_query_command_format -fcoe_client_flogi_range_name_server_query_command_base -fcoe_client_flogi_range_name_server_query_command_incr}
    _m_fcoe_client_flogi_range_fip_solicit_timeout {-fcoe_client_flogi_range_fip_solicit_timeout_base -fcoe_client_flogi_range_fip_solicit_timeout_incr}
    _m_fcoe_client_flogi_range_fip_option_set_name {-fcoe_client_flogi_range_fip_option_set_name_format -fcoe_client_flogi_range_fip_option_set_name_base -fcoe_client_flogi_range_fip_option_set_name_incr}
    _m_vic_client_range_object_id {-vic_client_range_object_id_format -vic_client_range_object_id_base -vic_client_range_object_id_incr}
    _m_vic_client_range_macs_per_vif {-vic_client_range_macs_per_vif_base -vic_client_range_macs_per_vif_incr}
    _m_vic_client_range_channel_id_start {-vic_client_range_channel_id_start_base -vic_client_range_channel_id_start_incr}
    _m_vic_client_range_prov_info_oui {-vic_client_range_prov_info_oui_format -vic_client_range_prov_info_oui_base -vic_client_range_prov_info_oui_incr}
    _m_vic_client_range_name {-vic_client_range_name_format -vic_client_range_name_base -vic_client_range_name_incr}
    _m_vic_client_range_tlv_offset {-vic_client_range_tlv_offset_base -vic_client_range_tlv_offset_incr}
    _m_vic_client_range_prov_info_type {-vic_client_range_prov_info_type_base -vic_client_range_prov_info_type_incr}
    _m_vic_client_range_channel_id_increment {-vic_client_range_channel_id_increment_base -vic_client_range_channel_id_increment_incr}
    _m_ptp_range_over_mac_master_mac_increment_inter_entity {-ptp_range_over_mac_master_mac_increment_inter_entity_format -ptp_range_over_mac_master_mac_increment_inter_entity_base -ptp_range_over_mac_master_mac_increment_inter_entity_incr}
    _m_ptp_range_over_mac_communication_mode {-ptp_range_over_mac_communication_mode_format -ptp_range_over_mac_communication_mode_base -ptp_range_over_mac_communication_mode_incr}
    _m_ptp_range_over_mac_follow_up_delay {-ptp_range_over_mac_follow_up_delay_base -ptp_range_over_mac_follow_up_delay_incr}
    _m_ptp_range_over_mac_domain {-ptp_range_over_mac_domain_base -ptp_range_over_mac_domain_incr}
    _m_ptp_range_over_mac_announce_drop_rate {-ptp_range_over_mac_announce_drop_rate_base -ptp_range_over_mac_announce_drop_rate_incr}
    _m_ptp_range_over_mac_client_ip_increment_by {-ptp_range_over_mac_client_ip_increment_by_format -ptp_range_over_mac_client_ip_increment_by_base -ptp_range_over_mac_client_ip_increment_by_incr}
    _m_ptp_range_over_mac_port_number_increment {-ptp_range_over_mac_port_number_increment_base -ptp_range_over_mac_port_number_increment_incr}
    _m_ptp_range_over_mac_priority1 {-ptp_range_over_mac_priority1_base -ptp_range_over_mac_priority1_incr}
    _m_ptp_range_over_mac_object_id {-ptp_range_over_mac_object_id_format -ptp_range_over_mac_object_id_base -ptp_range_over_mac_object_id_incr}
    _m_ptp_range_over_mac_delay_resp_receipt_timeout {-ptp_range_over_mac_delay_resp_receipt_timeout_base -ptp_range_over_mac_delay_resp_receipt_timeout_incr}
    _m_ptp_range_over_mac_priority2 {-ptp_range_over_mac_priority2_base -ptp_range_over_mac_priority2_incr}
    _m_ptp_range_over_mac_client_mac_address {-ptp_range_over_mac_client_mac_address_format -ptp_range_over_mac_client_mac_address_base -ptp_range_over_mac_client_mac_address_incr}
    _m_ptp_range_over_mac_time_source {-ptp_range_over_mac_time_source_format -ptp_range_over_mac_time_source_base -ptp_range_over_mac_time_source_incr}
    _m_ptp_range_over_mac_steps_removed {-ptp_range_over_mac_steps_removed_base -ptp_range_over_mac_steps_removed_incr}
    _m_ptp_range_over_mac_clock_class {-ptp_range_over_mac_clock_class_base -ptp_range_over_mac_clock_class_incr}
    _m_ptp_range_over_mac_request_attempts {-ptp_range_over_mac_request_attempts_base -ptp_range_over_mac_request_attempts_incr}
    _m_ptp_range_over_mac_follow_up_bad_crc_rate {-ptp_range_over_mac_follow_up_bad_crc_rate_base -ptp_range_over_mac_follow_up_bad_crc_rate_incr}
    _m_ptp_range_over_mac_delay_response_delay_insertion_rate {-ptp_range_over_mac_delay_response_delay_insertion_rate_base -ptp_range_over_mac_delay_response_delay_insertion_rate_incr}
    _m_ptp_range_over_mac_log_sync_interval {-ptp_range_over_mac_log_sync_interval_base -ptp_range_over_mac_log_sync_interval_incr}
    _m_ptp_range_over_mac_master_count {-ptp_range_over_mac_master_count_base -ptp_range_over_mac_master_count_incr}
    _m_ptp_range_over_mac_residence_time {-ptp_range_over_mac_residence_time_base -ptp_range_over_mac_residence_time_incr}
    _m_ptp_range_over_mac_signal_interval {-ptp_range_over_mac_signal_interval_base -ptp_range_over_mac_signal_interval_incr}
    _m_ptp_range_over_mac_delay_mechanism {-ptp_range_over_mac_delay_mechanism_format -ptp_range_over_mac_delay_mechanism_base -ptp_range_over_mac_delay_mechanism_incr}
    _m_ptp_range_over_mac_sync_drop_rate {-ptp_range_over_mac_sync_drop_rate_base -ptp_range_over_mac_sync_drop_rate_incr}
    _m_ptp_range_over_mac_clock_increment {-ptp_range_over_mac_clock_increment_format -ptp_range_over_mac_clock_increment_base -ptp_range_over_mac_clock_increment_incr}
    _m_ptp_range_over_mac_signal_unicast_handling {-ptp_range_over_mac_signal_unicast_handling_format -ptp_range_over_mac_signal_unicast_handling_base -ptp_range_over_mac_signal_unicast_handling_incr}
    _m_ptp_range_over_mac_timestamp_offset {-ptp_range_over_mac_timestamp_offset_base -ptp_range_over_mac_timestamp_offset_incr}
    _m_ptp_range_over_mac_master_ip_increment_by {-ptp_range_over_mac_master_ip_increment_by_format -ptp_range_over_mac_master_ip_increment_by_base -ptp_range_over_mac_master_ip_increment_by_incr}
    _m_ptp_range_over_mac_request_interval {-ptp_range_over_mac_request_interval_base -ptp_range_over_mac_request_interval_incr}
    _m_ptp_range_over_mac_ip_tos {-ptp_range_over_mac_ip_tos_base -ptp_range_over_mac_ip_tos_incr}
    _m_ptp_range_over_mac_request_holddown {-ptp_range_over_mac_request_holddown_base -ptp_range_over_mac_request_holddown_incr}
    _m_ptp_range_over_mac_client_mac_increment_by {-ptp_range_over_mac_client_mac_increment_by_format -ptp_range_over_mac_client_mac_increment_by_base -ptp_range_over_mac_client_mac_increment_by_incr}
    _m_ptp_range_over_mac_name {-ptp_range_over_mac_name_format -ptp_range_over_mac_name_base -ptp_range_over_mac_name_incr}
    _m_ptp_range_over_mac_master_ip_address {-ptp_range_over_mac_master_ip_address_format -ptp_range_over_mac_master_ip_address_base -ptp_range_over_mac_master_ip_address_incr}
    _m_ptp_range_over_mac_first_clock {-ptp_range_over_mac_first_clock_format -ptp_range_over_mac_first_clock_base -ptp_range_over_mac_first_clock_incr}
    _m_ptp_range_over_mac_master_mac_increment_by {-ptp_range_over_mac_master_mac_increment_by_format -ptp_range_over_mac_master_mac_increment_by_base -ptp_range_over_mac_master_mac_increment_by_incr}
    _m_ptp_range_over_mac_port_number {-ptp_range_over_mac_port_number_base -ptp_range_over_mac_port_number_incr}
    _m_ptp_range_over_mac_client_ip_address {-ptp_range_over_mac_client_ip_address_format -ptp_range_over_mac_client_ip_address_base -ptp_range_over_mac_client_ip_address_incr}
    _m_ptp_range_over_mac_sync_receipt_timeout {-ptp_range_over_mac_sync_receipt_timeout_base -ptp_range_over_mac_sync_receipt_timeout_incr}
    _m_ptp_range_over_mac_grant_delay_resp_duration_interval {-ptp_range_over_mac_grant_delay_resp_duration_interval_base -ptp_range_over_mac_grant_delay_resp_duration_interval_incr}
    _m_ptp_range_over_mac_timestamp_offset_variation {-ptp_range_over_mac_timestamp_offset_variation_base -ptp_range_over_mac_timestamp_offset_variation_incr}
    _m_ptp_range_over_mac_follow_up_drop_rate {-ptp_range_over_mac_follow_up_drop_rate_base -ptp_range_over_mac_follow_up_drop_rate_incr}
    _m_ptp_range_over_mac_master_mac_address {-ptp_range_over_mac_master_mac_address_format -ptp_range_over_mac_master_mac_address_base -ptp_range_over_mac_master_mac_address_incr}
    _m_ptp_range_over_mac_grant_sync_duration_interval {-ptp_range_over_mac_grant_sync_duration_interval_base -ptp_range_over_mac_grant_sync_duration_interval_incr}
    _m_ptp_range_over_mac_delay_response_delay {-ptp_range_over_mac_delay_response_delay_base -ptp_range_over_mac_delay_response_delay_incr}
    _m_ptp_range_over_mac_grant_unicast_duration_interval {-ptp_range_over_mac_grant_unicast_duration_interval_base -ptp_range_over_mac_grant_unicast_duration_interval_incr}
    _m_ptp_range_over_mac_follow_up_delay_insertion_rate {-ptp_range_over_mac_follow_up_delay_insertion_rate_base -ptp_range_over_mac_follow_up_delay_insertion_rate_incr}
    _m_ptp_range_over_mac_log_delay_req_interval {-ptp_range_over_mac_log_delay_req_interval_base -ptp_range_over_mac_log_delay_req_interval_incr}
    _m_ptp_range_over_mac_clock_accuracy {-ptp_range_over_mac_clock_accuracy_format -ptp_range_over_mac_clock_accuracy_base -ptp_range_over_mac_clock_accuracy_incr}
    _m_ptp_range_over_mac_client_count {-ptp_range_over_mac_client_count_base -ptp_range_over_mac_client_count_incr}
    _m_ptp_range_over_mac_step_mode {-ptp_range_over_mac_step_mode_format -ptp_range_over_mac_step_mode_base -ptp_range_over_mac_step_mode_incr}
    _m_ptp_range_over_mac_master_ip_increment_inter_entity {-ptp_range_over_mac_master_ip_increment_inter_entity_format -ptp_range_over_mac_master_ip_increment_inter_entity_base -ptp_range_over_mac_master_ip_increment_inter_entity_incr}
    _m_ptp_range_over_mac_delay_resp_drop_rate {-ptp_range_over_mac_delay_resp_drop_rate_base -ptp_range_over_mac_delay_resp_drop_rate_incr}
    _m_ptp_range_over_mac_announce_receipt_timeout {-ptp_range_over_mac_announce_receipt_timeout_base -ptp_range_over_mac_announce_receipt_timeout_incr}
    _m_ptp_range_over_mac_rx_calibration {-ptp_range_over_mac_rx_calibration_base -ptp_range_over_mac_rx_calibration_incr}
    _m_ptp_range_over_mac_tx_calibration {-ptp_range_over_mac_tx_calibration_base -ptp_range_over_mac_tx_calibration_incr}
    _m_ptp_range_over_mac_log_announce_interval {-ptp_range_over_mac_log_announce_interval_base -ptp_range_over_mac_log_announce_interval_incr}
    _m_vlan_range_inner_first_id {-vlan_range_inner_first_id_base -vlan_range_inner_first_id_incr}
    _m_vlan_range_inner_increment {-vlan_range_inner_increment_base -vlan_range_inner_increment_incr}
    _m_vlan_range_unique_count {-vlan_range_unique_count_base -vlan_range_unique_count_incr}
    _m_vlan_range_name {-vlan_range_name_format -vlan_range_name_base -vlan_range_name_incr}
    _m_vlan_range_increment_step {-vlan_range_increment_step_base -vlan_range_increment_step_incr}
    _m_vlan_range_tpid {-vlan_range_tpid_format -vlan_range_tpid_base -vlan_range_tpid_incr}
    _m_vlan_range_priority {-vlan_range_priority_base -vlan_range_priority_incr}
    _m_vlan_range_object_id {-vlan_range_object_id_format -vlan_range_object_id_base -vlan_range_object_id_incr}
    _m_vlan_range_inner_unique_count {-vlan_range_inner_unique_count_base -vlan_range_inner_unique_count_incr}
    _m_vlan_range_inner_tpid {-vlan_range_inner_tpid_format -vlan_range_inner_tpid_base -vlan_range_inner_tpid_incr}
    _m_vlan_range_first_id {-vlan_range_first_id_base -vlan_range_first_id_incr}
    _m_vlan_range_increment {-vlan_range_increment_base -vlan_range_increment_incr}
    _m_vlan_range_inner_increment_step {-vlan_range_inner_increment_step_base -vlan_range_inner_increment_step_incr}
    _m_vlan_range_id_incr_mode {-vlan_range_id_incr_mode_base -vlan_range_id_incr_mode_incr}
    _m_vlan_range_inner_priority {-vlan_range_inner_priority_base -vlan_range_inner_priority_incr}
    _m_mac_range_object_id {-mac_range_object_id_format -mac_range_object_id_base -mac_range_object_id_incr}
    _m_mac_range_increment_by {-mac_range_increment_by_format -mac_range_increment_by_base -mac_range_increment_by_incr}
    _m_mac_range_name {-mac_range_name_format -mac_range_name_base -mac_range_name_incr}
    _m_mac_range_count {-mac_range_count_base -mac_range_count_incr}
    _m_mac_range_mac {-mac_range_mac_format -mac_range_mac_base -mac_range_mac_incr}
    _m_mac_range_mtu {-mac_range_mtu_base -mac_range_mtu_incr}
    _m_esmc_range_object_id {-esmc_range_object_id_format -esmc_range_object_id_base -esmc_range_object_id_incr}
    _m_esmc_range_rate {-esmc_range_rate_base -esmc_range_rate_incr}
    _m_esmc_range_name {-esmc_range_name_format -esmc_range_name_base -esmc_range_name_incr}
    _m_esmc_range_ql {-esmc_range_ql_format -esmc_range_ql_base -esmc_range_ql_incr}
    _m_esmc_range_flag_mode {-esmc_range_flag_mode_format -esmc_range_flag_mode_base -esmc_range_flag_mode_incr}
    _m_dot1x_range_user_password {-dot1x_range_user_password_format -dot1x_range_user_password_base -dot1x_range_user_password_incr}
    _m_dot1x_range_fast_stateless_resume {-dot1x_range_fast_stateless_resume_format -dot1x_range_fast_stateless_resume_base -dot1x_range_fast_stateless_resume_incr}
    _m_dot1x_range_user_name {-dot1x_range_user_name_format -dot1x_range_user_name_base -dot1x_range_user_name_incr}
    _m_dot1x_range_host_password {-dot1x_range_host_password_format -dot1x_range_host_password_base -dot1x_range_host_password_incr}
    _m_dot1x_range_name {-dot1x_range_name_format -dot1x_range_name_base -dot1x_range_name_incr}
    _m_dot1x_range_protocol {-dot1x_range_protocol_format -dot1x_range_protocol_base -dot1x_range_protocol_incr}
    _m_dot1x_range_fast_inner_method {-dot1x_range_fast_inner_method_format -dot1x_range_fast_inner_method_base -dot1x_range_fast_inner_method_incr}
    _m_dot1x_range_object_id {-dot1x_range_object_id_format -dot1x_range_object_id_base -dot1x_range_object_id_incr}
    _m_dot1x_range_fast_provision_mode {-dot1x_range_fast_provision_mode_format -dot1x_range_fast_provision_mode_base -dot1x_range_fast_provision_mode_incr}
    _m_dot1x_range_host_auth_mode {-dot1x_range_host_auth_mode_format -dot1x_range_host_auth_mode_base -dot1x_range_host_auth_mode_incr}
    _m_dot1x_range_host_name {-dot1x_range_host_name_format -dot1x_range_host_name_base -dot1x_range_host_name_incr}
  }
}

#@ end of ancestors for ::hag::ixnmeta::/vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange

#
# Source in an optional tailor file that allows
# customization for the generated snit objects
#
set file_found 0
set dir [file normalize [file dirname [info script]]]
if {[file exists [set dir]/tailor_fcoeClientFdiscRange.tcl]} {
    set fn [set dir]/tailor_fcoeClientFdiscRange.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
} elseif {[file exists [set dir]/../tailor_fcoeClientFdiscRange.tcl]} {
    set fn [set dir]/../tailor_fcoeClientFdiscRange.tcl
    uplevel #0 [list namespace eval :: [list source [set fn]]]
    set file_found 1
}
# if -input-tailor-file-mandatory
if 1 { 
    if {![set file_found]} {
      return -code error  "Could not find required tailorfile 'tailor_fcoeClientFdiscRange.tcl'"
    }
}

#-------------------------------------------------------------
# Generated by the hag on 
#     Fri Aug 07 13:38:20 PDT 2020
#-------------------------------------------------------------
# package requires, etc.
package require snit
#-------------------------------------------------------------

if {[llength [info commands ::ixia::fcoe]]} {
    rename ::ixia::fcoe ""
}
::ixia::hag::ixn::types::shell ::ixia::fcoe  -config-multiplier-option-groups 1  -config-typepathways  [list /vport/protocolStack/ethernet/fcoeClientEndpoint/range/fcoeClientFdiscRange]
#
# Shell level commands
# - XXX_config
# - XXX_control
# - XXX_stats
#

proc ::ixia::fcoe_config {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail [catch  [concat ::ixia::fcoe config [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [list [list status 1] [list handles $r] [list log ""]]
    }
  } else {
    eval [concat {::ixia::fcoe config} [set args]]
  }
}

proc ::ixia::fcoe_control {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail [catch  [concat ::ixia::fcoe control [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [list [list status 1] [list inner_results $r] [list log ""]]
    }
  } else {
    eval [concat {::ixia::fcoe config} [set args]]
  }
}

proc ::ixia::fcoe_stats {args} {
  set procName [lindex [info level [info level]] 0]
  ::ixia::logHltapiCommand $procName $args
  ::ixia::utrackerLog $procName $args
  if {$::ixia::hag::ixn::Opts(keyedListReturnValues)} {
    set fail  [catch [concat {::ixia::fcoe stats} [set args]] r]
    if {$fail} {
      return [list [list status 0] [list log $r\n$::errorInfo]]
    } else {
      return [concat  [list [list status 1] [list log ""]]  $r  ]
    }
  } else {
    eval [concat {::ixia::fcoe stats} [set args]]
  }
}

