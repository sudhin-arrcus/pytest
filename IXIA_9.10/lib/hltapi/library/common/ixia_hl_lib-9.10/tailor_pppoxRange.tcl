#
#
#

#
# Toy example of an custom option handler object
#
set T ::ixia::hag::ixn::types
snit::type ${T}::pppoxRangeXtraOptions {
    option -partof -default ""
    option -custom_option_a -readonly false -configuremethod _cfgmethod
    option -custom_option_b -readonly false -configuremethod _cfgmethod

    method _cfgmethod {t v} {
        puts stderr "OPTIONHANDLER $self, part of [$self cget -partof]:"
        puts stderr "  recvd option $t w/ value $v"
    }
}

foreach x { atm ethernet } {
    #
    # when a acName object is created override default so that
    # -select is set to be true
    #
    snit::method \
    ${T}::/vport/protocolStack/$x/pppoxEndpoint/range/pppoxRange/acName \
    _alterations_to_option_defaults {} {
        return {
            -select true
        }
    }
    #
    # Install a custom option handler object
    #
    snit::method \
    ${T}::/vport/protocolStack/$x/pppoxEndpoint/range/pppoxRange \
    _construct_custom_option_handler {} {
        # see snit type ::ixia::hag::ixn::types::pppoxRangeXtraOptions
        # defnined above...
        set h [$Shell _create_instance pppoxRangeXtraOptions]
        $h configure -partof $self
        return $h
    }

    #
    # Ixnetwork only allows start/start at the pppoxREndpoint level it seems
    # so override start/stop to start/stop
    # our grandparent when someone asks us to start/stop
    #
    snit::method \
    ${T}::/vport/protocolStack/$x/pppoxEndpoint/range/pppoxRange \
    start {} { $Shell start [$self _ancestor 2] }

    snit::method \
    ${T}::/vport/protocolStack/$x/pppoxEndpoint/range/pppoxRange \
    stop {} { $Shell stop [$self _ancestor 2] }

    #
    # Override to allow a classis hlt port_handle", which is just a chassis
    # "chassisN/cardN/portN" string, to be supplied as the parent_handle
    # for a .../pppoxRange 
    # note: the element that must be returned is a hag object
    # representing the parent of the highest level ancestor auto-generated by the
    # target object ($self). it should not the immediate parent of target object
    #
    snit::method \
    ${T}::/vport/protocolStack/$x/pppoxEndpoint/range/pppoxRange \
    _cast_handle_to_parent_obj {i_handle args} {
        # If the thing passed in is a simple chassisN/cardN/portN string
        # we need to morph it into a hag object
        # (code below lifted from classis hlt pppox_config code)
        if {![regexp -- {^[0-9]+/[0-9]+/[0-9]+$} $i_handle]} {
            return $i_handle; # not a port string, assume we've been passed a hag object
        } 
        set port_str $i_handle
        set protocol_stack_type "ethernet"
        if {[string match "*/atm/*" [$self _typepath]]} {
            set protocol_stack_type "atm"
        }
        set rval [$Shell _make_endpoint_ancestors_from_port_str \
            $self $port_str $protocol_stack_type]
        return $rval
    }

    #
    # This override declares the (aggregate) stats for this type
    #
    snit::typemethod \
    ${T}::/vport/protocolStack/$x/pppoxEndpoint/range/pppoxRange \
    _aggregate_stat_decl {inst} {

      if {[$inst cget -pppox_options_role] == "server"} {
          set stat_role "Server"
          set client_comment "#"
      } else {
          set stat_role "Client"
          set client_comment ""
      }

      set decl {
        chap  "PPP CHAP Authentication Statistics" {
            "Port Name" -
            "CHAP Challenge Tx" -
            "CHAP Challenge Rx" -
            "CHAP Response Tx" -
            "CHAP Response Rx" -
            "CHAP Success Tx" -
            "CHAP Success Rx" -
            "CHAP Failure Tx" -
            "CHAP Failure Rx" -
        }
        latency "PPP Latency Statistics" {
            "Port Name" "port_name"
            "@ROLE@ Session Minimum Latency" "min_setup_time"
            "@ROLE@ Session Average Latency" "avg_setup_time"
            "@ROLE@ Session Maximum Latency" "max_setup_time"
            "LCP Minimum Latency" "lcp_min_latency"
            "LCP Average Latency" "lcp_avg_latency"
            "LCP Maximum Latency" "lcp_max_latency"
            "NCP Minimum Latency" "ncp_min_latency"
            "NCP Average Latency" "ncp_avg_latency"
            "NCP Maximum Latency" "ncp_max_latency"
            "PPPoE Minimum Latency" "pppoe_min_latency"
            "PPPoE Average Latency" "pppoe_avg_latency"
            "PPPoE Maximum Latency" "pppoe_max_latency"
        }
        pap "PPP PAP Authentication Statistics" {
            "Port Name" "port_name"
            "PAP Authentication Req Tx" "pap_auth_req_tx"
            "PAP Authentication Req Rx" "pap_auth_req_rx"
            "PAP Authentication ACK Tx" "pap_auth_ack_tx"
            "PAP Authentication ACK Rx" "pap_auth_ack_rx"
            "PAP Authentication NAK Tx" "pap_auth_nak_tx"
            "PAP Authentication NAK Rx" "pap_auth_nak_rx"
        }
        lcp "PPP LCP Link Maintenance Statistics" {
            "Port Name" "port_name"
            "LCP Echo Request Tx" "echo_req_tx"
            "LCP Echo Request Rx" "echo_req_rx"
            "LCP Echo Response Tx" "echo_rsp_tx"
            "LCP Echo Response Rx" "echo_rsp_rx"
            "LCP Code Reject Tx" "code_rej_tx"
            "LCP Code Reject Rx" "code_rej_rx"
        }
        ncp "PPP NCP IPCP Statistics" {
            "Port Name" "port_name"
            "IPCP Config Request Tx" "ipcp_cfg_req_tx"
            "IPCP Config Request Rx" "ipcp_cfg_req_rx"
            "IPCP Config ACK Tx" "ipcp_cfg_ack_tx"
            "IPCP Config ACK Rx" "ipcp_cfg_ack_rx"
            "IPCP Config NAK Tx" "ipcp_cfg_nak_tx"
            "IPCP Config NAK Rx" "ipcp_cfg_nak_rx"
            "IPCP Config Reject Tx" "ipcp_cfg_rej_tx"
            "IPCP Config Reject Rx" "ipcp_cfg_rej_rx"
        }
        ncpv6 "PPP NCP IPv6CP Statistics" {
            "Port Name" "port_name"
            "IPv6CP Config Request Tx" "ipv6cp_cfg_req_tx"
            "IPv6CP Config Request Rx" "ipv6cp_cfg_req_rx"
            "IPv6CP Config ACK Tx" "ipv6cp_cfg_ack_tx"
            "IPv6CP Config ACK Rx" "ipv6cp_cfg_ack_rx"
            "IPv6CP Config NAK Tx" "ipv6cp_cfg_nak_tx"
            "IPv6CP Config NAK Rx" "ipv6cp_cfg_nak_rx"
            "IPv6CP Config Reject Tx" "ipv6cp_cfg_rej_tx"
            "IPv6CP Config Reject Rx" "ipv6cp_cfg_rej_rx"
        }
        gen "PPP General Statistics" {
            "Port Name"
                "port_name"
            "@ROLE@ Interfaces Up"
                "sessions_up"
            "@ROLE@ Interfaces Setup Rate"
                "success_setup_rate"
            "Interfaces Teardown Rate"
                "interfaces_teardown_rate"
            "@ROLE@ Interfaces in PPP Negotiation"
                "interfaces_in_ppp_negotiation"
            "Interfaces in PPPoE/L2TP Negotiation"
                "interfaces_in_pppoe_l2tp_negotiation"
            "Sessions Initiated"
                "num_sessions"
            "Sessions Failed"
                "sessions_failed"
            "Sessions Succeeded"
                "sessions_succeeded"
            "Sessions Teardown Succeeded"
                "sessions_teardown_succeeded"
            "Sessions Teardown Failed"
                "sessions_teardown_failed"
            "Client Min Setup Rate"
                "client_min_setup_rate"
            "Server Min Setup Rate"
                "server_min_setup_rate"
            "LCP Total Messages Tx"
                "lcp_total_msg_tx"
            "LCP Total Messages Rx"
                "lcp_total_msg_rx"
            "Authentication Total Tx"
                "auth_total_tx"
            "Authentication Total Rx"
                "auth_total_rx"
            "NCP Total Messages Tx"
                "ncp_total_msg_tx"
            "NCP Total Messages Rx"
                "ncp_total_msg_rx"
            "PPP Total Bytes Tx"
                "ppp_total_bytes_tx"
            "PPP Total Bytes Rx"
                "ppp_total_bytes_rx"
            "Malformed PPP Frames Used"
                "malformed_ppp_frames_used"
            "Malformed PPP Frames Rejected"
                "malformed_ppp_frames_rejected"
            "PPPoE Total Bytes Tx"
                "pppoe_total_bytes_tx"
            "PPPoE Total Bytes Rx"
                "pppoe_total_bytes_rx"
            "Max Teardown Rate"
                "teardown_rate"
            "Min Establishment Time"
                "min_establishment_time"
            "Avg Establishment Time"
                "avg_establishment_time"
            "Max Establishment Time"
                "max_establishment_time"
            "Average Teardown Rate"
                "average_teardown_rate"
            "@SERVERCOMMENT@Client Max Setup Rate"
                "client_max_setup_rate"
        }
        lcp_term "PPP LCP Link Termination Statistics" {
            "Port Name" "port_name"
            "LCP Terminate Tx" "term_req_tx"
            "LCP Terminate Rx" "term_req_rx"
            "LCP Terminate ACK Tx" "term_ack_tx"
            "LCP Terminate ACK Rx" "term_ack_rx"
        }
        lcp_est "PPP LCP Link Establishment Phase Statistics" {
            "Port Name" "port_name"
            "LCP Config Request Tx" "lcp_cfg_req_tx"
            "LCP Config Request Rx" "lcp_cfg_req_rx"
            "LCP Config ACK Tx" "lcp_cfg_ack_tx"
            "LCP Config ACK Rx" "lcp_cfg_ack_rx"
            "LCP Config NAK Tx" "lcp_cfg_nak_tx"
            "LCP Config NAK Rx" "lcp_cfg_nak_rx"
            "LCP Config Reject Tx" "lcp_cfg_rej_tx"
            "LCP Config Reject Rx" "lcp_cfg_rej_rx"
            "LCP Protocol Reject Tx" "lcp_protocol_rej_tx"
            "LCP Protocol Reject Rx" "lcp_protocol_rej_rx"
        }
        disc "PPPoE Discovery Statistics" {
            "Port Name" "port_name"
            "PADI Tx" "padi_tx"
            "PADI Rx" "padi_rx"
            "PADI Timeouts" "padi_timeout"
            "PADO Tx" "pado_tx"
            "PADO Rx" "pado_rx"
            "PADR Tx" "padr_tx"
            "PADR Rx" "padr_rx"
            "PADR Timeouts" "padr_timeout"
            "PADS Tx" "pads_tx"
            "PADS Rx" "pads_rx"
        }
        term "PPPoE Termination Statistics" {
            "Port Name" "port_name"
            "PADT Tx" "padt_tx"
            "PADT Rx" "padt_rx"
        }
      }
      set map [list @ROLE@ $stat_role @SERVERCOMMENT@ $client_comment]
      set decl [string map $map $decl]
    }
}
