<?xml version="1.0" encoding="utf-8"?>
<method xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="protocol_info" name_robot="Protocol Info" displayPriority="7" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="false" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="false" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="false" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="false" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" Lang="none">
  <description supportType="ixNetworkSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixLoadSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixHalOrProtocolSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixNetworkCpfSupport" contentType="new" target="noTarget">This procedure is used to get session status statistics for NGPF protocols that support start and stop operations.</description>
  <chapter>Session APIs</chapter>
  <arguments>
    <argument name="handle" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>A handle or list of handles that correspond to NGPF protocols. 
        If an invalid handle is given, a warning will be printed to the console and the corresponding handle will be ignored.
        If the argument is omitted, the command will return the status of all NGPF protocols that are found.</text>
        </description>
        <restriction type="VALUETYPE" valueType="ANY" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="port_filter" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>A port handle, virtual port handle or a list containing any combination of port handles and virtual ports.
        The ports that correspond to the specified handles will be used to filter the results of the command. If any of the specified handles does not match any of the port filters, no information about the sessions configured on that handle will be returned.
        If an invalid port is specified, the command will return an error.</text>
        </description>
        <restriction type="VALUETYPE" valueType="ANY" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="mode" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>Specifies the retrieval mode as either aggregate for all configured sessions or on a per session basis.</text>
          <choices>
            <choice>
              <choiceName>aggregate</choiceName>
              <choiceText>Retrieve statistics for all the sessions and return the number of sessions that are in each state.</choiceText>
            </choice>
            <choice>
              <choiceName>handles</choiceName>
              <choiceText>Retrieve statistics for all the sessions and return the handles of sessions that are in each state.</choiceText>
            </choice>
            <choice>
              <choiceName>global_per_protocol</choiceName>
              <choiceText>Retrieves statistics of the complete configuration aggregated per protocol. This is the equivalent of Protocol Summary Statistics View and does not accept any handle or port_filter arguments.</choiceText>
            </choice>
            <choice>
              <choiceName>global_per_port</choiceName>
              <choiceText>Retrieves statistics of the complete configuration aggregated per port. This is the equivalent of Port Summary Statistics View and does not accept any handle or port_filter arguments.</choiceText>
            </choice>
          </choices>
        </description>
        <restriction type="VALUETYPE" valueType="CHOICES" value="aggregate handles global_per_protocol global_per_port" />
        <restriction type="DEFAULT" valueType="ANY" value="global_per_protocol" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="execution_timeout" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>This is the time-out for the function.
        The setting is in seconds.
        Setting this to 60 means that the command must complete in under 60 seconds.
        If the command lasts more than 60 seconds the command is terminated by force.
        This flag can be used to prevent dead locks occurring in IxNetwork.</text>
        </description>
        <restriction type="DEFAULT" valueType="ANY" value="1800" />
        <restriction type="VALUETYPE" valueType="NUMERIC" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
  </arguments>
  <returnValues>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.sessions_not_joined</key>
      <value>The number of sessions belonging to the specified handle that are not joined. This key is returned only if the mode is set to aggregate and the port_filter argument is omitted. If the protocol that corresponds to handle does not support the notion of join/leave for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.sessions_joined</key>
      <value>The number of sessions belonging to the specified handle that are joined. This key is returned only if the mode is set to aggregate and the port_filter argument is omitted. If the protocol that corresponds to handle does not support the notion of join/leave for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.sessions_down</key>
      <value>The number of sessions belonging to the specified handle that are down. This key is returned only if the mode is set to aggregate and the port_filter argument is omitted. If the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.sessions_up</key>
      <value>The number of sessions belonging to the specified handle that are up. This key is returned only if the mode is set to aggregate and the port_filter argument is omitted. If the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.sessions_not_started</key>
      <value>The number of sessions belonging to the specified handle that are not started. This key is returned only if the mode is set to aggregate and the port_filter argument is omitted.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.sessions_total</key>
      <value>The number of sessions belonging to the specified handle that are configured. This key is returned only if the mode is set to aggregate and the port_filter argument is omitted.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.[&lt;port_filter&gt;].sessions_not_joined</key>
      <value>The number sessions belonging to the specified handle that are not joined on the specified port. This key is returned only if the mode is set to aggregate and the port_filter argument is given. If the protocol that corresponds to handle does not support the notion of join/leave for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.[&lt;port_filter&gt;].sessions_joined</key>
      <value>The number of sessions belonging to the specified handle that are joined on the specified port. This key is returned only if the mode is set to aggregate and the port_filter argument is given. If the protocol that corresponds to handle does not support the notion of join/leave for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.[&lt;port_filter&gt;].sessions_down</key>
      <value>The number sessions belonging to the specified handle that are down on the specified port. This key is returned only if the mode is set to aggregate and the port_filter argument is given. If the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.[&lt;port_filter&gt;].sessions_up</key>
      <value>The number of sessions belonging to the specified handle that are up on the specified port. This key is returned only if the mode is set to aggregate and the port_filter argument is given. If the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.[&lt;port_filter&gt;].sessions_not_started</key>
      <value>The number of sessions belonging to the specified handle that are not started on the specified port. This key is returned only if the mode is set to aggregate and the port_filter argument is given.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].aggregate.[&lt;port_filter&gt;].sessions_total</key>
      <value>The number of sessions belonging to the specified handle that are configured on the specified port. This key is returned only if the mode is set to aggregate and the port_filter argument is given.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.sessions_not_joined</key>
      <value>The handles of all sessions belonging to the specified handle that are not joined. This key is returned only if the mode is set to handles and the port_filter argument is omitted. If no sessions are in the not joined state or the protocol that corresponds to handle does not support the notion of join/leave for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.sessions_joined</key>
      <value>The handles of all sessions belonging to the specified handle that are joined. This key is returned only if the mode is set to handles and the port_filter argument is omitted. If no sessions are joined or the protocol that corresponds to handle does not support the notion of leave/join for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.sessions_down</key>
      <value>The handles of all sessions belonging to the specified handle that are down. This key is returned only if the mode is set to handles and the port_filter argument is omitted. If no sessions are down or the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned. </value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.sessions_up</key>
      <value>The handles of all sessions belonging to the specified handle that are up. This key is returned only if the mode is set to handles and the port_filter argument is omitted. If no sessions are up or the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.sessions_not_started</key>
      <value>The handles of all sessions belonging to the specified handle that are not started. This key is returned only if the mode is set to handles and the port_filter argument is omitted. If all sessions are started, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.sessions_total</key>
      <value>The handles of all sessions belonging to the specified handle that are configured. This key is returned only if the mode is set to handles and the port_filter argument is omitted. If no sessions are configured, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.[&lt;port_filter&gt;].sessions_not_joined</key>
      <value>The handles of all sessions belonging to the specified handle that are not joined on the specified port. This key is returned only if the mode is set to handles and the port_filter argument is given. If no sessions are in the not joined state or the protocol that corresponds to handle does not support the notion of leave/join for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.[&lt;port_filter&gt;].sessions_joined</key>
      <value>The handles of all sessions belonging to the specified handle that are joined on the specified port. This key is returned only if the mode is set to handles and the port_filter argument is given. If no sessions are joined or the protocol that corresponds to handle does not support the notion of leave/join for its sessions, this key will not be returned.</value>
      <tag />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.[&lt;port_filter&gt;].sessions_down</key>
      <value>The handles of all sessions belonging to the specified handle that are down on the specified port. This key is returned only if the mode is set to handles and the port_filter argument is given. If no sessions are down or the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.[&lt;port_filter&gt;].sessions_up</key>
      <value>The handles of all sessions belonging to the specified handle that are up on the specified port. This key is returned only if the mode is set to handles and the port_filter argument is given. If no sessions are up or the protocol that corresponds to handle does not support the notion of start/stop for its sessions, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.[&lt;port_filter&gt;].sessions_not_started</key>
      <value>The handles of all sessions belonging to the specified handle that are not started on the specified port. This key is returned only if the mode is set to handles and the port_filter argument is given. If all sessions are started, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;handle&gt;].handles.[&lt;port_filter&gt;].sessions_total</key>
      <value>The handles of all sessions belonging to the specified handle that are configured on the specified port. This key is returned only if the mode is set to handles and the port_filter argument is given. If no sessions are configured, this key will not be returned.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].protocol</key>
      <value>Name of the protocol. This is used as a grouping key when mode is global_per_protocol (default). This is returned for global_per_protocol mode.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].port_name</key>
      <value>Name of the port. This is used as grouping key when mode is global_per_port. This is returned for global_per_port mode.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].sessions_up</key>
      <value>The number of sessions which are up. This is returned for global_per_protocol or global_per_port modes.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].sessions_down</key>
      <value>The number of sessions which are down. This is returned for global_per_protocol or global_per_port modes.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].sessions_not_started</key>
      <value>The number of sessions which are not started. This is returned for global_per_protocol or global_per_port modes.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].sessions_total</key>
      <value>Total number of sessions. This is returned for global_per_protocol or global_per_port modes.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].setup_avg_rate</key>
      <value>This value represents the Average Setup Rate. This is returned for global_per_protocol mode.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>[&lt;grouping_key&gt;].teardown_avg_rate</key>
      <value>This value represents the Average Teardown Rate. This is returned for global_per_protocol mode.</value>
      <tag value="" />
    </returnValue>
  </returnValues>
  <sampleInput>
    <sampleInputElem supportType="ixNetworkCpfSupport" />
  </sampleInput>
  <sampleOutput>
    <sampleOutputElem supportType="ixNetworkCpfSupport" />
  </sampleOutput>
  <notes>
    <note supportType="ixNetworkCpfSupport"> </note>
  </notes>
  <seeAlso>
    <seeAlsoElem supportType="ixNetworkCpfSupport" />
  </seeAlso>
  <examples>
    <example supportType="ixNetworkCpfSupport" />
  </examples>
  <code_examples />
</method>