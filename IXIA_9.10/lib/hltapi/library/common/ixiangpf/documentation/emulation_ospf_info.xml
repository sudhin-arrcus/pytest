<?xml version="1.0" encoding="utf-8"?>
<method xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="emulation_ospf_info" name_robot="Emulation Ospf Info" displayPriority="5" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="false" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="false" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="false" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="false" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" Lang="none">
  <description supportType="ixNetworkSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixLoadSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixHalOrProtocolSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixNetworkCpfSupport" contentType="new" target="noTarget">This procedure retrieves information about the OSPF sessions and returns statistical information about the configuration.</description>
  <chapter>OSPF APIs</chapter>
  <arguments>
    <argument name="port_handle" definedBy="ciscoDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>The port from which to extract OSPF data. 
       One of the two parameters is required: port_handle/handle.</text>
        </description>
        <restriction type="VALUETYPE" valueType="REGEXP" value="^[0-9]+/[0-9]+/[0-9]+$" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="handle" definedBy="ciscoDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="true" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="true" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="true" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="true" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>The routers from which to extract OSPF data. 
       One of the two parameters is required: port_handle/handle.</text>
        </description>
        <restriction type="VALUETYPE" valueType="ANY" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="mode" definedBy="ciscoDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="true">
        <description>
          <text>The action that should be taken.</text>
          <choices>
            <choice>
              <choiceName>aggregate_stats</choiceName>
              <choiceText>retrieve stats aggregated per port/handle</choiceText>
            </choice>
            <choice>
              <choiceName>learned_info</choiceName>
              <choiceText>retrieve basic learned information by the OSPF protocol</choiceText>
            </choice>
            <choice>
              <choiceName>detailed_learned_info</choiceName>
              <choiceText>retrieve detailed learned information by the OSPF protocol</choiceText>
            </choice>
            <choice>
              <choiceName>clear_stats</choiceName>
              <choiceText>clear stats</choiceText>
            </choice>
            <choice>
              <choiceName>session</choiceName>
              <choiceText>retrieves non-aggregated stats per handle</choiceText>
            </choice>
          </choices>
        </description>
        <restriction type="VALUETYPE" valueType="CHOICES" value="aggregate_stats learned_info detailed_learned_info clear_stats session" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="execution_timeout" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>This is the timeout for the function.
				The setting is in seconds.
				Setting this setting to 60 it will mean that the command must complete in under 60 seconds.
				If the command will last more than 60 seconds the command will be terminated by force.
				This flag can be used to prevent dead locks occuring in IxNetwork.</text>
        </description>
        <restriction type="DEFAULT" valueType="ANY" value="1800" />
        <restriction type="VALUETYPE" valueType="NUMERIC" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="session_type" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>The Type of OSPF Router - OSPFv2 or OSPFv3.</text>
          <choices>
            <choice>
              <choiceName>ospfv2</choiceName>
              <choiceText>OSPF v2</choiceText>
            </choice>
            <choice>
              <choiceName>ospfv3</choiceName>
              <choiceText>OSPF v3</choiceText>
            </choice>
          </choices>
        </description>
        <restriction type="VALUETYPE" valueType="CHOICES" value="ospfv2 ospfv3" />
        <restriction type="DEFAULT" valueType="ANY" value="ospfv2" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
  </arguments>
  <returnValues>
    <returnValue definedBy="ixiaDefined" supportType="ixNetworkCpfSupport">
      <key>handle</key>
      <value>A list containing the  protocol stack handles that were added by the command (if any).</value>
    </returnValue>
    <returnValue definedBy="ixiaDefined" supportType="ixNetworkCpfSupport">
      <key>handles</key>
      <value>A list containing individual interface, session and/or router handles that were added by the command (if any). Please note that this key will be omitted if the current session or command were run with -return_detailed_handles 0.</value>
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>status</key>
      <value>$::SUCCESS | $::FAILURE</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>log</key>
      <value>On status of failure, gives detailed information.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>Learned info:</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.adv_router_id</key>
      <value>the advertising router ID</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.age</key>
      <value>the age of the learned LSA</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.link_state_id</key>
      <value>the LinkState ID</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.lsa_type</key>
      <value>the LSA type</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.seq_number</key>
      <value>the sequence number of the LSA</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.adv_router_id</key>
      <value>the advertising router ID</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.age</key>
      <value>the age of the learned LSA</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.link_state_id</key>
      <value>the LinkState ID</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.lsa_type</key>
      <value>the LSA type</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.seq_number</key>
      <value>the sequence number of the LSA</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.prefix_v4_address</key>
      <value>the ipv4 address prefix learned</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.prefix_v6_address</key>
      <value>the ipv6 address prefix learned</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;interface_handle&gt;.&lt;learned_info&gt;.prefix_length</key>
      <value>prefix length of learned ipv4/ipv6 address</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>Aggregate stats:</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.port_name</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.sessions_configured</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.full_neighbors</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.session_flap_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_down_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_attempt_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_init_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_2way_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_exstart_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_exchange_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_loading_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.neighbor_full_count</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.hellos_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.hellos_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.database_description_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.database_description_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_request_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_request_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_update_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_update_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_ack_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_ack_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_advertisement_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.linkstate_advertisement_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.router_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.router_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.network_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.network_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.external_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.external_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.summary_iplsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.summary_iplsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.summary_aslsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.summary_aslsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.nssa_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.nssa_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.opaque_local_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.opaque_local_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.opaque_area_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.opaque_area_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.opaque_domain_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.opaque_domain_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.grace_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.helpermode_attempted</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.helpermode_failed</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.rate_control_blocked_flood_lsupdate</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.lsa_acknowledged</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.lsa_acknowledge_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.link_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.link_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.intraarea_prefix_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.intraarea_prefix_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.interarea_prefix_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.interarea_prefix_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.interarea_router_lsa_tx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.interarea_router_lsa_rx</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;handle&gt;.aggregate.retrasmitted_lsa</key>
      <value />
      <tag value="" />
    </returnValue>
  </returnValues>
  <sampleInput>
    <sampleInputElem supportType="ixNetworkCpfSupport" />
  </sampleInput>
  <sampleOutput>
    <sampleOutputElem supportType="ixNetworkCpfSupport" />
  </sampleOutput>
  <notes>
    <note supportType="ixNetworkCpfSupport"> If the current session or command was run with -return_detailed_handles 0 the following keys will be omitted from the command response:  handles</note>
  </notes>
  <seeAlso>
    <seeAlsoElem supportType="ixNetworkCpfSupport" />
  </seeAlso>
  <examples>
    <example supportType="ixNetworkCpfSupport" />
  </examples>
  <code_examples>
    <example lang="tcl" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ::ixiangpf::emulation_ospf_info

set ospf_stats [::ixiangpf::emulation_ospf_info 	    \
	-mode   		  session 		    \
	-handle 		  <ospf_handle_1> 	    \
]

# The command above will generate output as shown below:
# {status 1} {ospfHandle 
# {{session {{status up} {information none} {ospfIfaceState pointToPoint} 
# {ospfNeighborState full} {hellos_tx 106} {hellos_rx 106} {database_description_tx 10} 
# {database_description_rx 9} {linkstate_request_tx 8} {linkstate_request_rx 1} 
# {linkstate_update_tx 1} {linkstate_update_rx 15} {linkstate_ack_tx 14} {linkstate_ack_rx 1} 
# {linkstate_advertisement_tx 13} {linkstate_advertisement_rx 501} {lsa_acknowledged 501} 
# {lsa_acknowledge_rx 13}}}}}
	]]></example>
    <example lang="python" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ixiangpf.emulation_ospf_info

status = ixiangpf.emulation_ospf_info(
    mode                                                        = "session",
    handle                                                      = "<ospf_handle_1>",
)
# The command above will generate output as shown below:
# {'status' : '1' , 'ospfHandle' : 
# {session : {'status' :  'up', 'information' : 'none', 'ospfIfaceState' : 'pointToPoint', 
# 'ospfNeighborState' : 'full', 'hellos_tx' : '106' , 'hellos_rx' : '106' ,'database_description_tx' : '10', 
# 'database_description_rx' : '9', 'linkstate_request_tx' : '8', 'linkstate_request_rx' : '1', 
# 'linkstate_update_tx' : '1', 'linkstate_update_rx' : '15', 'linkstate_ack_tx' : '14', 'linkstate_ack_rx' : '1', 
# 'linkstate_advertisement_tx' : '13', 'linkstate_advertisement_rx' : '501', 'lsa_acknowledged' : '501', 
# 'lsa_acknowledge_rx' : '13'}}}}}
    ]]></example>
    <example lang="perl" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ixiangpf::emulation_ospf_info
my $ospf_stats = ixiangpf::emulation_ospf_info ({
    mode                                                        => "session",
    handle                                                      => "<ospf_handle_1>",
});
# The command above will generate output as shown below:
# {status 1} {ospfHandle 
# {{session {{status up} {information none} {ospfIfaceState pointToPoint} 
# {ospfNeighborState full} {hellos_tx 106} {hellos_rx 106} {database_description_tx 10} 
# {database_description_rx 9} {linkstate_request_tx 8} {linkstate_request_rx 1} 
# {linkstate_update_tx 1} {linkstate_update_rx 15} {linkstate_ack_tx 14} {linkstate_ack_rx 1} 
# {linkstate_advertisement_tx 13} {linkstate_advertisement_rx 501} {lsa_acknowledged 501} 
# {lsa_acknowledge_rx 13}}}}}	
	]]></example>
    <example lang="robot" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- Emulation Ospf Info

   ${result} =  Emulation Ospf Info  mode=session   handle=<ospf_handle_1>  
   ${status} =  Get From Dictionary  ${result}  status
   Run Keyword If  '${status}' != '1'  FAIL  "Error: Status is not SUCCESS"  ELSE  Log  "Status is SUCCESS"
   ${ospf_stats} =  Get From Dictionary  ${result}  ospf_stats

# The command above will generate output as shown below:
# {'status' : '1' , 'ospfHandle' : 
# {session : {'status' :  'up', 'information' : 'none', 'ospfIfaceState' : 'pointToPoint', 
# 'ospfNeighborState' : 'full', 'hellos_tx' : '106' , 'hellos_rx' : '106' ,'database_description_tx' : '10', 
# 'database_description_rx' : '9', 'linkstate_request_tx' : '8', 'linkstate_request_rx' : '1', 
# 'linkstate_update_tx' : '1', 'linkstate_update_rx' : '15', 'linkstate_ack_tx' : '14', 'linkstate_ack_rx' : '1', 
# 'linkstate_advertisement_tx' : '13', 'linkstate_advertisement_rx' : '501', 'lsa_acknowledged' : '501', 
# 'lsa_acknowledge_rx' : '13'}}}}}  
	]]></example>
  </code_examples>
</method>