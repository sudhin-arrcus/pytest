<?xml version="1.0" encoding="utf-8"?>
<method xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="emulation_bfd_control" name_robot="Emulation Bfd Control" displayPriority="1" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="true" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="true" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="true" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="false" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" Lang="none">
  <description supportType="ixNetworkSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixLoadSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixHalOrProtocolSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixNetworkCpfSupport" contentType="new" target="noTarget">This procedure starts/stops a BFD configuration.</description>
  <arguments>
    <argument name="mode" definedBy="ciscoDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="true" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="true" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="true" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="true" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="true">
        <description>
          <text>The action to take on the handle provided: start/stop the protocol.</text>
          <choices>
            <choice>
              <choiceName>start</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>stop</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>restart</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>abort</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>resume_pdu</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>stop_pdu</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>demand_mode_disable</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>demand_mode_enable</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>initiate_poll</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>set_admin_down</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>set_admin_up</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>set_diagnostic_state</choiceName>
              <choiceText />
            </choice>
          </choices>
        </description>
        <restriction type="VALUETYPE" valueType="CHOICES" value="start stop restart abort resume_pdu stop_pdu demand_mode_disable demand_mode_enable initiate_poll set_admin_down set_admin_up set_diagnostic_state" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="port_handle" definedBy="CiscoDefinedNotSupported" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="false" ixNetworkCpfPythonScriptgenSupport="false" ixNetworkCpfPerlApiSupport="false" ixNetworkCpfPerlScriptgenSupport="false" ixNetworkCpfTclApiSupport="false" ixNetworkCpfTclScriptgenSupport="false" ixNetworkCpfRobotApiSupport="false" ixNetworkCpfRobotScriptgenSupport="false" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="handle" definedBy="ciscoDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>The router handle or router interface handle or session handle where 
       BFD emulation will be started/stopped. This action will be applied to 
       the port where -handle was created.
       One of the two parameters is required: handle.</text>
        </description>
        <restriction type="VALUETYPE" valueType="ANY" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="protocol_name" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>This is session used by protocol</text>
          <choices>
            <choice>
              <choiceName>isis</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>bfd</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>ospf</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>ospfv3</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>pim</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>bgp</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>ldp</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>rsvp</choiceName>
              <choiceText />
            </choice>
          </choices>
        </description>
        <restriction type="VALUETYPE" valueType="CHOICES" value="isis bfd ospf ospfv3 pim bgp ldp rsvp" />
        <restriction type="DEFAULT" valueType="ANY" value="bfd" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="resume_pdu" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="stop_pdu" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="demand_mode_disable" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="demand_mode_enable" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="initiate_poll" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="set_admin_down" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="set_admin_up" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="set_diagnostic_state" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="diagnostic_code" definedBy="ixiaDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="false">
        <description>
          <text>This is the diagnostic code</text>
          <choices>
            <choice>
              <choiceName>administrativelyDown</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>concatenated_path_down</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>control_detection_time_expired</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>echo_function_failed</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>forwarding_plane_reset</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>neighbour_signaled_session_down</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>path_down</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>reserved</choiceName>
              <choiceText />
            </choice>
            <choice>
              <choiceName>reverse_concatenated_path_down</choiceName>
              <choiceText />
            </choice>
          </choices>
        </description>
        <restriction type="VALUETYPE" valueType="CHOICES" value="administratively_down concatenated_path_down control_detection_time_expired echo_function_failed forwarding_plane_reset neighbour_signaled_session_down path_down reserved reverse_concatenated_path_down" />
        <restriction type="DEFAULT" valueType="ANY" value="control_detection_time_expired" />
        <restriction type="DEPENDENCY" valueType="ANY" argumentId="mode" argumentValue="set_diagnostic_state" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
  </arguments>
  <returnValues>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>status</key>
      <value>$::SUCCESS | $::FAILURE</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>log</key>
      <value>On status of failure, gives detailed information.</value>
      <tag value="" />
    </returnValue>
  </returnValues>
  <sampleInput>
    <sampleInputElem supportType="ixNetworkCpfSupport" />
  </sampleInput>
  <sampleOutput>
    <sampleOutputElem supportType="ixNetworkCpfSupport" />
  </sampleOutput>
  <notes>
    <note supportType="ixNetworkCpfSupport"> </note>
  </notes>
  <seeAlso>
    <seeAlsoElem supportType="ixNetworkCpfSupport" />
  </seeAlso>
  <examples>
    <example supportType="ixNetworkCpfSupport" />
  </examples>
  <code_examples>
    <example lang="tcl" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ::ixiangpf::emulation_bfd_control

# This example will start BFD

set bfd_started [::ixiangpf::emulation_bfd_control          \
    -mode                         start                     \
    -handle                       <bfd_interface_handle>    \
]

# The command above will generate output as shown below:
# {status 1}

# This example will stop the PDU transmission

set pdu_stopped [::ixiangpf::emulation_bfd_control          \
    -mode                         stop_pdu                  \
    -handle                       <bfd_interface_handle>    \
    -protocol_name                bfd                       \
]

# The command above will generate output as shown below:
# {status 1}
	]]></example>
    <example lang="python" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ixiangpf.emulation_bfd_control
# This example will start BFD

status = ixiangpf.emulation_bfd_control(
    mode                                                        = "start",
    handle                                                      = "<bfd_interface_handle>",
)
# The command above will generate output as shown below:
# {'status' : '1'}
# This example will stop the PDU transmission

status = ixiangpf.emulation_bfd_control(
    mode                                                        = "stop_pdu",
    handle                                                      = "<bfd_interface_handle>",
    protocol_name                                               = "bfd",
)
# The command above will generate output as shown below:
# {'status' : '1'}
    ]]></example>
    <example lang="perl" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ixiangpf::emulation_bfd_control
# This example will start BFD
my $bfd_started = ixiangpf::emulation_bfd_control ({
    mode                                                        => "start",
    handle                                                      => "<bfd_interface_handle>",
});
# The command above will generate output as shown below:
# {status 1}
# This example will stop the PDU transmission
my $pdu_stopped = ixiangpf::emulation_bfd_control ({
    mode                                                        => "stop_pdu",
    handle                                                      => "<bfd_interface_handle>",
    protocol_name                                               => "bfd",
});
# The command above will generate output as shown below:
# {status 1}	
	]]></example>
    <example lang="robot" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- Emulation Bfd Control
# This example will start BFD

   ${result} =  Emulation Bfd Control  mode=start   handle=<bfd_interface_handle>  
   ${status} =  Get From Dictionary  ${result}  status
   Run Keyword If  '${status}' != '1'  FAIL  "Error: Status is not SUCCESS"  ELSE  Log  "Status is SUCCESS"
   ${bfd_started} =  Get From Dictionary  ${result}  bfd_started

# The command above will generate output as shown below:
# {'status' : '1'}
# This example will stop the PDU transmission

   ${result} =  Emulation Bfd Control  mode=stop_pdu   handle=<bfd_interface_handle>   protocol_name=bfd  
   ${status} =  Get From Dictionary  ${result}  status
   Run Keyword If  '${status}' != '1'  FAIL  "Error: Status is not SUCCESS"  ELSE  Log  "Status is SUCCESS"
   ${pdu_stopped} =  Get From Dictionary  ${result}  pdu_stopped

# The command above will generate output as shown below:
# {'status' : '1'}
  
	]]></example>
  </code_examples>
</method>