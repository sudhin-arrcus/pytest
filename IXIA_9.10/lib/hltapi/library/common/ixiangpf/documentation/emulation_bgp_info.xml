<?xml version="1.0" encoding="utf-8"?>
<method xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="emulation_bgp_info" name_robot="Emulation Bgp Info" displayPriority="4" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="false" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="false" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="false" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="false" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" Lang="none">
  <description supportType="ixNetworkSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixLoadSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixHalOrProtocolSupport" contentType="noContent" target="noTarget" />
  <description supportType="ixNetworkCpfSupport" contentType="new" target="noTarget">This procedure retrieves information on Ixia BGP Router  statistics , learned routing information from BGP Router.</description>
  <chapter>BGP APIs</chapter>
  <arguments>
    <argument name="mode" definedBy="ciscoDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="supportedInOtherCommand" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="supportedInOtherCommand" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="supportedInOtherCommand" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="supportedInOtherCommand" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="true">
        <description>
          <text>Specifies action to be taken on the BGP or BGP+ Peer handle</text>
          <choices>
            <choice>
              <choiceName>stats</choiceName>
              <choiceText>returns Tx and Rx statistics of different BGP messages.</choiceText>
            </choice>
            <choice>
              <choiceName>stats_per_device_group</choiceName>
              <choiceText>returns Tx and Rx statistics of different BGP messages per device group.</choiceText>
            </choice>
            <choice>
              <choiceName>clear_stats</choiceName>
              <choiceText>clears Tx and Rx statistics of different BGP messages.</choiceText>
            </choice>
            <choice>
              <choiceName>settings</choiceName>
              <choiceText>returns tester IP address and AS number.</choiceText>
            </choice>
            <choice>
              <choiceName>neighbors</choiceName>
              <choiceText>returns SUT IP address.</choiceText>
            </choice>
            <choice>
              <choiceName>session</choiceName>
              <choiceText>retrieves non-aggregated stats per handle.</choiceText>
            </choice>
            <choice>
              <choiceName>labels</choiceName>
              <choiceText>returns MPLS label information like label, network,
                next_hop, prefix_len, distinguisher (only for MPLS VPN),
                version(ipV4|ipV6), type (mpls|mplsVpn)</choiceText>
            </choice>
            <choice>
              <choiceName>learned_info</choiceName>
              <choiceText>retrieve learned information by the BGP protocol</choiceText>
            </choice>
            <choice>
              <choiceName>clear_learned_info</choiceName>
              <choiceText>clears the learned information by the BGP protocol</choiceText>
            </choice>
          </choices>
        </description>
        <restriction type="VALUETYPE" valueType="CHOICES" value="stats clear_stats settings session neighbors labels learned_info clear_learned_info stats_per_device_group" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
    <argument name="handle" definedBy="ciscoDefined" ixHalOrProtocolPythonApiSupport="false" ixHalOrProtocolPythonScriptgenSupport="false" ixHalOrProtocolPerlApiSupport="false" ixHalOrProtocolPerlScriptgenSupport="false" ixHalOrProtocolTclApiSupport="false" ixHalOrProtocolTclScriptgenSupport="false" ixLoadPythonApiSupport="false" ixLoadPythonScriptgenSupport="false" ixLoadPerlApiSupport="false" ixLoadPerlScriptgenSupport="false" ixLoadTclApiSupport="false" ixLoadTclScriptgenSupport="false" ixNetworkCpfPythonApiSupport="true" ixNetworkCpfPythonScriptgenSupport="true" ixNetworkCpfPerlApiSupport="true" ixNetworkCpfPerlScriptgenSupport="true" ixNetworkCpfTclApiSupport="true" ixNetworkCpfTclScriptgenSupport="true" ixNetworkCpfRobotApiSupport="true" ixNetworkCpfRobotScriptgenSupport="true" ixNetworkPythonApiSupport="false" ixNetworkPythonScriptgenSupport="false" ixNetworkPerlApiSupport="false" ixNetworkPerlScriptgenSupport="false" ixNetworkTclApiSupport="false" ixNetworkTclScriptgenSupport="false" ixNetworkRobotApiSupport="false" ixNetworkRobotScriptgenSupport="false" lang="false">
      <ixHalOrProtocolSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkSupport contentType="noContent" target="noTarget" mandatory="false" />
      <ixNetworkCpfSupport contentType="new" target="noTarget" mandatory="true">
        <description>
          <text>The BGP session handle or L3 Site handle or L2 Site handle.</text>
        </description>
        <restriction type="VALUETYPE" valueType="ANY" />
      </ixNetworkCpfSupport>
      <ixLoadSupport contentType="noContent" target="noTarget" mandatory="false" />
    </argument>
  </arguments>
  <returnValues>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>status</key>
      <value>$::SUCCESS | $::FAILURE</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>log</key>
      <value>On status of failure, gives detailed information.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key />
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>Statistics retrieved for -mode stats, IxTclProtocols.</key>
      <value>These stats are per BGP neighbor. For obtaining these statistics, you need to call emulation_bgp_control -mode statistic first.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ip_address</key>
      <value>a.b.c.d</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>keepalive_tx</key>
      <value>number of keepalive messages sent</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>keepalive_rx</key>
      <value>number of keepalive messages received</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>notify_tx</key>
      <value>number of notify messages sent</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>notify_rx</key>
      <value>number of notify messages received</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>num_node_routes</key>
      <value>number of routes in session</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>open_tx</key>
      <value>number of open messages sent</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>open_rx</key>
      <value>number of open messages received</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>peers</key>
      <value>BGP peer IP address (a.b.c.e)</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>routing_protocol</key>
      <value>BGP session type</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>update_tx</key>
      <value>number of updates sent</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>update_rx</key>
      <value>number of updates received</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>routes_advertised_tx</key>
      <value>number of advertised routes sent</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>routes_advertised_rx</key>
      <value>number of advertised routes received</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key />
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>Statistics retrieved for -mode stats, IxTclNetwork.</key>
      <value>These stats are aggregated per port. As a handle you can specify a BGP session handle or L3 Site handle, but the stats will be retrieved per port.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>port_name</key>
      <value>The port name.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>sessions_configured</key>
      <value>The number of BGP neighbors configured.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>sessions_established</key>
      <value>The number of BGP sessions established.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>messages_tx</key>
      <value>The total number of all types of BGP messages sent.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>messages_rx</key>
      <value>The total number of all types of BGP messages received.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>update_tx</key>
      <value>The total number of BGP route updates sent.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>update_rx</key>
      <value>The total number of BGP route updates received.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>routes_advertised</key>
      <value>The number of routes advertised.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>routes_withdrawn</key>
      <value>The number of routes withdrawn.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>routes_rx</key>
      <value>The number of routes received.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>route_withdraws_rx</key>
      <value>The number of update messages received which have a non-empty Withdrawn Routes field.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>open_tx</key>
      <value>The number of open messages sent.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>open_rx</key>
      <value>The number of open messages received.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>keepalive_tx</key>
      <value>The total number of keepalive messages sent. They cannot be sent more often than 1 per second,but must be sent often enough to keep the hold timer from expiring.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>keepalive_rx</key>
      <value>The total number of keepalive messages received.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>notify_tx</key>
      <value>The total number of notification messages sent.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>notify_rx</key>
      <value>The number of notification messages received.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>starts_occurred</key>
      <value>The number of BGP Start Events which have occurred.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>graceful_restart_attempted</key>
      <value>The number of times that graceful restarts were attempted.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>graceful_restart_failed</key>
      <value>The number of times that graceful restarts were attempted but failed.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>routes_rx_graceful_restart</key>
      <value>The number of BGP routes received during the process of graceful restart.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>idle_state</key>
      <value>The number of BGP neighbors that are in State Machine State Idle.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>connect_state</key>
      <value>The number of BGP neighbors that are in State Machine State Connect.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>active_state</key>
      <value>The number of BGP neighbors that are in State Machine State Active.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>opentx_state</key>
      <value>The number of BGP neighbors that are in State Machine State OpenTx.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>openconfirm_state</key>
      <value>The number of BGP neighbors that are in State Machine State OpenConfirm.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>established_state</key>
      <value>The number of BGP neighbors that are in State Machine State Established.</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_node_advertised_tx</key>
      <value>ls_node_advertised_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_node_advertised_rx</key>
      <value>ls_node_advertised_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_node_withdrawn_tx</key>
      <value>ls_node_withdrawn_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_node_withdrawn_rx</key>
      <value>ls_node_withdrawn_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_link_advertised_tx</key>
      <value>ls_link_advertised_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_link_advertised_rx</key>
      <value>ls_link_advertised_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_link_withdrawn_tx</key>
      <value>ls_link_withdrawn_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_link_withdrawn_rx</key>
      <value>ls_link_withdrawn_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv4_prefix_advertised_tx</key>
      <value>ls_ipv4_prefix_advertised_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv4_prefix_advertised_rx</key>
      <value>ls_ipv4_prefix_advertised_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv4_prefix_withdrawn_rx</key>
      <value>ls_ipv4_prefix_withdrawn_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv4_prefix_withdrawn_tx</key>
      <value>ls_ipv4_prefix_withdrawn_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv6_prefix_advertised_tx</key>
      <value>ls_ipv6_prefix_advertised_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv6_prefix_advertised_rx</key>
      <value>ls_ipv6_prefix_advertised_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv6_prefix_withdrawn_rx</key>
      <value>ls_ipv6_prefix_withdrawn_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ls_ipv6_prefix_withdrawn_tx</key>
      <value>ls_ipv6_prefix_withdrawn_tx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>error_link_state_nlri_rx</key>
      <value>error_link_state_nlri_rx</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key />
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>Statistics retrieved for -mode neighbors:</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>peers</key>
      <value>List of BGP peers (a.b.c.e)</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key />
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>Statistics retrieved for -mode settings:</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>ip_address</key>
      <value>a.b.c.d</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>asn</key>
      <value>integer</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key />
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>Statistics retrieved for -mode labels:</key>
      <value />
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.distinguisher</key>
      <value>only for MPLS VPN</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.label</key>
      <value>integer</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.neighbor</key>
      <value>ip address (v4 or v6)</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.network</key>
      <value>ip address (v4 or v6)</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.next_hop</key>
      <value>ip address (v4 or v6)</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.prefix_len</key>
      <value>integer</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.type</key>
      <value>mpls|mplsVpn</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.version</key>
      <value>ipV4|ipV6</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.site_id</key>
      <value>integer</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.control_word</key>
      <value>boolean</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.block_offset</key>
      <value>integer</value>
      <tag value="" />
    </returnValue>
    <returnValue definedBy="ciscoDefined" supportType="ixNetworkCpfSupport">
      <key>&lt;number&gt;.label_</key>
      <value>value:integer</value>
      <tag value="" />
    </returnValue>
  </returnValues>
  <sampleInput>
    <sampleInputElem supportType="ixNetworkCpfSupport">.</sampleInputElem>
  </sampleInput>
  <sampleOutput>
    <sampleOutputElem supportType="ixNetworkCpfSupport">.</sampleOutputElem>
  </sampleOutput>
  <notes>
    <note supportType="ixNetworkCpfSupport">Coded versus functional specification. </note>
  </notes>
  <seeAlso>
    <seeAlsoElem supportType="ixNetworkCpfSupport" />
  </seeAlso>
  <examples>
    <example supportType="ixNetworkCpfSupport" />
  </examples>
  <code_examples>
    <example lang="tcl" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ::ixiangpf::emulation_bgp_info

# This example will fetch the statistics for BGP router

set bgp_stats [::ixiangpf::emulation_bgp_info 		     	\
	-mode          		  stats			        \
	-handle 		  <bgp_handle> 		     	\
]

# The command above will generate output as shown below:
# {status 1} {{10GE LAN - 001} {{aggregate {{status started} {port_name {10GE LAN - 001}} 
# {sessions_configured 1} {sessions_established 1} {messages_tx 22} {messages_rx 22} {update_tx 5} 
# {update_rx 5} {routes_advertised 347} {routes_withdrawn 0} {routes_rx 500} {route_withdraws_rx 0} 
# {open_tx 1} {open_rx 1} {keepalive_tx 16} {keepalive_rx 16} {notify_tx 0} {notify_rx 0} {starts_occurred 1} 
# {graceful_restart_attempted 0} {graceful_restart_failed 0} {routes_rx_graceful_restart 0} {idle_state 0} 
# {connect_state 0} {active_state 0} {opentx_state 0} {openconfirm_state 0} {established_state 1} {sessions_up 1} 
# {sessions_down 0} {sessions_not_started 0} {sessions_total 1} {session_flap_count 0} {ceases_tx 0} {ceases_rx 0} 
# {state_machine_errors_tx 0} {state_machine_errors_rx 0} {hold_timer_expireds_tx 0} {Hold_timer_expireds_rx 0} 
# {invalid_opens_tx 0} {invalid_opens_rx 0} {unsupported_versions_rx 0} {bad_peer_as_rx 0} {bad_bgp_id_rx 0} 
# {unsupported_parameters_rx 0} {authentication_failures_rx 0} {non_acceptable_hold_times_rx 0} 
# {invalid_open_suberror_unspecified 0} {update_errors_tx 0} {update_errors_rx 0} {malformed_attribute_list 0} 
# {unrecognized_well_known_attribute 0} {missing_well_known_attribute 0} {attribute_flags_error 0} 
# {attribute_length_error 0} {invalid_origin_attribute 0} {as_routing_loop 0} {invalid_next_hop_attribute 0} 
# {optional_attribute_error 0} {invalid_network_field 0} {malformed_as_path 0} {invalid_update_suberror_unspecified 0} 
# {header_errors_tx 0} {header_errors_rx 0} {connection_not_synchronized 0} {bad_message_length 0} {bad_message_type 0} 
# {invalid_header_suberror_unspecified 0} {unspecified_error_tx 0} {unspecified_error_rx 0} {external_connects_rx 0} 
# {external_connects_accepted 0} {ls_node_advertised_tx 0} {ls_node_advertised_rx 0} {ls_node_withdrawn_tx 0} 
# {ls_node_withdrawn_rx 0} {ls_link_advertised_tx 0} {ls_link_advertised_rx 0} {ls_link_withdrawn_tx 0} {ls_link_withdrawn_rx 0} 
# {ls_ipv4_prefix_advertised_tx 0} {ls_ipv4_prefix_advertised_rx 0} {ls_ipv4_prefix_withdrawn_tx 0} {ls_ipv4_prefix_withdrawn_rx 0} 
# {ls_ipv6_prefix_advertised_tx 0} {ls_ipv6_prefix_advertised_rx 0} {ls_ipv6_prefix_withdrawn_tx 0} {ls_ipv6_prefix_withdrawn_rx 0} 
# {error_link_state_nlri_rx 0}}}}}
	]]></example>
    <example lang="python" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ixiangpf.emulation_bgp_info
# This example will fetch the statistics for BGP router

status = ixiangpf.emulation_bgp_info(
    mode                                                        = "stats",
    handle                                                      = "<bgp_handle>",
)

# The command above will generate output as shown below:
# {'status': '1', '10GE LAN - 001': {'aggregate': {'authentication_failures_rx': '0', 'idle_state': '0', 
# 'ls_ipv6_prefix_withdrawn_rx': '0', 'ls_ipv4_prefix_withdrawn_tx': '0', 'routes_rx_graceful_restart': '0', 
# 'ls_node_advertised_tx': '0', 'openconfirm_state': '0', 'invalid_update_suberror_unspecified': '0', 'open_rx': '1', 
# 'bad_message_type': '0', 'ls_ipv6_prefix_advertised_tx': '0', 'sessions_not_started': '0', 'Hold_timer_expireds_rx': '0', 
# 'notify_rx': '0', 'messages_tx': '15', 'sessions_configured': '1', 'invalid_open_suberror_unspecified': '0', 
# 'state_machine_errors_rx': '0', 'port_name': '10GE LAN - 001', 'unrecognized_well_known_attribute': '0', 'keepalive_tx': '9', 
# 'invalid_opens_tx': '0', 'ls_ipv4_prefix_advertised_rx': '0', 'routes_rx': '500', 'ls_link_withdrawn_tx': '0', 
# 'ls_ipv4_prefix_withdrawn_rx': '0', 'optional_attribute_error': '0', 'ls_ipv6_prefix_withdrawn_tx': '0', 'routes_withdrawn': '0', 
# 'unsupported_versions_rx': '0', 'session_flap_count': '0', 'hold_timer_expireds_tx': '0', 'graceful_restart_failed': '0', 'external_connects_accepted': '0', 
# 'ls_ipv6_prefix_advertised_rx': '0', 'open_tx': '1', 'established_state': '1', 'malformed_as_path': '0', 'routes_advertised': '408', 
# 'starts_occurred': '1', 'bad_bgp_id_rx': '0', 'invalid_next_hop_attribute': '0', 'connection_not_synchronized': '0', 'bad_peer_as_rx': '0', 
# 'invalid_opens_rx': '0', 'as_routing_loop': '0', 'opentx_state': '0', 'keepalive_rx': '9', 'update_errors_tx': '0', 'ls_link_withdrawn_rx': '0', 
# 'ls_ipv4_prefix_advertised_tx': '0', 'missing_well_known_attribute': '0', 'malformed_attribute_list': '0', 'unspecified_error_tx': '0', 
# 'invalid_origin_attribute': '0', 'sessions_established': '1', 'connect_state': '0', 'sessions_up': '1', 'non_acceptable_hold_times_rx': '0', 
# 'ls_node_withdrawn_tx': '0', 'ls_link_advertised_rx': '0', 'update_tx': '5', 'sessions_total': '1', 'active_state': '0', 'header_errors_tx': '0', 
# 'invalid_header_suberror_unspecified': '0', 'update_errors_rx': '0', 'unsupported_parameters_rx': '0', 'graceful_restart_attempted': '0', 
# 'bad_message_length': '0', 'attribute_flags_error': '0', 'route_withdraws_rx': '0', 'unspecified_error_rx': '0', 'messages_rx': '15', 
# 'attribute_length_error': '0', 'error_link_state_nlri_rx': '0', 'ceases_rx': '0', 'ceases_tx': '0', 'status': 'started', 'ls_node_withdrawn_rx': '0', 
# 'ls_node_advertised_rx': '0', 'ls_link_advertised_tx': '0', 'invalid_network_field': '0', 'header_errors_rx': '0', 'notify_tx': '0', 'update_rx': '5', 
# 'state_machine_errors_tx': '0', 'external_connects_rx': '0', 'sessions_down': '0'}}}
    ]]></example>
    <example lang="perl" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- ixiangpf::emulation_bgp_info
# This example will fetch the statistics for BGP router
my $bgp_stats = ixiangpf::emulation_bgp_info ({
    mode                                                        => "stats",
    handle                                                      => "<bgp_handle>",
});
# The command above will generate output as shown below:
# {status 1} {{10GE LAN - 001} {{aggregate {{status started} {port_name {10GE LAN - 001}} 
# {sessions_configured 1} {sessions_established 1} {messages_tx 22} {messages_rx 22} {update_tx 5} 
# {update_rx 5} {routes_advertised 347} {routes_withdrawn 0} {routes_rx 500} {route_withdraws_rx 0} 
# {open_tx 1} {open_rx 1} {keepalive_tx 16} {keepalive_rx 16} {notify_tx 0} {notify_rx 0} {starts_occurred 1} 
# {graceful_restart_attempted 0} {graceful_restart_failed 0} {routes_rx_graceful_restart 0} {idle_state 0} 
# {connect_state 0} {active_state 0} {opentx_state 0} {openconfirm_state 0} {established_state 1} {sessions_up 1} 
# {sessions_down 0} {sessions_not_started 0} {sessions_total 1} {session_flap_count 0} {ceases_tx 0} {ceases_rx 0} 
# {state_machine_errors_tx 0} {state_machine_errors_rx 0} {hold_timer_expireds_tx 0} {Hold_timer_expireds_rx 0} 
# {invalid_opens_tx 0} {invalid_opens_rx 0} {unsupported_versions_rx 0} {bad_peer_as_rx 0} {bad_bgp_id_rx 0} 
# {unsupported_parameters_rx 0} {authentication_failures_rx 0} {non_acceptable_hold_times_rx 0} 
# {invalid_open_suberror_unspecified 0} {update_errors_tx 0} {update_errors_rx 0} {malformed_attribute_list 0} 
# {unrecognized_well_known_attribute 0} {missing_well_known_attribute 0} {attribute_flags_error 0} 
# {attribute_length_error 0} {invalid_origin_attribute 0} {as_routing_loop 0} {invalid_next_hop_attribute 0} 
# {optional_attribute_error 0} {invalid_network_field 0} {malformed_as_path 0} {invalid_update_suberror_unspecified 0} 
# {header_errors_tx 0} {header_errors_rx 0} {connection_not_synchronized 0} {bad_message_length 0} {bad_message_type 0} 
# {invalid_header_suberror_unspecified 0} {unspecified_error_tx 0} {unspecified_error_rx 0} {external_connects_rx 0} 
# {external_connects_accepted 0} {ls_node_advertised_tx 0} {ls_node_advertised_rx 0} {ls_node_withdrawn_tx 0} 
# {ls_node_withdrawn_rx 0} {ls_link_advertised_tx 0} {ls_link_advertised_rx 0} {ls_link_withdrawn_tx 0} {ls_link_withdrawn_rx 0} 
# {ls_ipv4_prefix_advertised_tx 0} {ls_ipv4_prefix_advertised_rx 0} {ls_ipv4_prefix_withdrawn_tx 0} {ls_ipv4_prefix_withdrawn_rx 0} 
# {ls_ipv6_prefix_advertised_tx 0} {ls_ipv6_prefix_advertised_rx 0} {ls_ipv6_prefix_withdrawn_tx 0} {ls_ipv6_prefix_withdrawn_rx 0} 
# {error_link_state_nlri_rx 0}}}}}	
	]]></example>
    <example lang="robot" supportType="ixNetworkCpfSupport"><![CDATA[
# Command :- Emulation Bgp Info
# This example will fetch the statistics for BGP router

   ${result} =  Emulation Bgp Info  mode=stats   handle=<bgp_handle>  
   ${status} =  Get From Dictionary  ${result}  status
   Run Keyword If  '${status}' != '1'  FAIL  "Error: Status is not SUCCESS"  ELSE  Log  "Status is SUCCESS"
   ${bgp_stats} =  Get From Dictionary  ${result}  bgp_stats

# The command above will generate output as shown below:
# {'status': '1', '10GE LAN - 001': {'aggregate': {'authentication_failures_rx': '0', 'idle_state': '0', 
# 'ls_ipv6_prefix_withdrawn_rx': '0', 'ls_ipv4_prefix_withdrawn_tx': '0', 'routes_rx_graceful_restart': '0', 
# 'ls_node_advertised_tx': '0', 'openconfirm_state': '0', 'invalid_update_suberror_unspecified': '0', 'open_rx': '1', 
# 'bad_message_type': '0', 'ls_ipv6_prefix_advertised_tx': '0', 'sessions_not_started': '0', 'Hold_timer_expireds_rx': '0', 
# 'notify_rx': '0', 'messages_tx': '15', 'sessions_configured': '1', 'invalid_open_suberror_unspecified': '0', 
# 'state_machine_errors_rx': '0', 'port_name': '10GE LAN - 001', 'unrecognized_well_known_attribute': '0', 'keepalive_tx': '9', 
# 'invalid_opens_tx': '0', 'ls_ipv4_prefix_advertised_rx': '0', 'routes_rx': '500', 'ls_link_withdrawn_tx': '0', 
# 'ls_ipv4_prefix_withdrawn_rx': '0', 'optional_attribute_error': '0', 'ls_ipv6_prefix_withdrawn_tx': '0', 'routes_withdrawn': '0', 
# 'unsupported_versions_rx': '0', 'session_flap_count': '0', 'hold_timer_expireds_tx': '0', 'graceful_restart_failed': '0', 'external_connects_accepted': '0', 
# 'ls_ipv6_prefix_advertised_rx': '0', 'open_tx': '1', 'established_state': '1', 'malformed_as_path': '0', 'routes_advertised': '408', 
# 'starts_occurred': '1', 'bad_bgp_id_rx': '0', 'invalid_next_hop_attribute': '0', 'connection_not_synchronized': '0', 'bad_peer_as_rx': '0', 
# 'invalid_opens_rx': '0', 'as_routing_loop': '0', 'opentx_state': '0', 'keepalive_rx': '9', 'update_errors_tx': '0', 'ls_link_withdrawn_rx': '0', 
# 'ls_ipv4_prefix_advertised_tx': '0', 'missing_well_known_attribute': '0', 'malformed_attribute_list': '0', 'unspecified_error_tx': '0', 
# 'invalid_origin_attribute': '0', 'sessions_established': '1', 'connect_state': '0', 'sessions_up': '1', 'non_acceptable_hold_times_rx': '0', 
# 'ls_node_withdrawn_tx': '0', 'ls_link_advertised_rx': '0', 'update_tx': '5', 'sessions_total': '1', 'active_state': '0', 'header_errors_tx': '0', 
# 'invalid_header_suberror_unspecified': '0', 'update_errors_rx': '0', 'unsupported_parameters_rx': '0', 'graceful_restart_attempted': '0', 
# 'bad_message_length': '0', 'attribute_flags_error': '0', 'route_withdraws_rx': '0', 'unspecified_error_rx': '0', 'messages_rx': '15', 
# 'attribute_length_error': '0', 'error_link_state_nlri_rx': '0', 'ceases_rx': '0', 'ceases_tx': '0', 'status': 'started', 'ls_node_withdrawn_rx': '0', 
# 'ls_node_advertised_rx': '0', 'ls_link_advertised_tx': '0', 'invalid_network_field': '0', 'header_errors_rx': '0', 'notify_tx': '0', 'update_rx': '5', 
# 'state_machine_errors_tx': '0', 'external_connects_rx': '0', 'sessions_down': '0'}}}  
	]]></example>
  </code_examples>
</method>